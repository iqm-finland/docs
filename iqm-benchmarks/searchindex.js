Search.setIndex({"docnames": ["API", "api/iqm.benchmarks", "api/iqm.benchmarks.benchmark", "api/iqm.benchmarks.benchmark.BenchmarkBase", "api/iqm.benchmarks.benchmark.BenchmarkConfigurationBase", "api/iqm.benchmarks.benchmark_definition", "api/iqm.benchmarks.benchmark_definition.Benchmark", "api/iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservation", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier", "api/iqm.benchmarks.benchmark_definition.BenchmarkRunResult", "api/iqm.benchmarks.benchmark_definition.add_counts_to_dataset", "api/iqm.benchmarks.benchmark_definition.default_analysis_function", "api/iqm.benchmarks.benchmark_definition.merge_datasets_dac", "api/iqm.benchmarks.benchmark_definition.show_figure", "api/iqm.benchmarks.circuit_containers", "api/iqm.benchmarks.circuit_containers.BenchmarkCircuit", "api/iqm.benchmarks.circuit_containers.CircuitGroup", "api/iqm.benchmarks.circuit_containers.Circuits", "api/iqm.benchmarks.entanglement", "api/iqm.benchmarks.entanglement.ghz", "api/iqm.benchmarks.entanglement.ghz.GHZBenchmark", "api/iqm.benchmarks.entanglement.ghz.GHZConfiguration", "api/iqm.benchmarks.entanglement.ghz.extract_fidelities", "api/iqm.benchmarks.entanglement.ghz.fidelity_analysis", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_linear", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree", "api/iqm.benchmarks.entanglement.ghz.get_cx_map", "api/iqm.benchmarks.entanglement.ghz.get_edges", "api/iqm.benchmarks.entanglement.ghz.plot_fidelities", "api/iqm.benchmarks.logging_config", "api/iqm.benchmarks.optimization", "api/iqm.benchmarks.optimization.qscore", "api/iqm.benchmarks.optimization.qscore.QScoreBenchmark", "api/iqm.benchmarks.optimization.qscore.QScoreConfiguration", "api/iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1", "api/iqm.benchmarks.optimization.qscore.compute_expectation_value", "api/iqm.benchmarks.optimization.qscore.create_objective_function", "api/iqm.benchmarks.optimization.qscore.cut_cost_function", "api/iqm.benchmarks.optimization.qscore.get_optimal_angles", "api/iqm.benchmarks.optimization.qscore.is_successful", "api/iqm.benchmarks.optimization.qscore.plot_approximation_ratios", "api/iqm.benchmarks.optimization.qscore.qscore_analysis", "api/iqm.benchmarks.optimization.qscore.run_QAOA", "api/iqm.benchmarks.quantum_volume", "api/iqm.benchmarks.quantum_volume.clops", "api/iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark", "api/iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration", "api/iqm.benchmarks.quantum_volume.clops.clops_analysis", "api/iqm.benchmarks.quantum_volume.clops.plot_times", "api/iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times", "api/iqm.benchmarks.quantum_volume.quantum_volume", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration", "api/iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops", "api/iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector", "api/iqm.benchmarks.quantum_volume.quantum_volume.is_successful", "api/iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold", "api/iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis", "api/iqm.benchmarks.randomized_benchmarking", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits", "api/iqm.benchmarks.readout_mitigation", "api/iqm.benchmarks.readout_mitigation.M3IQM", "api/iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation", "api/iqm.benchmarks.readout_mitigation.readout_error_m3", "api/iqm.benchmarks.utils", "api/iqm.benchmarks.utils.count_2q_layers", "api/iqm.benchmarks.utils.count_native_gates", "api/iqm.benchmarks.utils.get_iqm_backend", "api/iqm.benchmarks.utils.marginal_distribution", "api/iqm.benchmarks.utils.perform_backend_transpilation", "api/iqm.benchmarks.utils.reduce_to_active_qubits", "api/iqm.benchmarks.utils.retrieve_all_counts", "api/iqm.benchmarks.utils.retrieve_all_job_metadata", "api/iqm.benchmarks.utils.set_coupling_map", "api/iqm.benchmarks.utils.sort_batches_by_final_layout", "api/iqm.benchmarks.utils.submit_execute", "api/iqm.benchmarks.utils.timeit", "api/iqm.benchmarks.utils.xrvariable_to_counts", "changelog", "development/development", "development/generate_2qubit_cliffords", "development/how_to_make_your_own_benchmark", "devices/devices", "devices/spark", "examples/example_clifford_rb", "examples/example_clops", "examples/example_experiment_all", "examples/example_ghz", "examples/example_gst", "examples/example_interleaved_rb", "examples/example_mirror_rb", "examples/example_qscore", "examples/example_quantum_volume", "examples/example_quantum_volume_deneb", "examples/examples", "index", "license", "readme"], "filenames": ["API.rst", "api/iqm.benchmarks.rst", "api/iqm.benchmarks.benchmark.rst", "api/iqm.benchmarks.benchmark.BenchmarkBase.rst", "api/iqm.benchmarks.benchmark.BenchmarkConfigurationBase.rst", "api/iqm.benchmarks.benchmark_definition.rst", "api/iqm.benchmarks.benchmark_definition.Benchmark.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservation.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkRunResult.rst", "api/iqm.benchmarks.benchmark_definition.add_counts_to_dataset.rst", "api/iqm.benchmarks.benchmark_definition.default_analysis_function.rst", "api/iqm.benchmarks.benchmark_definition.merge_datasets_dac.rst", "api/iqm.benchmarks.benchmark_definition.show_figure.rst", "api/iqm.benchmarks.circuit_containers.rst", "api/iqm.benchmarks.circuit_containers.BenchmarkCircuit.rst", "api/iqm.benchmarks.circuit_containers.CircuitGroup.rst", "api/iqm.benchmarks.circuit_containers.Circuits.rst", "api/iqm.benchmarks.entanglement.rst", "api/iqm.benchmarks.entanglement.ghz.rst", "api/iqm.benchmarks.entanglement.ghz.GHZBenchmark.rst", "api/iqm.benchmarks.entanglement.ghz.GHZConfiguration.rst", "api/iqm.benchmarks.entanglement.ghz.extract_fidelities.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_analysis.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_linear.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree.rst", "api/iqm.benchmarks.entanglement.ghz.get_cx_map.rst", "api/iqm.benchmarks.entanglement.ghz.get_edges.rst", "api/iqm.benchmarks.entanglement.ghz.plot_fidelities.rst", "api/iqm.benchmarks.logging_config.rst", "api/iqm.benchmarks.optimization.rst", "api/iqm.benchmarks.optimization.qscore.rst", "api/iqm.benchmarks.optimization.qscore.QScoreBenchmark.rst", "api/iqm.benchmarks.optimization.qscore.QScoreConfiguration.rst", "api/iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1.rst", "api/iqm.benchmarks.optimization.qscore.compute_expectation_value.rst", "api/iqm.benchmarks.optimization.qscore.create_objective_function.rst", "api/iqm.benchmarks.optimization.qscore.cut_cost_function.rst", "api/iqm.benchmarks.optimization.qscore.get_optimal_angles.rst", "api/iqm.benchmarks.optimization.qscore.is_successful.rst", "api/iqm.benchmarks.optimization.qscore.plot_approximation_ratios.rst", "api/iqm.benchmarks.optimization.qscore.qscore_analysis.rst", "api/iqm.benchmarks.optimization.qscore.run_QAOA.rst", "api/iqm.benchmarks.quantum_volume.rst", "api/iqm.benchmarks.quantum_volume.clops.rst", "api/iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.rst", "api/iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.rst", "api/iqm.benchmarks.quantum_volume.clops.clops_analysis.rst", "api/iqm.benchmarks.quantum_volume.clops.plot_times.rst", "api/iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.is_successful.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits.rst", "api/iqm.benchmarks.readout_mitigation.rst", "api/iqm.benchmarks.readout_mitigation.M3IQM.rst", "api/iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation.rst", "api/iqm.benchmarks.readout_mitigation.readout_error_m3.rst", "api/iqm.benchmarks.utils.rst", "api/iqm.benchmarks.utils.count_2q_layers.rst", "api/iqm.benchmarks.utils.count_native_gates.rst", "api/iqm.benchmarks.utils.get_iqm_backend.rst", "api/iqm.benchmarks.utils.marginal_distribution.rst", "api/iqm.benchmarks.utils.perform_backend_transpilation.rst", "api/iqm.benchmarks.utils.reduce_to_active_qubits.rst", "api/iqm.benchmarks.utils.retrieve_all_counts.rst", "api/iqm.benchmarks.utils.retrieve_all_job_metadata.rst", "api/iqm.benchmarks.utils.set_coupling_map.rst", "api/iqm.benchmarks.utils.sort_batches_by_final_layout.rst", "api/iqm.benchmarks.utils.submit_execute.rst", "api/iqm.benchmarks.utils.timeit.rst", "api/iqm.benchmarks.utils.xrvariable_to_counts.rst", "changelog.rst", "development/development.rst", "development/generate_2qubit_cliffords.ipynb", "development/how_to_make_your_own_benchmark.ipynb", "devices/devices.rst", "devices/spark.ipynb", "examples/example_clifford_rb.ipynb", "examples/example_clops.ipynb", "examples/example_experiment_all.ipynb", "examples/example_ghz.ipynb", "examples/example_gst.ipynb", "examples/example_interleaved_rb.ipynb", "examples/example_mirror_rb.ipynb", "examples/example_qscore.ipynb", "examples/example_quantum_volume.ipynb", "examples/example_quantum_volume_deneb.ipynb", "examples/examples.rst", "index.rst", "license.rst", "readme.md"], "titles": ["API Reference", "iqm.benchmarks", "iqm.benchmarks.benchmark", "iqm.benchmarks.benchmark.BenchmarkBase", "iqm.benchmarks.benchmark.BenchmarkConfigurationBase", "iqm.benchmarks.benchmark_definition", "iqm.benchmarks.benchmark_definition.Benchmark", "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult", "iqm.benchmarks.benchmark_definition.BenchmarkObservation", "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier", "iqm.benchmarks.benchmark_definition.BenchmarkRunResult", "iqm.benchmarks.benchmark_definition.add_counts_to_dataset", "iqm.benchmarks.benchmark_definition.default_analysis_function", "iqm.benchmarks.benchmark_definition.merge_datasets_dac", "iqm.benchmarks.benchmark_definition.show_figure", "iqm.benchmarks.circuit_containers", "iqm.benchmarks.circuit_containers.BenchmarkCircuit", "iqm.benchmarks.circuit_containers.CircuitGroup", "iqm.benchmarks.circuit_containers.Circuits", "iqm.benchmarks.entanglement", "iqm.benchmarks.entanglement.ghz", "iqm.benchmarks.entanglement.ghz.GHZBenchmark", "iqm.benchmarks.entanglement.ghz.GHZConfiguration", "iqm.benchmarks.entanglement.ghz.extract_fidelities", "iqm.benchmarks.entanglement.ghz.fidelity_analysis", "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences", "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements", "iqm.benchmarks.entanglement.ghz.generate_ghz_linear", "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz", "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney", "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree", "iqm.benchmarks.entanglement.ghz.get_cx_map", "iqm.benchmarks.entanglement.ghz.get_edges", "iqm.benchmarks.entanglement.ghz.plot_fidelities", "iqm.benchmarks.logging_config", "iqm.benchmarks.optimization", "iqm.benchmarks.optimization.qscore", "iqm.benchmarks.optimization.qscore.QScoreBenchmark", "iqm.benchmarks.optimization.qscore.QScoreConfiguration", "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1", "iqm.benchmarks.optimization.qscore.compute_expectation_value", "iqm.benchmarks.optimization.qscore.create_objective_function", "iqm.benchmarks.optimization.qscore.cut_cost_function", "iqm.benchmarks.optimization.qscore.get_optimal_angles", "iqm.benchmarks.optimization.qscore.is_successful", "iqm.benchmarks.optimization.qscore.plot_approximation_ratios", "iqm.benchmarks.optimization.qscore.qscore_analysis", "iqm.benchmarks.optimization.qscore.run_QAOA", "iqm.benchmarks.quantum_volume", "iqm.benchmarks.quantum_volume.clops", "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark", "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration", "iqm.benchmarks.quantum_volume.clops.clops_analysis", "iqm.benchmarks.quantum_volume.clops.plot_times", "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times", "iqm.benchmarks.quantum_volume.quantum_volume", "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark", "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration", "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities", "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop", "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std", "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs", "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops", "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector", "iqm.benchmarks.quantum_volume.quantum_volume.is_successful", "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold", "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis", "iqm.benchmarks.randomized_benchmarking", "iqm.benchmarks.randomized_benchmarking.clifford_rb", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis", "iqm.benchmarks.randomized_benchmarking.interleaved_rb", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis", "iqm.benchmarks.randomized_benchmarking.mirror_rb", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis", "iqm.benchmarks.randomized_benchmarking.multi_lmfit", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits", "iqm.benchmarks.readout_mitigation", "iqm.benchmarks.readout_mitigation.M3IQM", "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation", "iqm.benchmarks.readout_mitigation.readout_error_m3", "iqm.benchmarks.utils", "iqm.benchmarks.utils.count_2q_layers", "iqm.benchmarks.utils.count_native_gates", "iqm.benchmarks.utils.get_iqm_backend", "iqm.benchmarks.utils.marginal_distribution", "iqm.benchmarks.utils.perform_backend_transpilation", "iqm.benchmarks.utils.reduce_to_active_qubits", "iqm.benchmarks.utils.retrieve_all_counts", "iqm.benchmarks.utils.retrieve_all_job_metadata", "iqm.benchmarks.utils.set_coupling_map", "iqm.benchmarks.utils.sort_batches_by_final_layout", "iqm.benchmarks.utils.submit_execute", "iqm.benchmarks.utils.timeit", "iqm.benchmarks.utils.xrvariable_to_counts", "Changelog", "Development", "2-Qubit Clifford Group Decomposition", "How to make your own benchmark?", "Devices", "Benchmarking IQM Spark", "Clifford Randomized Benchmarking (RB)", "Circuit Layer Operations Per Second (CLOPS)", "IQM Benchmarks: Summary Notebook", "Greenberger\u2013Horne\u2013Zeilinger (GHZ) State Fidelity", "Compressive Gate Set Tomography (GST)", "Interleaved Randomized Benchmarking (IRB)", "Mirror Randomized Benchmarking (MRB)", "Q-Score", "Quantum Volume (QV)", "QV on Deneb", "Examples", "IQM Benchmarks", "License", "IQM Benchmarks"], "terms": {"": [1, 50, 95, 101, 109, 111, 120, 134, 144, 147, 148], "python": 1, "librari": [1, 75, 80, 109, 131, 139], "suit": [1, 148], "qcvv": [1, 132, 146, 148], "subpackag": [1, 19, 35, 48, 67, 68, 73, 78], "modul": [1, 5, 15, 19, 34, 35, 48, 67, 68, 73, 78, 146], "gener": [2, 3, 18, 19, 21, 22, 27, 28, 29, 30, 31, 37, 45, 50, 53, 56, 65, 71, 75, 76, 80, 83, 84, 85, 88, 89, 98, 99, 100, 115, 129, 134, 135, 137, 138, 139, 140, 147], "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 20, 21, 22, 36, 37, 38, 49, 50, 51, 55, 56, 57, 69, 70, 71, 74, 75, 76, 79, 80, 81, 98, 111, 112, 129, 131, 132, 147, 148], "inherit": [2, 3, 5, 15, 20, 36, 49, 55, 69, 74, 79, 111], "benchmarkbas": [2, 4, 148], "abc": [2, 3, 5, 6, 20, 36, 49, 55, 69, 74, 79], "benchmarkconfigurationbas": [2, 3, 6, 20, 22, 36, 38, 49, 51, 55, 57, 69, 70, 74, 75, 79, 80, 148], "pydant": [2, 4, 20, 22, 36, 38, 49, 51, 55, 57, 69, 70, 74, 75, 79, 80], "main": [2, 7, 8, 20, 36, 49, 55, 69, 74, 79, 134], "basemodel": [2, 4, 20, 36, 49, 55, 69, 74, 79], "backend": [3, 6, 21, 22, 23, 30, 37, 45, 50, 51, 56, 57, 65, 71, 76, 81, 83, 84, 85, 98, 99, 106, 107, 109, 110, 112, 113, 114, 117, 118, 120, 121, 124, 125, 126, 129, 132, 138, 148], "iqmbackendbas": [3, 6, 21, 37, 50, 56, 71, 76, 81, 83, 84, 85, 98, 99, 100, 106, 107, 109, 110, 113, 117, 118, 120, 124, 126], "configur": [3, 4, 6, 21, 22, 37, 38, 50, 51, 56, 57, 64, 70, 71, 75, 76, 80, 81, 129, 147, 148], "base": [3, 4, 5, 6, 7, 8, 9, 10, 16, 17, 18, 21, 22, 25, 31, 37, 38, 40, 50, 51, 56, 57, 70, 71, 75, 76, 80, 81, 93, 112, 129, 130, 134, 147], "The": [3, 6, 7, 12, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 37, 38, 41, 47, 50, 51, 53, 56, 57, 59, 60, 62, 63, 70, 71, 75, 76, 80, 81, 82, 83, 84, 94, 104, 108, 114, 117, 118, 120, 121, 122, 123, 127, 134, 135, 138, 139, 142, 143, 144, 145, 147, 148], "implement": [3, 5, 6, 21, 22, 26, 138], "all": [3, 4, 6, 7, 16, 17, 18, 21, 22, 31, 33, 37, 44, 50, 54, 56, 58, 59, 60, 63, 64, 70, 71, 75, 76, 81, 98, 104, 106, 107, 112, 122, 123, 129, 132, 134, 135, 137, 138, 140, 143, 144, 145, 147, 148], "from": [3, 4, 6, 7, 11, 21, 22, 23, 30, 31, 32, 38, 41, 47, 51, 53, 54, 56, 57, 58, 63, 65, 70, 75, 80, 82, 91, 104, 105, 108, 112, 114, 118, 122, 123, 124, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148], "which": [3, 6, 7, 8, 21, 22, 23, 30, 32, 37, 46, 48, 50, 51, 52, 56, 66, 70, 71, 72, 75, 76, 77, 80, 81, 87, 98, 104, 108, 112, 121, 134, 138, 139, 147, 148], "thei": [3, 17, 139], "method": [3, 4, 6, 7, 8, 9, 10, 16, 17, 18, 21, 22, 25, 37, 38, 50, 51, 56, 57, 70, 71, 75, 76, 80, 81, 112, 120, 129, 134, 136, 137, 138, 139, 143, 144], "paramet": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 134, 136, 137, 138, 139], "abstract": [3, 6, 139], "classmethod": [3, 6, 7], "name": [3, 4, 6, 7, 8, 16, 17, 18, 22, 33, 38, 45, 51, 53, 57, 65, 70, 75, 80, 91, 97, 98, 114, 118, 121, 129, 131, 132, 134, 135, 137, 138, 139, 140, 142, 143, 144, 147], "return": [3, 6, 9, 11, 12, 13, 16, 17, 18, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 71, 72, 76, 77, 81, 82, 83, 84, 85, 86, 87, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132], "execute_full_benchmark": 3, "execut": [3, 4, 6, 9, 16, 17, 18, 21, 31, 35, 37, 45, 48, 50, 51, 56, 57, 58, 65, 70, 71, 75, 76, 80, 81, 82, 95, 101, 106, 107, 108, 120, 126, 127, 128, 129, 132, 134, 135, 136, 137, 140, 141, 143, 144, 147, 148], "full": [3, 51, 57, 139, 148], "given": [3, 6, 7, 11, 21, 22, 30, 31, 32, 33, 35, 37, 43, 48, 50, 56, 63, 64, 73, 82, 99, 100, 125, 134, 138, 139, 148], "static": [3, 6, 21, 37, 50, 56, 71, 76, 81], "check_requir": 3, "all_benchmark": 3, "ordereddict": 3, "str": [3, 4, 6, 7, 8, 9, 11, 16, 17, 18, 21, 22, 23, 25, 26, 38, 40, 41, 42, 45, 47, 50, 51, 53, 54, 56, 57, 58, 61, 62, 63, 65, 70, 71, 75, 76, 80, 81, 82, 83, 84, 85, 95, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 126, 128, 131, 132, 134, 137, 138, 139, 141, 143, 144], "check": [3, 44, 64, 131, 134], "whether": [3, 4, 22, 38, 44, 45, 47, 50, 51, 56, 57, 64, 65, 70, 75, 99, 104, 120, 138, 140, 147], "requir": [3, 4, 22, 38, 51, 57, 70, 75, 80, 131, 138, 139, 147, 148], "ar": [3, 4, 7, 11, 16, 17, 18, 21, 22, 31, 32, 56, 57, 85, 104, 110, 119, 121, 129, 131, 134, 138, 139, 145, 147, 148], "met": 3, "valid": [3, 109, 110, 146, 148], "dictionari": [3, 4, 7, 11, 22, 38, 41, 50, 51, 54, 56, 57, 58, 61, 62, 63, 70, 75, 80, 81, 83, 84, 94, 98, 99, 100, 102, 106, 107, 113, 114, 117, 119, 125, 128, 135, 137, 139, 140], "type": [3, 4, 6, 8, 9, 11, 12, 13, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 134, 139, 147], "generate_requir": 3, "none": [3, 4, 6, 7, 8, 16, 17, 18, 22, 30, 32, 38, 45, 50, 51, 56, 57, 70, 75, 80, 83, 84, 85, 89, 94, 97, 98, 99, 100, 104, 106, 107, 109, 112, 120, 121, 122, 126, 134, 135, 136, 137, 140, 141, 142, 143, 144, 148], "attribut": [3, 4, 6, 7, 8, 9, 10, 16, 17, 18, 21, 22, 37, 38, 50, 51, 56, 57, 70, 71, 75, 76, 80, 81, 127, 139, 143, 144, 147], "shot": [4, 22, 38, 51, 56, 57, 70, 75, 80, 106, 107, 112, 113, 126, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148], "int": [4, 9, 11, 16, 17, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 40, 41, 42, 43, 45, 47, 50, 51, 53, 56, 57, 58, 61, 64, 65, 70, 75, 80, 81, 82, 83, 84, 85, 86, 95, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 110, 112, 113, 116, 119, 120, 122, 124, 125, 126, 128, 138, 139], "256": [4, 38, 51, 57, 70, 75, 80, 135, 137, 141], "max_gates_per_batch": [4, 22, 38, 51, 57, 70, 75, 80, 106, 107, 126, 134, 135, 136, 137, 141, 143, 144, 148], "calset_id": [4, 22, 38, 51, 57, 70, 75, 80, 106, 107, 126, 134, 135, 136, 137, 140, 141, 142, 143, 144, 148], "routing_method": [4, 22, 38, 51, 57, 70, 75, 80, 84, 85, 120, 134, 135, 136, 137, 141, 143, 144, 148], "liter": [4, 22, 38, 51, 57, 70, 75, 80, 124], "basic": [4, 22, 38, 51, 57, 70, 75, 80, 84, 85], "lookahead": [4, 22, 38, 51, 57, 70, 75, 80], "stochast": [4, 22, 38, 51, 57, 70, 75, 80], "sabr": [4, 22, 38, 51, 57, 70, 75, 80, 120, 134, 135, 136, 137, 138, 139, 143, 144, 148], "physical_layout": [4, 22, 38, 51, 57, 70, 75, 80, 124, 134, 135, 136, 137, 141, 143, 144, 148], "fix": [4, 22, 38, 51, 57, 70, 75, 80, 81, 84, 99, 106, 108, 124, 129, 134, 135, 136, 137, 139, 143, 144, 148], "batch": [4, 17, 22, 38, 51, 57, 70, 75, 80, 106, 107, 124, 125, 126, 135, 136, 137, 138, 139, 140, 141, 143, 144], "number": [4, 21, 22, 26, 27, 28, 29, 30, 31, 33, 35, 37, 40, 42, 43, 45, 47, 48, 51, 56, 57, 64, 65, 67, 70, 75, 80, 81, 82, 83, 84, 85, 86, 95, 98, 99, 100, 101, 106, 107, 112, 113, 116, 117, 126, 134, 136, 137, 138, 139], "us": [4, 6, 9, 16, 21, 22, 23, 25, 26, 30, 31, 32, 33, 34, 45, 47, 50, 51, 57, 80, 82, 97, 104, 112, 114, 126, 129, 131, 132, 134, 138, 139, 140, 145, 147], "circuit": [4, 7, 10, 15, 16, 17, 21, 22, 25, 26, 27, 28, 29, 30, 31, 37, 41, 48, 50, 51, 56, 57, 58, 61, 64, 65, 70, 71, 75, 76, 78, 80, 81, 82, 83, 84, 85, 86, 94, 95, 98, 99, 100, 101, 106, 107, 109, 112, 113, 116, 117, 120, 121, 125, 126, 128, 129, 131, 132, 135, 137, 138, 139, 140, 141, 143, 145, 146], "default": [4, 6, 12, 22, 38, 51, 56, 57, 65, 70, 75, 80, 100, 104, 112, 124, 134, 135, 137, 139, 140, 142, 144], "i": [4, 6, 7, 22, 23, 27, 30, 31, 33, 37, 38, 44, 46, 47, 50, 51, 52, 56, 57, 64, 65, 66, 70, 71, 72, 75, 76, 77, 80, 81, 82, 86, 87, 90, 105, 109, 112, 120, 124, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148], "2": [4, 32, 38, 44, 57, 64, 80, 99, 105, 116, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148], "8": [4, 105, 131, 134, 135, 136, 137, 138, 140, 141, 143, 144, 147, 148], "maximum": [4, 47, 106, 107, 126, 134, 139], "gate": [4, 21, 22, 27, 31, 32, 38, 48, 50, 51, 57, 67, 68, 71, 73, 75, 76, 80, 83, 85, 94, 97, 98, 99, 100, 102, 104, 106, 107, 109, 116, 117, 120, 126, 129, 134, 138, 141, 145, 146, 148], "per": [4, 48, 51, 57, 70, 80, 82, 84, 85, 86, 106, 107, 112, 113, 126, 139, 145, 146], "option": [4, 22, 32, 38, 45, 56, 57, 75, 84, 85, 94, 97, 99, 100, 104, 106, 107, 109, 120, 121, 122, 126, 129, 132, 136, 137, 139, 144, 146], "calibr": [4, 6, 22, 23, 32, 56, 57, 106, 107, 112, 113, 126, 137, 138, 140, 142, 144], "id": [4, 126, 136, 137, 140, 142], "last": 4, "avail": [4, 147, 148], "qiskit": [4, 6, 38, 51, 57, 75, 80, 109, 120, 129, 131, 132, 134, 139], "rout": [4, 51, 57, 80, 120, 136, 137, 138, 139, 143, 144], "transpil": [4, 16, 21, 22, 25, 26, 38, 50, 51, 57, 80, 98, 99, 109, 113, 117, 120, 125, 129, 132, 134, 136, 137, 138, 139, 143, 144], "physic": [4, 22, 38, 50, 51, 56, 57, 61, 75, 80, 84, 124, 136, 137, 139, 143, 144, 146], "layout": [4, 8, 11, 16, 17, 22, 33, 38, 50, 51, 56, 57, 80, 81, 106, 107, 114, 120, 124, 129, 134, 136, 137, 138, 139, 141, 143, 144], "constrain": [4, 124, 148], "dure": [4, 13, 56, 71, 76], "select": [4, 22, 38, 57, 63, 139], "qubit": [4, 8, 9, 11, 16, 17, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 47, 48, 50, 51, 56, 57, 61, 65, 67, 70, 71, 75, 80, 81, 82, 83, 84, 85, 95, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 112, 114, 116, 120, 121, 124, 125, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146], "initi": [4, 6, 22, 34, 114, 134, 139], "allow": [4, 129, 134, 138, 148], "ani": [4, 8, 25, 26, 54, 56, 75, 81, 86, 104, 106, 107, 113, 121, 123, 131, 147, 148], "other": [4, 22, 129, 134, 147, 148], "accord": [4, 21, 28, 29, 37, 83, 124, 125, 131, 136, 137, 139, 143, 144], "final": [4, 6, 32, 51, 56, 57, 61, 80, 120, 124, 125, 134], "measur": [4, 21, 22, 25, 37, 40, 50, 51, 56, 57, 61, 70, 75, 80, 108, 113, 117, 124, 125, 132, 134, 136, 138, 139], "model_computed_field": [4, 22, 38, 51, 57, 70, 75, 80], "classvar": [4, 22, 38, 51, 57, 70, 75, 80], "dict": [4, 7, 11, 22, 25, 26, 38, 40, 41, 47, 50, 51, 53, 54, 56, 57, 58, 61, 62, 63, 70, 75, 80, 81, 82, 83, 84, 85, 94, 95, 98, 99, 100, 101, 102, 104, 106, 107, 108, 113, 114, 117, 119, 122, 123, 125, 126, 128, 132], "computedfieldinfo": [4, 22, 38, 51, 57, 70, 75, 80], "A": [4, 6, 7, 9, 10, 11, 13, 16, 17, 21, 22, 23, 27, 28, 29, 30, 31, 32, 33, 37, 38, 46, 50, 51, 52, 54, 56, 57, 62, 63, 66, 70, 71, 72, 75, 80, 81, 83, 84, 87, 94, 97, 99, 100, 106, 107, 119, 120, 121, 124, 128, 134, 138, 139, 147, 148], "comput": [4, 21, 22, 24, 30, 38, 40, 41, 51, 56, 57, 58, 59, 60, 62, 70, 75, 80, 94, 95, 101, 119, 131, 134, 138, 139, 146, 147, 148], "field": [4, 6, 22, 38, 51, 57, 70, 75, 80, 147], "correspond": [4, 22, 37, 38, 46, 48, 50, 51, 52, 56, 57, 61, 65, 66, 70, 71, 72, 75, 76, 77, 80, 81, 82, 83, 84, 87, 104, 108, 113, 125, 134, 135, 136, 137, 138, 140, 141, 143, 144], "object": [4, 7, 8, 9, 10, 16, 17, 18, 21, 22, 24, 33, 38, 51, 56, 57, 70, 75, 80, 81, 89, 106, 107, 118, 122, 123, 126, 139, 143, 144, 147], "model_config": [4, 22, 38, 51, 57, 70, 75, 80], "configdict": [4, 22, 38, 51, 57, 70, 75, 80], "model": [4, 22, 38, 51, 57, 70, 75, 80, 97, 103, 104, 134], "should": [4, 6, 8, 10, 21, 22, 30, 34, 38, 51, 57, 70, 75, 80, 99, 129, 136, 137, 138, 139, 147], "conform": [4, 22, 38, 51, 57, 70, 75, 80], "config": [4, 22, 38, 51, 57, 70, 75, 80], "model_field": [4, 22, 38, 51, 57, 70, 75, 80], "fieldinfo": [4, 22, 38, 51, 57, 70, 75, 80], "annot": [4, 22, 38, 51, 57, 70, 75, 80, 114, 147], "true": [4, 22, 25, 38, 51, 56, 57, 70, 75, 80, 104, 120, 131, 134, 136, 137, 138, 139, 140, 142, 143, 144, 148], "union": [4, 22, 38, 51, 57, 70, 75, 80, 114, 139, 147], "nonetyp": [4, 22, 38, 51, 57, 70, 75, 80], "fals": [4, 22, 38, 51, 57, 65, 70, 75, 80, 104, 112, 120, 134, 135, 137, 143], "metadata": [4, 21, 22, 33, 37, 38, 50, 51, 54, 56, 57, 70, 71, 75, 76, 80, 81, 123], "about": [4, 22, 38, 51, 57, 70, 75, 80, 129, 138], "defin": [4, 5, 6, 7, 22, 30, 31, 38, 51, 57, 70, 75, 80, 98, 121, 132, 134, 138, 147, 148], "map": [4, 7, 22, 30, 32, 38, 40, 41, 51, 57, 70, 75, 80, 120, 124, 125, 129, 138], "thi": [4, 5, 6, 15, 16, 21, 22, 30, 33, 38, 44, 51, 57, 64, 70, 75, 80, 105, 114, 130, 131, 132, 133, 134, 138, 139, 145, 147, 148], "replac": [4, 22, 38, 51, 57, 70, 75, 80, 147], "__fields__": [4, 22, 38, 51, 57, 70, 75, 80], "v1": [4, 22, 38, 51, 57, 70, 75, 80], "function": [5, 6, 20, 36, 37, 41, 46, 49, 50, 52, 55, 56, 66, 69, 71, 72, 74, 76, 77, 79, 81, 87, 88, 90, 91, 93, 94, 96, 97, 103, 105, 111, 115, 127, 129, 139], "benchmarkobservationidentifi": [5, 8, 129, 135, 137, 140, 142, 143, 144], "benchmarkobserv": [5, 7, 33, 129, 135, 137, 140, 142, 143, 144], "benchmarkrunresult": [5, 6, 7, 12, 21, 24, 37, 46, 50, 52, 56, 66, 71, 72, 76, 77, 81, 87, 129], "benchmarkanalysisresult": [5, 6, 12, 21, 24, 37, 46, 50, 52, 56, 66, 71, 72, 76, 77, 81, 87, 129], "kwarg": 6, "run": [6, 7, 8, 10, 21, 22, 24, 37, 41, 46, 50, 51, 52, 56, 66, 71, 72, 76, 77, 81, 87, 132, 134, 137, 139, 145, 148], "cortex": [6, 11], "experi": [6, 33, 37, 45, 46, 50, 52, 53, 56, 57, 59, 60, 66, 71, 72, 76, 77, 81, 87, 96, 103, 104, 108, 110, 137, 145], "In": [6, 134, 139, 147, 148], "order": [6, 23, 32, 33, 97, 105, 138, 148], "write": [6, 112, 131, 132, 147], "new": [6, 7, 11, 121, 129, 132, 134, 139, 144, 148], "recommend": [6, 139, 147, 148], "deriv": [6, 147], "baseclass": 6, "addition": [6, 138], "custom": [6, 38, 57, 134, 137, 142, 143, 144, 148], "analysi": [6, 7, 12, 37, 46, 50, 52, 53, 56, 66, 71, 72, 76, 77, 81, 87, 129, 134], "can": [6, 10, 16, 22, 23, 35, 37, 48, 56, 114, 129, 134, 138, 139, 143, 144, 148], "give": [6, 41, 129, 134, 138, 139, 147], "pointer": 6, "analysis_funct": [6, 21, 37, 50, 56, 71, 76, 81, 132], "accept": [6, 45, 129, 147], "analysisresult": [6, 7, 21, 24, 37, 46, 50, 52, 56, 66, 71, 72, 76, 77, 81, 87, 129, 132], "its": [6, 91, 121, 129, 134, 147], "input": [6, 11, 51, 57, 86, 105, 109, 110, 114, 124, 136, 137, 139], "result": [6, 7, 8, 10, 11, 12, 33, 35, 37, 40, 46, 47, 48, 50, 52, 56, 57, 64, 65, 66, 71, 72, 76, 77, 81, 87, 95, 101, 103, 124, 129, 132, 134, 137, 143, 144, 147, 148], "onli": [6, 12, 51, 57, 121, 134, 138, 139, 141, 147], "pass": [6, 12, 86, 114, 120, 132, 137, 142], "through": [6, 12, 26, 147], "iqmbackend": [6, 56, 81, 106, 107, 144], "iqmfacadebackend": 6, "dataset": [6, 7, 10, 11, 13, 21, 24, 25, 26, 33, 37, 50, 53, 56, 71, 76, 81, 88, 90, 104, 128, 129, 132, 134, 135, 137, 138, 139, 140, 143, 144], "overridden": 6, "an": [6, 16, 17, 21, 22, 24, 25, 37, 50, 76, 77, 105, 109, 113, 114, 129, 131, 132, 134, 138, 139, 147, 148], "xarrai": [6, 7, 11, 13, 21, 25, 37, 50, 56, 71, 76, 81, 128, 129, 132], "contain": [6, 7, 9, 10, 13, 15, 16, 17, 18, 21, 23, 24, 25, 26, 33, 81, 83, 106, 107, 121, 129, 134, 139, 143, 144, 145, 147, 148], "inform": [6, 10, 32, 34, 147], "necessari": [6, 134, 138, 148], "analys": 6, "calibration_set_id": [6, 144], "uuid": 6, "calibrationsetid": 6, "latest": [6, 126, 138, 146], "set": [6, 16, 17, 21, 51, 57, 83, 84, 86, 92, 104, 117, 124, 126, 131, 134, 138, 140, 145, 146, 148], "runresult": [6, 7, 10, 21, 24, 37, 46, 50, 52, 56, 66, 71, 72, 76, 77, 81, 87, 129, 132], "analyz": [6, 10, 21, 24, 116, 132, 134, 135, 136, 137, 138, 139, 142, 143, 144, 148], "run_index": [6, 137, 143, 144], "1": [6, 38, 42, 63, 80, 84, 85, 96, 99, 105, 120, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148], "intern": [6, 17], "perform": [6, 38, 51, 57, 97, 108, 120, 134, 139, 145, 147, 148], "make": [6, 56, 126, 130, 134, 146, 147, 148], "shallow": 6, "copi": [6, 131, 147], "produc": [6, 32, 57, 148], "therefor": [6, 44, 64], "chang": [6, 129, 144, 146, 147], "data": [6, 7, 11, 21, 22, 23, 25, 32, 53, 65, 89, 92, 97, 103, 112, 132, 136, 137, 138, 139, 143, 144], "just": [6, 134], "structur": [6, 134], "arrai": [6, 50, 70, 75, 80, 104, 105, 110, 114, 139], "index": [6, 21, 23, 30, 31, 32, 50, 56, 84, 143, 144, 146], "construct": [6, 22, 27], "updat": [6, 50, 51, 129, 134, 136, 137, 148], "core": 7, "circuit_contain": 7, "plot": [7, 21, 24, 33, 65, 104, 129, 132, 134, 135, 137, 138, 140, 148], "matplotlib": [7, 132, 139], "figur": [7, 14, 33, 45, 53, 65, 104, 132, 137, 139], "factori": [7, 16, 17, 18], "observ": [7, 8, 9, 21, 24, 33, 53, 104, 129, 134, 135, 137, 138, 140, 142, 143, 144], "list": [7, 9, 11, 13, 16, 17, 18, 21, 22, 23, 25, 26, 30, 31, 32, 33, 37, 39, 40, 41, 43, 45, 47, 50, 51, 56, 58, 59, 60, 61, 62, 64, 65, 80, 81, 82, 83, 84, 85, 86, 95, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 116, 117, 119, 120, 122, 123, 124, 125, 126, 128, 129, 131, 138, 139, 143, 144, 147, 148], "dataclass": [7, 8, 10], "store": [7, 8, 10, 33, 129, 148], "consist": [7, 138, 147], "kei": [7, 40, 47, 50, 56, 61, 80, 83, 117, 119, 125, 131, 139, 143, 144], "valu": [7, 8, 21, 22, 26, 30, 40, 41, 47, 50, 51, 80, 83, 96, 117, 119, 120, 125, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "pair": [7, 23, 32, 50, 110, 134], "plot_nam": 7, "plot_al": [7, 132, 134, 136, 137, 138, 139, 142, 143, 144], "from_run_result": 7, "creat": [7, 21, 22, 30, 37, 41, 46, 50, 52, 56, 66, 71, 72, 76, 77, 81, 87, 130, 132, 144, 148], "identifi": [8, 9, 11, 56, 81, 97, 104, 106, 107, 109, 122, 128, 134, 135, 137, 138, 139, 140, 142, 143, 144, 147], "uncertainti": [8, 26, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "singl": [8, 10, 13, 16, 18, 22, 33, 38, 39, 50, 51, 56, 57, 83, 90, 129, 134, 139, 148], "string": [8, 9, 11, 17, 18, 122, 148], "qubit_indic": [9, 16, 135, 137, 140, 142, 143, 144], "eas": 9, "indic": [9, 56, 61, 119, 125, 147], "wa": [9, 44, 64, 108, 134, 147], "properti": [9, 16, 17], "string_identifi": [9, 134, 137, 138, 139], "version": [9, 88, 131, 134, 147, 148], "enough": [10, 138], "those": [10, 56, 61, 124, 134, 139, 147], "count": [11, 21, 22, 24, 40, 41, 47, 56, 58, 82, 95, 101, 108, 113, 114, 117, 122, 123, 128, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144], "add": [11, 17, 21, 31, 37, 50, 56, 71, 76, 81, 83, 127, 129, 131, 147, 148], "job": [11, 50, 54, 56, 81, 106, 107, 122, 132, 135, 136, 137, 140, 141, 143, 144], "If": [11, 22, 80, 134, 139, 141, 147], "same": [11, 17, 23, 32, 80, 134, 136, 137, 138, 147], "alreadi": [11, 135, 142], "present": 11, "old": 11, "both": [11, 57, 134, 140, 148], "ad": [11, 129, 135, 137, 138, 140, 141, 143, 144], "togeth": [11, 148], "bitstr": [11, 40, 41, 42, 47, 63, 108, 119], "current": [11, 22, 50, 112, 138, 139, 148], "instanc": [11, 16, 17, 25, 26, 45, 129, 139], "xr": [11, 13, 21, 25, 26, 33, 37, 50, 53, 56, 71, 76, 81, 104, 128, 132], "merg": [11, 13], "where": [11, 16, 17, 22, 85, 129, 134, 138, 139, 147], "dataset_merg": 11, "recurs": 13, "minim": [13, 22, 30, 31, 103, 138], "size": [13, 22, 30, 35, 37, 45, 47, 132, 134, 137, 142], "dateset": 13, "fig": [14, 33, 132], "show": [14, 132, 134, 137, 138], "close": [14, 132], "easili": [15, 129, 148], "interact": [15, 129], "quantum": [15, 21, 22, 25, 27, 28, 29, 30, 37, 48, 50, 51, 55, 56, 57, 58, 61, 64, 66, 83, 84, 95, 99, 100, 101, 112, 113, 116, 117, 120, 121, 126, 129, 138, 139, 145, 146, 148], "circuitgroup": [15, 16, 21, 129], "benchmarkcircuit": [15, 18, 129], "circuit_group": 16, "group": [16, 17, 71, 130, 134, 146], "purpos": [16, 17, 147], "typic": [16, 17, 134], "repres": [16, 17, 53, 65, 119, 147], "exampl": [16, 88, 129, 130, 132, 133, 138, 139, 146, 147, 148], "insid": [16, 129], "get_circuit_group_by_nam": 16, "get": [16, 91, 118, 137, 141], "desir": [16, 17], "doe": [16, 22, 147], "exist": [16, 18, 129, 134, 148], "group_nam": 16, "integ": [16, 17, 22, 56, 61, 84], "qubit_layouts_by_index": [16, 17], "tupl": [16, 17, 22, 23, 26, 30, 40, 41, 45, 47, 50, 51, 53, 56, 61, 65, 81, 97, 98, 99, 100, 102, 104, 106, 113, 120, 125, 126], "qubit_layout": [16, 17, 21, 23, 25, 26, 30, 31, 32, 33, 134, 137, 138, 139], "qiskit_iqm": [17, 22, 129, 132, 134, 137, 138, 144], "iqm_circuit": 17, "iqmcircuit": [17, 21, 27, 28, 29, 30, 50, 56, 61, 81, 83, 84, 85, 94, 98, 99, 100, 102, 106, 107, 109, 113, 116, 117, 120, 121, 125, 126, 129], "It": [17, 131, 134, 138, 148], "common": [17, 93, 147], "activ": [17, 121, 148], "add_circuit": 17, "circuit_nam": 17, "get_circuits_by_nam": 17, "share": [17, 147, 148], "found": [17, 23, 134, 148], "benchmark_circuit": 18, "get_benchmark_circuits_by_nam": 18, "request": 18, "otherwis": [18, 147], "ghz": [19, 129, 145, 146, 148], "verifi": [19, 109, 131], "greenberg": [19, 21, 134, 145, 146], "horn": [19, 21, 134, 145, 146], "zeiling": [19, 21, 134, 145, 146], "state": [19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 95, 101, 129, 132, 139, 145, 146, 147, 148], "ghzbenchmark": [20, 22, 134, 137, 138], "benchmark_definit": [20, 22, 36, 38, 49, 51, 55, 57, 69, 70, 74, 75, 79, 80, 132], "ghzconfigur": [20, 21, 134, 137, 138], "estim": [21, 22, 25, 26, 35, 37, 51, 56, 71, 76, 81, 82, 108, 129, 134, 136, 137, 138, 140], "qualiti": [21, 134], "fidel": [21, 22, 23, 24, 25, 26, 31, 32, 33, 51, 67, 68, 71, 73, 76, 78, 81, 82, 97, 104, 129, 139, 145, 146, 148], "generate_native_ghz": 21, "qubit_count": [21, 22], "routin": [21, 22, 38, 57, 97], "prepar": [21, 132, 134, 138, 139, 147], "nativ": [21, 32, 99, 100, 102, 109, 117, 129, 134], "topologi": [21, 120, 124, 134], "subset": [21, 23, 25, 26, 30, 31, 32], "system": [21, 22, 23, 25, 26, 30, 31, 32, 112, 134, 139, 147, 148], "protocol": [21, 23, 25, 26, 30, 31, 32, 134, 145], "0": [21, 23, 30, 31, 32, 37, 44, 57, 80, 83, 84, 85, 105, 120, 124, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148], "smaller": [21, 22, 30, 134], "equal": [21, 30, 56, 129, 134], "quantumcircuit": [21, 30, 37, 50, 56, 61, 81, 83, 94, 98, 99, 100, 106, 107, 113, 116, 120, 121, 125, 126, 129, 131, 132, 139], "generate_coherence_meas_circuit": 21, "take": [21, 22, 120, 127, 129, 134, 139, 148], "output": [21, 34, 58, 59, 60, 61, 62, 63, 64, 112, 129, 131, 134, 139, 143, 144, 148], "need": [21, 50, 114, 134, 139, 148], "via": [21, 22, 134, 139], "mult": 21, "q": [21, 35, 37, 38, 44, 137, 139, 145, 146, 148], "coher": [21, 22, 25, 134, 137, 138], "qc_list_transpil": 21, "append_rm": 21, "num_rm": [21, 22, 138], "append": [21, 50, 131, 132, 139], "1q": [21, 102, 129, 134], "clifford": [21, 68, 69, 70, 71, 72, 74, 75, 76, 83, 94, 98, 99, 100, 102, 109, 110, 129, 130, 140, 145, 146, 148], "sampl": [21, 41, 47, 57, 63, 75, 80, 82, 83, 84, 85, 86, 98, 99, 100, 139], "uniformli": [21, 134], "random": [21, 22, 38, 50, 67, 69, 74, 75, 79, 80, 83, 85, 93, 99, 100, 129, 131, 136, 138, 139, 142, 145, 146, 148], "param": [21, 27, 28, 29, 50, 59, 71, 76, 86, 90, 92, 94, 95, 106, 107, 108, 110, 119, 122, 123], "how": [21, 130, 133, 139, 145, 146, 147, 148], "mani": [21, 50, 129, 138], "origin": [21, 56, 61, 120, 121, 147], "generate_readout_circuit": 21, "wrapper": 21, "creation": [21, 138], "differ": [21, 53, 80, 134, 138, 139, 143, 144, 145, 147, 148], "all_circuits_list": 21, "add_configuration_to_dataset": 21, "further": [21, 129], "storag": [21, 129], "1024": 22, "state_generation_routin": [22, 134, 137, 138], "tree": [22, 30, 31, 134, 137, 138], "custom_qubits_arrai": [22, 37, 38, 57, 134, 137, 138, 142, 143, 144, 148], "sequenc": [22, 38, 51, 56, 57, 70, 75, 80, 81, 82, 95, 98, 99, 100, 101, 120, 124, 134, 135, 137, 139, 140], "qiskit_optim_level": [22, 38, 51, 57, 80, 84, 85, 120, 134, 136, 137, 141, 143, 144, 148], "3": [22, 38, 51, 57, 64, 105, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148], "optimize_sqg": [22, 38, 50, 51, 57, 120, 134, 136, 137, 143, 144, 148], "bool": [22, 38, 44, 45, 47, 50, 51, 56, 57, 64, 65, 70, 75, 104, 112, 120], "fidelity_routin": [22, 134, 137, 138], "100": [22, 51, 57, 134, 136, 137, 139, 142, 148], "rem": [22, 25, 57, 65, 113, 134, 137, 138, 143, 144, 148], "mit_shot": [22, 56, 57, 113, 134, 137, 138, 143, 144, 148], "1000": [22, 57, 113, 132, 134, 137, 138, 139, 143, 144], "cal_url": [22, 23], "possibl": [22, 138, 143, 144, 147], "optim": [22, 50, 51, 57, 80, 120, 134, 136, 137, 138, 139, 142, 143, 144, 148], "log": [22, 28, 29, 30, 31], "depth": [22, 27, 28, 29, 30, 56, 65, 80, 81, 84, 85, 96, 99, 103, 106, 108, 134, 135, 136, 137, 138, 140, 141], "coupl": [22, 23, 30, 32, 51, 57, 120, 124, 134, 138], "cz": [22, 23, 31, 32, 99, 117, 120, 131, 134, 136, 138], "account": [22, 120, 139, 148], "algorithm": [22, 31, 83, 134, 138], "span": [22, 30, 31], "choos": [22, 37, 138, 147], "largest": [22, 134, 138], "weight": [22, 31, 32, 63], "distanc": [22, 31, 139], "parallel": [22, 31, 48, 70, 75, 99, 106, 108, 116, 134, 136, 137, 138, 140], "applic": [22, 31, 83, 131, 138, 147], "cx": [22, 27, 31, 50], "scale": [22, 134], "logarithm": [22, 138], "connect": [22, 31, 110, 138], "naiv": [22, 38, 138], "appli": [22, 27, 31, 50, 57, 129, 137, 138, 141, 147], "textbook": [22, 138], "linearli": 22, "specifi": [22, 51, 56, 57, 75, 81, 83, 84, 106, 107, 110, 117, 119, 124, 126, 134, 141, 148], "assum": [22, 33, 105, 147], "e": [22, 75, 80, 105, 128, 134, 136, 137, 138, 139, 143, 144], "g": [22, 75, 80, 105, 128, 131, 136, 137, 138, 139, 143, 144], "label": [22, 51, 65, 75, 84, 94, 100, 104, 120, 124, 129, 131, 132, 134, 138], "meant": 22, "NOT": 22, "support": [22, 32, 147], "denot": 22, "provid": [22, 43, 130, 132, 133, 134, 137, 147], "here": [22, 82, 132, 134, 139], "ha": [22, 134, 135, 139, 141, 144, 147, 148], "than": [22, 134, 138, 141], "small": [22, 129], "level": [22, 38, 51, 57, 80, 134, 136, 137, 138, 143, 144], "architectur": 22, "consecut": 22, "reduc": [22, 121], "iqm_transpil": 22, "optimize_single_qubit_g": 22, "multipl": [22, 25, 88, 129, 134, 138], "moonei": [22, 25, 134, 138], "2021": [22, 25, 134, 138, 148], "randomized_measur": [22, 138], "outlin": 22, "http": [22, 26, 28, 29, 88, 131, 132, 137, 138, 139, 147, 148], "arxiv": [22, 26, 28, 29, 51, 83, 131, 138, 148], "org": [22, 26, 28, 29, 131, 138, 139, 147], "ab": [22, 26, 28, 29, 131, 138], "1812": [22, 26], "02624": [22, 26], "respect": [22, 80, 82, 134], "chosen": [22, 134, 138, 139], "boolean": [22, 138], "flag": 22, "determin": [22, 147], "readout": [22, 25, 56, 57, 62, 111, 112, 114, 137, 138], "error": [22, 25, 56, 57, 62, 104, 114, 129, 134, 137, 138, 139], "mitig": [22, 25, 56, 57, 62, 111, 112, 113, 114, 137, 138], "total": [22, 92, 131, 134, 138], "url": [22, 23, 134, 148], "retriev": [22, 50, 54, 122, 123, 128, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144], "priorit": 22, "high": [22, 134, 138], "float": [23, 32, 37, 39, 40, 42, 43, 44, 45, 47, 50, 53, 54, 58, 59, 60, 61, 62, 63, 64, 65, 75, 80, 82, 83, 84, 85, 95, 96, 97, 101, 104, 108, 109, 112, 114, 117, 119], "under": [23, 129, 131, 134, 139, 147], "each": [23, 31, 33, 45, 59, 60, 61, 65, 75, 80, 82, 85, 89, 108, 113, 117, 135, 136, 137, 138, 139, 140, 141, 147, 148], "list_fid": 23, "wai": [23, 32, 129, 134], "list_coupl": 23, "ideal_prob": 26, "num_qubit": [26, 27, 28, 29, 37, 56, 82, 95, 101, 136], "cross": [26, 134, 147], "correl": [26, 138], "rm": 26, "eq": [26, 131], "34": [26, 132, 135, 136, 137, 143], "hadamard": [27, 131], "seri": 27, "linear": 27, "fashion": 27, "symmetr": 27, "halv": 27, "n": [27, 28, 29, 30, 71, 81, 131, 134, 138], "1807": [28, 138], "05572": [28, 138], "2101": [29, 138], "08946": [29, 138], "graph": [30, 31, 32, 37, 39, 40, 41, 42, 44, 45, 47, 134, 138], "n_state": [30, 134], "networkx": [30, 31, 32, 37, 39, 40, 41, 42], "participating_qubit": 30, "qc": [30, 50, 131, 132, 148], "calcul": [31, 39, 45, 61, 92, 116, 127, 129, 134], "cx_map": 31, "particip": 31, "2qb": 31, "between": [31, 85, 112, 134, 138], "them": [31, 132, 148], "subgraph": 31, "edg": [31, 32, 40, 41, 42, 83, 134], "Then": [31, 148], "find": [31, 134, 138], "most": [31, 139], "central": 31, "posit": 31, "next": 31, "start": [31, 37, 105, 134, 136, 137, 138, 139, 148], "smallest": 31, "layer": [31, 39, 43, 47, 48, 50, 51, 56, 80, 81, 83, 84, 85, 106, 116, 137, 145, 146, 148], "first": [31, 37, 50, 80, 138, 139, 141, 143, 144, 145], "coupling_map": [32, 120, 134, 138], "couplingmap": [32, 124], "edges_c": 32, "fidelities_c": 32, "have": [32, 99, 134, 147, 148], "v": [33, 45, 50, 52, 134, 137, 140], "user": [33, 144, 148], "identif": [33, 147], "logger": [34, 127], "everi": 34, "warn": [34, 131, 134, 144], "score": [35, 37, 38, 44, 137, 145, 146, 148], "combinatori": [35, 37, 134], "problem": [35, 37, 39, 40, 41, 42, 44, 45, 134, 148], "meaning": [35, 37, 48, 56, 57], "qscorebenchmark": [36, 38, 134, 137, 142], "qscoreconfigur": [36, 37, 134, 137, 142], "backend_arg": [37, 50, 56, 71, 76, 81, 83, 84, 85, 98, 99, 100, 106, 107, 109, 110, 113, 117], "generate_maxcut_ansatz": 37, "theta": 37, "ansatz": [37, 39, 41, 43, 47], "qaoa": [37, 39, 43, 47], "maxcut": [37, 39, 40, 41, 42, 43, 47, 134, 137, 142], "end": [37, 50, 56, 131, 147], "variat": [37, 134], "gamma": [37, 39], "beta": [37, 39, 44, 45, 134, 137, 142], "add_all_meta_to_dataset": [37, 50, 56, 76, 81], "variabl": [37, 50, 56, 71, 76, 81, 97, 132, 139, 148], "choose_qubits_na": 37, "sequenti": [37, 107, 135, 137], "choose_qubits_custom": 37, "element": 37, "match": 37, "num_inst": [38, 45, 134, 137, 142], "num_qaoa_lay": [38, 134, 137, 142], "min_num_nod": [38, 134, 137, 142], "max_num_nod": [38, 134, 137, 142], "use_virtual_nod": [38, 45, 134, 137, 142], "use_classically_optimized_angl": [38, 45, 134, 137, 142], "choose_qubits_routin": [38, 57, 134, 137, 142, 143, 144, 148], "min_num_qubit": 38, "seed": [38, 134, 137, 142], "upon": [38, 51, 57], "angl": [39, 43, 45, 47], "qubit_to_nod": [40, 41], "virtual_nod": [40, 41, 47], "expect": [40, 41, 47, 80, 83, 85, 129, 134], "val": 40, "node": [40, 41, 45, 47, 134], "virtual": [40, 41, 45, 47, 120], "cut": [40, 41, 42, 47, 134], "avg": [40, 137, 139, 142], "callabl": [41, 97, 103], "parametr": [41, 48, 50, 51, 134, 136, 137, 139], "x": [42, 90, 92, 104, 129, 131, 132, 139, 141, 143, 144], "minu": 42, "sign": 42, "solut": [42, 134], "multipli": 42, "obj": 42, "num_lay": 43, "approximation_ratio": [44, 134, 137, 142], "approxim": [44, 45, 134, 137, 142], "ratio": [44, 45, 134, 137, 142], "abov": [44, 64, 134, 139, 147], "being": [44, 50, 56, 61, 64, 65, 82, 83, 95, 101, 117, 119, 134], "success": [44, 64, 134], "condit": [44, 64, 138, 147], "mean": [44, 117, 131, 134, 136, 139, 147], "threshold": [44, 45, 57, 64, 65, 134], "beta_ratio": 45, "beta_std": 45, "backend_nam": [45, 65, 121, 135, 136, 141, 143, 144], "timestamp": [45, 65, 135, 141], "includ": [45, 53, 129, 134, 138, 147], "standard": [45, 57, 60, 69, 104, 117, 139, 148], "deviat": [45, 57, 60, 104, 117], "classic": [45, 47, 56], "graph_phys": 47, "qubit_nod": 47, "use_classical_angl": 47, "qaoa_lay": 47, "solv": [47, 134], "averag": [47, 59, 64, 65, 71, 76, 82, 97, 129, 134, 139], "presenc": 47, "volum": [48, 55, 56, 57, 66, 129, 145, 146, 148], "reflect": [48, 50, 56, 67, 68, 73, 78], "deepest": [48, 56], "oper": [48, 67, 109, 117, 129, 131, 138, 139, 145, 146], "second": [48, 50, 145, 146], "clop": [48, 129, 145, 146, 148], "speed": [48, 50, 134], "clops_v": [48, 134, 136], "qv": [48, 50, 51, 56, 57, 59, 60, 64, 65, 129, 134, 136, 137, 145, 146], "clops_h": [48, 51, 136], "squar": [48, 134, 139], "clopsbenchmark": [49, 51, 134, 136, 137], "clopsconfigur": [49, 50, 134, 136, 137], "h": [50, 52], "append_parameterized_unitari": 50, "q0": 50, "q1": 50, "decompos": [50, 134], "su": 50, "4": [50, 105, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148], "involv": [50, 134], "belong": 50, "generate_single_circuit": [50, 56], "generate_circuit_list": [50, 56], "generate_random_paramet": 50, "ndarrai": [50, 96, 97, 103], "templat": [50, 134, 136, 137], "np": [50, 96, 103, 131, 134, 137, 138, 139, 140], "float64": 50, "assign_random_parameters_to_al": 50, "dict_parametrized_circ": 50, "clops_cycl": 50, "sorted_transpiled_qc_list": [50, 56, 126], "cycl": 50, "assign": [50, 51, 80, 134, 136, 137], "elaps": [50, 53, 54, 127, 136, 137], "time": [50, 53, 54, 56, 81, 106, 107, 127, 134, 136, 137, 139], "submiss": [50, 56, 81, 106, 107, 134, 147], "generate_transpiled_clops_templ": 50, "num_circuit": [51, 57, 134, 136, 137, 139, 143, 144, 148], "num_upd": [51, 134, 136, 137], "10": [51, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 148], "num_shot": [51, 134, 136, 137], "clops_h_bool": [51, 136, 137], "one": [51, 105, 126, 132, 134, 138, 139, 141, 147, 148], "establish": [51, 136, 137], "By": [51, 136, 137], "definit": [51, 134, 136, 137, 147], "2110": [51, 148], "14108": [51, 148], "quant": [51, 83, 148], "ph": [51, 83, 148], "rigor": [51, 139], "loos": 51, "www": [51, 131, 147], "ibm": [51, 112], "com": 51, "blog": 51, "metric": [51, 134, 139, 140], "restrict": [51, 57, 124, 137, 143, 144], "consid": [51, 57, 124], "clops_data": 53, "job_meta": 54, "quantumvolumebenchmark": [55, 57, 134, 137, 143, 144], "quantumvolumeconfigur": [55, 56, 134, 137, 143, 144, 148], "add_all_circuits_to_dataset": [56, 71, 76], "classical_permut": 56, "permut": 56, "avoid": 56, "swap": [56, 131], "get_rem_quasidistro": 56, "sorted_qc_list_indic": [56, 61], "execution_result": [56, 58], "quasicollect": [56, 62, 113], "quasiprob": [56, 62, 113, 114], "qubii": 56, "untranspil": [56, 61, 98, 120, 129], "submit_single_qv_job": 56, "submit": [56, 81, 106, 107, 126, 135, 136, 137, 138, 139, 140, 141, 143, 144, 147], "vanilla": [56, 65, 81, 106, 107], "dd": [56, 65, 81, 106, 107], "num_sigma": [57, 64, 65, 134, 137, 143, 144, 148], "least": [57, 134, 139, 147], "criteria": 57, "consensu": 57, "post": [57, 135, 137, 140, 141, 143, 144], "process": [57, 134, 135, 137, 140, 141, 143, 144], "when": [57, 129, 134, 138, 148], "unmitig": 57, "1_000": [57, 134, 137, 143, 144, 148], "ideal_heavy_output": [58, 62], "hop": [58, 59, 60, 64, 65, 129], "ideal": [58, 82, 134], "heavi": [58, 59, 60, 61, 62, 63, 64, 134], "cumul": [59, 60], "probabl": [59, 60, 62, 63, 80, 83, 95, 101, 108, 119, 134, 141, 148], "individu": [59, 60, 104, 129, 134, 138, 139, 147, 148], "trial": [59, 60], "qc_list": [61, 120], "bitrstr": 61, "all_rem_quasidistro": 62, "distribut": [62, 63, 119, 131, 134, 147], "noiseless": [62, 137, 143, 144], "project": [63, 148], "onto": 63, "associ": [63, 136, 137, 147], "heavy_output_prob": [64, 143, 144], "over": [64, 112, 119, 134], "within": [64, 147, 148], "sigma": [64, 65], "qv_result": [65, 134, 143, 144], "qv_results_typ": [65, 143, 144], "in_volumetr": 65, "plot_rem": 65, "come": [65, 82, 114], "context": 65, "volumetr": 65, "correct": [65, 82, 112, 113, 134, 139], "rb": [68, 70, 71, 72, 73, 75, 76, 77, 78, 80, 81, 95, 96, 97, 99, 101, 103, 104, 107, 108, 110, 129, 131, 134, 137, 140, 145, 146], "cliffordrandomizedbenchmark": [69, 70, 134, 135, 137], "cliffordrbconfigur": [69, 71, 134, 135, 137], "qubits_arrai": [70, 75, 80, 99, 104, 106, 108, 110, 134, 135, 137, 140, 141, 148], "sequence_length": [70, 75, 98, 99, 134, 135, 137, 140, 148], "num_circuit_sampl": [70, 75, 80, 98, 134, 135, 137, 140, 141, 148], "parallel_execut": [70, 75, 134, 135, 137, 140, 148], "length": [70, 75, 82, 86, 98, 99, 100, 131, 134, 135, 137, 140], "add_all_metadata_to_dataset": 71, "interleav": [73, 74, 75, 76, 77, 80, 85, 96, 97, 98, 99, 100, 104, 129, 135, 145, 146, 148], "interleavedrandomizedbenchmark": [74, 75, 134, 137, 140], "interleavedrbconfigur": [74, 76, 134, 137, 140, 148], "interleaved_g": [75, 98, 99, 100, 104, 134, 137, 140, 148], "interleaved_gate_param": [75, 134, 137, 140, 148], "simultaneous_fit": [75, 134, 137, 140, 148], "amplitud": [75, 96, 134, 137, 140, 148], "offset": [75, 96, 134, 137, 140, 148], "irb": [75, 97, 129, 145, 146], "ygate": 75, "czgate": [75, 80, 131, 134, 137, 139, 140, 141, 148], "enter": [75, 97, 99], "fit": [75, 88, 89, 90, 92, 96, 97, 103, 104, 129, 139, 147], "simultan": [75, 97], "specif": [76, 120, 131, 133, 134, 137, 139, 143, 144, 145, 147], "mirror": [78, 79, 80, 81, 85, 129, 145, 146, 148], "mirrorrandomizedbenchmark": [79, 80, 137, 141, 148], "mirrorrbconfigur": [79, 81, 137, 141, 148], "depths_arrai": [80, 137, 141, 148], "num_pauli_sampl": [80, 82, 86, 137, 141, 148], "two_qubit_gate_ensembl": [80, 83, 84, 85, 137, 141, 148], "density_2q_g": [80, 83, 84, 85, 137, 141, 148], "25": [80, 83, 84, 85, 134, 135, 136, 137, 138, 140, 141, 143, 144, 148], "mrb": [80, 81, 84, 87, 97, 104, 106, 107, 129, 137, 145, 146], "len": [80, 131, 134, 139], "pauli": [80, 82, 84, 85, 86, 131, 139], "two": [80, 83, 131, 132, 134, 138, 139], "ensembl": [80, 81, 83, 104], "cxgate": 80, "densiti": [80, 83, 85, 104, 134], "submit_single_mrb_job": 81, "sorted_transpiled_circuit_dict": [81, 106], "canon": [81, 84, 85, 106], "noisy_count": 82, "ideal_count": 82, "num_circ_sampl": [82, 86, 100], "polar": [82, 97], "noisi": 82, "rescal": 82, "few": [82, 134], "effect": [82, 134], "real": [82, 148], "simul": [82, 112, 129, 136, 137, 141, 143, 144], "qubit_set": [83, 97], "n_layer": 83, "grab": [83, 112], "see": [83, 131, 134, 138, 139, 147], "2204": 83, "07568": 83, "2q": [83, 85, 102, 104, 134, 136, 137], "form": [83, 147], "subsequ": [83, 147], "rais": [83, 86, 110, 112, 120, 124], "valueerror": [83, 86, 110, 120, 124], "do": [83, 112, 140, 147], "up": [83, 134, 148], "uniti": 83, "circ_sampl": 84, "pauli_samples_per_circ": [84, 85], "dress": [84, 85, 86], "input_list": 86, "convert": [86, 131], "flat": 86, "matrix": [86, 131, 134], "shape": 86, "lmfit": [88, 89, 97], "extend": 88, "shown": [88, 134, 138, 139], "document": [88, 134, 147, 148], "github": [88, 148], "io": 88, "py": [88, 144, 148], "example_fit_multi_dataset": 88, "html": [88, 148], "sphx": 88, "glr": 88, "multi": [88, 134], "func": [89, 90, 91, 92, 97, 103], "initial_guess": 89, "constraint": [89, 148], "simultaneously_fit_var": 89, "line": 89, "evalu": [90, 134], "signatur": 91, "residu": 92, "sever": [92, 129, 134], "techniqu": 93, "qc_inv": 94, "clifford_dictionari": 94, "invers": [94, 134], "invert": 94, "de": [94, 100], "stabil": [94, 100, 129], "ground": [95, 101, 132], "depolarization_prob": 96, "non": [96, 134, 147], "depolar": 96, "p": [96, 134], "decai": [96, 104, 129, 134], "exponenti": [96, 134], "rb_identifi": 97, "simultaneous_fit_var": 97, "interleaved_gate_str": 97, "0th": 97, "ap": [97, 139], "m": [97, 134, 135, 137, 140, 141, 144, 148], "b": [97, 131, 134, 147], "either": [97, 114, 117, 131, 138, 139, 147, 148], "stdrb": 97, "clifford_dict": [98, 100], "fir": 98, "cliffords_1q": 99, "cliffords_2q": 99, "num_sampl": [99, 100], "befor": [99, 134], "after": [99, 148], "term": [99, 131, 139, 147], "r": [99, 117, 120, 131, 136, 139, 144], "seq_length": 100, "self": [100, 132], "import": [102, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148], "fit_paramet": 103, "fit_data": 103, "minimizerresult": 103, "violin": 104, "scatter": 104, "bar": [104, 132, 139], "shade_stdev": 104, "shade_meanerror": 104, "logscal": 104, "mrb_2q_densiti": 104, "mrb_2q_ensembl": 104, "point": [104, 138], "shade": 104, "axi": [104, 129], "titl": [104, 147], "arr": 105, "helper": 105, "relabel": 105, "increasingli": 105, "zero": [105, 129, 134], "5": [105, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 147, 148], "7": [105, 131, 134, 135, 136, 137, 138, 139, 140, 141, 144, 147, 148], "note": [105, 114, 129, 138, 139, 148], "sort": [105, 125, 141, 143, 144], "increas": [105, 139], "transpiled_circuit": [107, 113, 144], "margin": [108, 112, 119], "surviv": [108, 134], "gate_id": 109, "gate_param": 109, "basi": [109, 120, 131, 134, 139, 147], "m3": [111, 112, 113], "modif": [111, 147], "qpu": [111, 134], "m3iqm": [111, 114], "mthree": [111, 114], "m3mitig": [111, 112], "iter_threshold": 112, "4096": 112, "modifi": [112, 129, 134, 147], "work": [112, 114, 134, 147, 148], "devic": [112, 129, 134, 146, 148], "cals_from_system": 112, "initial_reset": 112, "rep_delai": [112, 144], "cals_fil": 112, "async_c": 112, "cal_id": 112, "array_lik": 112, "min": [112, 134], "1e4": 112, "max_shot": 112, "balanc": 112, "hardwar": [112, 146], "independ": [112, 134], "reset": 112, "begin": [112, 131], "delai": 112, "path": 112, "json": [112, 139], "async": 112, "separ": [112, 129, 143, 144, 147], "thread": 112, "m3error": 112, "call": [112, 129], "while": [112, 138, 139, 147], "progress": 112, "against": [113, 147], "outcom": [113, 134, 139], "mit": [114, 147], "iter": [114, 119], "processor": [114, 134], "argument": [114, 129, 148], "util": [114, 138], "final_measurement_map": 114, "like": [114, 131, 134, 148], "qubit_name_to_index": 114, "quasiprobabilti": 114, "we": [114, 132, 134, 139, 147], "could": 114, "also": [114, 129, 139, 143, 144, 147, 148], "would": 114, "out": [114, 138, 147], "box": 114, "u": 114, "sinc": [114, 134, 139], "circuit_list": 116, "transpiled_qc_list": 117, "barrier": [117, 131, 132, 136], "outermost": 117, "backend_label": 118, "prob_dist": 119, "bit": 119, "basis_g": 120, "drop_final_rz": 120, "target": [120, 139], "optimization_level": [120, 132, 134], "sqg": [120, 136, 137, 138, 143, 144], "z": 120, "drop": 120, "rz": 120, "emploi": 120, "star": [120, 124, 134], "iqm_job": [122, 123], "iqmjob": [122, 123, 126], "relev": 123, "transpiled_circuit_list": 125, "sorted_indic": 125, "sorted_circuit": 125, "sent": [126, 147], "manag": [126, 147, 148], "f": [127, 131, 132, 134, 137, 138, 139, 144], "amount": [127, 128], "decor": 127, "statement": [127, 147], "counts_rang": 128, "extract": [128, 134, 148], "rang": [128, 129, 131, 132, 134, 135, 137, 139, 140, 141, 148], "were": [128, 129], "folder": [129, 147, 148], "doc": [129, 148], "notebook": [129, 132, 134, 139, 145, 146], "benchmark": [129, 130, 131, 133, 139, 142, 143, 144, 145], "iqm": [129, 130, 131, 132, 133, 138, 139, 140, 145, 147], "spark": [129, 133, 146], "move": [129, 144], "30": [129, 134, 135, 137, 140, 148], "compat": 129, "deneb": [129, 135, 136, 137, 140, 141, 142, 143, 145, 146], "adapt": [129, 148], "behavior": 129, "report": [129, 134], "displai": [129, 131, 134, 135, 137, 139, 140, 144, 147], "publish": 129, "ci": 129, "secur": [129, 148], "scan": [129, 148], "lockfil": [129, 148], "bug": 129, "depend": [129, 138, 139, 146], "relat": [129, 134], "gst": [129, 145, 146], "lead": [129, 138, 139], "modulenotfounderror": 129, "qscore": [129, 134], "enabl": 129, "pyrit": [129, 142], "wrong": 129, "incorrect": 129, "mgst": [129, 139, 147, 148], "improv": [129, 147], "hamiltonian": [129, 139], "rank": [129, 139], "compress": [129, 145, 146, 148], "compil": [129, 134, 139, 147], "stage": 129, "revert": 129, "ones": [129, 134, 148], "20": [129, 131, 132, 135, 136, 137, 140], "now": [129, 135, 136, 137, 138, 139, 140], "instead": [129, 148], "port": 129, "subclass": 129, "usag": 129, "place": [129, 147], "miscellan": 129, "relax": 129, "api": [129, 146, 148], "build": [129, 148], "overwrit": 129, "tutori": 129, "remov": 129, "explicit": 129, "minor": 129, "longer": [129, 134], "renam": 129, "so": [129, 134, 139], "rebas": 129, "randomizedbenchmark": 129, "quantumvolum": 129, "serial": 129, "some": [129, 134], "available_benchmark": 129, "__init__": 129, "public": 129, "hint": 129, "docstr": 129, "messag": 129, "prevent": 129, "exclus": [129, 147], "jupyt": 129, "section": [130, 133, 145, 147], "guidanc": [130, 133], "packag": [130, 134, 138, 144, 145, 148], "your": [130, 134, 146, 147, 148], "own": [130, 146, 147, 148], "decomposit": [130, 146], "1402": 131, "4848": 131, "copyright": [131, 147], "2024": [131, 135, 136, 144, 147], "develop": [131, 146], "licens": [131, 146], "apach": [131, 147], "you": [131, 134, 140, 144, 147, 148], "mai": [131, 134, 147], "except": [131, 132, 147], "complianc": [131, 147], "obtain": [131, 134, 147, 148], "unless": [131, 147], "law": [131, 147], "agre": [131, 147], "softwar": [131, 147], "AS": [131, 147], "without": [131, 134, 138, 147], "warranti": [131, 147], "OR": [131, 147], "OF": [131, 147], "kind": [131, 147], "express": [131, 147], "impli": [131, 147], "languag": [131, 147], "govern": [131, 147], "permiss": [131, 147], "limit": [131, 147], "quantum_info": 131, "qi": 131, "numpi": [131, 134, 137, 139, 140], "c0": 131, "c": [131, 134, 144, 147], "_": [131, 134, 139], "24": [131, 135, 136, 137, 138, 140], "half": 131, "pi": [131, 137, 140], "x2": 131, "to_gat": 131, "y2": 131, "y": 131, "x2m": 131, "y2m": 131, "compos": 131, "inplac": 131, "2pi": 131, "rotat": [131, 132], "6": [131, 135, 136, 137, 138, 140, 141, 144, 147, 148], "9": [131, 132, 134, 135, 136, 137, 138, 140, 141, 147, 148], "11": [131, 132, 134, 135, 137, 138, 140, 141, 142, 144, 148], "12": [131, 135, 136, 137, 139, 140, 141, 143, 144], "13": [131, 135, 137, 138, 140, 141, 144, 148], "14": [131, 135, 136, 137, 140, 141, 146, 148], "15": [131, 134, 135, 136, 137, 140, 141, 144], "16": [131, 135, 136, 137, 138, 140, 141, 143], "17": [131, 135, 136, 137, 138, 140, 141, 143, 148], "18": [131, 135, 136, 137, 138, 140, 141, 148], "19": [131, 136, 137, 138, 139, 140, 141], "21": [131, 136, 137, 140], "22": [131, 136, 137, 139, 140, 141], "23": [131, 135, 136, 137, 138, 140, 141, 143, 144], "clifford_sqg": 131, "s1": 131, "k": [131, 134, 136, 141, 143, 144], "s1x2": 131, "s1y2": 131, "displaystyl": 131, "sum_": [131, 139], "prime": 131, "left": 131, "mathrm": [131, 134], "tr": [131, 139], "u_": 131, "dagger": [131, 134, 139], "u_k": 131, "right": [131, 147], "s2": 131, "satisfi": [131, 139], "c_kei": 131, "aux": 131, "total_triangl": 131, "c1": 131, "adjoint": 131, "j": [131, 134, 138, 139], "c2": 131, "c3": 131, "to_matrix": 131, "trace": [131, 139], "print": [131, 134, 136, 137, 138, 139, 141, 143, 144, 147], "0f": 131, "diagon": [131, 134], "nsum": 131, "sum": 131, "clifford_2qg": 131, "product": [131, 147], "c2q_0": 131, "c2q": 131, "counter": 131, "to_label": 131, "mode": [131, 148], "sqg_class_": 131, "cnot": [131, 138], "sy2": 131, "cnot_class_": 131, "iswap": 131, "sy1": 131, "sx2": 131, "i_swap_class_": 131, "swap_class_": 131, "clifford_1qg": 131, "open": 131, "clifford_1q": 131, "pkl": 131, "wb": 131, "clifford_2q": 131, "loaded_dict": 131, "def": [131, 132], "count_rcz": 131, "c_list": 131, "no_cz": 131, "no_r": 131, "count_op": 131, "els": 131, "num_2qcz": 131, "num_2qr": 131, "num_1qcz": 131, "num_1qr": 131, "875": [131, 134, 137, 140, 143], "200": [131, 134, 137, 138], "randint": [131, 137, 142], "11520": 131, "draw": [131, 138, 144], "mpl": 131, "style": 131, "iqp": 131, "fold": 131, "ninvers": 131, "qc_aux": 131, "qcinv": 131, "op_seq": 131, "ncomposit": 131, "ident": 131, "modulo": 131, "phase": 131, "equiv": 131, "ii": [131, 132, 147], "latex": 131, "composit": 131, "bmatrix": 131, "520": [131, 137], "132": [131, 137, 140], "710": 131, "400": [131, 135, 137], "suffic": 131, "triangular": 131, "part": [131, 147], "howev": [131, 147, 148], "still": [131, 139], "op": 131, "adj": 131, "prod": 131, "100000": 131, "ndone": 131, "done": 131, "defit": 132, "simpl": [132, 134, 148], "anoth": 132, "excit": 132, "add_counts_to_dataset": 132, "pyplot": [132, 139], "plt": [132, 139], "generate_readout_test_circuit": 132, "n_qubit": 132, "qb_to_measur": 132, "qc_transpil": 132, "plot_histogram": [132, 134], "50": [132, 134, 137, 139, 140, 141, 142, 144, 147], "try": 132, "state_": 132, "counts_": 132, "break": 132, "xtick": 132, "90": 132, "legend": 132, "readout_analysi": 132, "histogram": [132, 134], "readouttest": 132, "default_opt": 132, "n_shot": 132, "2048": 132, "staticmethod": 132, "readout_test": 132, "iqmprovid": [132, 134, 137, 148], "iqm_server_url": 132, "station": [132, 148], "fi": [132, 148], "coco": [132, 148], "get_backend": [132, 134, 137, 148], "480b": 132, "dimens": [132, 139], "state_0": 132, "state_1": 132, "coordin": 132, "u4": 132, "144b": 132, "0000": 132, "0001": 132, "0010": 132, "1010": 132, "1100": 132, "176b": 132, "0011": 132, "0101": 132, "0110": 132, "1101": 132, "1110": 132, "1111": 132, "counts_0": 132, "int64": 132, "72b": 132, "1924": 132, "26": [132, 137, 138, 140], "39": [132, 137, 139, 140], "counts_1": 132, "88b": 132, "72": 132, "48": [132, 137, 140], "78": 132, "36": [132, 137], "1801": 132, "sure": [134, 148], "instal": [134, 139, 146], "pip": [134, 148], "ipykernel": 134, "o": [134, 135, 136, 137, 140, 141, 142, 143, 144, 148], "environ": [134, 135, 136, 137, 140, 141, 142, 143, 144, 148], "iqm_tokens_fil": 134, "token": [134, 140, 148], "iqm_url": [134, 137], "access": [134, 148], "everyth": 134, "properli": 134, "rustworkx": [134, 138], "visual": [134, 138], "mpl_draw": [134, 138], "spring_layout": [134, 138], "to_undirect": 134, "multigraph": 134, "arrow": [134, 138], "with_label": [134, 138], "node_color": [134, 138], "32a8a4": [134, 138], "po": [134, 138], "num_it": [134, 138], "cell": [134, 138], "below": [134, 138, 139, 147, 148], "ignor": 134, "critic": 134, "filterwarn": 134, "action": 134, "maxim": 134, "entangl": [134, 137, 138, 148], "three": 134, "more": [134, 147, 148], "superposit": 134, "rangl": 134, "frac": [134, 139], "sqrt": 134, "otim": 134, "act": [134, 147], "wit": 134, "genuin": [134, 138], "cannot": [134, 147], "explain": 134, "great": 134, "rho_": 134, "text": [134, 139, 147], "langl": 134, "pure": 134, "case": 134, "actual": 134, "entri": [134, 139], "written": [134, 147], "00": [134, 137, 139, 141, 143], "corner": 134, "simplifi": 134, "four": 134, "compon": 134, "formula": 134, "nullifi": 134, "To": [134, 135, 138, 139, 142, 147, 148], "off": 134, "want": [134, 148], "pleas": 134, "refer": [134, 139, 146, 148], "generate_ghz_spanning_tre": 134, "get_edg": 134, "ghz_circuit": 134, "qc_transp": 134, "re": [134, 140], "10000": 134, "get_count": 134, "benchmark_ghz": [134, 137, 138], "run_ghz": [134, 137, 138], "result_ghz": 134, "introduc": 134, "2019": [134, 138, 148], "unitari": [134, 139, 144], "successfulli": [134, 135, 137, 140, 141, 143, 144], "occcur": 134, "greater": 134, "median": 134, "ask": 134, "confid": 134, "higher": 134, "97": 134, "around": 134, "85": [134, 148], "asymptot": 134, "log_2": 134, "v_q": 134, "underset": 134, "argmax": 134, "d": [134, 138, 147], "leq": 134, "achiev": 134, "quantum_volum": [134, 136, 137, 143, 144, 148], "combin": [134, 147], "test": [134, 148], "due": 134, "must": [134, 147, 148], "topmost": 134, "500": [134, 137, 141, 143, 144, 148], "60_000": [134, 137, 143, 144, 148], "follow": [134, 138, 139, 147, 148], "code": [134, 139, 146, 147, 148], "minut": [134, 139], "benchmark_qv": [134, 137, 143, 144], "run_qv": 134, "result_qv": 134, "That": 134, "wack": 134, "repeat": 134, "taken": 134, "constitut": [134, 147], "_time": 134, "notic": [134, 147], "plot_tim": 134, "benchmark_clop": [134, 136, 137], "run_clop": [134, 136, 137], "result_clop": [134, 136, 137], "fig_clop": 134, "idea": 134, "behind": 134, "crb": 134, "certain": 134, "nois": 134, "langle0": 134, "c_": 134, "inv": 134, "c_m": 134, "cdot": 134, "_2c_1": 134, "sim": 134, "c_1": 134, "c_2": 134, "ldot": 134, "c_1c_2": 134, "_m": 134, "leq1": 134, "constant": 134, "isol": 134, "spam": 134, "magesan": 134, "2012": [134, 148], "turn": [134, 138], "infer": 134, "assumpt": 134, "markovian": 134, "stationari": 134, "theori": [134, 147], "fact": 134, "design": [134, 147, 148], "fulli": [134, 139], "ensur": 134, "our": 134, "overlin": 134, "intend": 134, "becaus": 134, "eventu": 134, "mention": 134, "barend": 134, "2014": 134, "approx": 134, "alwai": [134, 138], "slightli": 134, "care": 134, "compar": 134, "spec": 134, "randomized_benchmark": [134, 135, 137, 140, 141, 148], "clifford_rb": [134, 135, 137], "benchmark_clifford_rb": [134, 135, 137], "run_clifford_rb": [134, 135, 137], "result_clifford_rb": [134, 135, 137], "previou": 134, "aim": [134, 138], "interest": 134, "robust": 134, "sole": [134, 147], "made": [134, 147], "among": [134, 148], "rate": 134, "wish": [134, 144], "character": [134, 146], "interleaved_rb": [134, 137, 140, 148], "irb_cz": 134, "nb": [134, 135, 136, 137], "benchmark_irb_cz": 134, "run_irb_cz": 134, "result_irb_cz": 134, "martiel": 134, "erd\u0151": 134, "r\u00e9nyi": 134, "cost": 134, "geq": [134, 139], "benchmark_qscor": [134, 137, 142], "run_qscor": [134, 137], "result_qscor": [134, 137], "summar": 134, "tabl": [134, 139], "obs_ghz": 134, "round": 134, "obs_qv": 134, "max": 134, "obs_clop": 134, "item": 134, "obs_crb": 134, "f_crb": 134, "obs_irb": 134, "f_irb": 134, "avg_gate_fidelity_interleav": [134, 137, 140], "obs_q": 134, "argmin": 134, "3000": 134, "999": [134, 135, 136], "98": 134, "format": [134, 147], "num": 134, "load_ext": [135, 136, 137, 139, 140, 141, 142, 143, 144], "autoreload": [135, 136, 137, 139, 140, 141, 142, 143, 144], "extens": [135, 142], "load": [135, 142], "reload": [135, 142], "reload_ext": [135, 142], "fakeadoni": [135, 136, 137, 140, 141, 142, 143], "fakeapollo": [135, 136, 137, 138, 140, 141, 142, 143], "garnet": [135, 136, 137, 139, 140, 141, 142, 143, 148], "iqm_token": [135, 136, 137, 140, 141, 142, 143, 144, 148], "example_crb": [135, 137], "56": [135, 137], "750": 135, "logging_config": [135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "info": [135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "Will": [135, 136, 137, 139, 140, 141, 143, 144], "31": [135, 136, 137, 138, 140, 141], "63": [135, 137, 140], "831": [135, 140], "992": [135, 136], "341": 135, "040": [135, 137, 140], "469": [135, 137], "291": 135, "292": [135, 137, 140], "349": 135, "541": [135, 141], "600": [135, 137], "756": [135, 137], "837": [135, 140, 143], "025": 135, "171": [135, 137], "905": 135, "544": [135, 137], "899": [135, 137], "32": [135, 136, 137, 138, 139, 141], "624": [135, 137], "004": [135, 137, 140], "43": [135, 137, 139, 140], "319": 135, "569": [135, 141], "777": [135, 137], "840": 135, "44": [135, 137, 139, 140], "048": [135, 140], "098": [135, 136, 137], "qubits_": [135, 137, 141], "_depth_1": [135, 137, 140], "323": 135, "45": [135, 137, 140, 141], "186": [135, 140], "_depth_3": [135, 137, 140], "225": [135, 137], "_depth_7": [135, 137, 140], "267": [135, 137], "_depth_15": [135, 137, 140], "314": [135, 137], "_depth_31": [135, 137, 140], "315": [135, 137], "364": [135, 137, 141], "_depth_63": [135, 137, 140], "416": 135, "417": [135, 144], "476": 135, "542": [135, 137, 141], "615": [135, 137], "616": [135, 137], "697": 135, "789": [135, 137, 140], "890": [135, 137, 140], "conclud": [135, 137, 140, 141, 143, 144], "931": [135, 137], "938": 135, "945": [135, 137, 138, 141], "952": [135, 140], "959": [135, 137], "966": [135, 137], "972": [135, 137], "979": [135, 137], "986": [135, 137], "993": [135, 137, 141], "46": [135, 137, 139, 144], "006": [135, 137], "013": 135, "946844466999168": 135, "9429197366921651": 135, "attr": [135, 136, 139, 141, 143, 144], "session_timestamp": [135, 136, 141, 143, 144], "20241217": 135, "115553": 135, "execution_timestamp": [135, 136, 141, 143, 144], "backend_configuration_nam": [135, 136, 141, 143, 144], "iqmfakeapollobackend": [135, 136, 138, 139, 143], "depth_1": 135, "time_circuit_gener": [135, 136, 141, 143, 144], "541001081466675": 135, "time_submit": [135, 141, 143, 144], "0006990432739257812": 135, "time_retriev": [135, 141, 143, 144], "22491073608398438": 135, "all_job_metadata": [135, 141, 143, 144], "batch_job_1": [135, 141], "job_id": [135, 141], "8f305755": 135, "e038": 135, "4596": 135, "8617": 135, "d96ba3f42ca9": 135, "aer_simul": [135, 141], "statu": [135, 141], "circuits_in_batch": [135, 141], "depth_3": 135, "05647683143615723": 135, "0005230903625488281": 135, "2fe0b406": 135, "8977": 135, "4567": 135, "bba0": 135, "d4168f0883ed": 135, "depth_7": 135, "19257187843322754": 135, "0004839897155761719": 135, "8299918c": 135, "be26": 135, "40d5": 135, "8778": 135, "9ea4468a1df2": 135, "depth_15": 135, "05831408500671387": 135, "0004811286926269531": 135, "174640c4": 135, "9ff3": 135, "4ca3": 135, "9ffc": 135, "d6aa5be304f3": 135, "depth_31": 135, "1564040184020996": 135, "0006189346313476562": 135, "7bb739f2": 135, "31bc": 135, "40af": 135, "8dbf": 135, "1d60a9310391": 135, "depth_63": 135, "08135986328125": 135, "0004200935363769531": 135, "f414a2c1": 135, "75c8": 135, "4d5a": 135, "9e4b": 135, "ccce29903f5f": 135, "147684812545776": 135, "0005502700805664062": 135, "00039887428283691406": 135, "8832576a": 135, "6d6e": 135, "4abe": 135, "8cfa": 135, "5001e6bb98e": 135, "08015298843383789": 135, "00039315223693847656": 135, "ecc1bcea": 135, "ef4c": 135, "4f35": 135, "9284": 135, "ab49af0c5b9f": 135, "16936397552490234": 135, "0003960132598876953": 135, "5582c842": 135, "0f07": 135, "46b6": 135, "96be": 135, "2fb3925b19d9": 135, "20774221420288086": 135, "0004191398620605469": 135, "6423b02b": 135, "8417": 135, "4300": 135, "b7ac": 135, "84d59f87a51f": 135, "0635080337524414": 135, "0004169940948486328": 135, "0b324804": 135, "44fe": 135, "4c16": 135, "83eb": 135, "08e5cd67aa79": 135, "20784401893615723": 135, "0004961490631103516": 135, "6c633640": 135, "d4b4": 135, "47de": 135, "a46d": 135, "d3ae4c84d212": 135, "avg_gate_fidel": [135, 141], "0012220693932290373": 135, "001545469960991071": 135, "xxxxxx": 136, "example_clop": [136, 137], "06": [136, 137, 141], "07": [136, 137, 140, 141, 146], "198": [136, 137], "199": 136, "828": [136, 140], "829": [136, 137, 140], "383": [136, 140], "401": [136, 137], "458": [136, 137], "010": 136, "428": [136, 141], "429": [136, 137], "497": [136, 137], "029": [136, 137], "482": [136, 137], "483": [136, 137], "502": [136, 137], "113": 136, "843": 136, "844": 136, "906": [136, 140], "527": 136, "987": [136, 137], "988": [136, 137], "050": [136, 137, 141, 143], "636": [136, 137, 140], "099": [136, 137], "166": [136, 140], "712": 136, "27": [136, 137, 138, 140], "328": [136, 137], "329": [136, 137], "404": [136, 137], "766": [136, 137, 141], "29": [136, 137, 140, 143], "386": [136, 137], "387": [136, 137, 140, 141], "406": [136, 137], "418": [136, 137, 144], "487": [136, 137], "037": 136, "33": [136, 137, 141], "488": [136, 137], "556": [136, 137], "240": [136, 137], "916": [136, 140], "There": [136, 137], "all_times_parameter_assign": 136, "all_times_retriev": 136, "all_times_submit": 136, "assign_parameters_tot": 136, "clops_tim": 136, "counts_per_upd": 136, "job_meta_per_upd": 136, "num_paramet": 136, "operation_count": [136, 143, 144], "parallel_2q_lay": 136, "parameters_per_upd": 136, "time_count_lay": 136, "time_sort_batch": 136, "time_transpil": [136, 143, 144], "u_per_lay": 136, "user_retrieve_tot": 136, "user_submit_tot": 136, "9603960396039604": 136, "std": 136, "3960396039603959": 136, "285": [136, 137, 140], "970297029703": 136, "28": [136, 137, 140, 143], "718661075530303": 136, "40594059405941": 136, "915387814641763": 136, "9900990099009901": 136, "09900990099009897": 136, "18796": 136, "nan": [136, 139], "56388": 136, "iqm_provid": [137, 144], "2025": [137, 138, 139, 140, 141, 142, 143, 146], "01": [137, 138, 139, 140, 141, 142, 143], "58": [137, 140], "410": 137, "411": 137, "127": [137, 140], "639": [137, 138], "949": 137, "35": 137, "841": 137, "251": 137, "53": [137, 140, 142], "648": 137, "690": 137, "785": [137, 140], "953": 137, "815": 137, "59": [137, 140, 141], "821": [137, 140], "808": 137, "834": 137, "860": [137, 140], "02": [137, 139, 141, 146], "350": 137, "351": [137, 138], "424": 137, "466": 137, "510": 137, "511": 137, "558": 137, "_depth_127": [137, 140], "559": 137, "611": 137, "643": 137, "647": 137, "651": [137, 141, 144], "655": 137, "659": 137, "663": 137, "667": 137, "9487496885745926": 137, "example_irb_1q": [137, 140], "rgate": [137, 139, 140], "benchmark_irb_1q": [137, 140], "run_irb_1q": [137, 140], "734": [137, 140], "958": 137, "wxecut": 137, "255": [137, 140], "000": [137, 140], "041": 137, "122": 137, "925": 137, "229": 137, "054": 137, "37": [137, 144], "672": 137, "694": 137, "753": 137, "849": [137, 141], "38": [137, 140], "039": [137, 140], "402": 137, "108": 137, "40": 137, "570": 137, "277": 137, "331": [137, 141], "399": 137, "495": 137, "650": [137, 140], "929": 137, "51": [137, 139, 140, 142, 144], "439": 137, "52": [137, 139, 140, 141, 142, 144], "352": 137, "432": [137, 140], "475": [137, 140], "666": 137, "812": 137, "881": [137, 140], "761": 137, "804": 137, "894": [137, 138], "907": 137, "03": [137, 140, 141], "020": 137, "188": [137, 140], "270": 137, "426": 137, "718": 137, "04": [137, 140, 141], "307": [137, 141], "05": [137, 140, 141], "836": [137, 140], "904": 137, "003": [137, 139, 140], "196": [137, 140, 143], "557": [137, 141], "719": 137, "653": [137, 141], "149": [137, 141], "754": 137, "231": 137, "163": [137, 140], "261": 137, "446": 137, "524": 137, "635": [137, 140], "112": 137, "693": 137, "811": 137, "826": 137, "920": 137, "091": [137, 138], "173": [137, 140], "338": [137, 140], "640": [137, 140], "230": 137, "545": [137, 141], "54": [137, 140, 144], "939": [137, 140], "961": 137, "55": [137, 141], "011": [137, 139], "105": 137, "299": [137, 144], "384": 137, "57": [137, 140], "824": 137, "662": 137, "717": [137, 140], "790": [137, 139, 140, 141], "889": [137, 141], "301": [137, 141], "799": [137, 144], "083": 137, "152": [137, 141], "254": 137, "420": 137, "758": [137, 139, 140, 141], "634": 137, "947": [137, 141], "994": [137, 139], "548": 137, "159": 137, "724": 137, "746": 137, "791": [137, 141], "884": [137, 141], "074": [137, 140], "128": [137, 141], "561": 137, "477": 137, "550": 137, "623": [137, 139, 140], "726": 137, "880": 137, "47": [137, 139, 140], "508": 137, "606": [137, 141], "838": 137, "944": [137, 141], "49": [137, 139, 140], "427": 137, "963": 137, "970": [137, 141], "008": [137, 140], "071": 137, "305": 137, "391": [137, 139], "555": 137, "444": 137, "649": [137, 138, 144], "063": 137, "119": [137, 141], "212": [137, 138], "397": 137, "467": 137, "678": [137, 141], "688": [137, 140, 143], "741": 137, "810": 137, "908": 137, "805": 137, "682": [137, 140], "730": 137, "816": 137, "094": [137, 140], "259": [137, 138], "547": 137, "066": 137, "138": 137, "clifford_qubits_": [137, 140], "176": [137, 141], "354": 137, "355": [137, 140], "390": 137, "459": 137, "591": 137, "592": 137, "644": 137, "_depth_255": [137, 140], "703": [137, 140], "767": [137, 141], "768": 137, "839": 137, "918": 137, "919": [137, 138], "007": [137, 140], "104": 137, "211": 137, "728": 137, "971": 137, "232": 137, "509": [137, 140], "151": 137, "498": 137, "862": 137, "248": 137, "249": 137, "654": 137, "142": 137, "143": 137, "085": 137, "626": [137, 141], "180": [137, 141], "732": 137, "733": 137, "923": 137, "interleaved_qubits_": [137, 140], "924": 137, "560": 137, "237": 137, "940": [137, 141], "447": [137, 144], "41": [137, 140, 141], "075": [137, 139], "076": 137, "42": [137, 140], "845": [137, 138, 140], "846": 137, "783": [137, 143], "784": [137, 140], "782": 137, "813": 137, "814": 137, "201": [137, 141], "202": 137, "378": 137, "379": 137, "909": 137, "910": 137, "284": 137, "658": 137, "111": [137, 143], "571": [137, 139], "572": [137, 138], "062": [137, 138], "021": [137, 143], "022": [137, 140], "735": 137, "736": 137, "546": [137, 140, 141], "09": [137, 138, 139, 140, 143], "361": 137, "362": 137, "330": [137, 141], "304": 137, "269": [137, 144], "471": 137, "596": [137, 140, 141], "842": [137, 140, 141], "086": 137, "642": [137, 138], "983": [137, 141], "460": 137, "result_irb_1q": [137, 140], "855": 137, "901": 137, "943": 137, "033": [137, 140, 143], "116": [137, 141], "161": 137, "206": [137, 140], "300": [137, 139], "344": 137, "433": 137, "519": 137, "603": 137, "686": 137, "727": 137, "769": 137, "853": 137, "936": 137, "978": 137, "019": 137, "106": 137, "191": [137, 139], "274": 137, "316": 137, "357": [137, 141], "440": [137, 140], "565": 137, "607": [137, 140], "774": 137, "858": 137, "941": 137, "030": 137, "072": 137, "114": 137, "156": 137, "197": [137, 140], "239": 137, "280": 137, "322": 137, "405": 137, "489": 137, "531": 137, "614": 137, "656": 137, "698": 137, "747": 137, "794": 137, "948": [137, 141], "061": 137, "110": 137, "157": [137, 140], "9987487631380596": 137, "9976446981909068": 137, "9966759568052321": 137, "993530034195362": 137, "9990404653517758": 137, "9981264795208118": 137, "9993022807449614": 137, "9986351324410088": 137, "9973448276409616": 137, "9955188886796882": 137, "252344351282814e": 137, "avg_gate_fidelity_clifford": [137, 140], "427765436266417e": 137, "311072136492597e": 137, "508513064336435e": 137, "00011479325016746003": 137, "00013605231315518148": 137, "126965739294625e": 137, "500976481016944e": 137, "726101631810375e": 137, "232463034652631e": 137, "example_irb_2q": [137, 140], "benchmark_irb_2q": [137, 140], "run_irb_2q": [137, 140], "921": 137, "001": [137, 139], "164": 137, "481": 137, "08": [137, 139, 140, 141], "367": 137, "937": 137, "095": [137, 140], "396": [137, 140], "026": 137, "620": 137, "765": [137, 140], "930": 137, "216": [137, 140], "738": 137, "729": 137, "674": 137, "965": 137, "264": [137, 141], "470": 137, "463": 137, "078": 137, "370": 137, "771": 137, "968": [137, 140], "140": 137, "441": [137, 140], "192": 137, "743": 137, "268": 137, "298": 137, "625": [137, 143], "461": 137, "009": 137, "991": [137, 140], "014": 137, "807": 137, "165": 137, "817": 137, "295": [137, 138], "464": 137, "721": 137, "398": 137, "581": 137, "714": 137, "689": 137, "801": 137, "912": [137, 144], "891": 137, "435": 137, "484": 137, "181": [137, 141], "194": 137, "451": 137, "290": [137, 140, 143], "955": 137, "359": 137, "096": [137, 141], "445": 137, "521": 137, "681": [137, 140], "628": 137, "214": [137, 141], "385": 137, "309": 137, "579": 137, "652": [137, 140, 141], "131": [137, 140], "168": [137, 140], "169": 137, "207": [137, 140], "208": [137, 140], "252": [137, 138, 143], "253": 137, "345": 137, "346": [137, 140], "457": 137, "523": [137, 141], "595": [137, 140], "676": [137, 141], "764": [137, 140], "863": 137, "969": 137, "088": [137, 143], "089": 137, "218": [137, 138], "360": [137, 144], "514": 137, "283": [137, 143], "034": [137, 140], "035": 137, "313": 137, "612": 137, "272": [137, 141], "637": [137, 144], "036": 137, "876": [137, 140], "877": [137, 140], "861": [137, 140], "365": [137, 141], "366": 137, "897": 137, "468": 137, "051": 137, "661": 137, "028": 137, "739": [137, 140], "740": [137, 140], "241": 137, "042": 137, "673": 137, "641": 137, "757": [137, 143], "866": 137, "005": [137, 138, 139, 140], "177": [137, 141], "178": 137, "431": 137, "result_irb_2q": [137, 140], "704": [137, 140], "795": 137, "888": 137, "070": 137, "101": 137, "223": [137, 140], "374": 137, "465": 137, "526": 137, "586": 137, "677": 137, "707": 137, "798": 137, "859": 137, "950": [137, 140], "981": [137, 140], "162": 137, "9742310809885095": 137, "9459834045099638": 137, "9702389918426017": 137, "9373183372682623": 137, "9829862612568532": 137, "9651704260970525": 137, "9600628980342876": 137, "9331175707494691": 137, "example_irb_iswap": [137, 140], "iswapg": [137, 140, 141, 148], "benchmark_irb_iswap": [137, 140], "run_irb_iswap": [137, 140], "567": 137, "751": [137, 140], "573": 137, "742": 137, "879": 137, "079": [137, 141], "954": [137, 140], "145": 137, "781": [137, 140, 143], "496": [137, 140], "725": 137, "408": [137, 139], "895": 137, "788": [137, 140], "513": 137, "517": 137, "087": 137, "773": [137, 140], "684": 137, "638": 137, "691": [137, 140], "204": [137, 140, 143], "339": [137, 140], "580": 137, "608": 137, "609": [137, 141], "336": [137, 138], "708": 137, "833": 137, "990": 137, "084": 137, "187": 137, "303": 137, "576": 137, "097": [137, 141], "530": [137, 140], "776": 137, "044": 137, "045": 137, "332": 137, "333": [137, 140], "984": 137, "985": 137, "result_irb_iswap": [137, 140], "796": 137, "902": 137, "073": 137, "115": 137, "136": 137, "179": 137, "221": 137, "296": [137, 141], "325": 137, "388": 137, "9296485294294863": 137, "9468865104887559": 137, "9168663709049512": 137, "9389212110918619": 137, "mirror_rb": [137, 141, 148], "example_mrb": [137, 141, 148], "benchmark_mrb": [137, 141], "run_mrb": [137, 141], "10x5": [137, 141], "64": [137, 141], "512": [137, 141], "090": [137, 140], "109": [137, 148], "775": 137, "802": 137, "779": [137, 139, 140], "533": 137, "246": [137, 142], "442": [137, 140], "369": 137, "491": [137, 140], "092": 137, "613": 137, "631": [137, 140], "692": [137, 140], "375": [137, 141], "723": 137, "878": 137, "266": 137, "123": 137, "_depth_2": [137, 141], "_depth_4": [137, 141], "_depth_8": [137, 141], "_depth_16": [137, 141], "_depth_32": [137, 141], "822": 137, "_depth_64": [137, 141], "_depth_128": [137, 141], "174": [137, 140], "_depth_256": [137, 141], "175": 137, "_depth_512": [137, 141], "515": 137, "720": 137, "219": 137, "857": 137, "242": 137, "243": [137, 144], "670": 137, "671": [137, 140], "147": [137, 141], "result_mrb": [137, 141], "706": [137, 140], "882": [137, 140], "962": 137, "067": [137, 140], "260": 137, "356": 137, "1600x1200": 137, "ax": 137, "all_qubit_layout": [137, 141], "key_mrb_plot": [137, 141], "example_qv": [137, 143, 144, 148], "run0_qv": [137, 143, 144], "iqmfakeadonisbackend": 137, "234": 137, "subbatch": [137, 143, 144], "562": 137, "588": 137, "093": 137, "023": 137, "434": 137, "587": 137, "result0_qv": [137, 143, 144], "413": [137, 141], "run1_qv": [137, 143, 144], "result1_qv": [137, 143, 144], "865": [137, 144], "213": 137, "800": [137, 139], "321": 137, "887": [137, 138, 141], "024": [137, 144], "155": 137, "516": 137, "247": 137, "278": 137, "347": 137, "265": 137, "358": 137, "453": [137, 143], "454": 137, "554": 137, "552": 137, "minimal_ghz": [137, 138], "745": [137, 140], "792": 137, "900": 137, "049": [137, 140], "238": 137, "306": 137, "423": 137, "8309361141069083": 137, "fidelity_rem": 137, "8897643257271268": 137, "example_qscor": [137, 142], "20_000": [137, 142], "999999": [137, 142], "4767": 137, "4900": 137, "6739": 137, "3733": 137, "6246": 137, "3894": 137, "4881": 137, "4714": 137, "4767012007999197": 137, "09979310484432205": 137, "is_succes": [137, 142, 143, 144], "qscore_result": [137, 142], "6738975057778192": 137, "07204344830310698": 137, "6246025280898877": 137, "04717318377784287": 137, "4881333882446109": 137, "04133470512287928": 137, "multipartit": 138, "One": [138, 143, 144], "larger": [138, 139], "suffici": 138, "leibfri": 138, "et": 138, "al": 138, "six": 138, "atom": 138, "schr\u00f6dinger": 138, "cat": 138, "natur": 138, "438": 138, "2005": 138, "offer": [138, 147], "verif": [138, 146, 148], "superconduct": 138, "phy": [138, 148], "commun": [138, 147], "095004": 138, "elben": 138, "statist": 138, "local": 138, "toolbox": 138, "probe": 138, "bodi": 138, "rev": [138, 148], "99": 138, "052323": 138, "ciruit": 138, "hadamrd": 138, "addit": [138, 139, 147, 148], "log_depth": 138, "cruz": 138, "yield": 138, "lower": [138, 139], "hous": 138, "reli": 138, "dai": 138, "thu": 138, "comparison": 138, "best": 138, "gme": 138, "prefer": [138, 147], "control": [138, 147], "whenev": 138, "mitgat": 138, "arang": 138, "For": [138, 139, 147, 148], "think": 138, "help": 138, "iqmfakeapollo": [138, 139], "scrambl": 138, "rerun": 138, "usual": 138, "readabl": [138, 147], "fake_backend": 138, "fake_apollo": 138, "209": 138, "759": 138, "760": 138, "823": 138, "233": 138, "597": [138, 141], "016": 138, "236": 138, "594": 138, "917": 138, "279": 138, "fidelitii": 138, "filter": 138, "descript": [138, 147], "l0": 138, "l1": 138, "enumer": [138, 139], "introduct": 139, "what": [139, 140], "background": 139, "journal": 139, "prxquantum": 139, "1103": 139, "010325": [139, 148], "compressive_gst": 139, "gstconfigur": 139, "compressivegst": 139, "iqmfakeadoni": 139, "gate_set": 139, "predefin": 139, "1qxyi": 139, "2qxycz": 139, "2qxycz_extend": 139, "3qxycz": 139, "2000": 139, "krau": 139, "reconstruct": 139, "rho": 139, "k_i": 139, "trigger": 139, "diamond": 139, "low": 139, "benefit": 139, "less": [139, 141], "captur": 139, "domin": 139, "sourc": [139, 146, 147], "bootstrap_sampl": 139, "bootstrap": 139, "trustworthi": 139, "veri": 139, "consum": 139, "minimal_1q_gst": 139, "minimal_2q_gst": 139, "Be": 139, "extra": 139, "871": 139, "20it": 139, "621": 139, "converg": 139, "criterion": 139, "53e": 139, "uncertaintit": 139, "restult": 139, "idl": 139, "qb1": 139, "99693": 139, "00703": 139, "unitar": 139, "98781": 139, "rx": 139, "99918": 139, "0013": 139, "99674": 139, "ry": 139, "99509": 139, "01332": 139, "98074": 139, "tvd": 139, "00698": 139, "03296": 139, "povm": 139, "dist": 139, "00601": 139, "04366": 139, "matric": 139, "results_layout_": 139, "dict_kei": 139, "raw_kraus_oper": 139, "raw_gat": 139, "raw_povm": 139, "raw_stat": 139, "gauge_opt_g": 139, "gauge_opt_gates_pauli_basi": 139, "gauge_opt_povm": 139, "gauge_opt_st": 139, "main_mgst_tim": 139, "gauge_optimization_tim": 139, "choi_ev": 139, "full_metr": 139, "save": 139, "raw": 139, "gaug": 139, "frame": 139, "3d": 139, "raw_result": 139, "array_str": 139, "precis": 139, "suppress_smal": 139, "995": 139, "002": [139, 140], "002j": 139, "003j": 139, "004j": 139, "998": 139, "These": 139, "diplai": 139, "disc": 139, "superoper": 139, "represent": 139, "sinlg": 139, "g_": 139, "ij": 139, "p_i": 139, "p_j": 139, "layout_": 139, "_gate_metr": 139, "_choi_eigenvalu": 139, "_other_metr": 139, "_process_matrix_0": 139, "_process_matrix_1": 139, "_process_matrix_2": 139, "_spam_matrices_r": 139, "_spam_matrices_imag": 139, "altern": 139, "ourselv": 139, "xyi": 139, "instruct": 139, "gate_list": 139, "1e": 139, "indentif": 139, "gate_label": 139, "\u03c0": [139, 144], "custom_1q_gst": 139, "verbos": 139, "806": [139, 143], "61": 139, "803": 139, "42e": 139, "008j": 139, "989": [139, 140], "001j": 139, "reson": [140, 148], "553": 140, "324": 140, "964": 140, "064": 140, "065": 140, "294": 140, "664": 140, "107": 140, "982": [140, 141], "058": 140, "538": 140, "120": 140, "121": 140, "146": 140, "522": [140, 141], "103": 140, "744": 140, "780": [140, 141, 143], "818": 140, "819": [140, 141], "133": [140, 141], "286": 140, "287": 140, "376": 140, "583": 140, "9975073376613797": 140, "9957157328789242": 140, "9976959612386156": 140, "9957310522299055": 140, "752861001879659e": 140, "028839025109517e": 140, "64196778583225e": 140, "243656712565855e": 140, "know": 140, "679": [140, 141], "118": 140, "820": 140, "915": 140, "577": 140, "148": 140, "874": 140, "951": 140, "205": 140, "380": 140, "381": 140, "485": 140, "685": 140, "9798030906041997": 140, "9431232937255942": 140, "9840858225184934": 140, "945382422883015": 140, "593": 140, "885": 140, "490": 140, "883": [140, 141], "038": 140, "215": [140, 141], "282": 140, "348": 140, "394": 140, "395": 140, "492": [140, 142], "675": [140, 142], "752": 140, "932": 140, "933": 140, "158": 140, "289": 140, "436": 140, "566": 140, "9344679810705316": 140, "9463377694591251": 140, "9267928870925659": 140, "943379008472002": 140, "892": 141, "125": 141, "589": 141, "646": 141, "702": 141, "244": 141, "996": 141, "598": 141, "867": 141, "117": 141, "271": 141, "448": 141, "449": 141, "150": 141, "450": 141, "605": 141, "184": 141, "342": 141, "343": 141, "422": 141, "134": 141, "456": 141, "529": 141, "attr_kei": [141, 143, 144], "depth_2": 141, "14302134513855": 141, "007565975189208984": 141, "06883907318115234": 141, "f8d9d789": 141, "0e9a": 141, "4086": 141, "ab36": 141, "685064a7b66": 141, "depth_4": 141, "0004930496215820312": 141, "0007040500640869141": 141, "87e367b7": 141, "c3ae": 141, "4457": 141, "8a2d": 141, "7b169c528033": 141, "depth_8": 141, "0004889965057373047": 141, "0005979537963867188": 141, "d84330c9": 141, "101f": 141, "40ff": 141, "bea8": 141, "f5e4c0b41527": 141, "depth_16": 141, "0004627704620361328": 141, "0006148815155029297": 141, "1f58b4a0": 141, "fb16": 141, "4d12": 141, "a9e8": 141, "c9263da52418": 141, "depth_32": 141, "00047278404235839844": 141, "0005419254302978516": 141, "4e43834b": 141, "5694": 141, "4c6d": 141, "8a83": 141, "796913d67e40": 141, "depth_64": 141, "000469207763671875": 141, "0005609989166259766": 141, "036e1dd": 141, "ca95": 141, "42a1": 141, "ab68": 141, "30a243f6b4ba": 141, "depth_128": 141, "0004668235778808594": 141, "0005328655242919922": 141, "13a59ca8": 141, "2ab0": 141, "4de8": 141, "a643": 141, "5b3f318f03d4": 141, "depth_256": 141, "0004749298095703125": 141, "e673defd": 141, "039c": 141, "4c37": 141, "9ef3": 141, "d4734436f39a": 141, "depth_512": 141, "0005099773406982422": 141, "0005548000335693359": 141, "d83ac439": 141, "2929": 141, "4d78": 141, "b52b": 141, "f297873c3e44": 141, "9710221314803044": 141, "001462493086363885": 141, "9473471466489307": 141, "00285118172031131": 141, "xxxxxxxxxxxxxx": 142, "run0_qscor": 142, "result0_qscor": 142, "6753": 142, "5900": 142, "7632": 142, "4559": 142, "302": 142, "7302": 142, "5398": 142, "5397": 142, "5741": 142, "6753267011332195": 142, "09818278368319852": 142, "7632430005250532": 142, "06217576573542597": 142, "7302089185393258": 142, "03519230997204089": 142, "5397277675240996": 142, "034709059407279114": 142, "210": 143, "217": 143, "032": 143, "082": 143, "rem_quasidistribut": [143, 144], "time_batch": [143, 144], "cumulative_average_heavy_output_prob": [143, 144], "cumulative_stddev_heavy_output_prob": [143, 144], "rem_cumulative_average_heavy_output_prob": [143, 144], "rem_cumulative_stddev_heavy_output_prob": [143, 144], "rem_heavy_output_prob": [143, 144], "60546875": 143, "71875": 143, "578125": 143, "74609375": 143, "6328125": 143, "546875": 143, "56640625": 143, "76953125": 143, "75390625": 143, "67578125": 143, "6171875": 143, "55078125": 143, "64453125": 143, "6875": 143, "7109375": 143, "82421875": 143, "76171875": 143, "6484375": 143, "6015625": 143, "73828125": 143, "63671875": 143, "69140625": 143, "61328125": 143, "734375": 143, "57421875": 143, "6953125": 143, "55859375": 143, "69921875": 143, "609375": 143, "671875": 143, "77734375": 143, "6796875": 143, "62890625": 143, "6640625": 143, "66796875": 143, "62109375": 143, "703125": 143, "68359375": 143, "58984375": 143, "71484375": 143, "59375": 143, "79296875": 143, "66015625": 143, "65234375": 143, "59765625": 143, "65625": 143, "84765625": 143, "5859375": 143, "5625": 143, "72265625": 143, "640625": 143, "58203125": 143, "54296875": 143, "8203125": 143, "78515625": 143, "7265625": 143, "53515625": 143, "5703125": 143, "5546875": 143, "5390625": 143, "828125": 143, "80859375": 143, "765625": 143, "81640625": 143, "5234375": 143, "75": 143, "73046875": 143, "87890625": 143, "7890625": 143, "7734375": 143, "7421875": 143, "70703125": 143, "50390625": 143, "7578125": 143, "52734375": 143, "78125": 143, "8125": 143, "average_heavy_output_prob": [143, 144], "649203125": 143, "021341903733745705": 143, "672703125": 143, "020984452845629994": 143, "rem_average_heavy_output_prob": [143, 144], "67954478782619": 143, "020869291754367154": 143, "rem_is_succes": [143, 144], "rem_qv_result": [143, 144], "710149650958595": 143, "020289757228807877": 143, "vanilla_4_qubits_": [143, 144], "vanilla_rem_4_qubits_": 143, "Or": [143, 144], "onc": [143, 144, 148], "668": 144, "pedrofigueroaromero": 144, "anaconda3": 144, "env": 144, "lib": 144, "site": 144, "170": 144, "userwarn": 144, "unknown": 144, "unknown_opt": 144, "190": 144, "server": 144, "e48420cb": 144, "30dc": 144, "4274": 144, "9d7d": 144, "e5fffa68f73a": 144, "7404ae11": 144, "823a": 144, "4e66": 144, "b2c4": 144, "41361cf10c69": 144, "untranspiled_circuit": 144, "q_0": 144, "q_1": 144, "q_2": 144, "mea": 144, "48526": 144, "79781": 144, "58665": 144, "3705": 144, "1471": 144, "1775": 144, "1521": 144, "q_3": 144, "q_4": 144, "73475": 144, "1344": 144, "q_5": 144, "q_6": 144, "30103": 144, "7711": 144, "273": 144, "3108": 144, "6909": 144, "6665": 144, "65249": 144, "8837": 144, "24328": 144, "3169": 144, "6809": 144, "71478125": 144, "020192524094250205": 144, "7261292473074281": 144, "019943197512544274": 144, "vanilla_3_qubits_": 144, "vanilla_rem_3_qubits_": 144, "collect": 145, "demonstr": 145, "variou": 145, "rest": 145, "summari": [145, 146], "tomographi": [145, 146, 148], "releas": 146, "date": [146, 147], "finland": 146, "tool": [146, 148], "changelog": 146, "search": 146, "page": [146, 147], "januari": 147, "2004": 147, "AND": 147, "FOR": 147, "reproduct": 147, "shall": 147, "licensor": 147, "owner": 147, "entiti": 147, "author": 147, "grant": 147, "legal": 147, "power": 147, "direct": 147, "indirect": 147, "caus": 147, "contract": 147, "ownership": 147, "fifti": 147, "percent": 147, "outstand": 147, "iii": 147, "benefici": 147, "exercis": 147, "file": [147, 148], "mechan": 147, "transform": 147, "translat": 147, "convers": 147, "media": 147, "authorship": 147, "attach": 147, "appendix": 147, "editori": 147, "revis": 147, "elabor": 147, "whole": 147, "remain": 147, "mere": 147, "link": 147, "bind": 147, "interfac": 147, "thereof": 147, "contribut": 147, "intention": 147, "inclus": 147, "behalf": 147, "electron": 147, "verbal": 147, "mail": 147, "issu": 147, "track": 147, "discuss": 147, "exclud": 147, "conspicu": 147, "mark": 147, "Not": 147, "contributor": 147, "whom": 147, "been": 147, "receiv": 147, "incorpor": 147, "subject": 147, "herebi": 147, "perpetu": 147, "worldwid": 147, "charg": 147, "royalti": 147, "free": 147, "irrevoc": 147, "reproduc": 147, "publicli": 147, "sublicens": 147, "patent": 147, "sell": 147, "transfer": 147, "claim": 147, "necessarili": 147, "infring": 147, "alon": 147, "institut": 147, "litig": 147, "counterclaim": 147, "lawsuit": 147, "alleg": 147, "contributori": 147, "termin": [147, 148], "redistribut": 147, "medium": 147, "meet": 147, "recipi": 147, "carri": 147, "promin": 147, "retain": 147, "trademark": 147, "pertain": 147, "along": 147, "wherev": 147, "third": 147, "parti": 147, "normal": 147, "appear": 147, "content": 147, "alongsid": 147, "addendum": 147, "constru": 147, "compli": 147, "explicitli": 147, "notwithstand": 147, "noth": 147, "herein": 147, "supersed": 147, "agreement": 147, "regard": 147, "trade": 147, "servic": [147, 148], "reason": 147, "customari": 147, "describ": 147, "disclaim": 147, "merchant": 147, "particular": 147, "respons": 147, "appropri": 147, "risk": 147, "liabil": 147, "event": 147, "tort": 147, "neglig": 147, "deliber": [147, 148], "grossli": 147, "liabl": 147, "damag": 147, "special": 147, "incident": 147, "consequenti": 147, "charact": 147, "aris": 147, "inabl": 147, "loss": 147, "goodwil": 147, "stoppag": 147, "failur": 147, "malfunct": 147, "commerci": 147, "even": 147, "advis": 147, "fee": 147, "indemn": 147, "oblig": 147, "indemnifi": 147, "defend": 147, "hold": 147, "harmless": 147, "incur": 147, "assert": 147, "boilerpl": 147, "enclos": 147, "bracket": 147, "don": 147, "t": 147, "comment": 147, "syntax": 147, "easier": 147, "archiv": 147, "repositori": [147, 148], "licenc": 147, "src": 147, "raphael": 147, "brieger": 147, "ingo": 147, "roth": 147, "martin": 147, "kliesch": 147, "comprehens": 148, "modular": 148, "easi": 148, "command": 148, "042311": 148, "lett": 148, "080505": 148, "prx": 148, "2023": 148, "129": 148, "150502": 148, "2022": 148, "holist": 148, "032328": 148, "0712": 148, "0921": 148, "2007": 148, "ieee": 148, "tran": 148, "eng": 148, "split": 148, "legaci": 148, "wrap": 148, "benchmarkexperi": 148, "handl": 148, "uv": 148, "highli": 148, "practic": 148, "With": 148, "machin": 148, "venv": 148, "read": 148, "prompt": 148, "suppli": 148, "txt": 148, "lock": 148, "directli": 148, "repo": 148, "pypi": 148, "lint": 148, "cicd": 148, "clone": 148, "directori": 148, "docbuild": 148, "pyproject": 148, "toml": 148, "commit": 148, "upgrad": 148, "transit": 148, "automat": 148, "cloud": 148, "prem": 148, "platform": 148, "authent": 148, "your_token": 148, "example_irb": 148, "example_experi": 148, "setup": 148, "weekli": 148, "daili": 148, "gitlab": 148, "scheduled_experi": 148}, "objects": {"iqm": [[1, 0, 0, "-", "benchmarks"]], "iqm.benchmarks": [[2, 0, 0, "-", "benchmark"], [5, 0, 0, "-", "benchmark_definition"], [15, 0, 0, "-", "circuit_containers"], [19, 0, 0, "-", "entanglement"], [34, 0, 0, "-", "logging_config"], [35, 0, 0, "-", "optimization"], [48, 0, 0, "-", "quantum_volume"], [67, 0, 0, "-", "randomized_benchmarking"], [111, 0, 0, "-", "readout_mitigation"], [115, 0, 0, "-", "utils"]], "iqm.benchmarks.benchmark": [[3, 1, 1, "", "BenchmarkBase"], [4, 1, 1, "", "BenchmarkConfigurationBase"]], "iqm.benchmarks.benchmark.BenchmarkBase": [[3, 2, 1, "", "check_requirements"], [3, 2, 1, "", "execute_full_benchmark"], [3, 2, 1, "", "generate_requirements"], [3, 2, 1, "", "name"]], "iqm.benchmarks.benchmark.BenchmarkConfigurationBase": [[4, 3, 1, "", "benchmark"], [4, 3, 1, "", "calset_id"], [4, 3, 1, "", "max_gates_per_batch"], [4, 3, 1, "", "model_computed_fields"], [4, 3, 1, "", "model_config"], [4, 3, 1, "", "model_fields"], [4, 3, 1, "", "physical_layout"], [4, 3, 1, "", "routing_method"], [4, 3, 1, "", "shots"]], "iqm.benchmarks.benchmark_definition": [[6, 1, 1, "", "Benchmark"], [7, 1, 1, "", "BenchmarkAnalysisResult"], [8, 1, 1, "", "BenchmarkObservation"], [9, 1, 1, "", "BenchmarkObservationIdentifier"], [10, 1, 1, "", "BenchmarkRunResult"], [11, 5, 1, "", "add_counts_to_dataset"], [12, 5, 1, "", "default_analysis_function"], [13, 5, 1, "", "merge_datasets_dac"], [14, 5, 1, "", "show_figure"]], "iqm.benchmarks.benchmark_definition.Benchmark": [[6, 2, 1, "", "analysis_function"], [6, 2, 1, "", "analyze"], [6, 2, 1, "", "execute"], [6, 2, 1, "", "name"], [6, 2, 1, "", "run"]], "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult": [[7, 2, 1, "", "from_run_result"], [7, 2, 1, "", "plot"], [7, 2, 1, "", "plot_all"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservation": [[8, 3, 1, "", "identifier"], [8, 3, 1, "", "name"], [8, 3, 1, "", "uncertainty"], [8, 3, 1, "", "value"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier": [[9, 3, 1, "", "qubit_indices"], [9, 4, 1, "", "string_identifier"]], "iqm.benchmarks.circuit_containers": [[16, 1, 1, "", "BenchmarkCircuit"], [17, 1, 1, "", "CircuitGroup"], [18, 1, 1, "", "Circuits"]], "iqm.benchmarks.circuit_containers.BenchmarkCircuit": [[16, 3, 1, "", "circuit_groups"], [16, 2, 1, "", "get_circuit_group_by_name"], [16, 4, 1, "", "group_names"], [16, 4, 1, "", "groups"], [16, 3, 1, "", "name"], [16, 4, 1, "", "qubit_indices"], [16, 4, 1, "", "qubit_layouts"], [16, 4, 1, "", "qubit_layouts_by_index"], [16, 4, 1, "", "qubits"]], "iqm.benchmarks.circuit_containers.CircuitGroup": [[17, 2, 1, "", "add_circuit"], [17, 4, 1, "", "circuit_names"], [17, 3, 1, "", "circuits"], [17, 2, 1, "", "get_circuits_by_name"], [17, 3, 1, "", "name"], [17, 4, 1, "", "qubit_layouts"], [17, 4, 1, "", "qubit_layouts_by_index"], [17, 4, 1, "", "qubits"]], "iqm.benchmarks.circuit_containers.Circuits": [[18, 3, 1, "", "benchmark_circuits"], [18, 2, 1, "", "get_benchmark_circuits_by_name"]], "iqm.benchmarks.entanglement": [[20, 0, 0, "-", "ghz"]], "iqm.benchmarks.entanglement.ghz": [[21, 1, 1, "", "GHZBenchmark"], [22, 1, 1, "", "GHZConfiguration"], [23, 5, 1, "", "extract_fidelities"], [24, 5, 1, "", "fidelity_analysis"], [25, 5, 1, "", "fidelity_ghz_coherences"], [26, 5, 1, "", "fidelity_ghz_randomized_measurements"], [27, 5, 1, "", "generate_ghz_linear"], [28, 5, 1, "", "generate_ghz_log_cruz"], [29, 5, 1, "", "generate_ghz_log_mooney"], [30, 5, 1, "", "generate_ghz_spanning_tree"], [31, 5, 1, "", "get_cx_map"], [32, 5, 1, "", "get_edges"], [33, 5, 1, "", "plot_fidelities"]], "iqm.benchmarks.entanglement.ghz.GHZBenchmark": [[21, 2, 1, "", "add_configuration_to_dataset"], [21, 2, 1, "", "analysis_function"], [21, 2, 1, "", "append_rms"], [21, 2, 1, "", "execute"], [21, 2, 1, "", "generate_coherence_meas_circuits"], [21, 2, 1, "", "generate_native_ghz"], [21, 2, 1, "", "generate_readout_circuit"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration": [[22, 3, 1, "", "benchmark"], [22, 3, 1, "", "cal_url"], [22, 3, 1, "", "custom_qubits_array"], [22, 3, 1, "", "fidelity_routine"], [22, 3, 1, "", "mit_shots"], [22, 3, 1, "", "model_computed_fields"], [22, 3, 1, "", "model_config"], [22, 3, 1, "", "model_fields"], [22, 3, 1, "", "num_RMs"], [22, 3, 1, "", "optimize_sqg"], [22, 3, 1, "", "qiskit_optim_level"], [22, 3, 1, "", "qubit_counts"], [22, 3, 1, "", "rem"], [22, 3, 1, "", "state_generation_routine"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration.iqm.qiskit_iqm.iqm_transpilation": [[22, 3, 1, "", "optimize_single_qubit_gates"]], "iqm.benchmarks.optimization": [[36, 0, 0, "-", "qscore"]], "iqm.benchmarks.optimization.qscore": [[37, 1, 1, "", "QScoreBenchmark"], [38, 1, 1, "", "QScoreConfiguration"], [39, 5, 1, "", "calculate_optimal_angles_for_QAOA_p1"], [40, 5, 1, "", "compute_expectation_value"], [41, 5, 1, "", "create_objective_function"], [42, 5, 1, "", "cut_cost_function"], [43, 5, 1, "", "get_optimal_angles"], [44, 5, 1, "", "is_successful"], [45, 5, 1, "", "plot_approximation_ratios"], [46, 5, 1, "", "qscore_analysis"], [47, 5, 1, "", "run_QAOA"]], "iqm.benchmarks.optimization.qscore.QScoreBenchmark": [[37, 2, 1, "", "add_all_meta_to_dataset"], [37, 2, 1, "", "analysis_function"], [37, 2, 1, "", "choose_qubits_custom"], [37, 2, 1, "", "choose_qubits_naive"], [37, 2, 1, "", "execute"], [37, 2, 1, "", "generate_maxcut_ansatz"]], "iqm.benchmarks.optimization.qscore.QScoreConfiguration": [[38, 3, 1, "", "benchmark"], [38, 3, 1, "", "choose_qubits_routine"], [38, 3, 1, "", "custom_qubits_array"], [38, 3, 1, "", "max_num_nodes"], [38, 3, 1, "", "min_num_nodes"], [38, 3, 1, "", "min_num_qubits"], [38, 3, 1, "", "model_computed_fields"], [38, 3, 1, "", "model_config"], [38, 3, 1, "", "model_fields"], [38, 3, 1, "", "num_instances"], [38, 3, 1, "", "num_qaoa_layers"], [38, 3, 1, "", "optimize_sqg"], [38, 3, 1, "", "qiskit_optim_level"], [38, 3, 1, "", "seed"], [38, 3, 1, "", "use_classically_optimized_angles"], [38, 3, 1, "", "use_virtual_node"]], "iqm.benchmarks.quantum_volume": [[49, 0, 0, "-", "clops"], [55, 0, 0, "-", "quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[50, 1, 1, "", "CLOPSBenchmark"], [51, 1, 1, "", "CLOPSConfiguration"], [52, 5, 1, "", "clops_analysis"], [53, 5, 1, "", "plot_times"], [54, 5, 1, "", "retrieve_clops_elapsed_times"]], "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark": [[50, 2, 1, "", "add_all_meta_to_dataset"], [50, 2, 1, "", "analysis_function"], [50, 2, 1, "", "append_parameterized_unitary"], [50, 2, 1, "", "assign_random_parameters_to_all"], [50, 2, 1, "", "clops_cycle"], [50, 2, 1, "", "execute"], [50, 2, 1, "", "generate_circuit_list"], [50, 2, 1, "", "generate_random_parameters"], [50, 2, 1, "", "generate_single_circuit"], [50, 2, 1, "", "generate_transpiled_clops_templates"]], "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration": [[51, 3, 1, "", "benchmark"], [51, 3, 1, "", "clops_h_bool"], [51, 3, 1, "", "model_computed_fields"], [51, 3, 1, "", "model_config"], [51, 3, 1, "", "model_fields"], [51, 3, 1, "", "num_circuits"], [51, 3, 1, "", "num_shots"], [51, 3, 1, "", "num_updates"], [51, 3, 1, "", "optimize_sqg"], [51, 3, 1, "", "physical_layout"], [51, 3, 1, "", "qiskit_optim_level"], [51, 3, 1, "", "qubits"], [51, 3, 1, "", "routing_method"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[56, 1, 1, "", "QuantumVolumeBenchmark"], [57, 1, 1, "", "QuantumVolumeConfiguration"], [58, 5, 1, "", "compute_heavy_output_probabilities"], [59, 5, 1, "", "cumulative_hop"], [60, 5, 1, "", "cumulative_std"], [61, 5, 1, "", "get_ideal_heavy_outputs"], [62, 5, 1, "", "get_rem_hops"], [63, 5, 1, "", "heavy_projector"], [64, 5, 1, "", "is_successful"], [65, 5, 1, "", "plot_hop_threshold"], [66, 5, 1, "", "qv_analysis"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark": [[56, 2, 1, "", "add_all_circuits_to_dataset"], [56, 2, 1, "", "add_all_meta_to_dataset"], [56, 2, 1, "", "analysis_function"], [56, 2, 1, "", "execute"], [56, 2, 1, "", "generate_circuit_list"], [56, 2, 1, "", "generate_single_circuit"], [56, 2, 1, "", "get_rem_quasidistro"], [56, 2, 1, "", "submit_single_qv_job"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration": [[57, 3, 1, "", "benchmark"], [57, 3, 1, "", "choose_qubits_routine"], [57, 3, 1, "", "custom_qubits_array"], [57, 3, 1, "", "mit_shots"], [57, 3, 1, "", "model_computed_fields"], [57, 3, 1, "", "model_config"], [57, 3, 1, "", "model_fields"], [57, 3, 1, "", "num_circuits"], [57, 3, 1, "", "num_sigmas"], [57, 3, 1, "", "optimize_sqg"], [57, 3, 1, "", "physical_layout"], [57, 3, 1, "", "qiskit_optim_level"], [57, 3, 1, "", "rem"], [57, 3, 1, "", "routing_method"]], "iqm.benchmarks.randomized_benchmarking": [[68, 0, 0, "-", "clifford_rb"], [73, 0, 0, "-", "interleaved_rb"], [78, 0, 0, "-", "mirror_rb"], [88, 0, 0, "-", "multi_lmfit"], [93, 0, 0, "-", "randomized_benchmarking_common"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[69, 0, 0, "-", "clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[70, 1, 1, "", "CliffordRBConfiguration"], [71, 1, 1, "", "CliffordRandomizedBenchmarking"], [72, 5, 1, "", "clifford_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration": [[70, 3, 1, "", "benchmark"], [70, 3, 1, "", "model_computed_fields"], [70, 3, 1, "", "model_config"], [70, 3, 1, "", "model_fields"], [70, 3, 1, "", "num_circuit_samples"], [70, 3, 1, "", "parallel_execution"], [70, 3, 1, "", "qubits_array"], [70, 3, 1, "", "sequence_lengths"], [70, 3, 1, "", "shots"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking": [[71, 2, 1, "", "add_all_circuits_to_dataset"], [71, 2, 1, "", "add_all_metadata_to_dataset"], [71, 2, 1, "", "analysis_function"], [71, 2, 1, "", "execute"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[74, 0, 0, "-", "interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[75, 1, 1, "", "InterleavedRBConfiguration"], [76, 1, 1, "", "InterleavedRandomizedBenchmarking"], [77, 5, 1, "", "interleaved_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration": [[75, 3, 1, "", "interleaved_gate"], [75, 3, 1, "", "interleaved_gate_params"], [75, 3, 1, "", "model_computed_fields"], [75, 3, 1, "", "model_config"], [75, 3, 1, "", "model_fields"], [75, 3, 1, "", "num_circuit_samples"], [75, 3, 1, "", "parallel_execution"], [75, 3, 1, "", "qubits_array"], [75, 3, 1, "", "sequence_lengths"], [75, 3, 1, "", "shots"], [75, 3, 1, "", "simultaneous_fit"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking": [[76, 2, 1, "", "add_all_circuits_to_dataset"], [76, 2, 1, "", "add_all_meta_to_dataset"], [76, 2, 1, "", "analysis_function"], [76, 2, 1, "", "execute"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[79, 0, 0, "-", "mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[80, 1, 1, "", "MirrorRBConfiguration"], [81, 1, 1, "", "MirrorRandomizedBenchmarking"], [82, 5, 1, "", "compute_polarizations"], [83, 5, 1, "", "edge_grab"], [84, 5, 1, "", "generate_fixed_depth_mrb_circuits"], [85, 5, 1, "", "generate_pauli_dressed_mrb_circuits"], [86, 5, 1, "", "list_to_numcircuit_times_numpauli_matrix"], [87, 5, 1, "", "mrb_analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration": [[80, 3, 1, "", "benchmark"], [80, 3, 1, "", "density_2q_gates"], [80, 3, 1, "", "depths_array"], [80, 3, 1, "", "model_computed_fields"], [80, 3, 1, "", "model_config"], [80, 3, 1, "", "model_fields"], [80, 3, 1, "", "num_circuit_samples"], [80, 3, 1, "", "num_pauli_samples"], [80, 3, 1, "", "qiskit_optim_level"], [80, 3, 1, "", "qubits_array"], [80, 3, 1, "", "routing_method"], [80, 3, 1, "", "shots"], [80, 3, 1, "", "two_qubit_gate_ensemble"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking": [[81, 2, 1, "", "add_all_meta_to_dataset"], [81, 2, 1, "", "analysis_function"], [81, 2, 1, "", "execute"], [81, 2, 1, "", "submit_single_mrb_job"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[89, 5, 1, "", "create_multi_dataset_params"], [90, 5, 1, "", "eval_func_single_dataset"], [91, 5, 1, "", "get_param_names_from_func_signature"], [92, 5, 1, "", "multi_dataset_residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[94, 5, 1, "", "compute_inverse_clifford"], [95, 5, 1, "", "estimate_survival_probabilities"], [96, 5, 1, "", "exponential_rb"], [97, 5, 1, "", "fit_decay_lmfit"], [98, 5, 1, "", "generate_all_rb_circuits"], [99, 5, 1, "", "generate_fixed_depth_parallel_rb_circuits"], [100, 5, 1, "", "generate_random_clifford_seq_circuits"], [101, 5, 1, "", "get_survival_probabilities"], [102, 5, 1, "", "import_native_gate_cliffords"], [103, 5, 1, "", "lmfit_minimizer"], [104, 5, 1, "", "plot_rb_decay"], [105, 5, 1, "", "relabel_qubits_array_from_zero"], [106, 5, 1, "", "submit_parallel_rb_job"], [107, 5, 1, "", "submit_sequential_rb_jobs"], [108, 5, 1, "", "survival_probabilities_parallel"], [109, 5, 1, "", "validate_irb_gate"], [110, 5, 1, "", "validate_rb_qubits"]], "iqm.benchmarks.readout_mitigation": [[112, 1, 1, "", "M3IQM"], [113, 5, 1, "", "apply_readout_error_mitigation"], [114, 5, 1, "", "readout_error_m3"]], "iqm.benchmarks.readout_mitigation.M3IQM": [[112, 2, 1, "", "cals_from_system"]], "iqm.benchmarks.utils": [[116, 5, 1, "", "count_2q_layers"], [117, 5, 1, "", "count_native_gates"], [118, 5, 1, "", "get_iqm_backend"], [119, 5, 1, "", "marginal_distribution"], [120, 5, 1, "", "perform_backend_transpilation"], [121, 5, 1, "", "reduce_to_active_qubits"], [122, 5, 1, "", "retrieve_all_counts"], [123, 5, 1, "", "retrieve_all_job_metadata"], [124, 5, 1, "", "set_coupling_map"], [125, 5, 1, "", "sort_batches_by_final_layout"], [126, 5, 1, "", "submit_execute"], [127, 5, 1, "", "timeit"], [128, 5, 1, "", "xrvariable_to_counts"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": 0, "iqm": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 134, 135, 136, 137, 141, 142, 143, 144, 146, 148], "benchmark": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 134, 135, 136, 137, 138, 140, 141, 146, 148], "benchmarkbas": 3, "benchmarkconfigurationbas": 4, "benchmark_definit": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "benchmarkanalysisresult": 7, "benchmarkobserv": 8, "benchmarkobservationidentifi": 9, "benchmarkrunresult": 10, "add_counts_to_dataset": 11, "default_analysis_funct": 12, "merge_datasets_dac": 13, "show_figur": 14, "circuit_contain": [15, 16, 17, 18], "benchmarkcircuit": 16, "circuitgroup": 17, "circuit": [18, 134, 136, 144], "entangl": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "ghz": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 134, 137, 138], "ghzbenchmark": 21, "ghzconfigur": 22, "extract_fidel": 23, "fidelity_analysi": 24, "fidelity_ghz_coher": 25, "fidelity_ghz_randomized_measur": 26, "generate_ghz_linear": 27, "generate_ghz_log_cruz": 28, "generate_ghz_log_moonei": 29, "generate_ghz_spanning_tre": 30, "get_cx_map": 31, "get_edg": 32, "plot_fidel": 33, "logging_config": 34, "optim": [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "qscore": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 137, 142], "qscorebenchmark": 37, "qscoreconfigur": 38, "calculate_optimal_angles_for_qaoa_p1": 39, "compute_expectation_valu": 40, "create_objective_funct": 41, "cut_cost_funct": 42, "get_optimal_angl": 43, "is_success": [44, 64], "plot_approximation_ratio": 45, "qscore_analysi": 46, "run_qaoa": 47, "quantum_volum": [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "clop": [49, 50, 51, 52, 53, 54, 134, 136, 137], "clopsbenchmark": 50, "clopsconfigur": 51, "clops_analysi": 52, "plot_tim": 53, "retrieve_clops_elapsed_tim": 54, "quantumvolumebenchmark": 56, "quantumvolumeconfigur": 57, "compute_heavy_output_prob": 58, "cumulative_hop": 59, "cumulative_std": 60, "get_ideal_heavy_output": 61, "get_rem_hop": 62, "heavy_projector": 63, "plot_hop_threshold": 65, "qv_analysi": 66, "randomized_benchmark": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110], "clifford_rb": [68, 69, 70, 71, 72], "cliffordrbconfigur": 70, "cliffordrandomizedbenchmark": 71, "clifford_rb_analysi": 72, "interleaved_rb": [73, 74, 75, 76, 77], "interleavedrbconfigur": 75, "interleavedrandomizedbenchmark": 76, "interleaved_rb_analysi": 77, "mirror_rb": [78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "mirrorrbconfigur": 80, "mirrorrandomizedbenchmark": 81, "compute_polar": 82, "edge_grab": 83, "generate_fixed_depth_mrb_circuit": 84, "generate_pauli_dressed_mrb_circuit": 85, "list_to_numcircuit_times_numpauli_matrix": 86, "mrb_analysi": 87, "multi_lmfit": [88, 89, 90, 91, 92], "create_multi_dataset_param": 89, "eval_func_single_dataset": 90, "get_param_names_from_func_signatur": 91, "multi_dataset_residu": 92, "randomized_benchmarking_common": [93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110], "compute_inverse_clifford": 94, "estimate_survival_prob": 95, "exponential_rb": 96, "fit_decay_lmfit": 97, "generate_all_rb_circuit": 98, "generate_fixed_depth_parallel_rb_circuit": 99, "generate_random_clifford_seq_circuit": 100, "get_survival_prob": 101, "import_native_gate_clifford": 102, "lmfit_minim": 103, "plot_rb_decai": 104, "relabel_qubits_array_from_zero": 105, "submit_parallel_rb_job": 106, "submit_sequential_rb_job": 107, "survival_probabilities_parallel": 108, "validate_irb_g": 109, "validate_rb_qubit": 110, "readout_mitig": [111, 112, 113, 114], "m3iqm": 112, "apply_readout_error_mitig": 113, "readout_error_m3": 114, "util": [115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128], "count_2q_lay": 116, "count_native_g": 117, "get_iqm_backend": 118, "marginal_distribut": 119, "perform_backend_transpil": 120, "reduce_to_active_qubit": 121, "retrieve_all_count": 122, "retrieve_all_job_metadata": 123, "set_coupling_map": 124, "sort_batches_by_final_layout": 125, "submit_execut": 126, "timeit": 127, "xrvariable_to_count": 128, "changelog": 129, "version": 129, "2": [129, 131], "14": 129, "13": 129, "12": 129, "11": 129, "10": 129, "9": 129, "8": 129, "7": 129, "6": 129, "5": 129, "4": 129, "3": 129, "1": 129, "0": 129, "develop": [130, 148], "qubit": 131, "clifford": [131, 134, 135, 137], "group": 131, "decomposit": 131, "gener": [131, 136, 141, 143, 144], "1q": [131, 140], "2q": [131, 140], "dump": 131, "pickl": 131, "file": 131, "load": 131, "count": 131, "element": 131, "A": 131, "wai": 131, "work": 131, "out": [131, 139], "invers": 131, "sequenc": 131, "design": 131, "condit": 131, "how": 132, "make": 132, "your": 132, "own": 132, "devic": 133, "spark": 134, "connect": 134, "backend": [134, 135, 136, 137, 139, 140, 141, 142, 143, 144], "state": [134, 137, 138], "fidel": [134, 137, 138], "quantum": [134, 137, 143, 144], "volum": [134, 137, 143, 144], "layer": [134, 136], "oper": [134, 136], "per": [134, 136], "second": [134, 136], "random": [134, 135, 137, 140, 141], "interleav": [134, 137, 140], "irb": [134, 140], "q": [134, 142], "score": [134, 142], "summari": [134, 137], "rb": [135, 141], "choos": [135, 136, 137, 139, 140, 141, 142, 143, 144], "defin": [135, 136, 137, 139, 140, 141, 142, 143], "set": [135, 136, 137, 139, 141, 142, 143, 144], "token": [135, 136, 137, 141, 142, 143, 144], "us": [135, 136, 137, 141, 142, 143, 144, 148], "reson": [135, 136, 137, 141, 142, 143, 144], "configur": [135, 136, 138, 139, 140, 141, 142, 143, 144], "run": [135, 136, 138, 140, 141, 142, 143, 144], "experi": [135, 136, 139, 140, 141, 142, 143, 144], "perform": [135, 136, 142, 143, 144], "analysi": [135, 136, 142, 143, 144], "list": [136, 141], "all": [136, 139, 141], "kei": [136, 141], "attribut": [136, 141], "dataset": [136, 141], "The": [136, 141], "observ": [136, 139, 141], "object": [136, 141], "contain": [136, 141], "result": [136, 138, 139, 140, 141], "plot": [136, 139, 141, 143, 144], "notebook": [137, 148], "mirror": [137, 141], "greenberg": 138, "horn": 138, "zeiling": 138, "definit": 138, "access": [138, 139], "compress": 139, "gate": [139, 140], "tomographi": 139, "gst": 139, "minim": 139, "execut": 139, "": 139, "examin": 139, "high": 139, "level": 139, "store": 139, "final": 139, "estim": 139, "further": 139, "process": 139, "creat": 139, "custom": 139, "check": 139, "matrix": 139, "correspond": 139, "pi": 139, "rotat": 139, "around": 139, "y": 139, "axi": 139, "analyz": [140, 141], "non": 140, "nativ": 140, "mrb": 141, "qv": [143, 144], "deneb": 144, "inspect": 144, "exampl": 145, "content": 146, "indic": 146, "tabl": 146, "licens": 147, "instal": 148, "latest": 148, "releas": 148, "option": 148, "depend": 148, "chang": 148, "character": 148, "physic": 148, "hardwar": 148, "jupyt": 148, "python": 148, "script": 148, "schedul": 148, "ci": 148, "cd": 148, "pipelin": 148}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"API Reference": [[0, "api-reference"]], "iqm.benchmarks": [[1, "module-iqm.benchmarks"]], "iqm.benchmarks.benchmark": [[2, "module-iqm.benchmarks.benchmark"]], "iqm.benchmarks.benchmark.BenchmarkBase": [[3, "iqm-benchmarks-benchmark-benchmarkbase"]], "iqm.benchmarks.benchmark.BenchmarkConfigurationBase": [[4, "iqm-benchmarks-benchmark-benchmarkconfigurationbase"]], "iqm.benchmarks.benchmark_definition": [[5, "module-iqm.benchmarks.benchmark_definition"]], "iqm.benchmarks.benchmark_definition.Benchmark": [[6, "iqm-benchmarks-benchmark-definition-benchmark"]], "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult": [[7, "iqm-benchmarks-benchmark-definition-benchmarkanalysisresult"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservation": [[8, "iqm-benchmarks-benchmark-definition-benchmarkobservation"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier": [[9, "iqm-benchmarks-benchmark-definition-benchmarkobservationidentifier"]], "iqm.benchmarks.benchmark_definition.BenchmarkRunResult": [[10, "iqm-benchmarks-benchmark-definition-benchmarkrunresult"]], "iqm.benchmarks.benchmark_definition.add_counts_to_dataset": [[11, "iqm-benchmarks-benchmark-definition-add-counts-to-dataset"]], "iqm.benchmarks.benchmark_definition.default_analysis_function": [[12, "iqm-benchmarks-benchmark-definition-default-analysis-function"]], "iqm.benchmarks.benchmark_definition.merge_datasets_dac": [[13, "iqm-benchmarks-benchmark-definition-merge-datasets-dac"]], "iqm.benchmarks.benchmark_definition.show_figure": [[14, "iqm-benchmarks-benchmark-definition-show-figure"]], "iqm.benchmarks.circuit_containers": [[15, "module-iqm.benchmarks.circuit_containers"]], "iqm.benchmarks.circuit_containers.BenchmarkCircuit": [[16, "iqm-benchmarks-circuit-containers-benchmarkcircuit"]], "iqm.benchmarks.circuit_containers.CircuitGroup": [[17, "iqm-benchmarks-circuit-containers-circuitgroup"]], "iqm.benchmarks.circuit_containers.Circuits": [[18, "iqm-benchmarks-circuit-containers-circuits"]], "iqm.benchmarks.entanglement": [[19, "module-iqm.benchmarks.entanglement"]], "iqm.benchmarks.entanglement.ghz": [[20, "module-iqm.benchmarks.entanglement.ghz"]], "iqm.benchmarks.entanglement.ghz.GHZBenchmark": [[21, "iqm-benchmarks-entanglement-ghz-ghzbenchmark"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration": [[22, "iqm-benchmarks-entanglement-ghz-ghzconfiguration"]], "iqm.benchmarks.entanglement.ghz.extract_fidelities": [[23, "iqm-benchmarks-entanglement-ghz-extract-fidelities"]], "iqm.benchmarks.entanglement.ghz.fidelity_analysis": [[24, "iqm-benchmarks-entanglement-ghz-fidelity-analysis"]], "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences": [[25, "iqm-benchmarks-entanglement-ghz-fidelity-ghz-coherences"]], "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements": [[26, "iqm-benchmarks-entanglement-ghz-fidelity-ghz-randomized-measurements"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_linear": [[27, "iqm-benchmarks-entanglement-ghz-generate-ghz-linear"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz": [[28, "iqm-benchmarks-entanglement-ghz-generate-ghz-log-cruz"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney": [[29, "iqm-benchmarks-entanglement-ghz-generate-ghz-log-mooney"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree": [[30, "iqm-benchmarks-entanglement-ghz-generate-ghz-spanning-tree"]], "iqm.benchmarks.entanglement.ghz.get_cx_map": [[31, "iqm-benchmarks-entanglement-ghz-get-cx-map"]], "iqm.benchmarks.entanglement.ghz.get_edges": [[32, "iqm-benchmarks-entanglement-ghz-get-edges"]], "iqm.benchmarks.entanglement.ghz.plot_fidelities": [[33, "iqm-benchmarks-entanglement-ghz-plot-fidelities"]], "iqm.benchmarks.logging_config": [[34, "module-iqm.benchmarks.logging_config"]], "iqm.benchmarks.optimization": [[35, "module-iqm.benchmarks.optimization"]], "iqm.benchmarks.optimization.qscore": [[36, "module-iqm.benchmarks.optimization.qscore"]], "iqm.benchmarks.optimization.qscore.QScoreBenchmark": [[37, "iqm-benchmarks-optimization-qscore-qscorebenchmark"]], "iqm.benchmarks.optimization.qscore.QScoreConfiguration": [[38, "iqm-benchmarks-optimization-qscore-qscoreconfiguration"]], "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1": [[39, "iqm-benchmarks-optimization-qscore-calculate-optimal-angles-for-qaoa-p1"]], "iqm.benchmarks.optimization.qscore.compute_expectation_value": [[40, "iqm-benchmarks-optimization-qscore-compute-expectation-value"]], "iqm.benchmarks.optimization.qscore.create_objective_function": [[41, "iqm-benchmarks-optimization-qscore-create-objective-function"]], "iqm.benchmarks.optimization.qscore.cut_cost_function": [[42, "iqm-benchmarks-optimization-qscore-cut-cost-function"]], "iqm.benchmarks.optimization.qscore.get_optimal_angles": [[43, "iqm-benchmarks-optimization-qscore-get-optimal-angles"]], "iqm.benchmarks.optimization.qscore.is_successful": [[44, "iqm-benchmarks-optimization-qscore-is-successful"]], "iqm.benchmarks.optimization.qscore.plot_approximation_ratios": [[45, "iqm-benchmarks-optimization-qscore-plot-approximation-ratios"]], "iqm.benchmarks.optimization.qscore.qscore_analysis": [[46, "iqm-benchmarks-optimization-qscore-qscore-analysis"]], "iqm.benchmarks.optimization.qscore.run_QAOA": [[47, "iqm-benchmarks-optimization-qscore-run-qaoa"]], "iqm.benchmarks.quantum_volume": [[48, "module-iqm.benchmarks.quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[49, "module-iqm.benchmarks.quantum_volume.clops"]], "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark": [[50, "iqm-benchmarks-quantum-volume-clops-clopsbenchmark"]], "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration": [[51, "iqm-benchmarks-quantum-volume-clops-clopsconfiguration"]], "iqm.benchmarks.quantum_volume.clops.clops_analysis": [[52, "iqm-benchmarks-quantum-volume-clops-clops-analysis"]], "iqm.benchmarks.quantum_volume.clops.plot_times": [[53, "iqm-benchmarks-quantum-volume-clops-plot-times"]], "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times": [[54, "iqm-benchmarks-quantum-volume-clops-retrieve-clops-elapsed-times"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[55, "module-iqm.benchmarks.quantum_volume.quantum_volume"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark": [[56, "iqm-benchmarks-quantum-volume-quantum-volume-quantumvolumebenchmark"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration": [[57, "iqm-benchmarks-quantum-volume-quantum-volume-quantumvolumeconfiguration"]], "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities": [[58, "iqm-benchmarks-quantum-volume-quantum-volume-compute-heavy-output-probabilities"]], "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop": [[59, "iqm-benchmarks-quantum-volume-quantum-volume-cumulative-hop"]], "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std": [[60, "iqm-benchmarks-quantum-volume-quantum-volume-cumulative-std"]], "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs": [[61, "iqm-benchmarks-quantum-volume-quantum-volume-get-ideal-heavy-outputs"]], "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops": [[62, "iqm-benchmarks-quantum-volume-quantum-volume-get-rem-hops"]], "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector": [[63, "iqm-benchmarks-quantum-volume-quantum-volume-heavy-projector"]], "iqm.benchmarks.quantum_volume.quantum_volume.is_successful": [[64, "iqm-benchmarks-quantum-volume-quantum-volume-is-successful"]], "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold": [[65, "iqm-benchmarks-quantum-volume-quantum-volume-plot-hop-threshold"]], "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis": [[66, "iqm-benchmarks-quantum-volume-quantum-volume-qv-analysis"]], "iqm.benchmarks.randomized_benchmarking": [[67, "module-iqm.benchmarks.randomized_benchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[68, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[69, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration": [[70, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-cliffordrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking": [[71, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-cliffordrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis": [[72, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-clifford-rb-analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[73, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[74, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration": [[75, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleavedrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking": [[76, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleavedrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis": [[77, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleaved-rb-analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[78, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[79, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration": [[80, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mirrorrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking": [[81, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mirrorrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations": [[82, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-compute-polarizations"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab": [[83, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-edge-grab"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits": [[84, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-generate-fixed-depth-mrb-circuits"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits": [[85, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-generate-pauli-dressed-mrb-circuits"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix": [[86, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-list-to-numcircuit-times-numpauli-matrix"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis": [[87, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mrb-analysis"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[88, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params": [[89, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-create-multi-dataset-params"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset": [[90, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-eval-func-single-dataset"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature": [[91, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-get-param-names-from-func-signature"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual": [[92, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-multi-dataset-residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[93, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford": [[94, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-compute-inverse-clifford"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities": [[95, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-estimate-survival-probabilities"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb": [[96, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-exponential-rb"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit": [[97, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-fit-decay-lmfit"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits": [[98, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-all-rb-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits": [[99, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-fixed-depth-parallel-rb-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits": [[100, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-random-clifford-seq-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities": [[101, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-get-survival-probabilities"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords": [[102, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-import-native-gate-cliffords"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer": [[103, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-lmfit-minimizer"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay": [[104, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-plot-rb-decay"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero": [[105, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-relabel-qubits-array-from-zero"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job": [[106, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-submit-parallel-rb-job"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs": [[107, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-submit-sequential-rb-jobs"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel": [[108, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-survival-probabilities-parallel"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate": [[109, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-validate-irb-gate"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits": [[110, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-validate-rb-qubits"]], "iqm.benchmarks.readout_mitigation": [[111, "module-iqm.benchmarks.readout_mitigation"]], "iqm.benchmarks.readout_mitigation.M3IQM": [[112, "iqm-benchmarks-readout-mitigation-m3iqm"]], "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation": [[113, "iqm-benchmarks-readout-mitigation-apply-readout-error-mitigation"]], "iqm.benchmarks.readout_mitigation.readout_error_m3": [[114, "iqm-benchmarks-readout-mitigation-readout-error-m3"]], "iqm.benchmarks.utils": [[115, "module-iqm.benchmarks.utils"]], "iqm.benchmarks.utils.count_2q_layers": [[116, "iqm-benchmarks-utils-count-2q-layers"]], "iqm.benchmarks.utils.count_native_gates": [[117, "iqm-benchmarks-utils-count-native-gates"]], "iqm.benchmarks.utils.get_iqm_backend": [[118, "iqm-benchmarks-utils-get-iqm-backend"]], "iqm.benchmarks.utils.marginal_distribution": [[119, "iqm-benchmarks-utils-marginal-distribution"]], "iqm.benchmarks.utils.perform_backend_transpilation": [[120, "iqm-benchmarks-utils-perform-backend-transpilation"]], "iqm.benchmarks.utils.reduce_to_active_qubits": [[121, "iqm-benchmarks-utils-reduce-to-active-qubits"]], "iqm.benchmarks.utils.retrieve_all_counts": [[122, "iqm-benchmarks-utils-retrieve-all-counts"]], "iqm.benchmarks.utils.retrieve_all_job_metadata": [[123, "iqm-benchmarks-utils-retrieve-all-job-metadata"]], "iqm.benchmarks.utils.set_coupling_map": [[124, "iqm-benchmarks-utils-set-coupling-map"]], "iqm.benchmarks.utils.sort_batches_by_final_layout": [[125, "iqm-benchmarks-utils-sort-batches-by-final-layout"]], "iqm.benchmarks.utils.submit_execute": [[126, "iqm-benchmarks-utils-submit-execute"]], "iqm.benchmarks.utils.timeit": [[127, "iqm-benchmarks-utils-timeit"]], "iqm.benchmarks.utils.xrvariable_to_counts": [[128, "iqm-benchmarks-utils-xrvariable-to-counts"]], "Changelog": [[129, "changelog"]], "Version 2.14": [[129, "version-2-14"]], "Version 2.13": [[129, "version-2-13"]], "Version 2.12": [[129, "version-2-12"]], "Version 2.11": [[129, "version-2-11"]], "Version 2.10": [[129, "version-2-10"]], "Version 2.9": [[129, "version-2-9"]], "Version 2.8": [[129, "version-2-8"]], "Version 2.7": [[129, "version-2-7"]], "Version 2.6": [[129, "version-2-6"]], "Version 2.5": [[129, "version-2-5"]], "Version 2.4": [[129, "version-2-4"]], "Version 2.3": [[129, "version-2-3"]], "Version 2.2": [[129, "version-2-2"]], "Version 2.1": [[129, "version-2-1"]], "Version 2.0": [[129, "version-2-0"]], "Version 1.12": [[129, "version-1-12"]], "Version 1.11": [[129, "version-1-11"]], "Version 1.10": [[129, "version-1-10"]], "Version 1.9": [[129, "version-1-9"]], "Version 1.8": [[129, "version-1-8"]], "Version 1.7": [[129, "version-1-7"]], "Version 1.6": [[129, "version-1-6"]], "Version 1.5": [[129, "version-1-5"]], "Version 1.4": [[129, "version-1-4"]], "Version 1.3": [[129, "version-1-3"]], "Version 1.2": [[129, "version-1-2"]], "Version 1.1": [[129, "version-1-1"]], "Version 1.0": [[129, "version-1-0"]], "Development": [[130, "development"]], "2-Qubit Clifford Group Decomposition": [[131, "qubit-clifford-group-decomposition"]], "Generate the 1Q Clifford group": [[131, "generate-the-1q-clifford-group"]], "Generate the 2Q Clifford group": [[131, "generate-the-2q-clifford-group"]], "Dump on a pickle file": [[131, "dump-on-a-pickle-file"]], "Load": [[131, "load"]], "Count elements": [[131, "count-elements"]], "2Q": [[131, "q"]], "1Q": [[131, "id1"]], "A way to work out the inverse of sequences": [[131, "a-way-to-work-out-the-inverse-of-sequences"]], "2-design condition": [[131, "design-condition"]], "How to make your own benchmark?": [[132, "how-to-make-your-own-benchmark"]], "Devices": [[133, "devices"]], "Benchmarking IQM Spark": [[134, "benchmarking-iqm-spark"]], "Connect to the backend": [[134, "connect-to-the-backend"]], "GHZ state fidelity": [[134, "ghz-state-fidelity"], [137, "ghz-state-fidelity"]], "Quantum Volume": [[134, "quantum-volume"], [137, "quantum-volume"]], "Circuit Layer Operations Per Second (CLOPS)": [[134, "circuit-layer-operations-per-second-clops"], [136, "circuit-layer-operations-per-second-clops"]], "Clifford Randomized Benchmarking": [[134, "clifford-randomized-benchmarking"], [137, "clifford-randomized-benchmarking"]], "Interleaved Randomized Benchmarking (IRB)": [[134, "interleaved-randomized-benchmarking-irb"], [140, "interleaved-randomized-benchmarking-irb"]], "Q-Score": [[134, "q-score"], [142, "q-score"]], "Summary": [[134, "summary"]], "Clifford Randomized Benchmarking (RB)": [[135, "clifford-randomized-benchmarking-rb"]], "Choose (or define) a backend": [[135, "choose-or-define-a-backend"], [136, "choose-or-define-a-backend"], [137, "choose-or-define-a-backend"], [139, "choose-or-define-a-backend"], [140, "choose-or-define-a-backend"], [141, "choose-or-define-a-backend"], [142, "choose-or-define-a-backend"], [143, "choose-or-define-a-backend"]], "Set IQM Token if using Resonance.": [[135, "set-iqm-token-if-using-resonance"], [137, "set-iqm-token-if-using-resonance"], [141, "set-iqm-token-if-using-resonance"], [142, "set-iqm-token-if-using-resonance"], [143, "set-iqm-token-if-using-resonance"], [144, "set-iqm-token-if-using-resonance"]], "Randomized Benchmarking Configuration": [[135, "randomized-benchmarking-configuration"]], "Run the experiment": [[135, "run-the-experiment"], [136, "run-the-experiment"], [141, "run-the-experiment"], [142, "run-the-experiment"], [143, "run-the-experiment"], [144, "run-the-experiment"]], "Perform the analysis": [[135, "perform-the-analysis"]], "Set IQM Token if using Resonance": [[136, "set-iqm-token-if-using-resonance"]], "CLOPS Configuration": [[136, "clops-configuration"]], "Perform Analysis": [[136, "perform-analysis"], [142, "perform-analysis"], [143, "perform-analysis"], [144, "perform-analysis"]], "List all the keys in the attributes of the dataset": [[136, "list-all-the-keys-in-the-attributes-of-the-dataset"], [141, "list-all-the-keys-in-the-attributes-of-the-dataset"]], "The observation object contains the benchmark results": [[136, "the-observation-object-contains-the-benchmark-results"], [141, "the-observation-object-contains-the-benchmark-results"]], "Generate plots": [[136, "generate-plots"], [141, "generate-plots"], [143, "generate-plots"], [144, "generate-plots"]], "IQM Benchmarks: Summary Notebook": [[137, "iqm-benchmarks-summary-notebook"]], "Interleaved Randomized Benchmarking": [[137, "interleaved-randomized-benchmarking"]], "Mirror Randomized Benchmarking": [[137, "mirror-randomized-benchmarking"]], "CLOPS": [[137, "clops"]], "QScore": [[137, "qscore"]], "Greenberger\u2013Horne\u2013Zeilinger (GHZ) State Fidelity": [[138, "greenbergerhornezeilinger-ghz-state-fidelity"]], "Definition of the benchmark configuration": [[138, "definition-of-the-benchmark-configuration"]], "Running the benchmark": [[138, "running-the-benchmark"]], "Accessing the results": [[138, "accessing-the-results"]], "Compressive Gate Set Tomography (GST)": [[139, "compressive-gate-set-tomography-gst"]], "Minimal GST Experiment configurations": [[139, "minimal-gst-experiment-configurations"]], "Execute GST Experiment(s)": [[139, "execute-gst-experiment-s"]], "Examine the results": [[139, "examine-the-results"]], "High level results stored at result.observations": [[139, "high-level-results-stored-at-result-observations"]], "Accessing the final gate set estimates for further processing": [[139, "accessing-the-final-gate-set-estimates-for-further-processing"]], "Plots": [[139, "plots"]], "Creating a custom gate set": [[139, "creating-a-custom-gate-set"]], "Checking out the process matrix corresponding to the pi rotation around the y-axis": [[139, "checking-out-the-process-matrix-corresponding-to-the-pi-rotation-around-the-y-axis"]], "All plots for the custom gate set": [[139, "all-plots-for-the-custom-gate-set"]], "Interleaved Randomized Benchmarking Configuration": [[140, "interleaved-randomized-benchmarking-configuration"]], "1Q gate IRB": [[140, "q-gate-irb"]], "Run the experiment - 1Q gate IRB": [[140, "run-the-experiment-1q-gate-irb"]], "Analyze the results - 1Q gate IRB": [[140, "analyze-the-results-1q-gate-irb"]], "2Q gate IRB": [[140, "id1"]], "Run the experiment - 2Q gate IRB": [[140, "run-the-experiment-2q-gate-irb"]], "Analyze the results - 2Q gate IRB": [[140, "analyze-the-results-2q-gate-irb"]], "IRB for non-native gate": [[140, "irb-for-non-native-gate"]], "Mirror Randomized Benchmarking (MRB)": [[141, "mirror-randomized-benchmarking-mrb"]], "Mirror RB Configuration": [[141, "mirror-rb-configuration"]], "Analyze the results": [[141, "analyze-the-results"]], "Qscore Configuration": [[142, "qscore-configuration"]], "Quantum Volume (QV)": [[143, "quantum-volume-qv"]], "Quantum Volume Configuration": [[143, "quantum-volume-configuration"], [144, "quantum-volume-configuration"]], "QV on Deneb": [[144, "qv-on-deneb"]], "Choose Deneb as a backend": [[144, "choose-deneb-as-a-backend"]], "Inspect the circuits": [[144, "inspect-the-circuits"]], "Examples": [[145, "examples"]], "IQM Benchmarks": [[146, "iqm-benchmarks"], [148, "iqm-benchmarks"]], "Contents": [[146, "contents"]], "Indices and tables": [[146, "indices-and-tables"]], "License": [[147, "license"]], "Installation (latest release)": [[148, "installation-latest-release"]], "Optional dependencies": [[148, "optional-dependencies"]], "Development installation (latest changes)": [[148, "development-installation-latest-changes"]], "Characterize Physical Hardware": [[148, "characterize-physical-hardware"]], "Using a Jupyter notebook or Python script": [[148, "using-a-jupyter-notebook-or-python-script"]], "Scheduled benchmarks using a CI/CD Pipeline": [[148, "scheduled-benchmarks-using-a-ci-cd-pipeline"]]}, "indexentries": {"iqm.benchmarks": [[1, "module-iqm.benchmarks"]], "module": [[1, "module-iqm.benchmarks"], [2, "module-iqm.benchmarks.benchmark"], [5, "module-iqm.benchmarks.benchmark_definition"], [15, "module-iqm.benchmarks.circuit_containers"], [19, "module-iqm.benchmarks.entanglement"], [20, "module-iqm.benchmarks.entanglement.ghz"], [34, "module-iqm.benchmarks.logging_config"], [35, "module-iqm.benchmarks.optimization"], [36, "module-iqm.benchmarks.optimization.qscore"], [48, "module-iqm.benchmarks.quantum_volume"], [49, "module-iqm.benchmarks.quantum_volume.clops"], [55, "module-iqm.benchmarks.quantum_volume.quantum_volume"], [67, "module-iqm.benchmarks.randomized_benchmarking"], [68, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"], [69, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"], [73, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"], [74, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"], [78, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"], [79, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"], [88, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"], [93, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"], [111, "module-iqm.benchmarks.readout_mitigation"], [115, "module-iqm.benchmarks.utils"]], "iqm.benchmarks.benchmark": [[2, "module-iqm.benchmarks.benchmark"]], "benchmarkbase (class in iqm.benchmarks.benchmark)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase"]], "check_requirements() (iqm.benchmarks.benchmark.benchmarkbase static method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.check_requirements"]], "execute_full_benchmark() (iqm.benchmarks.benchmark.benchmarkbase method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.execute_full_benchmark"]], "generate_requirements() (iqm.benchmarks.benchmark.benchmarkbase method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.generate_requirements"]], "name() (iqm.benchmarks.benchmark.benchmarkbase class method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.name"]], "benchmarkconfigurationbase (class in iqm.benchmarks.benchmark)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase"]], "benchmark (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.benchmark"]], "calset_id (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.calset_id"]], "max_gates_per_batch (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.max_gates_per_batch"]], "model_computed_fields (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_computed_fields"]], "model_config (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_config"]], "model_fields (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_fields"]], "physical_layout (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.physical_layout"]], "routing_method (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.routing_method"]], "shots (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.shots"]], "iqm.benchmarks.benchmark_definition": [[5, "module-iqm.benchmarks.benchmark_definition"]], "benchmark (class in iqm.benchmarks.benchmark_definition)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark"]], "analysis_function() (iqm.benchmarks.benchmark_definition.benchmark static method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.analysis_function"]], "analyze() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.analyze"]], "execute() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.execute"]], "name() (iqm.benchmarks.benchmark_definition.benchmark class method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.name"]], "run() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.run"]], "benchmarkanalysisresult (class in iqm.benchmarks.benchmark_definition)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult"]], "from_run_result() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult class method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.from_run_result"]], "plot() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.plot"]], "plot_all() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.plot_all"]], "benchmarkobservation (class in iqm.benchmarks.benchmark_definition)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation"]], "identifier (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.identifier"]], "name (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.name"]], "uncertainty (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.uncertainty"]], "value (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.value"]], "benchmarkobservationidentifier (class in iqm.benchmarks.benchmark_definition)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier"]], "qubit_indices (iqm.benchmarks.benchmark_definition.benchmarkobservationidentifier attribute)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.qubit_indices"]], "string_identifier (iqm.benchmarks.benchmark_definition.benchmarkobservationidentifier property)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.string_identifier"]], "benchmarkrunresult (class in iqm.benchmarks.benchmark_definition)": [[10, "iqm.benchmarks.benchmark_definition.BenchmarkRunResult"]], "add_counts_to_dataset() (in module iqm.benchmarks.benchmark_definition)": [[11, "iqm.benchmarks.benchmark_definition.add_counts_to_dataset"]], "default_analysis_function() (in module iqm.benchmarks.benchmark_definition)": [[12, "iqm.benchmarks.benchmark_definition.default_analysis_function"]], "merge_datasets_dac() (in module iqm.benchmarks.benchmark_definition)": [[13, "iqm.benchmarks.benchmark_definition.merge_datasets_dac"]], "show_figure() (in module iqm.benchmarks.benchmark_definition)": [[14, "iqm.benchmarks.benchmark_definition.show_figure"]], "iqm.benchmarks.circuit_containers": [[15, "module-iqm.benchmarks.circuit_containers"]], "benchmarkcircuit (class in iqm.benchmarks.circuit_containers)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit"]], "circuit_groups (iqm.benchmarks.circuit_containers.benchmarkcircuit attribute)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.circuit_groups"]], "get_circuit_group_by_name() (iqm.benchmarks.circuit_containers.benchmarkcircuit method)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.get_circuit_group_by_name"]], "group_names (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.group_names"]], "groups (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.groups"]], "name (iqm.benchmarks.circuit_containers.benchmarkcircuit attribute)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.name"]], "qubit_indices (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_indices"]], "qubit_layouts (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_layouts"]], "qubit_layouts_by_index (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_layouts_by_index"]], "qubits (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubits"]], "circuitgroup (class in iqm.benchmarks.circuit_containers)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup"]], "add_circuit() (iqm.benchmarks.circuit_containers.circuitgroup method)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.add_circuit"]], "circuit_names (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.circuit_names"]], "circuits (iqm.benchmarks.circuit_containers.circuitgroup attribute)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.circuits"]], "get_circuits_by_name() (iqm.benchmarks.circuit_containers.circuitgroup method)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.get_circuits_by_name"]], "name (iqm.benchmarks.circuit_containers.circuitgroup attribute)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.name"]], "qubit_layouts (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubit_layouts"]], "qubit_layouts_by_index (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubit_layouts_by_index"]], "qubits (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubits"]], "circuits (class in iqm.benchmarks.circuit_containers)": [[18, "iqm.benchmarks.circuit_containers.Circuits"]], "benchmark_circuits (iqm.benchmarks.circuit_containers.circuits attribute)": [[18, "iqm.benchmarks.circuit_containers.Circuits.benchmark_circuits"]], "get_benchmark_circuits_by_name() (iqm.benchmarks.circuit_containers.circuits method)": [[18, "iqm.benchmarks.circuit_containers.Circuits.get_benchmark_circuits_by_name"]], "iqm.benchmarks.entanglement": [[19, "module-iqm.benchmarks.entanglement"]], "iqm.benchmarks.entanglement.ghz": [[20, "module-iqm.benchmarks.entanglement.ghz"]], "ghzbenchmark (class in iqm.benchmarks.entanglement.ghz)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark"]], "add_configuration_to_dataset() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.add_configuration_to_dataset"]], "analysis_function() (iqm.benchmarks.entanglement.ghz.ghzbenchmark static method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.analysis_function"]], "append_rms() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.append_rms"]], "execute() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.execute"]], "generate_coherence_meas_circuits() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_coherence_meas_circuits"]], "generate_native_ghz() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_native_ghz"]], "generate_readout_circuit() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_readout_circuit"]], "ghzconfiguration (class in iqm.benchmarks.entanglement.ghz)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration"]], "benchmark (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.benchmark"]], "cal_url (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.cal_url"]], "custom_qubits_array (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.custom_qubits_array"]], "fidelity_routine (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.fidelity_routine"]], "mit_shots (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.mit_shots"]], "model_computed_fields (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_config"]], "model_fields (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_fields"]], "num_rms (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.num_RMs"]], "optimize_single_qubit_gates (iqm.benchmarks.entanglement.ghz.ghzconfiguration.iqm.qiskit_iqm.iqm_transpilation attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.iqm.qiskit_iqm.iqm_transpilation.optimize_single_qubit_gates"]], "optimize_sqg (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.optimize_sqg"]], "qiskit_optim_level (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.qiskit_optim_level"]], "qubit_counts (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.qubit_counts"]], "rem (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.rem"]], "state_generation_routine (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.state_generation_routine"]], "extract_fidelities() (in module iqm.benchmarks.entanglement.ghz)": [[23, "iqm.benchmarks.entanglement.ghz.extract_fidelities"]], "fidelity_analysis() (in module iqm.benchmarks.entanglement.ghz)": [[24, "iqm.benchmarks.entanglement.ghz.fidelity_analysis"]], "fidelity_ghz_coherences() (in module iqm.benchmarks.entanglement.ghz)": [[25, "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences"]], "fidelity_ghz_randomized_measurements() (in module iqm.benchmarks.entanglement.ghz)": [[26, "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements"]], "generate_ghz_linear() (in module iqm.benchmarks.entanglement.ghz)": [[27, "iqm.benchmarks.entanglement.ghz.generate_ghz_linear"]], "generate_ghz_log_cruz() (in module iqm.benchmarks.entanglement.ghz)": [[28, "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz"]], "generate_ghz_log_mooney() (in module iqm.benchmarks.entanglement.ghz)": [[29, "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney"]], "generate_ghz_spanning_tree() (in module iqm.benchmarks.entanglement.ghz)": [[30, "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree"]], "get_cx_map() (in module iqm.benchmarks.entanglement.ghz)": [[31, "iqm.benchmarks.entanglement.ghz.get_cx_map"]], "get_edges() (in module iqm.benchmarks.entanglement.ghz)": [[32, "iqm.benchmarks.entanglement.ghz.get_edges"]], "plot_fidelities() (in module iqm.benchmarks.entanglement.ghz)": [[33, "iqm.benchmarks.entanglement.ghz.plot_fidelities"]], "iqm.benchmarks.logging_config": [[34, "module-iqm.benchmarks.logging_config"]], "iqm.benchmarks.optimization": [[35, "module-iqm.benchmarks.optimization"]], "iqm.benchmarks.optimization.qscore": [[36, "module-iqm.benchmarks.optimization.qscore"]], "qscorebenchmark (class in iqm.benchmarks.optimization.qscore)": [[37, "iqm.benchmarks.optimization.qscore.QScoreBenchmark"]], "add_all_meta_to_dataset() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[37, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.optimization.qscore.qscorebenchmark static method)": [[37, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.analysis_function"]], "choose_qubits_custom() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[37, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.choose_qubits_custom"]], "choose_qubits_naive() (iqm.benchmarks.optimization.qscore.qscorebenchmark static method)": [[37, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.choose_qubits_naive"]], "execute() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[37, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.execute"]], "generate_maxcut_ansatz() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[37, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.generate_maxcut_ansatz"]], "qscoreconfiguration (class in iqm.benchmarks.optimization.qscore)": [[38, "iqm.benchmarks.optimization.qscore.QScoreConfiguration"]], "benchmark (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[38, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.benchmark"]], "choose_qubits_routine (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[38, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.choose_qubits_routine"]], "custom_qubits_array (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[38, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.custom_qubits_array"]], "max_num_nodes (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[38, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.max_num_nodes"]], "min_num_nodes (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[38, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.min_num_nodes"]], "min_num_qubits (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[38, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.min_num_qubits"]], "model_computed_fields (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[38, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[38, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_config"]], "model_fields (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[38, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_fields"]], "num_instances (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[38, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.num_instances"]], "num_qaoa_layers (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[38, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.num_qaoa_layers"]], "optimize_sqg (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[38, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.optimize_sqg"]], "qiskit_optim_level (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[38, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.qiskit_optim_level"]], "seed (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[38, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.seed"]], "use_classically_optimized_angles (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[38, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.use_classically_optimized_angles"]], "use_virtual_node (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[38, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.use_virtual_node"]], "calculate_optimal_angles_for_qaoa_p1() (in module iqm.benchmarks.optimization.qscore)": [[39, "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1"]], "compute_expectation_value() (in module iqm.benchmarks.optimization.qscore)": [[40, "iqm.benchmarks.optimization.qscore.compute_expectation_value"]], "create_objective_function() (in module iqm.benchmarks.optimization.qscore)": [[41, "iqm.benchmarks.optimization.qscore.create_objective_function"]], "cut_cost_function() (in module iqm.benchmarks.optimization.qscore)": [[42, "iqm.benchmarks.optimization.qscore.cut_cost_function"]], "get_optimal_angles() (in module iqm.benchmarks.optimization.qscore)": [[43, "iqm.benchmarks.optimization.qscore.get_optimal_angles"]], "is_successful() (in module iqm.benchmarks.optimization.qscore)": [[44, "iqm.benchmarks.optimization.qscore.is_successful"]], "plot_approximation_ratios() (in module iqm.benchmarks.optimization.qscore)": [[45, "iqm.benchmarks.optimization.qscore.plot_approximation_ratios"]], "qscore_analysis() (in module iqm.benchmarks.optimization.qscore)": [[46, "iqm.benchmarks.optimization.qscore.qscore_analysis"]], "run_qaoa() (in module iqm.benchmarks.optimization.qscore)": [[47, "iqm.benchmarks.optimization.qscore.run_QAOA"]], "iqm.benchmarks.quantum_volume": [[48, "module-iqm.benchmarks.quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[49, "module-iqm.benchmarks.quantum_volume.clops"]], "clopsbenchmark (class in iqm.benchmarks.quantum_volume.clops)": [[50, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark"]], "add_all_meta_to_dataset() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[50, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark static method)": [[50, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.analysis_function"]], "append_parameterized_unitary() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[50, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.append_parameterized_unitary"]], "assign_random_parameters_to_all() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[50, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.assign_random_parameters_to_all"]], "clops_cycle() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[50, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.clops_cycle"]], "execute() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[50, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.execute"]], "generate_circuit_list() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[50, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_circuit_list"]], "generate_random_parameters() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[50, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_random_parameters"]], "generate_single_circuit() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[50, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_single_circuit"]], "generate_transpiled_clops_templates() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[50, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_transpiled_clops_templates"]], "clopsconfiguration (class in iqm.benchmarks.quantum_volume.clops)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration"]], "benchmark (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.benchmark"]], "clops_h_bool (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.clops_h_bool"]], "model_computed_fields (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_config"]], "model_fields (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_fields"]], "num_circuits (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_circuits"]], "num_shots (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_shots"]], "num_updates (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_updates"]], "optimize_sqg (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.optimize_sqg"]], "physical_layout (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.physical_layout"]], "qiskit_optim_level (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.qiskit_optim_level"]], "qubits (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.qubits"]], "routing_method (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.routing_method"]], "clops_analysis() (in module iqm.benchmarks.quantum_volume.clops)": [[52, "iqm.benchmarks.quantum_volume.clops.clops_analysis"]], "plot_times() (in module iqm.benchmarks.quantum_volume.clops)": [[53, "iqm.benchmarks.quantum_volume.clops.plot_times"]], "retrieve_clops_elapsed_times() (in module iqm.benchmarks.quantum_volume.clops)": [[54, "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[55, "module-iqm.benchmarks.quantum_volume.quantum_volume"]], "quantumvolumebenchmark (class in iqm.benchmarks.quantum_volume.quantum_volume)": [[56, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark"]], "add_all_circuits_to_dataset() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[56, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.add_all_circuits_to_dataset"]], "add_all_meta_to_dataset() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[56, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark static method)": [[56, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.analysis_function"]], "execute() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[56, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.execute"]], "generate_circuit_list() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[56, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.generate_circuit_list"]], "generate_single_circuit() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark static method)": [[56, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.generate_single_circuit"]], "get_rem_quasidistro() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[56, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.get_rem_quasidistro"]], "submit_single_qv_job() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[56, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.submit_single_qv_job"]], "quantumvolumeconfiguration (class in iqm.benchmarks.quantum_volume.quantum_volume)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration"]], "benchmark (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.benchmark"]], "choose_qubits_routine (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.choose_qubits_routine"]], "custom_qubits_array (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.custom_qubits_array"]], "mit_shots (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.mit_shots"]], "model_computed_fields (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_config"]], "model_fields (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_fields"]], "num_circuits (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.num_circuits"]], "num_sigmas (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.num_sigmas"]], "optimize_sqg (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.optimize_sqg"]], "physical_layout (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.physical_layout"]], "qiskit_optim_level (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.qiskit_optim_level"]], "rem (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.rem"]], "routing_method (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.routing_method"]], "compute_heavy_output_probabilities() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities"]], "cumulative_hop() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[59, "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop"]], "cumulative_std() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[60, "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std"]], "get_ideal_heavy_outputs() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[61, "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs"]], "get_rem_hops() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[62, "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops"]], "heavy_projector() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[63, "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector"]], "is_successful() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[64, "iqm.benchmarks.quantum_volume.quantum_volume.is_successful"]], "plot_hop_threshold() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[65, "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold"]], "qv_analysis() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[66, "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis"]], "iqm.benchmarks.randomized_benchmarking": [[67, "module-iqm.benchmarks.randomized_benchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[68, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[69, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"]], "cliffordrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[70, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration"]], "benchmark (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[70, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.benchmark"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[70, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[70, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[70, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[70, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.num_circuit_samples"]], "parallel_execution (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[70, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.parallel_execution"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[70, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.qubits_array"]], "sequence_lengths (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[70, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.sequence_lengths"]], "shots (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[70, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.shots"]], "cliffordrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking"]], "add_all_circuits_to_dataset() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.add_all_circuits_to_dataset"]], "add_all_metadata_to_dataset() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.add_all_metadata_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking static method)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.execute"]], "clifford_rb_analysis() (in module iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[72, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[73, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[74, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"]], "interleavedrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[75, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration"]], "interleaved_gate (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[75, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.interleaved_gate"]], "interleaved_gate_params (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[75, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.interleaved_gate_params"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[75, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[75, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[75, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[75, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.num_circuit_samples"]], "parallel_execution (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[75, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.parallel_execution"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[75, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.qubits_array"]], "sequence_lengths (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[75, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.sequence_lengths"]], "shots (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[75, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.shots"]], "simultaneous_fit (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[75, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.simultaneous_fit"]], "interleavedrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking"]], "add_all_circuits_to_dataset() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.add_all_circuits_to_dataset"]], "add_all_meta_to_dataset() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking static method)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.execute"]], "interleaved_rb_analysis() (in module iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[77, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[78, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[79, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"]], "mirrorrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[80, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration"]], "benchmark (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[80, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.benchmark"]], "density_2q_gates (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[80, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.density_2q_gates"]], "depths_array (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[80, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.depths_array"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[80, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[80, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[80, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[80, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.num_circuit_samples"]], "num_pauli_samples (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[80, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.num_pauli_samples"]], "qiskit_optim_level (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[80, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.qiskit_optim_level"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[80, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.qubits_array"]], "routing_method (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[80, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.routing_method"]], "shots (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[80, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.shots"]], "two_qubit_gate_ensemble (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[80, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.two_qubit_gate_ensemble"]], "mirrorrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking"]], "add_all_meta_to_dataset() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking static method)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.execute"]], "submit_single_mrb_job() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.submit_single_mrb_job"]], "compute_polarizations() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[82, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations"]], "edge_grab() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[83, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab"]], "generate_fixed_depth_mrb_circuits() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[84, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits"]], "generate_pauli_dressed_mrb_circuits() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[85, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits"]], "list_to_numcircuit_times_numpauli_matrix() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[86, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix"]], "mrb_analysis() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[87, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[88, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"]], "create_multi_dataset_params() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[89, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params"]], "eval_func_single_dataset() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[90, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset"]], "get_param_names_from_func_signature() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[91, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature"]], "multi_dataset_residual() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[92, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[93, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"]], "compute_inverse_clifford() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[94, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford"]], "estimate_survival_probabilities() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[95, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities"]], "exponential_rb() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[96, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb"]], "fit_decay_lmfit() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[97, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit"]], "generate_all_rb_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[98, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits"]], "generate_fixed_depth_parallel_rb_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[99, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits"]], "generate_random_clifford_seq_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[100, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits"]], "get_survival_probabilities() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[101, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities"]], "import_native_gate_cliffords() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[102, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords"]], "lmfit_minimizer() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[103, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer"]], "plot_rb_decay() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[104, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay"]], "relabel_qubits_array_from_zero() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[105, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero"]], "submit_parallel_rb_job() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[106, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job"]], "submit_sequential_rb_jobs() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[107, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs"]], "survival_probabilities_parallel() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[108, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel"]], "validate_irb_gate() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[109, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate"]], "validate_rb_qubits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[110, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits"]], "iqm.benchmarks.readout_mitigation": [[111, "module-iqm.benchmarks.readout_mitigation"]], "m3iqm (class in iqm.benchmarks.readout_mitigation)": [[112, "iqm.benchmarks.readout_mitigation.M3IQM"]], "cals_from_system() (iqm.benchmarks.readout_mitigation.m3iqm method)": [[112, "iqm.benchmarks.readout_mitigation.M3IQM.cals_from_system"]], "apply_readout_error_mitigation() (in module iqm.benchmarks.readout_mitigation)": [[113, "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation"]], "readout_error_m3() (in module iqm.benchmarks.readout_mitigation)": [[114, "iqm.benchmarks.readout_mitigation.readout_error_m3"]], "iqm.benchmarks.utils": [[115, "module-iqm.benchmarks.utils"]], "count_2q_layers() (in module iqm.benchmarks.utils)": [[116, "iqm.benchmarks.utils.count_2q_layers"]], "count_native_gates() (in module iqm.benchmarks.utils)": [[117, "iqm.benchmarks.utils.count_native_gates"]], "get_iqm_backend() (in module iqm.benchmarks.utils)": [[118, "iqm.benchmarks.utils.get_iqm_backend"]], "marginal_distribution() (in module iqm.benchmarks.utils)": [[119, "iqm.benchmarks.utils.marginal_distribution"]], "perform_backend_transpilation() (in module iqm.benchmarks.utils)": [[120, "iqm.benchmarks.utils.perform_backend_transpilation"]], "reduce_to_active_qubits() (in module iqm.benchmarks.utils)": [[121, "iqm.benchmarks.utils.reduce_to_active_qubits"]], "retrieve_all_counts() (in module iqm.benchmarks.utils)": [[122, "iqm.benchmarks.utils.retrieve_all_counts"]], "retrieve_all_job_metadata() (in module iqm.benchmarks.utils)": [[123, "iqm.benchmarks.utils.retrieve_all_job_metadata"]], "set_coupling_map() (in module iqm.benchmarks.utils)": [[124, "iqm.benchmarks.utils.set_coupling_map"]], "sort_batches_by_final_layout() (in module iqm.benchmarks.utils)": [[125, "iqm.benchmarks.utils.sort_batches_by_final_layout"]], "submit_execute() (in module iqm.benchmarks.utils)": [[126, "iqm.benchmarks.utils.submit_execute"]], "timeit() (in module iqm.benchmarks.utils)": [[127, "iqm.benchmarks.utils.timeit"]], "xrvariable_to_counts() (in module iqm.benchmarks.utils)": [[128, "iqm.benchmarks.utils.xrvariable_to_counts"]]}})