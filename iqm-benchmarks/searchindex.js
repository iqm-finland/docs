Search.setIndex({"docnames": ["API", "api/iqm.benchmarks", "api/iqm.benchmarks.benchmark", "api/iqm.benchmarks.benchmark.BenchmarkBase", "api/iqm.benchmarks.benchmark.BenchmarkConfigurationBase", "api/iqm.benchmarks.benchmark_definition", "api/iqm.benchmarks.benchmark_definition.Benchmark", "api/iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservation", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier", "api/iqm.benchmarks.benchmark_definition.BenchmarkRunResult", "api/iqm.benchmarks.benchmark_definition.add_counts_to_dataset", "api/iqm.benchmarks.benchmark_definition.default_analysis_function", "api/iqm.benchmarks.benchmark_definition.merge_datasets_dac", "api/iqm.benchmarks.benchmark_definition.show_figure", "api/iqm.benchmarks.circuit_containers", "api/iqm.benchmarks.circuit_containers.BenchmarkCircuit", "api/iqm.benchmarks.circuit_containers.CircuitGroup", "api/iqm.benchmarks.circuit_containers.Circuits", "api/iqm.benchmarks.entanglement", "api/iqm.benchmarks.entanglement.ghz", "api/iqm.benchmarks.entanglement.ghz.GHZBenchmark", "api/iqm.benchmarks.entanglement.ghz.GHZConfiguration", "api/iqm.benchmarks.entanglement.ghz.extract_fidelities", "api/iqm.benchmarks.entanglement.ghz.fidelity_analysis", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_linear", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_star", "api/iqm.benchmarks.entanglement.ghz.get_cx_map", "api/iqm.benchmarks.entanglement.ghz.get_edges", "api/iqm.benchmarks.entanglement.ghz.plot_fidelities", "api/iqm.benchmarks.logging_config", "api/iqm.benchmarks.optimization", "api/iqm.benchmarks.optimization.qscore", "api/iqm.benchmarks.optimization.qscore.QScoreBenchmark", "api/iqm.benchmarks.optimization.qscore.QScoreConfiguration", "api/iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1", "api/iqm.benchmarks.optimization.qscore.compute_expectation_value", "api/iqm.benchmarks.optimization.qscore.create_objective_function", "api/iqm.benchmarks.optimization.qscore.cut_cost_function", "api/iqm.benchmarks.optimization.qscore.get_optimal_angles", "api/iqm.benchmarks.optimization.qscore.is_successful", "api/iqm.benchmarks.optimization.qscore.plot_approximation_ratios", "api/iqm.benchmarks.optimization.qscore.qscore_analysis", "api/iqm.benchmarks.optimization.qscore.run_QAOA", "api/iqm.benchmarks.quantum_volume", "api/iqm.benchmarks.quantum_volume.clops", "api/iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark", "api/iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration", "api/iqm.benchmarks.quantum_volume.clops.clops_analysis", "api/iqm.benchmarks.quantum_volume.clops.plot_times", "api/iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times", "api/iqm.benchmarks.quantum_volume.quantum_volume", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration", "api/iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops", "api/iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector", "api/iqm.benchmarks.quantum_volume.quantum_volume.is_successful", "api/iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold", "api/iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis", "api/iqm.benchmarks.randomized_benchmarking", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits", "api/iqm.benchmarks.readout_mitigation", "api/iqm.benchmarks.readout_mitigation.M3IQM", "api/iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation", "api/iqm.benchmarks.readout_mitigation.readout_error_m3", "api/iqm.benchmarks.utils", "api/iqm.benchmarks.utils.count_2q_layers", "api/iqm.benchmarks.utils.count_native_gates", "api/iqm.benchmarks.utils.get_iqm_backend", "api/iqm.benchmarks.utils.marginal_distribution", "api/iqm.benchmarks.utils.perform_backend_transpilation", "api/iqm.benchmarks.utils.reduce_to_active_qubits", "api/iqm.benchmarks.utils.retrieve_all_counts", "api/iqm.benchmarks.utils.retrieve_all_job_metadata", "api/iqm.benchmarks.utils.set_coupling_map", "api/iqm.benchmarks.utils.sort_batches_by_final_layout", "api/iqm.benchmarks.utils.submit_execute", "api/iqm.benchmarks.utils.timeit", "api/iqm.benchmarks.utils.xrvariable_to_counts", "changelog", "development/development", "development/generate_2qubit_cliffords", "development/how_to_make_your_own_benchmark", "devices/devices", "devices/spark", "devices/star", "examples/example_clifford_rb", "examples/example_clops", "examples/example_experiment_all", "examples/example_ghz", "examples/example_ghz_deneb", "examples/example_gst", "examples/example_interleaved_rb", "examples/example_mirror_rb", "examples/example_qscore", "examples/example_quantum_volume", "examples/example_quantum_volume_deneb", "examples/examples", "index", "license", "readme"], "filenames": ["API.rst", "api/iqm.benchmarks.rst", "api/iqm.benchmarks.benchmark.rst", "api/iqm.benchmarks.benchmark.BenchmarkBase.rst", "api/iqm.benchmarks.benchmark.BenchmarkConfigurationBase.rst", "api/iqm.benchmarks.benchmark_definition.rst", "api/iqm.benchmarks.benchmark_definition.Benchmark.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservation.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkRunResult.rst", "api/iqm.benchmarks.benchmark_definition.add_counts_to_dataset.rst", "api/iqm.benchmarks.benchmark_definition.default_analysis_function.rst", "api/iqm.benchmarks.benchmark_definition.merge_datasets_dac.rst", "api/iqm.benchmarks.benchmark_definition.show_figure.rst", "api/iqm.benchmarks.circuit_containers.rst", "api/iqm.benchmarks.circuit_containers.BenchmarkCircuit.rst", "api/iqm.benchmarks.circuit_containers.CircuitGroup.rst", "api/iqm.benchmarks.circuit_containers.Circuits.rst", "api/iqm.benchmarks.entanglement.rst", "api/iqm.benchmarks.entanglement.ghz.rst", "api/iqm.benchmarks.entanglement.ghz.GHZBenchmark.rst", "api/iqm.benchmarks.entanglement.ghz.GHZConfiguration.rst", "api/iqm.benchmarks.entanglement.ghz.extract_fidelities.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_analysis.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_linear.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_star.rst", "api/iqm.benchmarks.entanglement.ghz.get_cx_map.rst", "api/iqm.benchmarks.entanglement.ghz.get_edges.rst", "api/iqm.benchmarks.entanglement.ghz.plot_fidelities.rst", "api/iqm.benchmarks.logging_config.rst", "api/iqm.benchmarks.optimization.rst", "api/iqm.benchmarks.optimization.qscore.rst", "api/iqm.benchmarks.optimization.qscore.QScoreBenchmark.rst", "api/iqm.benchmarks.optimization.qscore.QScoreConfiguration.rst", "api/iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1.rst", "api/iqm.benchmarks.optimization.qscore.compute_expectation_value.rst", "api/iqm.benchmarks.optimization.qscore.create_objective_function.rst", "api/iqm.benchmarks.optimization.qscore.cut_cost_function.rst", "api/iqm.benchmarks.optimization.qscore.get_optimal_angles.rst", "api/iqm.benchmarks.optimization.qscore.is_successful.rst", "api/iqm.benchmarks.optimization.qscore.plot_approximation_ratios.rst", "api/iqm.benchmarks.optimization.qscore.qscore_analysis.rst", "api/iqm.benchmarks.optimization.qscore.run_QAOA.rst", "api/iqm.benchmarks.quantum_volume.rst", "api/iqm.benchmarks.quantum_volume.clops.rst", "api/iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.rst", "api/iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.rst", "api/iqm.benchmarks.quantum_volume.clops.clops_analysis.rst", "api/iqm.benchmarks.quantum_volume.clops.plot_times.rst", "api/iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.is_successful.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits.rst", "api/iqm.benchmarks.readout_mitigation.rst", "api/iqm.benchmarks.readout_mitigation.M3IQM.rst", "api/iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation.rst", "api/iqm.benchmarks.readout_mitigation.readout_error_m3.rst", "api/iqm.benchmarks.utils.rst", "api/iqm.benchmarks.utils.count_2q_layers.rst", "api/iqm.benchmarks.utils.count_native_gates.rst", "api/iqm.benchmarks.utils.get_iqm_backend.rst", "api/iqm.benchmarks.utils.marginal_distribution.rst", "api/iqm.benchmarks.utils.perform_backend_transpilation.rst", "api/iqm.benchmarks.utils.reduce_to_active_qubits.rst", "api/iqm.benchmarks.utils.retrieve_all_counts.rst", "api/iqm.benchmarks.utils.retrieve_all_job_metadata.rst", "api/iqm.benchmarks.utils.set_coupling_map.rst", "api/iqm.benchmarks.utils.sort_batches_by_final_layout.rst", "api/iqm.benchmarks.utils.submit_execute.rst", "api/iqm.benchmarks.utils.timeit.rst", "api/iqm.benchmarks.utils.xrvariable_to_counts.rst", "changelog.rst", "development/development.rst", "development/generate_2qubit_cliffords.ipynb", "development/how_to_make_your_own_benchmark.ipynb", "devices/devices.rst", "devices/spark.ipynb", "devices/star.ipynb", "examples/example_clifford_rb.ipynb", "examples/example_clops.ipynb", "examples/example_experiment_all.ipynb", "examples/example_ghz.ipynb", "examples/example_ghz_deneb.ipynb", "examples/example_gst.ipynb", "examples/example_interleaved_rb.ipynb", "examples/example_mirror_rb.ipynb", "examples/example_qscore.ipynb", "examples/example_quantum_volume.ipynb", "examples/example_quantum_volume_deneb.ipynb", "examples/examples.rst", "index.rst", "license.rst", "readme.md"], "titles": ["API Reference", "iqm.benchmarks", "iqm.benchmarks.benchmark", "iqm.benchmarks.benchmark.BenchmarkBase", "iqm.benchmarks.benchmark.BenchmarkConfigurationBase", "iqm.benchmarks.benchmark_definition", "iqm.benchmarks.benchmark_definition.Benchmark", "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult", "iqm.benchmarks.benchmark_definition.BenchmarkObservation", "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier", "iqm.benchmarks.benchmark_definition.BenchmarkRunResult", "iqm.benchmarks.benchmark_definition.add_counts_to_dataset", "iqm.benchmarks.benchmark_definition.default_analysis_function", "iqm.benchmarks.benchmark_definition.merge_datasets_dac", "iqm.benchmarks.benchmark_definition.show_figure", "iqm.benchmarks.circuit_containers", "iqm.benchmarks.circuit_containers.BenchmarkCircuit", "iqm.benchmarks.circuit_containers.CircuitGroup", "iqm.benchmarks.circuit_containers.Circuits", "iqm.benchmarks.entanglement", "iqm.benchmarks.entanglement.ghz", "iqm.benchmarks.entanglement.ghz.GHZBenchmark", "iqm.benchmarks.entanglement.ghz.GHZConfiguration", "iqm.benchmarks.entanglement.ghz.extract_fidelities", "iqm.benchmarks.entanglement.ghz.fidelity_analysis", "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences", "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements", "iqm.benchmarks.entanglement.ghz.generate_ghz_linear", "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz", "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney", "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree", "iqm.benchmarks.entanglement.ghz.generate_ghz_star", "iqm.benchmarks.entanglement.ghz.get_cx_map", "iqm.benchmarks.entanglement.ghz.get_edges", "iqm.benchmarks.entanglement.ghz.plot_fidelities", "iqm.benchmarks.logging_config", "iqm.benchmarks.optimization", "iqm.benchmarks.optimization.qscore", "iqm.benchmarks.optimization.qscore.QScoreBenchmark", "iqm.benchmarks.optimization.qscore.QScoreConfiguration", "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1", "iqm.benchmarks.optimization.qscore.compute_expectation_value", "iqm.benchmarks.optimization.qscore.create_objective_function", "iqm.benchmarks.optimization.qscore.cut_cost_function", "iqm.benchmarks.optimization.qscore.get_optimal_angles", "iqm.benchmarks.optimization.qscore.is_successful", "iqm.benchmarks.optimization.qscore.plot_approximation_ratios", "iqm.benchmarks.optimization.qscore.qscore_analysis", "iqm.benchmarks.optimization.qscore.run_QAOA", "iqm.benchmarks.quantum_volume", "iqm.benchmarks.quantum_volume.clops", "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark", "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration", "iqm.benchmarks.quantum_volume.clops.clops_analysis", "iqm.benchmarks.quantum_volume.clops.plot_times", "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times", "iqm.benchmarks.quantum_volume.quantum_volume", "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark", "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration", "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities", "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop", "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std", "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs", "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops", "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector", "iqm.benchmarks.quantum_volume.quantum_volume.is_successful", "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold", "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis", "iqm.benchmarks.randomized_benchmarking", "iqm.benchmarks.randomized_benchmarking.clifford_rb", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis", "iqm.benchmarks.randomized_benchmarking.interleaved_rb", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis", "iqm.benchmarks.randomized_benchmarking.mirror_rb", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis", "iqm.benchmarks.randomized_benchmarking.multi_lmfit", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits", "iqm.benchmarks.readout_mitigation", "iqm.benchmarks.readout_mitigation.M3IQM", "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation", "iqm.benchmarks.readout_mitigation.readout_error_m3", "iqm.benchmarks.utils", "iqm.benchmarks.utils.count_2q_layers", "iqm.benchmarks.utils.count_native_gates", "iqm.benchmarks.utils.get_iqm_backend", "iqm.benchmarks.utils.marginal_distribution", "iqm.benchmarks.utils.perform_backend_transpilation", "iqm.benchmarks.utils.reduce_to_active_qubits", "iqm.benchmarks.utils.retrieve_all_counts", "iqm.benchmarks.utils.retrieve_all_job_metadata", "iqm.benchmarks.utils.set_coupling_map", "iqm.benchmarks.utils.sort_batches_by_final_layout", "iqm.benchmarks.utils.submit_execute", "iqm.benchmarks.utils.timeit", "iqm.benchmarks.utils.xrvariable_to_counts", "Changelog", "Development", "2-Qubit Clifford Group Decomposition", "How to make your own benchmark?", "Devices", "Benchmarking IQM Spark", "Benchmarking IQM Star", "Clifford Randomized Benchmarking (RB)", "Circuit Layer Operations Per Second (CLOPS)", "IQM Benchmarks: Summary Notebook", "Greenberger\u2013Horne\u2013Zeilinger (GHZ) State Fidelity", "Greenberger\u2013Horne\u2013Zeilinger (GHZ) State Fidelity", "Compressive Gate Set Tomography (GST)", "Interleaved Randomized Benchmarking (IRB)", "Mirror Randomized Benchmarking (MRB)", "Q-Score", "Quantum Volume (QV)", "QV on Deneb", "Examples", "IQM Benchmarks", "License", "IQM Benchmarks"], "terms": {"": [1, 51, 96, 102, 110, 112, 121, 135, 136, 141, 147, 150, 151], "python": 1, "librari": [1, 76, 81, 110, 132, 142], "suit": [1, 151], "qcvv": [1, 133, 149, 151], "subpackag": [1, 19, 36, 49, 68, 69, 74, 79], "modul": [1, 5, 15, 19, 35, 36, 49, 68, 69, 74, 79, 149], "gener": [2, 3, 18, 19, 21, 22, 27, 28, 29, 30, 31, 32, 38, 46, 51, 54, 57, 66, 72, 76, 77, 81, 84, 85, 86, 89, 90, 99, 100, 101, 116, 130, 135, 136, 137, 139, 140, 141, 142, 143, 150], "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 20, 21, 22, 37, 38, 39, 50, 51, 52, 56, 57, 58, 70, 71, 72, 75, 76, 77, 80, 81, 82, 99, 112, 113, 130, 132, 133, 150, 151], "inherit": [2, 3, 5, 15, 20, 37, 50, 56, 70, 75, 80, 112], "benchmarkbas": [2, 4, 151], "abc": [2, 3, 5, 6, 20, 37, 50, 56, 70, 75, 80], "benchmarkconfigurationbas": [2, 3, 6, 20, 22, 37, 39, 50, 52, 56, 58, 70, 71, 75, 76, 80, 81, 151], "pydant": [2, 4, 20, 22, 37, 39, 50, 52, 56, 58, 70, 71, 75, 76, 80, 81], "main": [2, 7, 8, 20, 37, 50, 56, 70, 75, 80, 135], "basemodel": [2, 4, 20, 37, 50, 56, 70, 75, 80], "backend": [3, 6, 21, 22, 23, 30, 38, 46, 51, 52, 57, 58, 66, 72, 77, 82, 84, 85, 86, 99, 100, 107, 108, 110, 111, 113, 114, 115, 118, 119, 121, 122, 125, 126, 127, 130, 133, 140, 141, 151], "iqmbackendbas": [3, 6, 21, 38, 51, 57, 72, 77, 82, 84, 85, 86, 99, 100, 101, 107, 108, 110, 111, 114, 118, 119, 121, 125, 127], "configur": [3, 4, 6, 21, 22, 38, 39, 51, 52, 57, 58, 65, 71, 72, 76, 77, 81, 82, 130, 150, 151], "base": [3, 4, 5, 6, 7, 8, 9, 10, 16, 17, 18, 21, 22, 25, 32, 38, 39, 41, 51, 52, 57, 58, 71, 72, 76, 77, 81, 82, 94, 113, 130, 131, 135, 136, 150], "The": [3, 6, 7, 12, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 30, 32, 33, 34, 38, 39, 42, 48, 51, 52, 54, 57, 58, 60, 61, 63, 64, 71, 72, 76, 77, 81, 82, 83, 84, 85, 95, 105, 109, 115, 118, 119, 121, 122, 123, 124, 128, 135, 136, 137, 140, 141, 142, 146, 147, 148, 150, 151], "implement": [3, 5, 6, 21, 22, 26, 140, 141], "all": [3, 4, 6, 7, 16, 17, 18, 21, 22, 32, 34, 38, 45, 51, 55, 57, 59, 60, 61, 64, 65, 71, 72, 76, 77, 82, 99, 105, 107, 108, 113, 123, 124, 130, 133, 135, 136, 137, 139, 140, 141, 143, 145, 146, 147, 148, 150, 151], "from": [3, 4, 6, 7, 11, 21, 22, 23, 30, 32, 33, 39, 42, 48, 52, 54, 55, 57, 58, 59, 64, 66, 71, 76, 81, 83, 92, 105, 106, 109, 113, 115, 119, 123, 124, 125, 129, 130, 132, 133, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151], "which": [3, 6, 7, 8, 21, 22, 23, 30, 33, 38, 39, 47, 49, 51, 52, 53, 57, 67, 71, 72, 73, 76, 77, 78, 81, 82, 88, 99, 105, 109, 113, 122, 135, 136, 140, 141, 142, 150, 151], "thei": [3, 17, 142], "method": [3, 4, 6, 7, 8, 9, 10, 16, 17, 18, 21, 22, 25, 38, 39, 51, 52, 57, 58, 71, 72, 76, 77, 81, 82, 113, 121, 130, 135, 136, 138, 139, 140, 141, 142, 146, 147], "paramet": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 135, 136, 138, 139, 140, 141, 142], "abstract": [3, 6, 142], "classmethod": [3, 6, 7], "name": [3, 4, 6, 7, 8, 16, 17, 18, 22, 34, 39, 46, 52, 54, 58, 66, 71, 76, 81, 92, 98, 99, 115, 119, 122, 130, 132, 133, 135, 136, 137, 139, 140, 141, 142, 143, 145, 146, 147, 150], "return": [3, 6, 9, 11, 12, 13, 16, 17, 18, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 77, 78, 82, 83, 84, 85, 86, 87, 88, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133], "execute_full_benchmark": 3, "execut": [3, 4, 6, 9, 16, 17, 18, 21, 32, 36, 38, 46, 49, 51, 52, 57, 58, 59, 66, 71, 72, 76, 77, 81, 82, 83, 96, 102, 107, 108, 109, 121, 127, 128, 129, 130, 133, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 150, 151], "full": [3, 52, 58, 142, 151], "given": [3, 6, 7, 11, 21, 22, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 44, 49, 51, 57, 64, 65, 74, 83, 100, 101, 126, 135, 136, 140, 141, 142, 151], "static": [3, 6, 21, 38, 51, 57, 72, 77, 82], "check_requir": 3, "all_benchmark": 3, "ordereddict": 3, "str": [3, 4, 6, 7, 8, 9, 11, 16, 17, 18, 21, 22, 23, 25, 26, 39, 41, 42, 43, 46, 48, 51, 52, 54, 55, 57, 58, 59, 62, 63, 64, 66, 71, 72, 76, 77, 81, 82, 83, 84, 85, 86, 96, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 127, 129, 132, 133, 135, 139, 140, 141, 142, 144, 146, 147], "check": [3, 45, 65, 132, 135, 136], "whether": [3, 4, 22, 39, 45, 46, 48, 51, 52, 57, 58, 65, 66, 71, 76, 100, 105, 121, 140, 141, 143, 150], "requir": [3, 4, 22, 39, 52, 58, 71, 76, 81, 132, 140, 142, 150, 151], "ar": [3, 4, 7, 11, 16, 17, 18, 21, 22, 32, 33, 57, 58, 86, 105, 111, 120, 122, 130, 132, 135, 136, 140, 141, 142, 148, 150, 151], "met": 3, "valid": [3, 110, 111, 149, 151], "dictionari": [3, 4, 7, 11, 22, 39, 42, 51, 52, 55, 57, 58, 59, 62, 63, 64, 71, 76, 81, 82, 84, 85, 95, 99, 100, 101, 103, 107, 108, 114, 115, 118, 120, 126, 129, 137, 139, 142, 143], "type": [3, 4, 6, 8, 9, 11, 12, 13, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 135, 142, 150], "generate_requir": 3, "none": [3, 4, 6, 7, 8, 16, 17, 18, 22, 30, 33, 39, 46, 51, 52, 57, 58, 71, 76, 81, 84, 85, 86, 90, 95, 98, 99, 100, 101, 105, 107, 108, 110, 113, 121, 122, 123, 127, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 151], "attribut": [3, 4, 6, 7, 8, 9, 10, 16, 17, 18, 21, 22, 38, 39, 51, 52, 57, 58, 71, 72, 76, 77, 81, 82, 128, 142, 146, 147, 150], "shot": [4, 22, 39, 52, 57, 58, 71, 76, 81, 107, 108, 113, 114, 127, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 151], "int": [4, 9, 11, 16, 17, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 41, 42, 43, 44, 46, 48, 51, 52, 54, 57, 58, 59, 62, 65, 66, 71, 76, 81, 82, 83, 84, 85, 86, 87, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 111, 113, 114, 117, 120, 121, 123, 125, 126, 127, 129, 140, 141, 142], "256": [4, 39, 52, 58, 71, 76, 81, 137, 139, 144, 145], "max_gates_per_batch": [4, 22, 39, 52, 58, 71, 76, 81, 107, 108, 127, 135, 136, 137, 138, 139, 144, 146, 147, 151], "calset_id": [4, 22, 39, 52, 58, 71, 76, 81, 107, 108, 127, 135, 136, 137, 138, 139, 143, 144, 145, 146, 147, 151], "routing_method": [4, 22, 39, 52, 58, 71, 76, 81, 85, 86, 121, 135, 136, 137, 138, 139, 144, 146, 147, 151], "liter": [4, 22, 39, 52, 58, 71, 76, 81, 125], "basic": [4, 22, 39, 52, 58, 71, 76, 81, 85, 86], "lookahead": [4, 22, 39, 52, 58, 71, 76, 81], "stochast": [4, 22, 39, 52, 58, 71, 76, 81], "sabr": [4, 22, 39, 52, 58, 71, 76, 81, 121, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 151], "physical_layout": [4, 22, 39, 52, 58, 71, 76, 81, 125, 135, 136, 137, 138, 139, 144, 146, 147, 151], "fix": [4, 22, 39, 52, 58, 71, 76, 81, 82, 85, 100, 107, 109, 125, 130, 135, 136, 137, 138, 139, 142, 146, 147, 151], "batch": [4, 17, 22, 39, 52, 58, 71, 76, 81, 107, 108, 125, 126, 127, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147], "number": [4, 21, 22, 26, 27, 28, 29, 30, 31, 32, 34, 36, 38, 39, 41, 43, 44, 46, 48, 49, 52, 57, 58, 65, 66, 68, 71, 76, 81, 82, 83, 84, 85, 86, 87, 96, 99, 100, 101, 102, 107, 108, 113, 114, 117, 118, 127, 135, 136, 138, 139, 140, 141, 142], "us": [4, 6, 9, 16, 21, 22, 23, 25, 26, 30, 32, 33, 34, 35, 39, 46, 48, 51, 52, 58, 81, 83, 98, 105, 113, 115, 127, 130, 132, 133, 135, 136, 140, 142, 143, 148, 150], "circuit": [4, 7, 10, 15, 16, 17, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 38, 39, 42, 49, 51, 52, 57, 58, 59, 62, 65, 66, 71, 72, 76, 77, 79, 81, 82, 83, 84, 85, 86, 87, 95, 96, 99, 100, 101, 102, 107, 108, 110, 113, 114, 117, 118, 121, 122, 126, 127, 129, 130, 132, 133, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149], "default": [4, 6, 12, 22, 39, 52, 57, 58, 66, 71, 76, 81, 101, 105, 113, 125, 135, 137, 139, 142, 143, 145, 147], "i": [4, 6, 7, 22, 23, 27, 30, 32, 34, 38, 39, 45, 47, 48, 51, 52, 53, 57, 58, 65, 66, 67, 71, 72, 73, 76, 77, 78, 81, 82, 83, 87, 88, 91, 106, 110, 113, 121, 125, 132, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151], "2": [4, 33, 39, 45, 58, 65, 81, 100, 106, 117, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151], "8": [4, 106, 132, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 150, 151], "maximum": [4, 48, 107, 108, 127, 135, 136, 142], "gate": [4, 21, 22, 27, 31, 32, 33, 39, 49, 51, 52, 58, 68, 69, 72, 74, 76, 77, 81, 84, 86, 95, 98, 99, 100, 101, 103, 105, 107, 108, 110, 117, 118, 121, 127, 130, 135, 140, 141, 144, 148, 149, 151], "per": [4, 49, 52, 58, 71, 81, 83, 85, 86, 87, 107, 108, 113, 114, 127, 142, 148, 149], "option": [4, 22, 33, 39, 46, 57, 58, 76, 85, 86, 95, 98, 100, 101, 105, 107, 108, 110, 121, 122, 123, 127, 130, 133, 138, 139, 141, 142, 147, 149], "calibr": [4, 6, 22, 23, 33, 57, 58, 107, 108, 113, 114, 127, 130, 139, 140, 141, 143, 145, 147], "id": [4, 127, 138, 139, 143, 145], "last": 4, "avail": [4, 150, 151], "qiskit": [4, 6, 39, 52, 58, 76, 81, 110, 121, 130, 132, 133, 135, 142], "rout": [4, 52, 58, 81, 121, 138, 139, 140, 141, 142, 146, 147], "transpil": [4, 16, 21, 22, 25, 26, 39, 51, 52, 58, 81, 99, 100, 110, 114, 118, 121, 126, 130, 133, 135, 138, 139, 140, 141, 142, 146, 147], "physic": [4, 22, 39, 51, 52, 57, 58, 62, 76, 81, 85, 125, 138, 139, 142, 146, 147, 149], "layout": [4, 8, 11, 16, 17, 22, 34, 39, 51, 52, 57, 58, 81, 82, 107, 108, 115, 121, 125, 130, 135, 138, 139, 140, 141, 142, 144, 146, 147], "constrain": [4, 125, 151], "dure": [4, 13, 57, 72, 77], "select": [4, 22, 39, 58, 64, 142], "qubit": [4, 8, 9, 11, 16, 17, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 41, 42, 48, 49, 51, 52, 57, 58, 62, 66, 68, 71, 72, 76, 81, 82, 83, 84, 85, 86, 96, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 111, 113, 115, 117, 121, 122, 125, 126, 130, 131, 133, 135, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 149], "initi": [4, 6, 22, 35, 115, 135, 142], "allow": [4, 130, 135, 136, 140, 141, 151], "ani": [4, 8, 25, 26, 55, 57, 76, 82, 87, 105, 107, 108, 114, 122, 124, 132, 136, 150, 151], "other": [4, 22, 130, 135, 136, 150, 151], "accord": [4, 21, 28, 29, 38, 84, 125, 126, 132, 138, 139, 142, 146, 147], "final": [4, 6, 33, 52, 57, 58, 62, 81, 121, 125, 126, 135], "measur": [4, 21, 22, 25, 38, 41, 51, 52, 57, 58, 62, 71, 76, 81, 109, 114, 118, 125, 126, 133, 135, 136, 138, 140, 141, 142], "model_computed_field": [4, 22, 39, 52, 58, 71, 76, 81], "classvar": [4, 22, 39, 52, 58, 71, 76, 81], "dict": [4, 7, 11, 22, 25, 26, 39, 41, 42, 48, 51, 52, 54, 55, 57, 58, 59, 62, 63, 64, 71, 76, 81, 82, 83, 84, 85, 86, 95, 96, 99, 100, 101, 102, 103, 105, 107, 108, 109, 114, 115, 118, 120, 123, 124, 126, 127, 129, 133], "computedfieldinfo": [4, 22, 39, 52, 58, 71, 76, 81], "A": [4, 6, 7, 9, 10, 11, 13, 16, 17, 21, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 47, 51, 52, 53, 55, 57, 58, 63, 64, 67, 71, 72, 73, 76, 81, 82, 84, 85, 88, 95, 98, 100, 101, 107, 108, 120, 121, 122, 125, 129, 135, 140, 141, 142, 150, 151], "comput": [4, 21, 22, 24, 30, 39, 41, 42, 52, 57, 58, 59, 60, 61, 63, 71, 76, 81, 95, 96, 102, 120, 132, 135, 136, 140, 142, 149, 150, 151], "field": [4, 6, 22, 39, 52, 58, 71, 76, 81, 150], "correspond": [4, 22, 38, 39, 47, 49, 51, 52, 53, 57, 58, 62, 66, 67, 71, 72, 73, 76, 77, 78, 81, 82, 83, 84, 85, 88, 105, 109, 114, 126, 130, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147], "object": [4, 7, 8, 9, 10, 16, 17, 18, 21, 22, 24, 34, 39, 52, 57, 58, 71, 76, 81, 82, 90, 107, 108, 119, 123, 124, 127, 142, 146, 147, 150], "model_config": [4, 22, 39, 52, 58, 71, 76, 81], "configdict": [4, 22, 39, 52, 58, 71, 76, 81], "model": [4, 22, 39, 52, 58, 71, 76, 81, 98, 104, 105, 135], "should": [4, 6, 8, 10, 21, 22, 30, 35, 39, 52, 58, 71, 76, 81, 100, 130, 138, 139, 140, 141, 142, 150], "conform": [4, 22, 39, 52, 58, 71, 76, 81], "config": [4, 22, 39, 52, 58, 71, 76, 81], "model_field": [4, 22, 39, 52, 58, 71, 76, 81], "fieldinfo": [4, 22, 39, 52, 58, 71, 76, 81], "annot": [4, 22, 39, 52, 58, 71, 76, 81, 115, 150], "true": [4, 22, 25, 39, 52, 57, 58, 71, 76, 81, 105, 121, 132, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 151], "union": [4, 22, 39, 52, 58, 71, 76, 81, 115, 142, 150], "nonetyp": [4, 22, 39, 52, 58, 71, 76, 81], "fals": [4, 22, 39, 52, 58, 66, 71, 76, 81, 105, 113, 121, 135, 137, 139, 146], "metadata": [4, 21, 22, 34, 38, 39, 51, 52, 55, 57, 58, 71, 72, 76, 77, 81, 82, 124], "about": [4, 22, 39, 52, 58, 71, 76, 81, 130, 140], "defin": [4, 5, 6, 7, 22, 30, 32, 39, 52, 58, 71, 76, 81, 99, 122, 133, 135, 140, 141, 150, 151], "map": [4, 7, 22, 30, 33, 39, 41, 42, 52, 58, 71, 76, 81, 121, 125, 126, 130, 140, 141], "thi": [4, 5, 6, 15, 16, 21, 22, 30, 34, 39, 45, 52, 58, 65, 71, 76, 81, 106, 115, 131, 132, 133, 134, 135, 136, 140, 141, 142, 148, 150, 151], "replac": [4, 22, 39, 52, 58, 71, 76, 81, 150], "__fields__": [4, 22, 39, 52, 58, 71, 76, 81], "v1": [4, 22, 39, 52, 58, 71, 76, 81], "function": [5, 6, 20, 37, 38, 42, 47, 50, 51, 53, 56, 57, 67, 70, 72, 73, 75, 77, 78, 80, 82, 88, 89, 91, 92, 94, 95, 97, 98, 104, 106, 112, 116, 128, 130, 142], "benchmarkobservationidentifi": [5, 8, 130, 137, 139, 143, 145, 146, 147], "benchmarkobserv": [5, 7, 34, 130, 137, 139, 143, 145, 146, 147], "benchmarkrunresult": [5, 6, 7, 12, 21, 24, 38, 47, 51, 53, 57, 67, 72, 73, 77, 78, 82, 88, 130], "benchmarkanalysisresult": [5, 6, 12, 21, 24, 38, 47, 51, 53, 57, 67, 72, 73, 77, 78, 82, 88, 130], "kwarg": 6, "run": [6, 7, 8, 10, 21, 22, 24, 38, 42, 47, 51, 52, 53, 57, 67, 72, 73, 77, 78, 82, 88, 133, 135, 136, 139, 142, 148, 151], "cortex": [6, 11], "experi": [6, 34, 38, 46, 47, 51, 53, 54, 57, 58, 60, 61, 67, 72, 73, 77, 78, 82, 88, 97, 104, 105, 109, 111, 139, 148], "In": [6, 135, 136, 142, 150, 151], "order": [6, 23, 33, 34, 98, 106, 140, 141, 151], "write": [6, 113, 132, 133, 150], "new": [6, 7, 11, 122, 130, 133, 135, 136, 142, 147, 151], "recommend": [6, 142, 150, 151], "deriv": [6, 150], "baseclass": 6, "addition": [6, 140, 141], "custom": [6, 39, 58, 135, 136, 139, 145, 146, 147, 151], "analysi": [6, 7, 12, 38, 47, 51, 53, 54, 57, 67, 72, 73, 77, 78, 82, 88, 130, 135], "can": [6, 10, 16, 22, 23, 36, 38, 49, 57, 115, 130, 135, 140, 141, 142, 146, 147, 151], "give": [6, 42, 130, 135, 140, 141, 142, 150], "pointer": 6, "analysis_funct": [6, 21, 38, 51, 57, 72, 77, 82, 133], "accept": [6, 46, 130, 150], "analysisresult": [6, 7, 21, 24, 38, 47, 51, 53, 57, 67, 72, 73, 77, 78, 82, 88, 130, 133], "its": [6, 92, 122, 130, 135, 136, 150], "input": [6, 11, 52, 58, 87, 106, 110, 111, 115, 125, 138, 139, 142], "result": [6, 7, 8, 10, 11, 12, 34, 36, 38, 41, 47, 48, 49, 51, 53, 57, 58, 65, 66, 67, 72, 73, 77, 78, 82, 88, 96, 102, 104, 125, 130, 133, 135, 136, 139, 146, 147, 150, 151], "onli": [6, 12, 52, 58, 122, 135, 136, 140, 141, 142, 144, 150], "pass": [6, 12, 87, 115, 121, 133, 139, 145], "through": [6, 12, 26, 150], "iqmbackend": [6, 57, 82, 107, 108, 147], "iqmfacadebackend": 6, "dataset": [6, 7, 10, 11, 13, 21, 24, 25, 26, 34, 38, 51, 54, 57, 72, 77, 82, 89, 91, 105, 129, 130, 133, 135, 136, 137, 139, 140, 142, 143, 146, 147], "overridden": 6, "an": [6, 16, 17, 21, 22, 24, 25, 38, 51, 77, 78, 106, 110, 114, 115, 130, 132, 133, 135, 136, 140, 141, 142, 150, 151], "xarrai": [6, 7, 11, 13, 21, 25, 38, 51, 57, 72, 77, 82, 129, 130, 133], "contain": [6, 7, 9, 10, 13, 15, 16, 17, 18, 21, 23, 24, 25, 26, 34, 82, 84, 107, 108, 122, 130, 135, 136, 142, 146, 147, 148, 150, 151], "inform": [6, 10, 33, 35, 150], "necessari": [6, 135, 140, 141, 151], "analys": 6, "calibration_set_id": [6, 141, 147], "uuid": 6, "calibrationsetid": 6, "latest": [6, 127, 140, 141, 149], "set": [6, 16, 17, 21, 39, 52, 58, 84, 85, 87, 93, 105, 118, 125, 127, 132, 135, 136, 140, 143, 148, 149, 151], "runresult": [6, 7, 10, 21, 24, 38, 47, 51, 53, 57, 67, 72, 73, 77, 78, 82, 88, 130, 133], "analyz": [6, 10, 21, 24, 117, 133, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 151], "run_index": [6, 139, 146, 147], "1": [6, 39, 43, 64, 81, 85, 86, 97, 100, 106, 121, 132, 133, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151], "intern": [6, 17], "perform": [6, 39, 52, 58, 98, 109, 121, 135, 142, 148, 150, 151], "make": [6, 57, 127, 131, 135, 149, 150, 151], "shallow": 6, "copi": [6, 132, 150], "produc": [6, 33, 58, 151], "therefor": [6, 45, 65], "chang": [6, 130, 147, 149, 150], "data": [6, 7, 11, 21, 22, 23, 25, 33, 54, 66, 90, 93, 98, 104, 113, 133, 138, 139, 140, 141, 142, 146, 147], "just": [6, 135], "structur": [6, 135, 136], "arrai": [6, 51, 71, 76, 81, 105, 106, 111, 115, 142], "index": [6, 21, 23, 30, 32, 33, 51, 57, 85, 136, 146, 147, 149], "construct": [6, 22, 27], "updat": [6, 51, 52, 130, 135, 136, 138, 139, 151], "core": 7, "circuit_contain": 7, "plot": [7, 21, 24, 34, 66, 105, 130, 133, 135, 136, 137, 139, 140, 141, 143, 151], "matplotlib": [7, 133, 135, 136, 142], "figur": [7, 14, 34, 46, 54, 66, 105, 133, 139, 142], "factori": [7, 16, 17, 18], "observ": [7, 8, 9, 21, 24, 34, 54, 105, 130, 135, 136, 137, 139, 140, 141, 143, 145, 146, 147], "list": [7, 9, 11, 13, 16, 17, 18, 21, 22, 23, 25, 26, 30, 32, 33, 34, 38, 40, 41, 42, 44, 46, 48, 51, 52, 57, 59, 60, 61, 62, 63, 65, 66, 81, 82, 83, 84, 85, 86, 87, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 117, 118, 120, 121, 123, 124, 125, 126, 127, 129, 130, 132, 136, 140, 141, 142, 146, 147, 150, 151], "dataclass": [7, 8, 10], "store": [7, 8, 10, 34, 130, 151], "consist": [7, 140, 141, 150], "kei": [7, 41, 48, 51, 57, 62, 81, 84, 118, 120, 126, 132, 142, 146, 147], "valu": [7, 8, 21, 22, 26, 30, 41, 42, 48, 51, 52, 81, 84, 97, 118, 120, 121, 126, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147], "pair": [7, 23, 31, 33, 51, 111, 135], "plot_nam": 7, "plot_al": [7, 133, 135, 136, 138, 139, 140, 141, 142, 145, 146, 147], "from_run_result": 7, "creat": [7, 21, 22, 30, 31, 38, 42, 47, 51, 53, 57, 67, 72, 73, 77, 78, 82, 88, 131, 133, 141, 147, 151], "identifi": [8, 9, 11, 57, 82, 98, 105, 107, 108, 110, 123, 129, 135, 137, 139, 140, 141, 142, 143, 145, 146, 147, 150], "uncertainti": [8, 26, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147], "singl": [8, 10, 13, 16, 18, 22, 34, 39, 40, 51, 52, 57, 58, 84, 91, 130, 135, 136, 142, 151], "string": [8, 9, 11, 17, 18, 123, 151], "qubit_indic": [9, 16, 137, 139, 143, 145, 146, 147], "eas": 9, "indic": [9, 57, 62, 120, 126, 150], "wa": [9, 45, 65, 109, 135, 136, 150], "properti": [9, 16, 17], "string_identifi": [9, 135, 139, 140, 141, 142], "version": [9, 89, 132, 135, 136, 150, 151], "enough": [10, 140, 141], "those": [10, 57, 62, 125, 135, 136, 142, 150], "count": [11, 21, 22, 24, 41, 42, 48, 57, 59, 83, 96, 102, 109, 114, 115, 118, 123, 124, 129, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147], "add": [11, 17, 21, 32, 38, 51, 57, 72, 77, 82, 84, 128, 130, 132, 150, 151], "job": [11, 51, 55, 57, 82, 107, 108, 123, 133, 137, 138, 139, 143, 144, 146, 147], "If": [11, 22, 39, 81, 135, 136, 142, 144, 150], "same": [11, 17, 23, 33, 81, 135, 136, 138, 139, 140, 141, 150], "alreadi": [11, 137], "present": 11, "old": 11, "both": [11, 58, 135, 143, 151], "ad": [11, 130, 137, 139, 140, 143, 144, 146, 147], "togeth": [11, 151], "bitstr": [11, 41, 42, 43, 48, 64, 109, 120], "current": [11, 22, 51, 113, 140, 141, 142, 151], "instanc": [11, 16, 17, 25, 26, 46, 130, 142], "xr": [11, 13, 21, 25, 26, 34, 38, 51, 54, 57, 72, 77, 82, 105, 129, 133], "merg": [11, 13], "where": [11, 16, 17, 22, 86, 130, 135, 136, 140, 141, 142, 150], "dataset_merg": 11, "recurs": 13, "minim": [13, 22, 30, 32, 104, 140, 141], "size": [13, 22, 30, 36, 38, 46, 48, 133, 135, 139, 145], "dateset": 13, "fig": [14, 34, 133], "show": [14, 133, 135, 136, 139, 140, 141], "close": [14, 133], "easili": [15, 130, 151], "interact": [15, 130], "quantum": [15, 21, 22, 25, 27, 28, 29, 30, 31, 38, 49, 51, 52, 56, 57, 58, 59, 62, 65, 67, 84, 85, 96, 100, 101, 102, 113, 114, 117, 118, 121, 122, 127, 130, 140, 141, 142, 148, 149, 151], "circuitgroup": [15, 16, 21, 130], "benchmarkcircuit": [15, 18, 130], "circuit_group": 16, "group": [16, 17, 72, 131, 135, 149], "purpos": [16, 17, 150], "typic": [16, 17, 135, 136], "repres": [16, 17, 54, 66, 120, 150], "exampl": [16, 89, 130, 131, 133, 134, 140, 142, 149, 150, 151], "insid": [16, 130], "get_circuit_group_by_nam": 16, "get": [16, 92, 119, 139, 144], "desir": [16, 17], "doe": [16, 22, 150], "exist": [16, 18, 130, 135, 136, 151], "group_nam": 16, "integ": [16, 17, 22, 57, 62, 85], "qubit_layouts_by_index": [16, 17], "tupl": [16, 17, 22, 23, 26, 30, 41, 42, 46, 48, 51, 52, 54, 57, 62, 66, 82, 98, 99, 100, 101, 103, 105, 107, 114, 121, 126, 127], "qubit_layout": [16, 17, 21, 23, 25, 26, 30, 32, 33, 34, 135, 139, 140, 141, 142], "qiskit_iqm": [17, 22, 130, 133, 135, 136, 139, 140, 141, 147], "iqm_circuit": 17, "iqmcircuit": [17, 21, 27, 28, 29, 30, 31, 51, 57, 62, 82, 84, 85, 86, 95, 99, 100, 101, 103, 107, 108, 110, 114, 117, 118, 121, 122, 126, 127, 130], "It": [17, 132, 135, 136, 140, 151], "common": [17, 94, 150], "activ": [17, 122, 151], "add_circuit": 17, "circuit_nam": 17, "get_circuits_by_nam": 17, "share": [17, 150, 151], "found": [17, 23, 135, 136, 151], "benchmark_circuit": 18, "get_benchmark_circuits_by_nam": 18, "request": 18, "otherwis": [18, 150], "ghz": [19, 130, 148, 149, 151], "verifi": [19, 110, 132], "greenberg": [19, 21, 135, 136, 148, 149], "horn": [19, 21, 135, 136, 148, 149], "zeiling": [19, 21, 135, 136, 148, 149], "state": [19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 96, 102, 130, 133, 142, 148, 149, 150, 151], "ghzbenchmark": [20, 22, 135, 136, 139, 140, 141], "benchmark_definit": [20, 22, 37, 39, 50, 52, 56, 58, 70, 71, 75, 76, 80, 81, 133], "ghzconfigur": [20, 21, 135, 136, 139, 140, 141], "estim": [21, 22, 25, 26, 36, 38, 52, 57, 72, 77, 82, 83, 109, 130, 135, 136, 138, 139, 140, 141, 143], "qualiti": [21, 135, 136], "fidel": [21, 22, 23, 24, 25, 26, 32, 33, 34, 52, 68, 69, 72, 74, 77, 79, 82, 83, 98, 105, 130, 142, 148, 149, 151], "generate_native_ghz": 21, "qubit_count": [21, 22], "routin": [21, 22, 39, 58, 98], "prepar": [21, 133, 135, 140, 141, 142, 150], "nativ": [21, 33, 100, 101, 103, 110, 118, 130, 135], "topologi": [21, 39, 121, 125, 130, 135, 136, 141], "subset": [21, 23, 25, 26, 30, 32, 33], "system": [21, 22, 23, 25, 26, 30, 32, 33, 113, 135, 136, 142, 150, 151], "protocol": [21, 23, 25, 26, 30, 32, 33, 135, 136, 148], "0": [21, 23, 30, 32, 33, 38, 45, 58, 81, 84, 85, 86, 106, 121, 125, 132, 133, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151], "smaller": [21, 22, 30, 135], "equal": [21, 30, 57, 130, 135, 136], "quantumcircuit": [21, 27, 28, 29, 30, 31, 38, 51, 57, 62, 82, 84, 95, 99, 100, 101, 107, 108, 114, 117, 121, 122, 126, 127, 130, 132, 133, 142], "generate_coherence_meas_circuit": 21, "take": [21, 22, 121, 128, 130, 135, 136, 142, 151], "output": [21, 35, 59, 60, 61, 62, 63, 64, 65, 113, 130, 132, 135, 136, 142, 146, 147, 151], "need": [21, 51, 115, 135, 136, 142, 151], "via": [21, 22, 135, 136, 142], "mult": 21, "q": [21, 36, 38, 39, 45, 139, 142, 148, 149, 151], "coher": [21, 22, 25, 135, 136, 139, 140, 141], "qc_list_transpil": 21, "append_rm": 21, "num_rm": [21, 22, 140, 141], "append": [21, 51, 132, 133, 142], "1q": [21, 103, 130, 135], "clifford": [21, 69, 70, 71, 72, 73, 75, 76, 77, 84, 95, 99, 100, 101, 103, 110, 111, 130, 131, 143, 148, 149, 151], "sampl": [21, 42, 48, 58, 64, 76, 81, 83, 84, 85, 86, 87, 99, 100, 101, 142], "uniformli": [21, 135], "random": [21, 22, 39, 51, 68, 70, 75, 76, 80, 81, 84, 86, 94, 100, 101, 130, 132, 136, 138, 140, 141, 142, 145, 148, 149, 151], "param": [21, 27, 28, 29, 31, 51, 60, 72, 77, 87, 91, 93, 95, 96, 107, 108, 109, 111, 120, 123, 124], "how": [21, 131, 134, 142, 148, 149, 150, 151], "mani": [21, 51, 130, 140], "origin": [21, 57, 62, 121, 122, 150], "generate_readout_circuit": 21, "wrapper": 21, "creation": [21, 140], "differ": [21, 54, 81, 135, 140, 141, 142, 146, 147, 148, 150, 151], "all_circuits_list": 21, "add_configuration_to_dataset": 21, "further": [21, 130], "storag": [21, 130], "1024": 22, "state_generation_routin": [22, 135, 136, 139, 140, 141], "tree": [22, 30, 32, 135, 139, 140, 141], "custom_qubits_arrai": [22, 38, 39, 58, 135, 136, 139, 140, 141, 145, 146, 147, 151], "sequenc": [22, 39, 52, 57, 58, 71, 76, 81, 82, 83, 96, 99, 100, 101, 102, 121, 125, 135, 137, 139, 142, 143], "qiskit_optim_level": [22, 39, 52, 58, 81, 85, 86, 121, 135, 136, 138, 139, 144, 146, 147, 151], "3": [22, 39, 52, 58, 65, 106, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151], "optimize_sqg": [22, 39, 51, 52, 58, 121, 135, 136, 138, 139, 146, 147, 151], "bool": [22, 39, 45, 46, 48, 51, 52, 57, 58, 65, 66, 71, 76, 105, 113, 121], "fidelity_routin": [22, 135, 136, 139, 140, 141], "100": [22, 52, 58, 135, 136, 138, 139, 142, 145, 151], "rem": [22, 25, 39, 58, 66, 114, 130, 135, 136, 139, 140, 141, 145, 146, 147, 151], "mit_shot": [22, 39, 57, 58, 114, 135, 136, 139, 140, 141, 145, 146, 147, 151], "1000": [22, 39, 58, 114, 133, 135, 136, 139, 140, 141, 142, 145, 146, 147], "cal_url": [22, 23], "possibl": [22, 140, 141, 146, 147, 150], "optim": [22, 51, 52, 58, 81, 121, 130, 135, 136, 138, 139, 140, 141, 142, 145, 146, 147, 151], "log": [22, 28, 29, 30, 32], "depth": [22, 27, 28, 29, 30, 39, 57, 66, 81, 82, 85, 86, 97, 100, 104, 107, 109, 135, 136, 137, 138, 139, 140, 141, 143, 144], "coupl": [22, 23, 30, 33, 52, 58, 121, 125, 135, 140, 141], "cz": [22, 23, 31, 32, 33, 100, 118, 121, 132, 135, 138, 140, 141], "account": [22, 39, 121, 142, 151], "algorithm": [22, 32, 84, 135, 136, 140, 141], "span": [22, 30, 32], "choos": [22, 38, 136, 140, 141, 150], "largest": [22, 135, 136, 140, 141], "weight": [22, 32, 33, 64], "distanc": [22, 32, 142], "parallel": [22, 32, 49, 71, 76, 100, 107, 109, 117, 135, 136, 138, 139, 140, 141, 143], "applic": [22, 32, 84, 132, 140, 141, 150], "cx": [22, 27, 32, 51], "scale": [22, 135, 136], "logarithm": [22, 140, 141], "connect": [22, 32, 111, 130, 140, 141], "naiv": [22, 39, 140, 141], "appli": [22, 27, 32, 51, 58, 130, 139, 140, 141, 144, 150], "textbook": [22, 140, 141], "linearli": 22, "specifi": [22, 52, 57, 58, 76, 82, 84, 85, 107, 108, 111, 118, 120, 125, 127, 135, 136, 144, 151], "assum": [22, 34, 106, 150], "e": [22, 76, 81, 106, 129, 135, 136, 138, 139, 140, 141, 142, 146, 147], "g": [22, 76, 81, 106, 129, 132, 135, 136, 138, 139, 140, 141, 142, 146, 147], "label": [22, 52, 66, 76, 85, 95, 101, 105, 121, 125, 130, 132, 133, 135, 140, 141], "meant": 22, "NOT": 22, "support": [22, 33, 150], "denot": 22, "provid": [22, 44, 131, 133, 134, 135, 136, 139, 150], "here": [22, 83, 133, 135, 136, 142], "ha": [22, 39, 135, 136, 137, 142, 144, 147, 150, 151], "than": [22, 135, 136, 140, 141, 144], "small": [22, 130], "level": [22, 39, 52, 58, 81, 135, 136, 138, 139, 140, 141, 146, 147], "architectur": 22, "consecut": 22, "reduc": [22, 122], "iqm_transpil": 22, "optimize_single_qubit_g": 22, "multipl": [22, 25, 89, 130, 135, 136, 140, 141], "moonei": [22, 25, 135, 136, 140, 141], "2021": [22, 25, 135, 136, 140, 141, 151], "randomized_measur": [22, 140, 141], "outlin": 22, "http": [22, 26, 28, 29, 89, 132, 133, 136, 139, 140, 142, 150, 151], "arxiv": [22, 26, 28, 29, 52, 84, 132, 140, 141, 151], "org": [22, 26, 28, 29, 132, 140, 142, 150], "ab": [22, 26, 28, 29, 132, 140], "1812": [22, 26], "02624": [22, 26], "respect": [22, 81, 83, 135, 141], "chosen": [22, 39, 135, 136, 140, 141, 142], "boolean": [22, 140, 141], "flag": 22, "determin": [22, 150], "readout": [22, 25, 39, 57, 58, 63, 112, 113, 115, 130, 139, 140, 141], "error": [22, 25, 39, 57, 58, 63, 105, 115, 130, 135, 139, 140, 141, 142], "mitig": [22, 25, 39, 57, 58, 63, 112, 113, 114, 115, 130, 139, 140, 141], "total": [22, 93, 132, 135, 136, 140, 141], "url": [22, 23, 135, 151], "retriev": [22, 51, 55, 123, 124, 129, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147], "priorit": 22, "high": [22, 135, 136, 140, 141], "float": [23, 33, 38, 40, 41, 43, 44, 45, 46, 48, 51, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 76, 81, 83, 84, 85, 86, 96, 97, 98, 102, 105, 109, 110, 113, 115, 118, 120], "under": [23, 130, 132, 135, 142, 150], "each": [23, 32, 34, 46, 60, 61, 62, 66, 76, 81, 83, 86, 90, 109, 114, 118, 137, 138, 139, 140, 141, 142, 143, 144, 150, 151], "list_fid": 23, "wai": [23, 33, 130, 135, 136], "list_coupl": 23, "ideal_prob": 26, "num_qubit": [26, 27, 28, 29, 31, 38, 39, 57, 83, 96, 102, 136, 138, 141], "cross": [26, 135, 136, 150], "correl": [26, 140], "rm": 26, "eq": [26, 132], "34": [26, 133, 137, 138, 139, 141, 145, 146], "hadamard": [27, 132, 141], "seri": 27, "linear": [27, 141], "fashion": 27, "symmetr": 27, "halv": 27, "1807": [28, 140, 141], "05572": [28, 140, 141], "2101": [29, 140, 141], "08946": [29, 140, 141], "graph": [30, 32, 33, 38, 39, 40, 41, 42, 43, 45, 46, 48, 135, 136, 140, 141], "n_state": [30, 135], "networkx": [30, 32, 33, 38, 40, 41, 42, 43, 135, 136], "n": [30, 39, 72, 82, 132, 135, 136, 140, 141], "participating_qubit": 30, "qc": [30, 51, 132, 133, 151], "maxim": [31, 135, 136], "between": [31, 32, 86, 113, 135, 136, 140], "move": [31, 130, 147], "calcul": [32, 40, 46, 62, 93, 117, 128, 130, 135, 136], "cx_map": 32, "particip": 32, "2qb": 32, "them": [32, 133, 151], "subgraph": 32, "edg": [32, 33, 41, 42, 43, 84, 135, 136], "Then": [32, 151], "find": [32, 135, 136, 140, 141], "most": [32, 142], "central": 32, "posit": 32, "next": 32, "start": [32, 38, 106, 135, 138, 139, 140, 141, 142, 151], "smallest": 32, "layer": [32, 40, 44, 48, 49, 51, 52, 57, 81, 82, 84, 85, 86, 107, 117, 139, 148, 149, 151], "first": [32, 38, 51, 81, 140, 141, 142, 144, 146, 147, 148], "coupling_map": [33, 121, 135, 136, 140], "couplingmap": [33, 125], "edges_c": 33, "fidelities_c": 33, "have": [33, 100, 135, 136, 150, 151], "v": [34, 46, 51, 53, 135, 136, 139, 143], "user": [34, 147, 151], "identif": [34, 150], "logger": [35, 128], "everi": 35, "warn": [35, 132, 135, 136, 141, 147], "score": [36, 38, 39, 45, 139, 148, 149, 151], "combinatori": [36, 38, 135, 136], "problem": [36, 38, 40, 41, 42, 43, 45, 46, 135, 136, 151], "meaning": [36, 38, 49, 57, 58], "qscorebenchmark": [37, 39, 135, 136, 139, 145], "qscoreconfigur": [37, 38, 135, 136, 139, 145], "backend_arg": [38, 51, 57, 72, 77, 82, 84, 85, 86, 99, 100, 101, 107, 108, 110, 111, 114, 118], "generate_maxcut_ansatz": 38, "theta": 38, "ansatz": [38, 40, 42, 44, 48], "qaoa": [38, 39, 40, 44, 48], "maxcut": [38, 40, 41, 42, 43, 44, 48, 135, 136, 139, 145], "end": [38, 51, 57, 132, 150], "variat": [38, 135, 136], "gamma": [38, 40], "beta": [38, 40, 45, 46, 135, 136, 139, 145], "add_all_meta_to_dataset": [38, 51, 57, 77, 82], "variabl": [38, 51, 57, 72, 77, 82, 98, 133, 142, 151], "choose_qubits_na": 38, "sequenti": [38, 108, 137, 139], "choose_qubits_custom": 38, "element": 38, "match": 38, "num_inst": [39, 46, 135, 136, 139, 145], "num_qaoa_lay": [39, 135, 136, 139, 145], "min_num_nod": [39, 135, 136, 139, 145], "max_num_nod": [39, 135, 136, 139, 145], "use_virtual_nod": [39, 46, 135, 136, 139, 145], "use_classically_optimized_angl": [39, 46, 135, 136, 139, 145], "choose_qubits_routin": [39, 58, 135, 136, 139, 145, 146, 147, 151], "min_num_qubit": 39, "seed": [39, 135, 136, 139, 145], "qpu_topologi": [39, 135, 136, 145], "crystal": [39, 135, 145], "min": [39, 113, 135, 136], "node": [39, 41, 42, 46, 48, 135, 136, 145], "taken": [39, 135, 136], "max": [39, 135, 136], "increas": [39, 106, 142], "potenti": 39, "pre": 39, "optimis": 39, "tune": 39, "minumum": 39, "virtual_nod": [39, 41, 42, 48], "upon": [39, 52, 58], "qpu": [39, 112, 130, 135, 136, 141], "either": [39, 98, 115, 118, 132, 140, 141, 142, 150, 151], "star": [39, 121, 125, 130, 134, 135, 141, 149], "angl": [40, 44, 46, 48], "qubit_to_nod": [41, 42], "expect": [41, 42, 48, 81, 84, 86, 130, 135], "val": 41, "virtual": [41, 42, 46, 48, 121], "cut": [41, 42, 43, 48, 135, 136], "avg": [41, 139, 142, 145], "callabl": [42, 98, 104], "parametr": [42, 49, 51, 52, 135, 136, 138, 139, 142], "x": [43, 91, 93, 105, 130, 132, 133, 141, 142, 144, 146, 147], "minu": 43, "sign": 43, "solut": [43, 135, 136], "multipli": 43, "obj": 43, "num_lay": 44, "approximation_ratio": [45, 139], "approxim": [45, 46, 135, 136, 139, 145], "ratio": [45, 46, 135, 136, 139, 145], "abov": [45, 65, 135, 136, 142, 150], "being": [45, 51, 57, 62, 65, 66, 83, 84, 96, 102, 118, 120, 135, 136], "success": [45, 65, 135, 136], "condit": [45, 65, 140, 141, 150], "mean": [45, 118, 132, 135, 136, 138, 142, 150], "threshold": [45, 46, 58, 65, 66, 135, 136], "beta_ratio": 46, "beta_std": 46, "backend_nam": [46, 66, 122, 137, 138, 144, 146, 147], "timestamp": [46, 66, 137, 144], "includ": [46, 54, 130, 135, 136, 140, 141, 150], "standard": [46, 58, 61, 70, 105, 118, 142, 151], "deviat": [46, 58, 61, 105, 118], "classic": [46, 48, 57], "graph_phys": 48, "qubit_nod": 48, "use_classical_angl": 48, "qaoa_lay": 48, "solv": [48, 135, 136], "averag": [48, 60, 65, 66, 72, 77, 83, 98, 130, 135, 136, 141, 142], "presenc": 48, "volum": [49, 56, 57, 58, 67, 130, 148, 149, 151], "reflect": [49, 51, 57, 68, 69, 74, 79], "deepest": [49, 57], "oper": [49, 68, 110, 118, 130, 132, 140, 141, 142, 148, 149], "second": [49, 51, 148, 149], "clop": [49, 130, 148, 149, 151], "speed": [49, 51, 135, 136], "clops_v": [49, 135, 136, 138], "qv": [49, 51, 52, 57, 58, 60, 61, 65, 66, 130, 135, 136, 138, 139, 148, 149], "clops_h": [49, 52, 138], "squar": [49, 135, 136, 142], "clopsbenchmark": [50, 52, 135, 136, 138, 139], "clopsconfigur": [50, 51, 135, 136, 138, 139], "h": [51, 53], "append_parameterized_unitari": 51, "q0": 51, "q1": 51, "decompos": [51, 135], "su": 51, "4": [51, 106, 132, 133, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151], "involv": [51, 135, 136], "belong": 51, "generate_single_circuit": [51, 57], "generate_circuit_list": [51, 57], "generate_random_paramet": 51, "ndarrai": [51, 97, 98, 104], "templat": [51, 135, 136, 138, 139], "np": [51, 97, 104, 132, 135, 136, 139, 140, 142, 143], "float64": 51, "assign_random_parameters_to_al": 51, "dict_parametrized_circ": 51, "clops_cycl": 51, "sorted_transpiled_qc_list": [51, 57, 127], "cycl": 51, "assign": [51, 52, 81, 135, 136, 138, 139], "elaps": [51, 54, 55, 128, 138, 139], "time": [51, 54, 55, 57, 82, 107, 108, 128, 135, 136, 138, 139, 141, 142], "submiss": [51, 57, 82, 107, 108, 135, 136, 150], "generate_transpiled_clops_templ": 51, "num_circuit": [52, 58, 135, 136, 138, 139, 142, 146, 147, 151], "num_upd": [52, 135, 136, 138, 139], "10": [52, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 151], "num_shot": [52, 135, 136, 138, 139], "clops_h_bool": [52, 138, 139], "one": [52, 106, 127, 133, 135, 140, 141, 142, 144, 150, 151], "establish": [52, 138, 139], "By": [52, 138, 139], "definit": [52, 135, 136, 138, 139, 150], "2110": [52, 151], "14108": [52, 151], "quant": [52, 84, 151], "ph": [52, 84, 151], "rigor": [52, 142], "loos": 52, "www": [52, 132, 150], "ibm": [52, 113], "com": [52, 136], "blog": 52, "metric": [52, 135, 136, 142, 143], "restrict": [52, 58, 125, 139, 146, 147], "consid": [52, 58, 125], "clops_data": 54, "job_meta": 55, "quantumvolumebenchmark": [56, 58, 135, 136, 139, 146, 147], "quantumvolumeconfigur": [56, 57, 135, 136, 139, 146, 147, 151], "add_all_circuits_to_dataset": [57, 72, 77], "classical_permut": 57, "permut": 57, "avoid": 57, "swap": [57, 132], "get_rem_quasidistro": 57, "sorted_qc_list_indic": [57, 62], "execution_result": [57, 59], "quasicollect": [57, 63, 114], "quasiprob": [57, 63, 114, 115], "qubii": 57, "untranspil": [57, 62, 99, 121, 130], "submit_single_qv_job": 57, "submit": [57, 82, 107, 108, 127, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 150], "vanilla": [57, 66, 82, 107, 108], "dd": [57, 66, 82, 107, 108], "num_sigma": [58, 65, 66, 135, 136, 139, 146, 147, 151], "least": [58, 135, 136, 142, 150], "criteria": 58, "consensu": 58, "post": [58, 137, 139, 143, 144, 146, 147], "process": [58, 135, 136, 137, 139, 143, 144, 146, 147], "when": [58, 130, 135, 140, 141, 151], "unmitig": 58, "1_000": [58, 135, 136, 139, 146, 147, 151], "ideal_heavy_output": [59, 63], "hop": [59, 60, 61, 65, 66, 130], "ideal": [59, 83, 135, 136], "heavi": [59, 60, 61, 62, 63, 64, 65, 135, 136], "cumul": [60, 61], "probabl": [60, 61, 63, 64, 81, 84, 96, 102, 109, 120, 135, 136, 144, 151], "individu": [60, 61, 105, 130, 135, 140, 141, 142, 150, 151], "trial": [60, 61], "qc_list": [62, 121], "bitrstr": 62, "all_rem_quasidistro": 63, "distribut": [63, 64, 120, 132, 135, 136, 150], "noiseless": [63, 139, 146, 147], "project": [64, 151], "onto": 64, "associ": [64, 138, 139, 150], "heavy_output_prob": [65, 146, 147], "over": [65, 113, 120, 135], "within": [65, 150, 151], "sigma": [65, 66], "qv_result": [66, 135, 136, 146, 147], "qv_results_typ": [66, 146, 147], "in_volumetr": 66, "plot_rem": 66, "come": [66, 83, 115], "context": 66, "volumetr": 66, "correct": [66, 83, 113, 114, 135, 136, 142], "rb": [69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 96, 97, 98, 100, 102, 104, 105, 108, 109, 111, 130, 132, 135, 139, 143, 148, 149], "cliffordrandomizedbenchmark": [70, 71, 135, 137, 139], "cliffordrbconfigur": [70, 72, 135, 137, 139], "qubits_arrai": [71, 76, 81, 100, 105, 107, 109, 111, 135, 137, 139, 143, 144, 151], "sequence_length": [71, 76, 99, 100, 135, 137, 139, 143, 151], "num_circuit_sampl": [71, 76, 81, 99, 135, 137, 139, 143, 144, 151], "parallel_execut": [71, 76, 135, 137, 139, 143, 151], "length": [71, 76, 83, 87, 99, 100, 101, 132, 135, 137, 139, 143], "add_all_metadata_to_dataset": 72, "interleav": [74, 75, 76, 77, 78, 81, 86, 97, 98, 99, 100, 101, 105, 130, 137, 148, 149, 151], "interleavedrandomizedbenchmark": [75, 76, 135, 139, 143], "interleavedrbconfigur": [75, 77, 135, 139, 143, 151], "interleaved_g": [76, 99, 100, 101, 105, 135, 139, 143, 151], "interleaved_gate_param": [76, 135, 139, 143, 151], "simultaneous_fit": [76, 135, 139, 143, 151], "amplitud": [76, 97, 135, 139, 143, 151], "offset": [76, 97, 135, 139, 143, 151], "irb": [76, 98, 130, 148, 149], "ygate": 76, "czgate": [76, 81, 132, 135, 139, 142, 143, 144, 151], "enter": [76, 98, 100], "fit": [76, 89, 90, 91, 93, 97, 98, 104, 105, 130, 142, 150], "simultan": [76, 98], "specif": [77, 121, 132, 134, 135, 136, 139, 142, 146, 147, 148, 150], "mirror": [79, 80, 81, 82, 86, 130, 148, 149, 151], "mirrorrandomizedbenchmark": [80, 81, 139, 144, 151], "mirrorrbconfigur": [80, 82, 139, 144, 151], "depths_arrai": [81, 139, 144, 151], "num_pauli_sampl": [81, 83, 87, 139, 144, 151], "two_qubit_gate_ensembl": [81, 84, 85, 86, 139, 144, 151], "density_2q_g": [81, 84, 85, 86, 139, 144, 151], "25": [81, 84, 85, 86, 135, 137, 138, 139, 140, 143, 144, 145, 146, 147, 151], "mrb": [81, 82, 85, 88, 98, 105, 107, 108, 130, 139, 148, 149], "len": [81, 132, 135, 136, 142], "pauli": [81, 83, 85, 86, 87, 132, 142], "two": [81, 84, 132, 133, 135, 140, 141, 142], "ensembl": [81, 82, 84, 105], "cxgate": 81, "densiti": [81, 84, 86, 105, 135, 136], "submit_single_mrb_job": 82, "sorted_transpiled_circuit_dict": [82, 107], "canon": [82, 85, 86, 107], "noisy_count": 83, "ideal_count": 83, "num_circ_sampl": [83, 87, 101], "polar": [83, 98], "noisi": 83, "rescal": 83, "few": [83, 135, 136], "effect": [83, 135, 136, 141], "real": [83, 151], "simul": [83, 113, 130, 138, 139, 144, 146, 147], "qubit_set": [84, 98], "n_layer": 84, "grab": [84, 113], "see": [84, 132, 135, 140, 141, 142, 150], "2204": 84, "07568": 84, "2q": [84, 86, 103, 105, 135, 138, 139], "form": [84, 150], "subsequ": [84, 150], "rais": [84, 87, 111, 113, 121, 125], "valueerror": [84, 87, 111, 121, 125], "do": [84, 113, 143, 150], "up": [84, 135, 151], "uniti": 84, "circ_sampl": 85, "pauli_samples_per_circ": [85, 86], "dress": [85, 86, 87], "input_list": 87, "convert": [87, 132], "flat": 87, "matrix": [87, 132, 135, 136], "shape": 87, "lmfit": [89, 90, 98], "extend": [89, 130], "shown": [89, 135, 136, 140, 141, 142], "document": [89, 135, 136, 150, 151], "github": [89, 151], "io": 89, "py": [89, 141, 147, 151], "example_fit_multi_dataset": 89, "html": [89, 151], "sphx": 89, "glr": 89, "multi": [89, 135, 136], "func": [90, 91, 92, 93, 98, 104], "initial_guess": 90, "constraint": [90, 151], "simultaneously_fit_var": 90, "line": 90, "evalu": [91, 135, 136], "signatur": 92, "residu": 93, "sever": [93, 130, 135, 136], "techniqu": 94, "qc_inv": 95, "clifford_dictionari": 95, "invers": [95, 135], "invert": 95, "de": [95, 101], "stabil": [95, 101, 130], "ground": [96, 102, 133], "depolarization_prob": 97, "non": [97, 135, 136, 150], "depolar": 97, "p": [97, 135], "decai": [97, 105, 130, 135], "exponenti": [97, 135], "rb_identifi": 98, "simultaneous_fit_var": 98, "interleaved_gate_str": 98, "0th": 98, "ap": [98, 142], "m": [98, 135, 136, 137, 139, 143, 144, 147, 151], "b": [98, 132, 135, 150], "stdrb": 98, "clifford_dict": [99, 101], "fir": 99, "cliffords_1q": 100, "cliffords_2q": 100, "num_sampl": [100, 101], "befor": [100, 135], "after": [100, 151], "term": [100, 132, 142, 150], "r": [100, 118, 121, 132, 138, 142, 147], "seq_length": 101, "self": [101, 133], "import": [103, 130, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151], "fit_paramet": 104, "fit_data": 104, "minimizerresult": 104, "violin": 105, "scatter": 105, "bar": [105, 133, 142], "shade_stdev": 105, "shade_meanerror": 105, "logscal": 105, "mrb_2q_densiti": 105, "mrb_2q_ensembl": 105, "point": [105, 140, 141], "shade": 105, "axi": [105, 130], "titl": [105, 150], "arr": 106, "helper": 106, "relabel": 106, "increasingli": 106, "zero": [106, 130, 135, 136], "5": [106, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 150, 151], "7": [106, 132, 135, 137, 138, 139, 140, 141, 142, 143, 144, 147, 150, 151], "note": [106, 115, 130, 140, 141, 142, 151], "sort": [106, 126, 144, 146, 147], "transpiled_circuit": [108, 114, 147], "margin": [109, 113, 120], "surviv": [109, 135], "gate_id": 110, "gate_param": 110, "basi": [110, 121, 132, 135, 136, 142, 150], "m3": [112, 113, 114], "modif": [112, 150], "m3iqm": [112, 115], "mthree": [112, 115], "m3mitig": [112, 113], "iter_threshold": 113, "4096": 113, "modifi": [113, 130, 135, 136, 150], "work": [113, 115, 135, 136, 150, 151], "devic": [113, 130, 135, 136, 149, 151], "cals_from_system": 113, "initial_reset": 113, "rep_delai": [113, 141, 147], "cals_fil": 113, "async_c": 113, "cal_id": 113, "array_lik": 113, "1e4": 113, "max_shot": 113, "balanc": 113, "hardwar": [113, 149], "independ": [113, 135], "reset": 113, "begin": [113, 132], "delai": 113, "path": 113, "json": [113, 142], "async": 113, "separ": [113, 130, 146, 147, 150], "thread": 113, "m3error": 113, "call": [113, 130], "while": [113, 140, 141, 142, 150], "progress": 113, "against": [114, 150], "outcom": [114, 135, 136, 142], "mit": [115, 150], "iter": [115, 120], "processor": [115, 135, 136], "argument": [115, 130, 151], "util": [115, 140, 141], "final_measurement_map": 115, "like": [115, 132, 135, 136, 151], "qubit_name_to_index": 115, "quasiprobabilti": 115, "we": [115, 133, 135, 136, 142, 150], "could": 115, "also": [115, 130, 142, 146, 147, 150, 151], "would": 115, "out": [115, 140, 150], "box": 115, "u": 115, "sinc": [115, 135, 136, 142], "circuit_list": 117, "transpiled_qc_list": 118, "barrier": [118, 132, 133, 138], "outermost": 118, "backend_label": 119, "prob_dist": 120, "bit": 120, "basis_g": 121, "drop_final_rz": 121, "target": [121, 142], "optimization_level": [121, 133, 135], "sqg": [121, 138, 139, 140, 141, 146, 147], "z": 121, "drop": 121, "rz": 121, "emploi": 121, "iqm_job": [123, 124], "iqmjob": [123, 124, 127], "relev": 124, "transpiled_circuit_list": 126, "sorted_indic": 126, "sorted_circuit": 126, "sent": [127, 150], "manag": [127, 150, 151], "f": [128, 132, 133, 135, 136, 139, 140, 141, 142, 147], "amount": [128, 129], "decor": 128, "statement": [128, 150], "counts_rang": 129, "extract": [129, 135, 151], "rang": [129, 130, 132, 133, 135, 136, 137, 139, 141, 142, 143, 144, 151], "were": [129, 130], "test": [130, 135, 136, 151], "fake": 130, "deneb": [130, 136, 137, 138, 139, 141, 143, 144, 145, 146, 148, 149], "notebook": [130, 133, 135, 136, 142, 148, 149], "benchmark": [130, 131, 132, 134, 142, 145, 146, 147, 148], "iqm": [130, 131, 132, 133, 134, 140, 142, 143, 148, 150], "bug": 130, "done": [130, 132], "qscore": [130, 135, 136], "instal": [130, 135, 142, 149], "command": [130, 151], "develop": [130, 132, 141, 149], "mode": [130, 132, 151], "41": [130, 139, 143, 144, 145], "folder": [130, 150, 151], "doc": [130, 151], "spark": [130, 134, 149], "30": [130, 135, 137, 139, 143, 145, 151], "compat": 130, "adapt": [130, 151], "behavior": 130, "report": [130, 135], "displai": [130, 132, 135, 136, 137, 139, 142, 143, 147, 150], "publish": 130, "ci": 130, "secur": [130, 151], "scan": [130, 151], "lockfil": [130, 151], "depend": [130, 140, 141, 142, 149], "relat": [130, 135], "gst": [130, 148, 149], "lead": [130, 140, 141, 142], "modulenotfounderror": 130, "enabl": 130, "pyrit": [130, 145], "wrong": 130, "incorrect": 130, "mgst": [130, 142, 150, 151], "improv": [130, 150], "hamiltonian": [130, 142], "rank": [130, 142], "compress": [130, 148, 149, 151], "compil": [130, 135, 142, 150], "stage": 130, "revert": 130, "ones": [130, 135, 136, 151], "20": [130, 132, 133, 137, 138, 139, 141, 143, 149], "now": [130, 137, 138, 139, 140, 141, 142, 143], "instead": [130, 151], "port": 130, "subclass": 130, "usag": 130, "place": [130, 150], "miscellan": 130, "relax": 130, "api": [130, 149, 151], "build": [130, 151], "overwrit": 130, "tutori": 130, "remov": 130, "explicit": 130, "minor": 130, "longer": [130, 135], "renam": 130, "so": [130, 135, 142], "rebas": 130, "randomizedbenchmark": 130, "quantumvolum": 130, "serial": 130, "some": [130, 135, 136], "available_benchmark": 130, "__init__": 130, "public": 130, "hint": 130, "docstr": 130, "messag": 130, "prevent": 130, "exclus": [130, 150], "jupyt": 130, "section": [131, 134, 148, 150], "guidanc": [131, 134], "packag": [131, 135, 140, 141, 147, 148, 151], "your": [131, 135, 149, 150, 151], "own": [131, 149, 150, 151], "decomposit": [131, 149], "1402": 132, "4848": 132, "copyright": [132, 150], "2024": [132, 137, 138, 147, 150], "licens": [132, 149], "apach": [132, 150], "you": [132, 135, 136, 143, 147, 150, 151], "mai": [132, 135, 136, 150], "except": [132, 133, 150], "complianc": [132, 150], "obtain": [132, 135, 136, 150, 151], "unless": [132, 150], "law": [132, 150], "agre": [132, 150], "softwar": [132, 150], "AS": [132, 150], "without": [132, 135, 136, 140, 141, 150], "warranti": [132, 150], "OR": [132, 150], "OF": [132, 150], "kind": [132, 150], "express": [132, 150], "impli": [132, 150], "languag": [132, 150], "govern": [132, 150], "permiss": [132, 150], "limit": [132, 150], "quantum_info": 132, "qi": 132, "numpi": [132, 135, 136, 139, 142, 143], "c0": 132, "c": [132, 135, 147, 150], "_": [132, 135, 142], "24": [132, 137, 138, 139, 140, 143, 145], "half": 132, "pi": [132, 139, 143], "x2": 132, "to_gat": 132, "y2": 132, "y": 132, "x2m": 132, "y2m": 132, "compos": 132, "inplac": 132, "2pi": 132, "rotat": [132, 133], "6": [132, 137, 138, 139, 140, 141, 143, 144, 145, 147, 150, 151], "9": [132, 133, 135, 137, 138, 139, 140, 141, 143, 144, 150, 151], "11": [132, 133, 135, 136, 137, 139, 140, 141, 143, 144, 147, 151], "12": [132, 137, 138, 139, 142, 143, 144, 146, 147], "13": [132, 137, 139, 140, 141, 143, 144, 147, 151], "14": [132, 137, 138, 139, 141, 143, 144, 151], "15": [132, 135, 137, 138, 139, 141, 143, 144, 147], "16": [132, 137, 138, 139, 140, 143, 144, 146], "17": [132, 137, 138, 139, 140, 143, 144, 146, 151], "18": [132, 137, 138, 139, 140, 143, 144, 151], "19": [132, 138, 139, 140, 142, 143, 144, 149], "21": [132, 138, 139, 143], "22": [132, 138, 139, 142, 143, 144], "23": [132, 137, 138, 139, 140, 143, 144, 146, 147], "clifford_sqg": 132, "s1": 132, "k": [132, 135, 136, 138, 144, 146, 147], "s1x2": 132, "s1y2": 132, "displaystyl": 132, "sum_": [132, 142], "prime": 132, "left": 132, "mathrm": [132, 135, 136], "tr": [132, 142], "u_": 132, "dagger": [132, 135, 142], "u_k": 132, "right": [132, 150], "s2": 132, "satisfi": [132, 142], "c_kei": 132, "aux": 132, "total_triangl": 132, "c1": 132, "adjoint": 132, "j": [132, 135, 136, 140, 141, 142], "c2": 132, "c3": 132, "to_matrix": 132, "trace": [132, 142], "print": [132, 135, 138, 139, 140, 141, 142, 144, 146, 147, 150], "0f": 132, "diagon": [132, 135, 136], "nsum": 132, "sum": 132, "clifford_2qg": 132, "product": [132, 150], "c2q_0": 132, "c2q": 132, "counter": 132, "to_label": 132, "sqg_class_": 132, "cnot": [132, 140, 141], "sy2": 132, "cnot_class_": 132, "iswap": 132, "sy1": 132, "sx2": 132, "i_swap_class_": 132, "swap_class_": 132, "clifford_1qg": 132, "open": 132, "clifford_1q": 132, "pkl": 132, "wb": 132, "clifford_2q": 132, "loaded_dict": 132, "def": [132, 133], "count_rcz": 132, "c_list": 132, "no_cz": 132, "no_r": 132, "count_op": 132, "els": 132, "num_2qcz": 132, "num_2qr": 132, "num_1qcz": 132, "num_1qr": 132, "875": [132, 135, 139, 143, 146], "200": [132, 139, 140, 145], "randint": [132, 135, 136, 139, 145], "11520": 132, "draw": [132, 135, 136, 140, 147], "mpl": 132, "style": 132, "iqp": 132, "fold": 132, "ninvers": 132, "qc_aux": 132, "qcinv": 132, "op_seq": 132, "ncomposit": 132, "ident": 132, "modulo": 132, "phase": 132, "equiv": 132, "ii": [132, 133, 150], "latex": 132, "composit": 132, "bmatrix": 132, "520": [132, 139, 145], "132": [132, 139, 143], "710": [132, 145], "400": [132, 137, 139, 145], "suffic": 132, "triangular": 132, "part": [132, 150], "howev": [132, 150, 151], "still": [132, 142], "op": 132, "adj": 132, "prod": 132, "100000": 132, "ndone": 132, "defit": 133, "simpl": [133, 135, 151], "anoth": 133, "excit": 133, "add_counts_to_dataset": 133, "pyplot": [133, 135, 136, 142], "plt": [133, 135, 136, 142], "generate_readout_test_circuit": 133, "n_qubit": 133, "qb_to_measur": 133, "qc_transpil": 133, "plot_histogram": [133, 135], "50": [133, 135, 136, 139, 142, 143, 144, 145, 147, 150], "try": 133, "state_": 133, "counts_": 133, "break": 133, "xtick": 133, "90": 133, "legend": 133, "readout_analysi": 133, "histogram": [133, 135], "readouttest": 133, "default_opt": 133, "n_shot": 133, "2048": 133, "staticmethod": 133, "readout_test": 133, "iqmprovid": [133, 135, 136, 139, 151], "iqm_server_url": 133, "station": [133, 151], "fi": [133, 151], "coco": [133, 136, 151], "get_backend": [133, 135, 136, 139, 151], "480b": 133, "dimens": [133, 142], "state_0": 133, "state_1": 133, "coordin": 133, "u4": 133, "144b": 133, "0000": 133, "0001": 133, "0010": 133, "1010": 133, "1100": 133, "176b": 133, "0011": 133, "0101": 133, "0110": 133, "1101": 133, "1110": 133, "1111": 133, "counts_0": 133, "int64": 133, "72b": 133, "1924": 133, "26": [133, 139, 140, 143, 145], "39": [133, 139, 142, 143, 145], "counts_1": 133, "88b": 133, "72": 133, "48": [133, 139, 143, 145], "78": 133, "36": [133, 139, 145], "1801": 133, "sure": [135, 151], "pip": [135, 151], "ipykernel": 135, "o": [135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 151], "environ": [135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 151], "iqm_tokens_fil": 135, "token": [135, 136, 143, 151], "iqm_url": [135, 136, 139], "access": [135, 136, 151], "everyth": [135, 136], "properli": [135, 136], "nx": [135, 136], "add_edges_from": [135, 136], "po": [135, 136, 140], "spring_layout": [135, 136, 140], "42": [135, 136, 139, 143, 145], "with_label": [135, 136, 140], "node_color": [135, 136, 140], "lightblu": [135, 136], "edge_color": [135, 136], "grai": [135, 136], "node_s": [135, 136], "font_siz": [135, 136], "linewidth": [135, 136], "width": [135, 136], "cell": [135, 136, 140], "below": [135, 136, 140, 141, 142, 150, 151], "ignor": [135, 136], "critic": [135, 136], "filterwarn": [135, 136], "action": [135, 136], "entangl": [135, 136, 139, 140, 141, 151], "three": [135, 136], "more": [135, 136, 150, 151], "superposit": [135, 136], "rangl": [135, 136], "frac": [135, 136, 142], "sqrt": [135, 136], "otim": [135, 136], "act": [135, 136, 150], "wit": [135, 136], "genuin": [135, 136, 140, 141], "cannot": [135, 136, 150], "explain": [135, 136], "great": [135, 136], "rho_": [135, 136], "text": [135, 136, 142, 150], "langl": [135, 136], "pure": [135, 136], "case": [135, 136], "actual": [135, 136], "entri": [135, 136, 142], "written": [135, 136, 150], "00": [135, 136, 139, 142, 144, 146], "corner": [135, 136], "simplifi": [135, 136], "four": [135, 136], "compon": [135, 136], "formula": [135, 136], "nullifi": [135, 136], "To": [135, 136, 137, 140, 141, 142, 150, 151], "off": [135, 136], "want": [135, 136, 151], "pleas": [135, 136], "refer": [135, 136, 142, 149, 151], "visual": [135, 140], "generate_ghz_spanning_tre": 135, "get_edg": 135, "ghz_circuit": 135, "qc_transp": 135, "re": [135, 143], "10000": [135, 136, 145], "get_count": 135, "benchmark_ghz": [135, 136, 139, 140, 141], "run_ghz": [135, 136, 139, 140, 141], "result_ghz": [135, 136], "introduc": [135, 136], "2019": [135, 136, 140, 141, 151], "unitari": [135, 136, 142, 147], "successfulli": [135, 136, 137, 139, 143, 144, 146, 147], "occcur": [135, 136], "greater": [135, 136], "median": [135, 136], "ask": [135, 136], "confid": [135, 136], "higher": [135, 136], "97": [135, 136], "around": [135, 136], "85": [135, 136, 151], "asymptot": [135, 136], "log_2": [135, 136], "v_q": [135, 136], "underset": [135, 136], "argmax": [135, 136], "d": [135, 136, 140, 141, 150], "leq": [135, 136], "achiev": [135, 136], "quantum_volum": [135, 136, 138, 139, 146, 147, 151], "combin": [135, 136, 150], "due": [135, 136], "must": [135, 136, 150, 151], "topmost": 135, "500": [135, 136, 139, 144, 146, 147, 151], "60_000": [135, 139, 146, 147, 151], "follow": [135, 136, 140, 141, 142, 150, 151], "code": [135, 136, 142, 149, 150, 151], "minut": [135, 136, 142], "benchmark_qv": [135, 136, 139, 146, 147], "run_qv": [135, 136], "result_qv": [135, 136], "That": [135, 136], "wack": [135, 136], "repeat": [135, 136], "constitut": [135, 136, 150], "_time": [135, 136], "notic": [135, 136, 150], "plot_tim": [135, 136], "benchmark_clop": [135, 136, 138, 139], "run_clop": [135, 136, 138, 139], "result_clop": [135, 136, 138, 139], "fig_clop": [135, 136], "idea": 135, "behind": 135, "crb": 135, "certain": [135, 136], "nois": 135, "langle0": 135, "c_": 135, "inv": 135, "c_m": 135, "cdot": 135, "_2c_1": 135, "sim": 135, "c_1": 135, "c_2": 135, "ldot": 135, "c_1c_2": 135, "_m": 135, "leq1": 135, "constant": 135, "isol": 135, "spam": 135, "magesan": 135, "2012": [135, 151], "turn": [135, 140], "infer": 135, "assumpt": 135, "markovian": 135, "stationari": 135, "theori": [135, 150], "fact": 135, "design": [135, 150, 151], "fulli": [135, 142], "ensur": 135, "our": 135, "overlin": 135, "intend": 135, "becaus": 135, "eventu": 135, "mention": 135, "barend": 135, "2014": 135, "approx": 135, "alwai": [135, 140, 141], "slightli": 135, "care": 135, "compar": 135, "spec": 135, "randomized_benchmark": [135, 137, 139, 143, 144, 151], "clifford_rb": [135, 137, 139], "benchmark_clifford_rb": [135, 137, 139], "run_clifford_rb": [135, 137, 139], "result_clifford_rb": [135, 137, 139], "previou": 135, "aim": [135, 140, 141], "interest": 135, "robust": 135, "sole": [135, 150], "made": [135, 150], "among": [135, 151], "rate": 135, "wish": [135, 147], "character": [135, 149], "interleaved_rb": [135, 139, 143, 151], "irb_cz": 135, "nb": [135, 137, 138, 139], "benchmark_irb_cz": 135, "run_irb_cz": 135, "result_irb_cz": 135, "martiel": [135, 136], "erd\u0151": [135, 136], "r\u00e9nyi": [135, 136], "cost": [135, 136], "geq": [135, 136, 142], "999999": [135, 136, 139, 145], "benchmark_qscor": [135, 136, 139, 145], "run_qscor": [135, 136, 139], "result_qscor": [135, 136, 139], "summar": 135, "tabl": [135, 142], "obs_ghz": [135, 136], "round": [135, 136], "obs_qv": [135, 136], "obs_clop": [135, 136], "item": [135, 136], "obs_crb": 135, "f_crb": 135, "obs_irb": 135, "f_irb": 135, "avg_gate_fidelity_interleav": [135, 139, 143], "obs_q": [135, 136], "argmin": [135, 136], "mean_approximation_ratio": [135, 136, 145], "3000": 135, "999": [135, 137, 138], "98": 135, "format": [135, 150], "num": 135, "iqm_token": [136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 151], "reson": [136, 143, 151], "meetiqm": 136, "chosen_layout": 136, "2000": [136, 142], "10_000": 136, "load_ext": [137, 138, 139, 142, 143, 144, 145, 146, 147], "autoreload": [137, 138, 139, 142, 143, 144, 145, 146, 147], "extens": 137, "load": 137, "reload": 137, "reload_ext": 137, "fakeadoni": [137, 138, 139, 143, 144, 145, 146], "fakeapollo": [137, 138, 139, 140, 143, 144, 145, 146], "garnet": [137, 138, 139, 142, 143, 144, 145, 146, 151], "example_crb": [137, 139], "56": [137, 139, 145], "750": [137, 145], "logging_config": [137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147], "info": [137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147], "Will": [137, 138, 139, 142, 143, 144, 146, 147], "31": [137, 138, 139, 140, 141, 143, 144, 145], "63": [137, 139, 143], "831": [137, 143, 145], "992": [137, 138, 145], "341": [137, 145], "040": [137, 139, 143], "469": [137, 139], "291": 137, "292": [137, 139, 143], "349": 137, "541": [137, 144], "600": [137, 139], "756": [137, 139], "837": [137, 143, 145, 146], "025": [137, 145], "171": [137, 139], "905": [137, 145], "544": [137, 139, 145], "899": [137, 139], "32": [137, 138, 139, 140, 141, 142, 144, 145], "624": [137, 139], "004": [137, 139, 143, 145], "43": [137, 139, 142, 143, 145], "319": 137, "569": [137, 144, 145], "777": [137, 139], "840": 137, "44": [137, 139, 142, 143, 145], "048": [137, 143], "098": [137, 138, 139, 145], "qubits_": [137, 139, 144], "_depth_1": [137, 139, 143], "323": 137, "45": [137, 139, 143, 144, 145], "186": [137, 143], "_depth_3": [137, 139, 143], "225": [137, 139], "_depth_7": [137, 139, 143], "267": [137, 139, 145], "_depth_15": [137, 139, 143], "314": [137, 139], "_depth_31": [137, 139, 143], "315": [137, 139, 145], "364": [137, 139, 144], "_depth_63": [137, 139, 143], "416": [137, 145], "417": [137, 145, 147], "476": 137, "542": [137, 139, 144], "615": [137, 139], "616": [137, 139, 145], "697": [137, 145], "789": [137, 139, 143, 145], "890": [137, 139, 143], "conclud": [137, 139, 143, 144, 146, 147], "931": [137, 139, 145], "938": 137, "945": [137, 139, 140, 144], "952": [137, 143], "959": [137, 139], "966": [137, 139, 145], "972": [137, 139, 145], "979": [137, 139, 145], "986": [137, 139], "993": [137, 139, 144], "46": [137, 139, 142, 145, 147], "006": [137, 139, 145], "013": 137, "946844466999168": 137, "9429197366921651": 137, "attr": [137, 138, 142, 144, 146, 147], "session_timestamp": [137, 138, 144, 146, 147], "20241217": 137, "115553": 137, "execution_timestamp": [137, 138, 144, 146, 147], "backend_configuration_nam": [137, 138, 144, 146, 147], "iqmfakeapollobackend": [137, 138, 140, 142, 146], "depth_1": 137, "time_circuit_gener": [137, 138, 144, 146, 147], "541001081466675": 137, "time_submit": [137, 144, 146, 147], "0006990432739257812": 137, "time_retriev": [137, 144, 146, 147], "22491073608398438": 137, "all_job_metadata": [137, 144, 146, 147], "batch_job_1": [137, 144], "job_id": [137, 144], "8f305755": 137, "e038": 137, "4596": 137, "8617": 137, "d96ba3f42ca9": 137, "aer_simul": [137, 144], "statu": [137, 144], "circuits_in_batch": [137, 144], "depth_3": 137, "05647683143615723": 137, "0005230903625488281": 137, "2fe0b406": 137, "8977": 137, "4567": 137, "bba0": 137, "d4168f0883ed": 137, "depth_7": 137, "19257187843322754": 137, "0004839897155761719": 137, "8299918c": 137, "be26": 137, "40d5": 137, "8778": 137, "9ea4468a1df2": 137, "depth_15": 137, "05831408500671387": 137, "0004811286926269531": 137, "174640c4": 137, "9ff3": 137, "4ca3": 137, "9ffc": 137, "d6aa5be304f3": 137, "depth_31": 137, "1564040184020996": 137, "0006189346313476562": 137, "7bb739f2": 137, "31bc": 137, "40af": 137, "8dbf": 137, "1d60a9310391": 137, "depth_63": 137, "08135986328125": 137, "0004200935363769531": 137, "f414a2c1": 137, "75c8": 137, "4d5a": 137, "9e4b": 137, "ccce29903f5f": 137, "147684812545776": 137, "0005502700805664062": 137, "00039887428283691406": 137, "8832576a": 137, "6d6e": 137, "4abe": 137, "8cfa": 137, "5001e6bb98e": 137, "08015298843383789": 137, "00039315223693847656": 137, "ecc1bcea": 137, "ef4c": 137, "4f35": 137, "9284": 137, "ab49af0c5b9f": 137, "16936397552490234": 137, "0003960132598876953": 137, "5582c842": 137, "0f07": 137, "46b6": 137, "96be": 137, "2fb3925b19d9": 137, "20774221420288086": 137, "0004191398620605469": 137, "6423b02b": 137, "8417": 137, "4300": 137, "b7ac": 137, "84d59f87a51f": 137, "0635080337524414": 137, "0004169940948486328": 137, "0b324804": 137, "44fe": 137, "4c16": 137, "83eb": 137, "08e5cd67aa79": 137, "20784401893615723": 137, "0004961490631103516": 137, "6c633640": 137, "d4b4": 137, "47de": 137, "a46d": 137, "d3ae4c84d212": 137, "avg_gate_fidel": [137, 144], "0012220693932290373": 137, "001545469960991071": 137, "xxxxxx": 138, "example_clop": [138, 139], "06": [138, 139, 144], "07": [138, 139, 143, 144], "198": [138, 139, 145], "199": 138, "828": [138, 143], "829": [138, 139, 143, 145], "383": [138, 143], "401": [138, 139, 145], "458": [138, 139], "010": [138, 145], "428": [138, 144, 145], "429": [138, 139], "497": [138, 139], "029": [138, 139], "482": [138, 139, 145], "483": [138, 139], "502": [138, 139, 145], "113": 138, "843": 138, "844": [138, 145], "906": [138, 143, 145], "527": [138, 145], "987": [138, 139, 145], "988": [138, 139], "050": [138, 139, 144, 145, 146], "636": [138, 139, 143, 145], "099": [138, 139], "166": [138, 143, 145], "712": [138, 145], "27": [138, 139, 140, 143, 145], "328": [138, 139], "329": [138, 139], "404": [138, 139, 145], "766": [138, 139, 144, 145], "29": [138, 139, 143, 145, 146], "386": [138, 139], "387": [138, 139, 143, 144], "406": [138, 139, 145], "418": [138, 139, 147], "487": [138, 139, 145], "037": 138, "33": [138, 139, 141, 144, 145], "488": [138, 139], "556": [138, 139, 145], "240": [138, 139, 145], "916": [138, 143], "There": [138, 139], "all_times_parameter_assign": 138, "all_times_retriev": 138, "all_times_submit": 138, "assign_parameters_tot": 138, "clops_tim": 138, "counts_per_upd": 138, "job_meta_per_upd": 138, "num_paramet": 138, "operation_count": [138, 146, 147], "parallel_2q_lay": 138, "parameters_per_upd": 138, "time_count_lay": 138, "time_sort_batch": 138, "time_transpil": [138, 146, 147], "u_per_lay": 138, "user_retrieve_tot": 138, "user_submit_tot": 138, "9603960396039604": 138, "std": 138, "3960396039603959": 138, "285": [138, 139, 143], "970297029703": 138, "28": [138, 139, 143, 145, 146], "718661075530303": 138, "40594059405941": 138, "915387814641763": 138, "9900990099009901": 138, "09900990099009897": 138, "18796": 138, "nan": [138, 142], "56388": 138, "iqm_provid": [139, 141, 147], "2025": [139, 140, 141, 142, 143, 144, 145, 146, 149], "01": [139, 140, 142, 143, 144, 145, 146], "58": [139, 141, 143, 145], "410": [139, 145], "411": [139, 145], "127": [139, 143], "639": [139, 140, 141], "949": [139, 145], "35": [139, 145], "841": 139, "251": [139, 145], "53": [139, 143, 145], "648": [139, 145], "690": 139, "785": [139, 143], "953": [139, 145], "815": [139, 145], "59": [139, 143, 144, 145], "821": [139, 143, 145], "808": [139, 145], "834": 139, "860": [139, 143], "02": [139, 141, 142, 144, 145, 149], "350": [139, 145], "351": [139, 140], "424": [139, 145], "466": 139, "510": [139, 145], "511": [139, 145], "558": 139, "_depth_127": [139, 143], "559": [139, 145], "611": [139, 145], "643": [139, 145], "647": 139, "651": [139, 144, 145, 147], "655": [139, 145], "659": 139, "663": 139, "667": [139, 145], "9487496885745926": 139, "example_irb_1q": [139, 143], "rgate": [139, 142, 143], "benchmark_irb_1q": [139, 143], "run_irb_1q": [139, 143], "734": [139, 143, 145], "958": 139, "wxecut": 139, "255": [139, 143], "000": [139, 143, 145], "041": [139, 145], "122": 139, "925": 139, "229": 139, "054": 139, "37": [139, 145, 147], "672": 139, "694": 139, "753": 139, "849": [139, 144, 145], "38": [139, 143, 145], "039": [139, 143, 145], "402": [139, 145], "108": [139, 145], "40": [139, 145], "570": [139, 145], "277": [139, 145], "331": [139, 144, 145], "399": [139, 145], "495": [139, 145], "650": [139, 143], "929": [139, 145], "51": [139, 142, 143, 145, 147], "439": 139, "52": [139, 141, 142, 143, 144, 145, 147], "352": [139, 141, 145], "432": [139, 143], "475": [139, 143], "666": [139, 145], "812": 139, "881": [139, 143, 145], "761": 139, "804": 139, "894": [139, 140], "907": [139, 145], "03": [139, 143, 144], "020": 139, "188": [139, 143, 145], "270": 139, "426": [139, 145], "718": 139, "04": [139, 141, 143, 144], "307": [139, 144, 145], "05": [139, 143, 144], "836": [139, 143, 145], "904": [139, 145], "003": [139, 142, 143], "196": [139, 143, 145, 146], "557": [139, 144], "719": 139, "653": [139, 144, 145], "149": [139, 144], "754": [139, 145], "231": 139, "163": [139, 143], "261": 139, "446": [139, 145], "524": 139, "635": [139, 143], "112": 139, "693": [139, 145], "811": 139, "826": [139, 145], "920": [139, 145], "091": [139, 140], "173": [139, 143], "338": [139, 143, 145], "640": [139, 143, 145], "230": 139, "545": [139, 144], "54": [139, 143, 145, 147], "939": [139, 143, 145], "961": 139, "55": [139, 144, 145], "011": [139, 142], "105": [139, 145], "299": [139, 147], "384": 139, "57": [139, 143, 145], "824": [139, 145], "662": 139, "717": [139, 143, 145], "790": [139, 142, 143, 144], "889": [139, 144], "301": [139, 144, 145], "799": [139, 147], "083": [139, 145], "152": [139, 144, 145], "254": 139, "420": [139, 145], "758": [139, 142, 143, 144], "634": [139, 145], "947": [139, 144], "994": [139, 142, 145], "548": [139, 141], "159": [139, 145], "724": [139, 141], "746": 139, "791": [139, 144, 145], "884": [139, 144], "074": [139, 143, 145], "128": [139, 144, 145], "561": 139, "477": 139, "550": [139, 145], "623": [139, 142, 143, 145], "726": 139, "880": [139, 145], "47": [139, 142, 143, 145], "508": 139, "606": [139, 144], "838": [139, 145], "944": [139, 144, 145], "49": [139, 142, 143, 145], "427": 139, "963": [139, 145], "970": [139, 144], "008": [139, 143, 145], "071": 139, "305": 139, "391": [139, 142, 145], "555": [139, 145], "444": 139, "649": [139, 140, 141, 145, 147], "063": [139, 145], "119": [139, 144], "212": [139, 140], "397": [139, 145], "467": [139, 145], "678": [139, 144, 145], "688": [139, 143, 146], "741": 139, "810": [139, 145], "908": 139, "805": [139, 141, 145], "682": [139, 143], "730": 139, "816": 139, "094": [139, 143, 145], "259": [139, 140], "547": 139, "066": [139, 145], "138": [139, 145], "clifford_qubits_": [139, 143], "176": [139, 144, 145], "354": 139, "355": [139, 143, 145], "390": 139, "459": 139, "591": [139, 145], "592": [139, 145], "644": 139, "_depth_255": [139, 143], "703": [139, 143], "767": [139, 144], "768": [139, 145], "839": 139, "918": 139, "919": [139, 140, 141], "007": [139, 143], "104": [139, 145], "211": 139, "728": 139, "971": 139, "232": [139, 145], "509": [139, 143], "151": [139, 145], "498": 139, "862": [139, 145], "248": 139, "249": 139, "654": [139, 145], "142": [139, 145], "143": 139, "085": 139, "626": [139, 144], "180": [139, 144], "732": 139, "733": [139, 145], "923": 139, "interleaved_qubits_": [139, 143], "924": [139, 145], "560": [139, 145], "237": 139, "940": [139, 144], "447": [139, 147], "075": [139, 142, 145], "076": [139, 145], "845": [139, 140, 143], "846": 139, "783": [139, 145, 146], "784": [139, 143, 145], "782": 139, "813": 139, "814": 139, "201": [139, 144, 145], "202": 139, "378": [139, 145], "379": 139, "909": 139, "910": [139, 145], "284": [139, 145], "658": 139, "111": [139, 145, 146], "571": [139, 142, 145], "572": [139, 140, 145], "062": [139, 140, 145], "021": [139, 146], "022": [139, 143], "735": 139, "736": [139, 145], "546": [139, 143, 144], "09": [139, 140, 142, 143, 146], "361": [139, 145], "362": 139, "330": [139, 144], "304": [139, 145], "269": [139, 147], "471": [139, 145], "596": [139, 143, 144, 145], "842": [139, 143, 144], "086": [139, 145], "642": [139, 140, 141], "983": [139, 144], "460": 139, "result_irb_1q": [139, 143], "855": 139, "901": 139, "943": 139, "033": [139, 143, 146], "116": [139, 144], "161": 139, "206": [139, 143, 145], "300": [139, 142, 145], "344": 139, "433": [139, 145], "519": 139, "603": [139, 145], "686": [139, 145], "727": [139, 145], "769": [139, 145], "853": 139, "936": [139, 145], "978": [139, 145], "019": 139, "106": [139, 145], "191": [139, 142], "274": [139, 145], "316": 139, "357": [139, 144, 145], "440": [139, 143], "565": 139, "607": [139, 143], "774": 139, "858": [139, 145], "941": 139, "030": [139, 145], "072": [139, 145], "114": 139, "156": [139, 145], "197": [139, 143], "239": 139, "280": 139, "322": 139, "405": 139, "489": 139, "531": 139, "614": 139, "656": [139, 145], "698": 139, "747": 139, "794": 139, "948": [139, 144], "061": [139, 145], "110": 139, "157": [139, 143], "9987487631380596": 139, "9976446981909068": 139, "9966759568052321": 139, "993530034195362": 139, "9990404653517758": 139, "9981264795208118": 139, "9993022807449614": 139, "9986351324410088": 139, "9973448276409616": 139, "9955188886796882": 139, "252344351282814e": 139, "avg_gate_fidelity_clifford": [139, 143], "427765436266417e": 139, "311072136492597e": 139, "508513064336435e": 139, "00011479325016746003": 139, "00013605231315518148": 139, "126965739294625e": 139, "500976481016944e": 139, "726101631810375e": 139, "232463034652631e": 139, "example_irb_2q": [139, 143], "benchmark_irb_2q": [139, 143], "run_irb_2q": [139, 143], "921": 139, "001": [139, 142, 145], "164": [139, 145], "481": 139, "08": [139, 142, 143, 144, 145], "367": [139, 145], "937": [139, 145], "095": [139, 143], "396": [139, 143, 145], "026": 139, "620": [139, 145], "765": [139, 143, 145], "930": [139, 145], "216": [139, 143], "738": 139, "729": 139, "674": [139, 145], "965": 139, "264": [139, 144, 145], "470": 139, "463": [139, 145], "078": [139, 141], "370": [139, 145], "771": 139, "968": [139, 143], "140": 139, "441": [139, 141, 143], "192": 139, "743": [139, 145], "268": 139, "298": 139, "625": [139, 145, 146], "461": 139, "009": 139, "991": [139, 143], "014": 139, "807": [139, 145], "165": 139, "817": 139, "295": [139, 140, 145], "464": [139, 145], "721": [139, 145], "398": 139, "581": 139, "714": 139, "689": [139, 145], "801": [139, 145], "912": [139, 141, 147], "891": 139, "435": 139, "484": 139, "181": [139, 144], "194": [139, 145], "451": 139, "290": [139, 143, 146], "955": 139, "359": 139, "096": [139, 144], "445": [139, 145], "521": 139, "681": [139, 143], "628": 139, "214": [139, 144], "385": 139, "309": 139, "579": 139, "652": [139, 143, 144], "131": [139, 143, 145], "168": [139, 143], "169": [139, 145], "207": [139, 143], "208": [139, 143], "252": [139, 140, 146], "253": [139, 145], "345": 139, "346": [139, 143, 145], "457": 139, "523": [139, 144], "595": [139, 141, 143, 145], "676": [139, 144], "764": [139, 143, 145], "863": 139, "969": 139, "088": [139, 146], "089": 139, "218": [139, 140], "360": [139, 145, 147], "514": 139, "283": [139, 146], "034": [139, 143], "035": 139, "313": 139, "612": 139, "272": [139, 144], "637": [139, 147], "036": [139, 145], "876": [139, 143, 145], "877": [139, 143], "861": [139, 143], "365": [139, 144, 145], "366": 139, "897": [139, 145], "468": [139, 145], "051": 139, "661": 139, "028": [139, 145], "739": [139, 143, 145], "740": [139, 141, 143], "241": [139, 145], "042": 139, "673": 139, "641": 139, "757": [139, 146], "866": 139, "005": [139, 140, 142, 143, 145], "177": [139, 144, 145], "178": 139, "431": 139, "result_irb_2q": [139, 143], "704": [139, 141, 143], "795": 139, "888": 139, "070": [139, 145], "101": 139, "223": [139, 143, 145], "374": [139, 145], "465": 139, "526": 139, "586": [139, 145], "677": [139, 145], "707": 139, "798": [139, 145], "859": 139, "950": [139, 143], "981": [139, 143], "162": [139, 145], "9742310809885095": 139, "9459834045099638": 139, "9702389918426017": 139, "9373183372682623": 139, "9829862612568532": 139, "9651704260970525": 139, "9600628980342876": 139, "9331175707494691": 139, "example_irb_iswap": [139, 143], "iswapg": [139, 143, 144, 151], "benchmark_irb_iswap": [139, 143], "run_irb_iswap": [139, 143], "567": 139, "751": [139, 143, 145], "573": [139, 145], "742": [139, 145], "879": 139, "079": [139, 144, 145], "954": [139, 143, 145], "145": 139, "781": [139, 143, 146], "496": [139, 143], "725": [139, 145], "408": [139, 142, 145], "895": 139, "788": [139, 143], "513": 139, "517": [139, 145], "087": [139, 145], "773": [139, 143], "684": [139, 145], "638": [139, 145], "691": [139, 143], "204": [139, 141, 143, 146], "339": [139, 141, 143], "580": 139, "608": 139, "609": [139, 144, 145], "336": [139, 140, 145], "708": 139, "833": [139, 145], "990": 139, "084": 139, "187": 139, "303": 139, "576": [139, 145], "097": [139, 144], "530": [139, 143, 145], "776": [139, 141], "044": 139, "045": 139, "332": [139, 145], "333": [139, 143, 145], "984": [139, 145], "985": 139, "result_irb_iswap": [139, 143], "796": 139, "902": [139, 145], "073": 139, "115": [139, 145], "136": 139, "179": [139, 145], "221": [139, 145], "296": [139, 144, 145], "325": [139, 145], "388": [139, 145], "9296485294294863": 139, "9468865104887559": 139, "9168663709049512": 139, "9389212110918619": 139, "mirror_rb": [139, 144, 151], "example_mrb": [139, 144, 151], "benchmark_mrb": [139, 144], "run_mrb": [139, 144], "10x5": [139, 144], "64": [139, 144], "512": [139, 144], "090": [139, 143, 145], "109": [139, 151], "775": 139, "802": [139, 145], "779": [139, 142, 143, 145], "533": 139, "246": 139, "442": [139, 143], "369": 139, "491": [139, 143], "092": [139, 145], "613": 139, "631": [139, 143], "692": [139, 143], "375": [139, 144, 145], "723": [139, 141, 145], "878": 139, "266": 139, "123": 139, "_depth_2": [139, 144], "_depth_4": [139, 144], "_depth_8": [139, 144], "_depth_16": [139, 144], "_depth_32": [139, 144], "822": 139, "_depth_64": [139, 144], "_depth_128": [139, 144], "174": [139, 143], "_depth_256": [139, 144], "175": 139, "_depth_512": [139, 144], "515": 139, "720": [139, 145], "219": [139, 141], "857": [139, 145], "242": 139, "243": [139, 145, 147], "670": 139, "671": [139, 143], "147": [139, 144], "result_mrb": [139, 144], "706": [139, 143], "882": [139, 143], "962": 139, "067": [139, 143], "260": 139, "356": [139, 141], "1600x1200": 139, "ax": 139, "all_qubit_layout": [139, 144], "key_mrb_plot": [139, 144], "example_qv": [139, 146, 147, 151], "run0_qv": [139, 146, 147], "iqmfakeadonisbackend": 139, "234": [139, 145], "subbatch": [139, 146, 147], "562": 139, "588": 139, "093": 139, "023": 139, "434": [139, 145], "587": 139, "result0_qv": [139, 146, 147], "413": [139, 144], "run1_qv": [139, 146, 147], "result1_qv": [139, 146, 147], "865": [139, 145, 147], "213": [139, 145], "800": [139, 142], "321": 139, "887": [139, 140, 144, 145], "024": [139, 147], "155": [139, 145], "516": [139, 145], "247": 139, "278": [139, 141, 145], "347": 139, "265": [139, 145], "358": 139, "453": [139, 145, 146], "454": 139, "554": 139, "552": 139, "minimal_ghz": [139, 140, 141], "745": [139, 143], "792": [139, 145], "900": 139, "049": [139, 143], "238": 139, "306": 139, "423": [139, 145], "8309361141069083": 139, "fidelity_rem": [139, 141], "8897643257271268": 139, "example_qscor": [139, 145], "20_000": 139, "4767": 139, "4900": 139, "6739": 139, "3733": 139, "6246": 139, "3894": 139, "4881": 139, "4714": 139, "4767012007999197": 139, "09979310484432205": 139, "is_succes": [139, 145, 146, 147], "qscore_result": [139, 145], "6738975057778192": 139, "07204344830310698": 139, "6246025280898877": 139, "04717318377784287": 139, "4881333882446109": 139, "04133470512287928": 139, "multipartit": [140, 141], "One": [140, 141, 146, 147], "larger": [140, 141, 142], "suffici": [140, 141], "leibfri": [140, 141], "et": [140, 141], "al": [140, 141], "six": 140, "atom": 140, "schr\u00f6dinger": 140, "cat": 140, "natur": [140, 141], "438": [140, 141, 145], "2005": [140, 141], "offer": [140, 141, 150], "verif": [140, 149, 151], "superconduct": 140, "phy": [140, 141, 151], "commun": [140, 141, 150], "095004": [140, 141], "elben": [140, 141], "statist": 140, "local": 140, "toolbox": 140, "probe": 140, "bodi": 140, "rev": [140, 141, 151], "99": [140, 141], "052323": [140, 141], "ciruit": [140, 141], "hadamrd": 140, "addit": [140, 141, 142, 150, 151], "log_depth": [140, 141], "cruz": [140, 141], "yield": [140, 141], "lower": [140, 141, 142], "hous": 140, "reli": [140, 141], "dai": 140, "thu": [140, 141], "comparison": [140, 141], "best": [140, 141], "gme": [140, 141], "prefer": [140, 141, 150], "control": [140, 141, 150], "whenev": [140, 141], "mitgat": [140, 141], "arang": 140, "For": [140, 142, 150, 151], "think": 140, "help": 140, "rustworkx": 140, "iqmfakeapollo": [140, 142], "scrambl": 140, "rerun": 140, "usual": 140, "readabl": [140, 150], "mpl_draw": 140, "fake_backend": 140, "fake_apollo": 140, "arrow": 140, "32a8a4": 140, "num_it": 140, "209": [140, 145], "759": [140, 145], "760": [140, 145], "823": [140, 145], "233": 140, "597": [140, 144, 145], "016": [140, 145], "236": [140, 145], "594": [140, 145], "917": [140, 145], "279": 140, "fidelitii": [140, 141], "filter": [140, 141], "descript": [140, 141, 150], "l0": [140, 141], "l1": [140, 141], "enumer": [140, 141, 142], "tailor": 141, "novel": 141, "opt": 141, "anaconda3": [141, 147], "env": [141, 147], "lib": [141, 147], "python3": 141, "site": [141, 147], "170": [141, 145, 147], "userwarn": [141, 147], "unknown": [141, 147], "unknown_opt": [141, 147], "205": [141, 143, 145], "276": 141, "308": 141, "543": 141, "081": [141, 145], "125": [141, 144, 145], "927": 141, "872": 141, "455": 141, "102": 141, "9430881954317198": 141, "9742741960417851": 141, "introduct": 142, "what": [142, 143], "background": 142, "journal": 142, "prxquantum": 142, "1103": 142, "010325": [142, 151], "compressive_gst": 142, "gstconfigur": 142, "compressivegst": 142, "iqmfakeadoni": 142, "gate_set": 142, "predefin": 142, "1qxyi": 142, "2qxycz": 142, "2qxycz_extend": 142, "3qxycz": 142, "krau": 142, "reconstruct": 142, "rho": 142, "k_i": 142, "trigger": 142, "diamond": 142, "low": 142, "benefit": 142, "less": [142, 144], "captur": 142, "domin": 142, "sourc": [142, 149, 150], "bootstrap_sampl": 142, "bootstrap": 142, "trustworthi": 142, "veri": 142, "consum": 142, "minimal_1q_gst": 142, "minimal_2q_gst": 142, "Be": 142, "extra": 142, "871": [142, 145], "20it": 142, "621": 142, "converg": 142, "criterion": 142, "53e": 142, "uncertaintit": 142, "restult": 142, "idl": 142, "qb1": 142, "99693": 142, "00703": 142, "unitar": 142, "98781": 142, "rx": 142, "99918": 142, "0013": 142, "99674": 142, "ry": 142, "99509": 142, "01332": 142, "98074": 142, "tvd": 142, "00698": 142, "03296": 142, "povm": 142, "dist": 142, "00601": 142, "04366": 142, "matric": 142, "results_layout_": 142, "dict_kei": 142, "raw_kraus_oper": 142, "raw_gat": 142, "raw_povm": 142, "raw_stat": 142, "gauge_opt_g": 142, "gauge_opt_gates_pauli_basi": 142, "gauge_opt_povm": 142, "gauge_opt_st": 142, "main_mgst_tim": 142, "gauge_optimization_tim": 142, "choi_ev": 142, "full_metr": 142, "save": 142, "raw": 142, "gaug": 142, "frame": 142, "3d": 142, "raw_result": 142, "array_str": 142, "precis": 142, "suppress_smal": 142, "995": [142, 145], "002": [142, 143, 145], "002j": 142, "003j": 142, "004j": 142, "998": 142, "These": 142, "diplai": 142, "disc": 142, "superoper": 142, "represent": 142, "sinlg": 142, "g_": 142, "ij": 142, "p_i": 142, "p_j": 142, "layout_": 142, "_gate_metr": 142, "_choi_eigenvalu": 142, "_other_metr": 142, "_process_matrix_0": 142, "_process_matrix_1": 142, "_process_matrix_2": 142, "_spam_matrices_r": 142, "_spam_matrices_imag": 142, "altern": 142, "ourselv": 142, "xyi": 142, "instruct": 142, "gate_list": 142, "1e": 142, "indentif": 142, "gate_label": 142, "\u03c0": [142, 147], "custom_1q_gst": 142, "verbos": 142, "806": [142, 146], "61": 142, "803": 142, "42e": 142, "008j": 142, "989": [142, 143, 145], "001j": 142, "553": 143, "324": [143, 145], "964": 143, "064": 143, "065": 143, "294": 143, "664": 143, "107": 143, "982": [143, 144], "058": [143, 145], "538": [143, 145], "120": [143, 145], "121": [143, 145], "146": 143, "522": [143, 144], "103": [143, 145], "744": [143, 145], "780": [143, 144, 146], "818": 143, "819": [143, 144], "133": [143, 144], "286": 143, "287": 143, "376": [143, 145], "583": 143, "9975073376613797": 143, "9957157328789242": 143, "9976959612386156": 143, "9957310522299055": 143, "752861001879659e": 143, "028839025109517e": 143, "64196778583225e": 143, "243656712565855e": 143, "know": 143, "679": [143, 144, 145], "118": [143, 145], "820": [143, 145], "915": 143, "577": 143, "148": [143, 145], "874": [143, 145], "951": [143, 145], "380": 143, "381": 143, "485": 143, "685": [143, 145], "9798030906041997": 143, "9431232937255942": 143, "9840858225184934": 143, "945382422883015": 143, "593": [143, 145], "885": [143, 145], "490": [143, 145], "883": [143, 144, 145], "038": 143, "215": [143, 144], "282": 143, "348": 143, "394": 143, "395": [143, 145], "492": 143, "675": 143, "752": [143, 145], "932": 143, "933": 143, "158": [143, 145], "289": [143, 145], "436": [143, 145], "566": 143, "9344679810705316": 143, "9463377694591251": 143, "9267928870925659": 143, "943379008472002": 143, "892": 144, "589": 144, "646": 144, "702": 144, "244": 144, "996": 144, "598": [144, 145], "867": [144, 145], "117": 144, "271": [144, 145], "448": [144, 145], "449": [144, 145], "150": [144, 145], "450": [144, 145], "605": 144, "184": 144, "342": 144, "343": 144, "422": [144, 145], "134": 144, "456": 144, "529": [144, 145], "attr_kei": [144, 146, 147], "depth_2": 144, "14302134513855": 144, "007565975189208984": 144, "06883907318115234": 144, "f8d9d789": 144, "0e9a": 144, "4086": 144, "ab36": 144, "685064a7b66": 144, "depth_4": 144, "0004930496215820312": 144, "0007040500640869141": 144, "87e367b7": 144, "c3ae": 144, "4457": 144, "8a2d": 144, "7b169c528033": 144, "depth_8": 144, "0004889965057373047": 144, "0005979537963867188": 144, "d84330c9": 144, "101f": 144, "40ff": 144, "bea8": 144, "f5e4c0b41527": 144, "depth_16": 144, "0004627704620361328": 144, "0006148815155029297": 144, "1f58b4a0": 144, "fb16": 144, "4d12": 144, "a9e8": 144, "c9263da52418": 144, "depth_32": 144, "00047278404235839844": 144, "0005419254302978516": 144, "4e43834b": 144, "5694": 144, "4c6d": 144, "8a83": 144, "796913d67e40": 144, "depth_64": 144, "000469207763671875": 144, "0005609989166259766": 144, "036e1dd": 144, "ca95": 144, "42a1": 144, "ab68": 144, "30a243f6b4ba": 144, "depth_128": 144, "0004668235778808594": 144, "0005328655242919922": 144, "13a59ca8": 144, "2ab0": 144, "4de8": 144, "a643": 144, "5b3f318f03d4": 144, "depth_256": 144, "0004749298095703125": 144, "e673defd": 144, "039c": 144, "4c37": 144, "9ef3": 144, "d4734436f39a": 144, "depth_512": 144, "0005099773406982422": 144, "0005548000335693359": 144, "d83ac439": 144, "2929": 144, "4d78": 144, "b52b": 144, "f297873c3e44": 144, "9710221314803044": 144, "001462493086363885": 144, "9473471466489307": 144, "00285118172031131": 144, "xxxxxxxxxxxxxx": 145, "put": 145, "run0_qscor": 145, "549": 145, "680": 145, "622": 145, "772": 145, "869": 145, "898": 145, "462": 145, "563": 145, "027": 145, "235": 145, "602": 145, "928": 145, "193": 145, "353": 145, "494": 145, "539": 145, "568": 145, "645": 145, "696": 145, "167": 145, "293": 145, "472": 145, "505": 145, "632": 145, "778": 145, "851": 145, "210": [145, 146], "275": 145, "326": 145, "540": 145, "715": 145, "922": 145, "057": 145, "129": [145, 151], "302": 145, "506": 145, "683": 145, "141": 145, "478": 145, "056": 145, "135": 145, "493": 145, "528": 145, "599": 145, "687": 145, "047": 145, "228": 145, "317": 145, "452": 145, "809": 145, "957": 145, "913": 145, "183": 145, "430": 145, "480": 145, "716": 145, "926": 145, "974": 145, "052": 145, "762": 145, "793": 145, "847": 145, "419": 145, "850": 145, "903": 145, "474": 145, "507": 145, "564": 145, "711": 145, "189": 145, "273": [145, 147], "327": 145, "503": 145, "590": 145, "709": 145, "363": 145, "473": 145, "669": 145, "018": 145, "479": 145, "830": 145, "914": 145, "139": 145, "421": 145, "535": 145, "585": 145, "617": 145, "934": 145, "335": 145, "392": 145, "551": 145, "699": 145, "827": 145, "281": 145, "534": 145, "633": 145, "946": 145, "980": 145, "032": [145, 146], "340": 145, "337": 145, "310": 145, "203": 145, "258": 145, "318": 145, "124": 145, "226": 145, "601": 145, "956": 145, "017": 145, "053": 145, "137": 145, "result0_qscor": 145, "4370": 145, "4700": 145, "6695": 145, "3692": 145, "5902": 145, "3404": 145, "5068": 145, "5085": 145, "4374": 145, "8942": 145, "43697610073325965": 145, "09963324394097106": 145, "6694825328517715": 145, "07553199096996285": 145, "5901951757699432": 145, "04806723107119834": 145, "5067731707198324": 145, "03884606517763287": 145, "4373922810576933": 145, "034249084355823": 145, "217": 146, "082": 146, "rem_quasidistribut": [146, 147], "time_batch": [146, 147], "cumulative_average_heavy_output_prob": [146, 147], "cumulative_stddev_heavy_output_prob": [146, 147], "rem_cumulative_average_heavy_output_prob": [146, 147], "rem_cumulative_stddev_heavy_output_prob": [146, 147], "rem_heavy_output_prob": [146, 147], "60546875": 146, "71875": 146, "578125": 146, "74609375": 146, "6328125": 146, "546875": 146, "56640625": 146, "76953125": 146, "75390625": 146, "67578125": 146, "6171875": 146, "55078125": 146, "64453125": 146, "6875": 146, "7109375": 146, "82421875": 146, "76171875": 146, "6484375": 146, "6015625": 146, "73828125": 146, "63671875": 146, "69140625": 146, "61328125": 146, "734375": 146, "57421875": 146, "6953125": 146, "55859375": 146, "69921875": 146, "609375": 146, "671875": 146, "77734375": 146, "6796875": 146, "62890625": 146, "6640625": 146, "66796875": 146, "62109375": 146, "703125": 146, "68359375": 146, "58984375": 146, "71484375": 146, "59375": 146, "79296875": 146, "66015625": 146, "65234375": 146, "59765625": 146, "65625": 146, "84765625": 146, "5859375": 146, "5625": 146, "72265625": 146, "640625": 146, "58203125": 146, "54296875": 146, "8203125": 146, "78515625": 146, "7265625": 146, "53515625": 146, "5703125": 146, "5546875": 146, "5390625": 146, "828125": 146, "80859375": 146, "765625": 146, "81640625": 146, "5234375": 146, "75": 146, "73046875": 146, "87890625": 146, "7890625": 146, "7734375": 146, "7421875": 146, "70703125": 146, "50390625": 146, "7578125": 146, "52734375": 146, "78125": 146, "8125": 146, "average_heavy_output_prob": [146, 147], "649203125": 146, "021341903733745705": 146, "672703125": 146, "020984452845629994": 146, "rem_average_heavy_output_prob": [146, 147], "67954478782619": 146, "020869291754367154": 146, "rem_is_succes": [146, 147], "rem_qv_result": [146, 147], "710149650958595": 146, "020289757228807877": 146, "vanilla_4_qubits_": [146, 147], "vanilla_rem_4_qubits_": 146, "Or": [146, 147], "onc": [146, 147, 151], "668": 147, "pedrofigueroaromero": 147, "190": 147, "server": 147, "e48420cb": 147, "30dc": 147, "4274": 147, "9d7d": 147, "e5fffa68f73a": 147, "7404ae11": 147, "823a": 147, "4e66": 147, "b2c4": 147, "41361cf10c69": 147, "untranspiled_circuit": 147, "q_0": 147, "q_1": 147, "q_2": 147, "mea": 147, "48526": 147, "79781": 147, "58665": 147, "3705": 147, "1471": 147, "1775": 147, "1521": 147, "q_3": 147, "q_4": 147, "73475": 147, "1344": 147, "q_5": 147, "q_6": 147, "30103": 147, "7711": 147, "3108": 147, "6909": 147, "6665": 147, "65249": 147, "8837": 147, "24328": 147, "3169": 147, "6809": 147, "71478125": 147, "020192524094250205": 147, "7261292473074281": 147, "019943197512544274": 147, "vanilla_3_qubits_": 147, "vanilla_rem_3_qubits_": 147, "collect": 148, "demonstr": 148, "variou": 148, "rest": 148, "summari": [148, 149], "tomographi": [148, 149, 151], "releas": 149, "date": [149, 150], "finland": 149, "tool": [149, 151], "changelog": 149, "search": 149, "page": [149, 150], "januari": 150, "2004": 150, "AND": 150, "FOR": 150, "reproduct": 150, "shall": 150, "licensor": 150, "owner": 150, "entiti": 150, "author": 150, "grant": 150, "legal": 150, "power": 150, "direct": 150, "indirect": 150, "caus": 150, "contract": 150, "ownership": 150, "fifti": 150, "percent": 150, "outstand": 150, "iii": 150, "benefici": 150, "exercis": 150, "file": [150, 151], "mechan": 150, "transform": 150, "translat": 150, "convers": 150, "media": 150, "authorship": 150, "attach": 150, "appendix": 150, "editori": 150, "revis": 150, "elabor": 150, "whole": 150, "remain": 150, "mere": 150, "link": 150, "bind": 150, "interfac": 150, "thereof": 150, "contribut": 150, "intention": 150, "inclus": 150, "behalf": 150, "electron": 150, "verbal": 150, "mail": 150, "issu": 150, "track": 150, "discuss": 150, "exclud": 150, "conspicu": 150, "mark": 150, "Not": 150, "contributor": 150, "whom": 150, "been": 150, "receiv": 150, "incorpor": 150, "subject": 150, "herebi": 150, "perpetu": 150, "worldwid": 150, "charg": 150, "royalti": 150, "free": 150, "irrevoc": 150, "reproduc": 150, "publicli": 150, "sublicens": 150, "patent": 150, "sell": 150, "transfer": 150, "claim": 150, "necessarili": 150, "infring": 150, "alon": 150, "institut": 150, "litig": 150, "counterclaim": 150, "lawsuit": 150, "alleg": 150, "contributori": 150, "termin": [150, 151], "redistribut": 150, "medium": 150, "meet": 150, "recipi": 150, "carri": 150, "promin": 150, "retain": 150, "trademark": 150, "pertain": 150, "along": 150, "wherev": 150, "third": 150, "parti": 150, "normal": 150, "appear": 150, "content": 150, "alongsid": 150, "addendum": 150, "constru": 150, "compli": 150, "explicitli": 150, "notwithstand": 150, "noth": 150, "herein": 150, "supersed": 150, "agreement": 150, "regard": 150, "trade": 150, "servic": [150, 151], "reason": 150, "customari": 150, "describ": 150, "disclaim": 150, "merchant": 150, "particular": 150, "respons": 150, "appropri": 150, "risk": 150, "liabil": 150, "event": 150, "tort": 150, "neglig": 150, "deliber": [150, 151], "grossli": 150, "liabl": 150, "damag": 150, "special": 150, "incident": 150, "consequenti": 150, "charact": 150, "aris": 150, "inabl": 150, "loss": 150, "goodwil": 150, "stoppag": 150, "failur": 150, "malfunct": 150, "commerci": 150, "even": 150, "advis": 150, "fee": 150, "indemn": 150, "oblig": 150, "indemnifi": 150, "defend": 150, "hold": 150, "harmless": 150, "incur": 150, "assert": 150, "boilerpl": 150, "enclos": 150, "bracket": 150, "don": 150, "t": 150, "comment": 150, "syntax": 150, "easier": 150, "archiv": 150, "repositori": [150, 151], "licenc": 150, "src": 150, "raphael": 150, "brieger": 150, "ingo": 150, "roth": 150, "martin": 150, "kliesch": 150, "comprehens": 151, "modular": 151, "easi": 151, "042311": 151, "lett": 151, "080505": 151, "prx": 151, "2023": 151, "150502": 151, "2022": 151, "holist": 151, "032328": 151, "0712": 151, "0921": 151, "2007": 151, "ieee": 151, "tran": 151, "eng": 151, "split": 151, "legaci": 151, "wrap": 151, "benchmarkexperi": 151, "handl": 151, "uv": 151, "highli": 151, "practic": 151, "With": 151, "machin": 151, "venv": 151, "read": 151, "prompt": 151, "suppli": 151, "txt": 151, "lock": 151, "directli": 151, "repo": 151, "pypi": 151, "lint": 151, "cicd": 151, "clone": 151, "directori": 151, "edit": 151, "docbuild": 151, "pyproject": 151, "toml": 151, "commit": 151, "upgrad": 151, "transit": 151, "automat": 151, "cloud": 151, "prem": 151, "platform": 151, "authent": 151, "your_token": 151, "example_irb": 151, "example_experi": 151, "setup": 151, "weekli": 151, "daili": 151, "gitlab": 151, "scheduled_experi": 151}, "objects": {"iqm": [[1, 0, 0, "-", "benchmarks"]], "iqm.benchmarks": [[2, 0, 0, "-", "benchmark"], [5, 0, 0, "-", "benchmark_definition"], [15, 0, 0, "-", "circuit_containers"], [19, 0, 0, "-", "entanglement"], [35, 0, 0, "-", "logging_config"], [36, 0, 0, "-", "optimization"], [49, 0, 0, "-", "quantum_volume"], [68, 0, 0, "-", "randomized_benchmarking"], [112, 0, 0, "-", "readout_mitigation"], [116, 0, 0, "-", "utils"]], "iqm.benchmarks.benchmark": [[3, 1, 1, "", "BenchmarkBase"], [4, 1, 1, "", "BenchmarkConfigurationBase"]], "iqm.benchmarks.benchmark.BenchmarkBase": [[3, 2, 1, "", "check_requirements"], [3, 2, 1, "", "execute_full_benchmark"], [3, 2, 1, "", "generate_requirements"], [3, 2, 1, "", "name"]], "iqm.benchmarks.benchmark.BenchmarkConfigurationBase": [[4, 3, 1, "", "benchmark"], [4, 3, 1, "", "calset_id"], [4, 3, 1, "", "max_gates_per_batch"], [4, 3, 1, "", "model_computed_fields"], [4, 3, 1, "", "model_config"], [4, 3, 1, "", "model_fields"], [4, 3, 1, "", "physical_layout"], [4, 3, 1, "", "routing_method"], [4, 3, 1, "", "shots"]], "iqm.benchmarks.benchmark_definition": [[6, 1, 1, "", "Benchmark"], [7, 1, 1, "", "BenchmarkAnalysisResult"], [8, 1, 1, "", "BenchmarkObservation"], [9, 1, 1, "", "BenchmarkObservationIdentifier"], [10, 1, 1, "", "BenchmarkRunResult"], [11, 5, 1, "", "add_counts_to_dataset"], [12, 5, 1, "", "default_analysis_function"], [13, 5, 1, "", "merge_datasets_dac"], [14, 5, 1, "", "show_figure"]], "iqm.benchmarks.benchmark_definition.Benchmark": [[6, 2, 1, "", "analysis_function"], [6, 2, 1, "", "analyze"], [6, 2, 1, "", "execute"], [6, 2, 1, "", "name"], [6, 2, 1, "", "run"]], "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult": [[7, 2, 1, "", "from_run_result"], [7, 2, 1, "", "plot"], [7, 2, 1, "", "plot_all"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservation": [[8, 3, 1, "", "identifier"], [8, 3, 1, "", "name"], [8, 3, 1, "", "uncertainty"], [8, 3, 1, "", "value"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier": [[9, 3, 1, "", "qubit_indices"], [9, 4, 1, "", "string_identifier"]], "iqm.benchmarks.circuit_containers": [[16, 1, 1, "", "BenchmarkCircuit"], [17, 1, 1, "", "CircuitGroup"], [18, 1, 1, "", "Circuits"]], "iqm.benchmarks.circuit_containers.BenchmarkCircuit": [[16, 3, 1, "", "circuit_groups"], [16, 2, 1, "", "get_circuit_group_by_name"], [16, 4, 1, "", "group_names"], [16, 4, 1, "", "groups"], [16, 3, 1, "", "name"], [16, 4, 1, "", "qubit_indices"], [16, 4, 1, "", "qubit_layouts"], [16, 4, 1, "", "qubit_layouts_by_index"], [16, 4, 1, "", "qubits"]], "iqm.benchmarks.circuit_containers.CircuitGroup": [[17, 2, 1, "", "add_circuit"], [17, 4, 1, "", "circuit_names"], [17, 3, 1, "", "circuits"], [17, 2, 1, "", "get_circuits_by_name"], [17, 3, 1, "", "name"], [17, 4, 1, "", "qubit_layouts"], [17, 4, 1, "", "qubit_layouts_by_index"], [17, 4, 1, "", "qubits"]], "iqm.benchmarks.circuit_containers.Circuits": [[18, 3, 1, "", "benchmark_circuits"], [18, 2, 1, "", "get_benchmark_circuits_by_name"]], "iqm.benchmarks.entanglement": [[20, 0, 0, "-", "ghz"]], "iqm.benchmarks.entanglement.ghz": [[21, 1, 1, "", "GHZBenchmark"], [22, 1, 1, "", "GHZConfiguration"], [23, 5, 1, "", "extract_fidelities"], [24, 5, 1, "", "fidelity_analysis"], [25, 5, 1, "", "fidelity_ghz_coherences"], [26, 5, 1, "", "fidelity_ghz_randomized_measurements"], [27, 5, 1, "", "generate_ghz_linear"], [28, 5, 1, "", "generate_ghz_log_cruz"], [29, 5, 1, "", "generate_ghz_log_mooney"], [30, 5, 1, "", "generate_ghz_spanning_tree"], [31, 5, 1, "", "generate_ghz_star"], [32, 5, 1, "", "get_cx_map"], [33, 5, 1, "", "get_edges"], [34, 5, 1, "", "plot_fidelities"]], "iqm.benchmarks.entanglement.ghz.GHZBenchmark": [[21, 2, 1, "", "add_configuration_to_dataset"], [21, 2, 1, "", "analysis_function"], [21, 2, 1, "", "append_rms"], [21, 2, 1, "", "execute"], [21, 2, 1, "", "generate_coherence_meas_circuits"], [21, 2, 1, "", "generate_native_ghz"], [21, 2, 1, "", "generate_readout_circuit"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration": [[22, 3, 1, "", "benchmark"], [22, 3, 1, "", "cal_url"], [22, 3, 1, "", "custom_qubits_array"], [22, 3, 1, "", "fidelity_routine"], [22, 3, 1, "", "mit_shots"], [22, 3, 1, "", "model_computed_fields"], [22, 3, 1, "", "model_config"], [22, 3, 1, "", "model_fields"], [22, 3, 1, "", "num_RMs"], [22, 3, 1, "", "optimize_sqg"], [22, 3, 1, "", "qiskit_optim_level"], [22, 3, 1, "", "qubit_counts"], [22, 3, 1, "", "rem"], [22, 3, 1, "", "state_generation_routine"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration.iqm.qiskit_iqm.iqm_transpilation": [[22, 3, 1, "", "optimize_single_qubit_gates"]], "iqm.benchmarks.optimization": [[37, 0, 0, "-", "qscore"]], "iqm.benchmarks.optimization.qscore": [[38, 1, 1, "", "QScoreBenchmark"], [39, 1, 1, "", "QScoreConfiguration"], [40, 5, 1, "", "calculate_optimal_angles_for_QAOA_p1"], [41, 5, 1, "", "compute_expectation_value"], [42, 5, 1, "", "create_objective_function"], [43, 5, 1, "", "cut_cost_function"], [44, 5, 1, "", "get_optimal_angles"], [45, 5, 1, "", "is_successful"], [46, 5, 1, "", "plot_approximation_ratios"], [47, 5, 1, "", "qscore_analysis"], [48, 5, 1, "", "run_QAOA"]], "iqm.benchmarks.optimization.qscore.QScoreBenchmark": [[38, 2, 1, "", "add_all_meta_to_dataset"], [38, 2, 1, "", "analysis_function"], [38, 2, 1, "", "choose_qubits_custom"], [38, 2, 1, "", "choose_qubits_naive"], [38, 2, 1, "", "execute"], [38, 2, 1, "", "generate_maxcut_ansatz"]], "iqm.benchmarks.optimization.qscore.QScoreConfiguration": [[39, 3, 1, "", "REM"], [39, 3, 1, "", "benchmark"], [39, 3, 1, "", "choose_qubits_routine"], [39, 3, 1, "", "custom_qubits_array"], [39, 3, 1, "", "max_num_nodes"], [39, 3, 1, "", "min_num_nodes"], [39, 3, 1, "", "min_num_qubits"], [39, 3, 1, "", "mit_shots"], [39, 3, 1, "", "model_computed_fields"], [39, 3, 1, "", "model_config"], [39, 3, 1, "", "model_fields"], [39, 3, 1, "", "num_instances"], [39, 3, 1, "", "num_qaoa_layers"], [39, 3, 1, "", "optimize_sqg"], [39, 3, 1, "", "qiskit_optim_level"], [39, 3, 1, "", "qpu_topology"], [39, 3, 1, "", "seed"], [39, 3, 1, "", "use_classically_optimized_angles"], [39, 3, 1, "", "use_virtual_node"]], "iqm.benchmarks.quantum_volume": [[50, 0, 0, "-", "clops"], [56, 0, 0, "-", "quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[51, 1, 1, "", "CLOPSBenchmark"], [52, 1, 1, "", "CLOPSConfiguration"], [53, 5, 1, "", "clops_analysis"], [54, 5, 1, "", "plot_times"], [55, 5, 1, "", "retrieve_clops_elapsed_times"]], "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark": [[51, 2, 1, "", "add_all_meta_to_dataset"], [51, 2, 1, "", "analysis_function"], [51, 2, 1, "", "append_parameterized_unitary"], [51, 2, 1, "", "assign_random_parameters_to_all"], [51, 2, 1, "", "clops_cycle"], [51, 2, 1, "", "execute"], [51, 2, 1, "", "generate_circuit_list"], [51, 2, 1, "", "generate_random_parameters"], [51, 2, 1, "", "generate_single_circuit"], [51, 2, 1, "", "generate_transpiled_clops_templates"]], "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration": [[52, 3, 1, "", "benchmark"], [52, 3, 1, "", "clops_h_bool"], [52, 3, 1, "", "model_computed_fields"], [52, 3, 1, "", "model_config"], [52, 3, 1, "", "model_fields"], [52, 3, 1, "", "num_circuits"], [52, 3, 1, "", "num_shots"], [52, 3, 1, "", "num_updates"], [52, 3, 1, "", "optimize_sqg"], [52, 3, 1, "", "physical_layout"], [52, 3, 1, "", "qiskit_optim_level"], [52, 3, 1, "", "qubits"], [52, 3, 1, "", "routing_method"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[57, 1, 1, "", "QuantumVolumeBenchmark"], [58, 1, 1, "", "QuantumVolumeConfiguration"], [59, 5, 1, "", "compute_heavy_output_probabilities"], [60, 5, 1, "", "cumulative_hop"], [61, 5, 1, "", "cumulative_std"], [62, 5, 1, "", "get_ideal_heavy_outputs"], [63, 5, 1, "", "get_rem_hops"], [64, 5, 1, "", "heavy_projector"], [65, 5, 1, "", "is_successful"], [66, 5, 1, "", "plot_hop_threshold"], [67, 5, 1, "", "qv_analysis"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark": [[57, 2, 1, "", "add_all_circuits_to_dataset"], [57, 2, 1, "", "add_all_meta_to_dataset"], [57, 2, 1, "", "analysis_function"], [57, 2, 1, "", "execute"], [57, 2, 1, "", "generate_circuit_list"], [57, 2, 1, "", "generate_single_circuit"], [57, 2, 1, "", "get_rem_quasidistro"], [57, 2, 1, "", "submit_single_qv_job"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration": [[58, 3, 1, "", "benchmark"], [58, 3, 1, "", "choose_qubits_routine"], [58, 3, 1, "", "custom_qubits_array"], [58, 3, 1, "", "mit_shots"], [58, 3, 1, "", "model_computed_fields"], [58, 3, 1, "", "model_config"], [58, 3, 1, "", "model_fields"], [58, 3, 1, "", "num_circuits"], [58, 3, 1, "", "num_sigmas"], [58, 3, 1, "", "optimize_sqg"], [58, 3, 1, "", "physical_layout"], [58, 3, 1, "", "qiskit_optim_level"], [58, 3, 1, "", "rem"], [58, 3, 1, "", "routing_method"]], "iqm.benchmarks.randomized_benchmarking": [[69, 0, 0, "-", "clifford_rb"], [74, 0, 0, "-", "interleaved_rb"], [79, 0, 0, "-", "mirror_rb"], [89, 0, 0, "-", "multi_lmfit"], [94, 0, 0, "-", "randomized_benchmarking_common"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[70, 0, 0, "-", "clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[71, 1, 1, "", "CliffordRBConfiguration"], [72, 1, 1, "", "CliffordRandomizedBenchmarking"], [73, 5, 1, "", "clifford_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration": [[71, 3, 1, "", "benchmark"], [71, 3, 1, "", "model_computed_fields"], [71, 3, 1, "", "model_config"], [71, 3, 1, "", "model_fields"], [71, 3, 1, "", "num_circuit_samples"], [71, 3, 1, "", "parallel_execution"], [71, 3, 1, "", "qubits_array"], [71, 3, 1, "", "sequence_lengths"], [71, 3, 1, "", "shots"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking": [[72, 2, 1, "", "add_all_circuits_to_dataset"], [72, 2, 1, "", "add_all_metadata_to_dataset"], [72, 2, 1, "", "analysis_function"], [72, 2, 1, "", "execute"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[75, 0, 0, "-", "interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[76, 1, 1, "", "InterleavedRBConfiguration"], [77, 1, 1, "", "InterleavedRandomizedBenchmarking"], [78, 5, 1, "", "interleaved_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration": [[76, 3, 1, "", "interleaved_gate"], [76, 3, 1, "", "interleaved_gate_params"], [76, 3, 1, "", "model_computed_fields"], [76, 3, 1, "", "model_config"], [76, 3, 1, "", "model_fields"], [76, 3, 1, "", "num_circuit_samples"], [76, 3, 1, "", "parallel_execution"], [76, 3, 1, "", "qubits_array"], [76, 3, 1, "", "sequence_lengths"], [76, 3, 1, "", "shots"], [76, 3, 1, "", "simultaneous_fit"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking": [[77, 2, 1, "", "add_all_circuits_to_dataset"], [77, 2, 1, "", "add_all_meta_to_dataset"], [77, 2, 1, "", "analysis_function"], [77, 2, 1, "", "execute"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[80, 0, 0, "-", "mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[81, 1, 1, "", "MirrorRBConfiguration"], [82, 1, 1, "", "MirrorRandomizedBenchmarking"], [83, 5, 1, "", "compute_polarizations"], [84, 5, 1, "", "edge_grab"], [85, 5, 1, "", "generate_fixed_depth_mrb_circuits"], [86, 5, 1, "", "generate_pauli_dressed_mrb_circuits"], [87, 5, 1, "", "list_to_numcircuit_times_numpauli_matrix"], [88, 5, 1, "", "mrb_analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration": [[81, 3, 1, "", "benchmark"], [81, 3, 1, "", "density_2q_gates"], [81, 3, 1, "", "depths_array"], [81, 3, 1, "", "model_computed_fields"], [81, 3, 1, "", "model_config"], [81, 3, 1, "", "model_fields"], [81, 3, 1, "", "num_circuit_samples"], [81, 3, 1, "", "num_pauli_samples"], [81, 3, 1, "", "qiskit_optim_level"], [81, 3, 1, "", "qubits_array"], [81, 3, 1, "", "routing_method"], [81, 3, 1, "", "shots"], [81, 3, 1, "", "two_qubit_gate_ensemble"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking": [[82, 2, 1, "", "add_all_meta_to_dataset"], [82, 2, 1, "", "analysis_function"], [82, 2, 1, "", "execute"], [82, 2, 1, "", "submit_single_mrb_job"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[90, 5, 1, "", "create_multi_dataset_params"], [91, 5, 1, "", "eval_func_single_dataset"], [92, 5, 1, "", "get_param_names_from_func_signature"], [93, 5, 1, "", "multi_dataset_residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[95, 5, 1, "", "compute_inverse_clifford"], [96, 5, 1, "", "estimate_survival_probabilities"], [97, 5, 1, "", "exponential_rb"], [98, 5, 1, "", "fit_decay_lmfit"], [99, 5, 1, "", "generate_all_rb_circuits"], [100, 5, 1, "", "generate_fixed_depth_parallel_rb_circuits"], [101, 5, 1, "", "generate_random_clifford_seq_circuits"], [102, 5, 1, "", "get_survival_probabilities"], [103, 5, 1, "", "import_native_gate_cliffords"], [104, 5, 1, "", "lmfit_minimizer"], [105, 5, 1, "", "plot_rb_decay"], [106, 5, 1, "", "relabel_qubits_array_from_zero"], [107, 5, 1, "", "submit_parallel_rb_job"], [108, 5, 1, "", "submit_sequential_rb_jobs"], [109, 5, 1, "", "survival_probabilities_parallel"], [110, 5, 1, "", "validate_irb_gate"], [111, 5, 1, "", "validate_rb_qubits"]], "iqm.benchmarks.readout_mitigation": [[113, 1, 1, "", "M3IQM"], [114, 5, 1, "", "apply_readout_error_mitigation"], [115, 5, 1, "", "readout_error_m3"]], "iqm.benchmarks.readout_mitigation.M3IQM": [[113, 2, 1, "", "cals_from_system"]], "iqm.benchmarks.utils": [[117, 5, 1, "", "count_2q_layers"], [118, 5, 1, "", "count_native_gates"], [119, 5, 1, "", "get_iqm_backend"], [120, 5, 1, "", "marginal_distribution"], [121, 5, 1, "", "perform_backend_transpilation"], [122, 5, 1, "", "reduce_to_active_qubits"], [123, 5, 1, "", "retrieve_all_counts"], [124, 5, 1, "", "retrieve_all_job_metadata"], [125, 5, 1, "", "set_coupling_map"], [126, 5, 1, "", "sort_batches_by_final_layout"], [127, 5, 1, "", "submit_execute"], [128, 5, 1, "", "timeit"], [129, 5, 1, "", "xrvariable_to_counts"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": 0, "iqm": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 135, 136, 137, 138, 139, 141, 144, 145, 146, 147, 149, 151], "benchmark": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 135, 136, 137, 138, 139, 140, 141, 143, 144, 149, 151], "benchmarkbas": 3, "benchmarkconfigurationbas": 4, "benchmark_definit": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "benchmarkanalysisresult": 7, "benchmarkobserv": 8, "benchmarkobservationidentifi": 9, "benchmarkrunresult": 10, "add_counts_to_dataset": 11, "default_analysis_funct": 12, "merge_datasets_dac": 13, "show_figur": 14, "circuit_contain": [15, 16, 17, 18], "benchmarkcircuit": 16, "circuitgroup": 17, "circuit": [18, 135, 136, 138, 147], "entangl": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "ghz": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 135, 136, 139, 140, 141], "ghzbenchmark": 21, "ghzconfigur": 22, "extract_fidel": 23, "fidelity_analysi": 24, "fidelity_ghz_coher": 25, "fidelity_ghz_randomized_measur": 26, "generate_ghz_linear": 27, "generate_ghz_log_cruz": 28, "generate_ghz_log_moonei": 29, "generate_ghz_spanning_tre": 30, "generate_ghz_star": 31, "get_cx_map": 32, "get_edg": 33, "plot_fidel": 34, "logging_config": 35, "optim": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48], "qscore": [37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 139, 145], "qscorebenchmark": 38, "qscoreconfigur": 39, "calculate_optimal_angles_for_qaoa_p1": 40, "compute_expectation_valu": 41, "create_objective_funct": 42, "cut_cost_funct": 43, "get_optimal_angl": 44, "is_success": [45, 65], "plot_approximation_ratio": 46, "qscore_analysi": 47, "run_qaoa": 48, "quantum_volum": [49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "clop": [50, 51, 52, 53, 54, 55, 135, 136, 138, 139], "clopsbenchmark": 51, "clopsconfigur": 52, "clops_analysi": 53, "plot_tim": 54, "retrieve_clops_elapsed_tim": 55, "quantumvolumebenchmark": 57, "quantumvolumeconfigur": 58, "compute_heavy_output_prob": 59, "cumulative_hop": 60, "cumulative_std": 61, "get_ideal_heavy_output": 62, "get_rem_hop": 63, "heavy_projector": 64, "plot_hop_threshold": 66, "qv_analysi": 67, "randomized_benchmark": [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "clifford_rb": [69, 70, 71, 72, 73], "cliffordrbconfigur": 71, "cliffordrandomizedbenchmark": 72, "clifford_rb_analysi": 73, "interleaved_rb": [74, 75, 76, 77, 78], "interleavedrbconfigur": 76, "interleavedrandomizedbenchmark": 77, "interleaved_rb_analysi": 78, "mirror_rb": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "mirrorrbconfigur": 81, "mirrorrandomizedbenchmark": 82, "compute_polar": 83, "edge_grab": 84, "generate_fixed_depth_mrb_circuit": 85, "generate_pauli_dressed_mrb_circuit": 86, "list_to_numcircuit_times_numpauli_matrix": 87, "mrb_analysi": 88, "multi_lmfit": [89, 90, 91, 92, 93], "create_multi_dataset_param": 90, "eval_func_single_dataset": 91, "get_param_names_from_func_signatur": 92, "multi_dataset_residu": 93, "randomized_benchmarking_common": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "compute_inverse_clifford": 95, "estimate_survival_prob": 96, "exponential_rb": 97, "fit_decay_lmfit": 98, "generate_all_rb_circuit": 99, "generate_fixed_depth_parallel_rb_circuit": 100, "generate_random_clifford_seq_circuit": 101, "get_survival_prob": 102, "import_native_gate_clifford": 103, "lmfit_minim": 104, "plot_rb_decai": 105, "relabel_qubits_array_from_zero": 106, "submit_parallel_rb_job": 107, "submit_sequential_rb_job": 108, "survival_probabilities_parallel": 109, "validate_irb_g": 110, "validate_rb_qubit": 111, "readout_mitig": [112, 113, 114, 115], "m3iqm": 113, "apply_readout_error_mitig": 114, "readout_error_m3": 115, "util": [116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "count_2q_lay": 117, "count_native_g": 118, "get_iqm_backend": 119, "marginal_distribut": 120, "perform_backend_transpil": 121, "reduce_to_active_qubit": 122, "retrieve_all_count": 123, "retrieve_all_job_metadata": 124, "set_coupling_map": 125, "sort_batches_by_final_layout": 126, "submit_execut": 127, "timeit": 128, "xrvariable_to_count": 129, "changelog": 130, "version": 130, "2": [130, 132], "19": 130, "18": 130, "17": 130, "16": 130, "15": 130, "14": 130, "13": 130, "12": 130, "11": 130, "10": 130, "9": 130, "8": 130, "7": 130, "6": 130, "5": 130, "4": 130, "3": 130, "1": [130, 136], "0": [130, 136], "develop": [131, 151], "qubit": [132, 136], "clifford": [132, 135, 137, 139], "group": 132, "decomposit": 132, "gener": [132, 138, 144, 146, 147], "1q": [132, 143], "2q": [132, 143], "dump": 132, "pickl": 132, "file": 132, "load": 132, "count": 132, "element": 132, "A": 132, "wai": 132, "work": 132, "out": [132, 142], "invers": 132, "sequenc": 132, "design": 132, "condit": 132, "how": 133, "make": 133, "your": 133, "own": 133, "devic": 134, "spark": 135, "connect": [135, 136], "backend": [135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147], "state": [135, 136, 139, 140, 141], "fidel": [135, 136, 139, 140, 141], "quantum": [135, 136, 139, 146, 147], "volum": [135, 136, 139, 146, 147], "layer": [135, 136, 138], "oper": [135, 136, 138], "per": [135, 136, 138], "second": [135, 136, 138], "random": [135, 137, 139, 143, 144], "interleav": [135, 139, 143], "irb": [135, 143], "q": [135, 136, 145], "score": [135, 136, 145], "summari": [135, 136, 139], "star": 136, "As": 136, "one": 136, "can": 136, "see": 136, "label": 136, "i": 136, "reserv": 136, "resontor": 136, "so": 136, "advis": 136, "defin": [136, 137, 138, 139, 142, 143, 144, 145, 146], "indic": [136, 149], "layout": 136, "interest": 136, "start": 136, "from": 136, "rb": [137, 144], "choos": [137, 138, 139, 142, 143, 144, 145, 146, 147], "set": [137, 138, 139, 141, 142, 144, 145, 146, 147], "token": [137, 138, 139, 141, 144, 145, 146, 147], "us": [137, 138, 139, 141, 144, 145, 146, 147, 151], "reson": [137, 138, 139, 141, 144, 145, 146, 147], "configur": [137, 138, 140, 141, 142, 143, 144, 145, 146, 147], "run": [137, 138, 140, 141, 143, 144, 145, 146, 147], "experi": [137, 138, 142, 143, 144, 145, 146, 147], "perform": [137, 138, 145, 146, 147], "analysi": [137, 138, 145, 146, 147], "list": [138, 144], "all": [138, 142, 144], "kei": [138, 144], "attribut": [138, 144], "dataset": [138, 144], "The": [138, 144], "observ": [138, 142, 144], "object": [138, 144], "contain": [138, 144], "result": [138, 140, 141, 142, 143, 144], "plot": [138, 142, 144, 146, 147], "notebook": [139, 151], "mirror": [139, 144], "greenberg": [140, 141], "horn": [140, 141], "zeiling": [140, 141], "definit": [140, 141], "access": [140, 141, 142], "compress": 142, "gate": [142, 143], "tomographi": 142, "gst": 142, "minim": 142, "execut": 142, "": 142, "examin": 142, "high": 142, "level": 142, "store": 142, "final": 142, "estim": 142, "further": 142, "process": 142, "creat": 142, "custom": 142, "check": 142, "matrix": 142, "correspond": 142, "pi": 142, "rotat": 142, "around": 142, "y": 142, "axi": 142, "analyz": [143, 144], "non": 143, "nativ": 143, "mrb": 144, "qv": [146, 147], "deneb": 147, "inspect": 147, "exampl": 148, "content": 149, "tabl": 149, "licens": 150, "instal": 151, "latest": 151, "releas": 151, "option": 151, "depend": 151, "chang": 151, "character": 151, "physic": 151, "hardwar": 151, "jupyt": 151, "python": 151, "script": 151, "schedul": 151, "ci": 151, "cd": 151, "pipelin": 151}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"API Reference": [[0, "api-reference"]], "iqm.benchmarks": [[1, "module-iqm.benchmarks"]], "iqm.benchmarks.benchmark": [[2, "module-iqm.benchmarks.benchmark"]], "iqm.benchmarks.benchmark.BenchmarkBase": [[3, "iqm-benchmarks-benchmark-benchmarkbase"]], "iqm.benchmarks.benchmark.BenchmarkConfigurationBase": [[4, "iqm-benchmarks-benchmark-benchmarkconfigurationbase"]], "iqm.benchmarks.benchmark_definition": [[5, "module-iqm.benchmarks.benchmark_definition"]], "iqm.benchmarks.benchmark_definition.Benchmark": [[6, "iqm-benchmarks-benchmark-definition-benchmark"]], "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult": [[7, "iqm-benchmarks-benchmark-definition-benchmarkanalysisresult"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservation": [[8, "iqm-benchmarks-benchmark-definition-benchmarkobservation"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier": [[9, "iqm-benchmarks-benchmark-definition-benchmarkobservationidentifier"]], "iqm.benchmarks.benchmark_definition.BenchmarkRunResult": [[10, "iqm-benchmarks-benchmark-definition-benchmarkrunresult"]], "iqm.benchmarks.benchmark_definition.add_counts_to_dataset": [[11, "iqm-benchmarks-benchmark-definition-add-counts-to-dataset"]], "iqm.benchmarks.benchmark_definition.default_analysis_function": [[12, "iqm-benchmarks-benchmark-definition-default-analysis-function"]], "iqm.benchmarks.benchmark_definition.merge_datasets_dac": [[13, "iqm-benchmarks-benchmark-definition-merge-datasets-dac"]], "iqm.benchmarks.benchmark_definition.show_figure": [[14, "iqm-benchmarks-benchmark-definition-show-figure"]], "iqm.benchmarks.circuit_containers": [[15, "module-iqm.benchmarks.circuit_containers"]], "iqm.benchmarks.circuit_containers.BenchmarkCircuit": [[16, "iqm-benchmarks-circuit-containers-benchmarkcircuit"]], "iqm.benchmarks.circuit_containers.CircuitGroup": [[17, "iqm-benchmarks-circuit-containers-circuitgroup"]], "iqm.benchmarks.circuit_containers.Circuits": [[18, "iqm-benchmarks-circuit-containers-circuits"]], "iqm.benchmarks.entanglement": [[19, "module-iqm.benchmarks.entanglement"]], "iqm.benchmarks.entanglement.ghz": [[20, "module-iqm.benchmarks.entanglement.ghz"]], "iqm.benchmarks.entanglement.ghz.GHZBenchmark": [[21, "iqm-benchmarks-entanglement-ghz-ghzbenchmark"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration": [[22, "iqm-benchmarks-entanglement-ghz-ghzconfiguration"]], "iqm.benchmarks.entanglement.ghz.extract_fidelities": [[23, "iqm-benchmarks-entanglement-ghz-extract-fidelities"]], "iqm.benchmarks.entanglement.ghz.fidelity_analysis": [[24, "iqm-benchmarks-entanglement-ghz-fidelity-analysis"]], "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences": [[25, "iqm-benchmarks-entanglement-ghz-fidelity-ghz-coherences"]], "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements": [[26, "iqm-benchmarks-entanglement-ghz-fidelity-ghz-randomized-measurements"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_linear": [[27, "iqm-benchmarks-entanglement-ghz-generate-ghz-linear"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz": [[28, "iqm-benchmarks-entanglement-ghz-generate-ghz-log-cruz"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney": [[29, "iqm-benchmarks-entanglement-ghz-generate-ghz-log-mooney"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree": [[30, "iqm-benchmarks-entanglement-ghz-generate-ghz-spanning-tree"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_star": [[31, "iqm-benchmarks-entanglement-ghz-generate-ghz-star"]], "iqm.benchmarks.entanglement.ghz.get_cx_map": [[32, "iqm-benchmarks-entanglement-ghz-get-cx-map"]], "iqm.benchmarks.entanglement.ghz.get_edges": [[33, "iqm-benchmarks-entanglement-ghz-get-edges"]], "iqm.benchmarks.entanglement.ghz.plot_fidelities": [[34, "iqm-benchmarks-entanglement-ghz-plot-fidelities"]], "iqm.benchmarks.logging_config": [[35, "module-iqm.benchmarks.logging_config"]], "iqm.benchmarks.optimization": [[36, "module-iqm.benchmarks.optimization"]], "iqm.benchmarks.optimization.qscore": [[37, "module-iqm.benchmarks.optimization.qscore"]], "iqm.benchmarks.optimization.qscore.QScoreBenchmark": [[38, "iqm-benchmarks-optimization-qscore-qscorebenchmark"]], "iqm.benchmarks.optimization.qscore.QScoreConfiguration": [[39, "iqm-benchmarks-optimization-qscore-qscoreconfiguration"]], "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1": [[40, "iqm-benchmarks-optimization-qscore-calculate-optimal-angles-for-qaoa-p1"]], "iqm.benchmarks.optimization.qscore.compute_expectation_value": [[41, "iqm-benchmarks-optimization-qscore-compute-expectation-value"]], "iqm.benchmarks.optimization.qscore.create_objective_function": [[42, "iqm-benchmarks-optimization-qscore-create-objective-function"]], "iqm.benchmarks.optimization.qscore.cut_cost_function": [[43, "iqm-benchmarks-optimization-qscore-cut-cost-function"]], "iqm.benchmarks.optimization.qscore.get_optimal_angles": [[44, "iqm-benchmarks-optimization-qscore-get-optimal-angles"]], "iqm.benchmarks.optimization.qscore.is_successful": [[45, "iqm-benchmarks-optimization-qscore-is-successful"]], "iqm.benchmarks.optimization.qscore.plot_approximation_ratios": [[46, "iqm-benchmarks-optimization-qscore-plot-approximation-ratios"]], "iqm.benchmarks.optimization.qscore.qscore_analysis": [[47, "iqm-benchmarks-optimization-qscore-qscore-analysis"]], "iqm.benchmarks.optimization.qscore.run_QAOA": [[48, "iqm-benchmarks-optimization-qscore-run-qaoa"]], "iqm.benchmarks.quantum_volume": [[49, "module-iqm.benchmarks.quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[50, "module-iqm.benchmarks.quantum_volume.clops"]], "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark": [[51, "iqm-benchmarks-quantum-volume-clops-clopsbenchmark"]], "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration": [[52, "iqm-benchmarks-quantum-volume-clops-clopsconfiguration"]], "iqm.benchmarks.quantum_volume.clops.clops_analysis": [[53, "iqm-benchmarks-quantum-volume-clops-clops-analysis"]], "iqm.benchmarks.quantum_volume.clops.plot_times": [[54, "iqm-benchmarks-quantum-volume-clops-plot-times"]], "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times": [[55, "iqm-benchmarks-quantum-volume-clops-retrieve-clops-elapsed-times"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[56, "module-iqm.benchmarks.quantum_volume.quantum_volume"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark": [[57, "iqm-benchmarks-quantum-volume-quantum-volume-quantumvolumebenchmark"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration": [[58, "iqm-benchmarks-quantum-volume-quantum-volume-quantumvolumeconfiguration"]], "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities": [[59, "iqm-benchmarks-quantum-volume-quantum-volume-compute-heavy-output-probabilities"]], "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop": [[60, "iqm-benchmarks-quantum-volume-quantum-volume-cumulative-hop"]], "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std": [[61, "iqm-benchmarks-quantum-volume-quantum-volume-cumulative-std"]], "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs": [[62, "iqm-benchmarks-quantum-volume-quantum-volume-get-ideal-heavy-outputs"]], "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops": [[63, "iqm-benchmarks-quantum-volume-quantum-volume-get-rem-hops"]], "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector": [[64, "iqm-benchmarks-quantum-volume-quantum-volume-heavy-projector"]], "iqm.benchmarks.quantum_volume.quantum_volume.is_successful": [[65, "iqm-benchmarks-quantum-volume-quantum-volume-is-successful"]], "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold": [[66, "iqm-benchmarks-quantum-volume-quantum-volume-plot-hop-threshold"]], "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis": [[67, "iqm-benchmarks-quantum-volume-quantum-volume-qv-analysis"]], "iqm.benchmarks.randomized_benchmarking": [[68, "module-iqm.benchmarks.randomized_benchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[69, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[70, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration": [[71, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-cliffordrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking": [[72, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-cliffordrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis": [[73, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-clifford-rb-analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[74, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[75, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration": [[76, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleavedrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking": [[77, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleavedrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis": [[78, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleaved-rb-analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[79, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[80, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration": [[81, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mirrorrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking": [[82, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mirrorrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations": [[83, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-compute-polarizations"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab": [[84, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-edge-grab"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits": [[85, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-generate-fixed-depth-mrb-circuits"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits": [[86, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-generate-pauli-dressed-mrb-circuits"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix": [[87, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-list-to-numcircuit-times-numpauli-matrix"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis": [[88, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mrb-analysis"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[89, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params": [[90, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-create-multi-dataset-params"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset": [[91, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-eval-func-single-dataset"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature": [[92, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-get-param-names-from-func-signature"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual": [[93, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-multi-dataset-residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[94, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford": [[95, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-compute-inverse-clifford"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities": [[96, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-estimate-survival-probabilities"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb": [[97, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-exponential-rb"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit": [[98, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-fit-decay-lmfit"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits": [[99, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-all-rb-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits": [[100, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-fixed-depth-parallel-rb-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits": [[101, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-random-clifford-seq-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities": [[102, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-get-survival-probabilities"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords": [[103, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-import-native-gate-cliffords"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer": [[104, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-lmfit-minimizer"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay": [[105, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-plot-rb-decay"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero": [[106, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-relabel-qubits-array-from-zero"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job": [[107, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-submit-parallel-rb-job"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs": [[108, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-submit-sequential-rb-jobs"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel": [[109, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-survival-probabilities-parallel"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate": [[110, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-validate-irb-gate"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits": [[111, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-validate-rb-qubits"]], "iqm.benchmarks.readout_mitigation": [[112, "module-iqm.benchmarks.readout_mitigation"]], "iqm.benchmarks.readout_mitigation.M3IQM": [[113, "iqm-benchmarks-readout-mitigation-m3iqm"]], "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation": [[114, "iqm-benchmarks-readout-mitigation-apply-readout-error-mitigation"]], "iqm.benchmarks.readout_mitigation.readout_error_m3": [[115, "iqm-benchmarks-readout-mitigation-readout-error-m3"]], "iqm.benchmarks.utils": [[116, "module-iqm.benchmarks.utils"]], "iqm.benchmarks.utils.count_2q_layers": [[117, "iqm-benchmarks-utils-count-2q-layers"]], "iqm.benchmarks.utils.count_native_gates": [[118, "iqm-benchmarks-utils-count-native-gates"]], "iqm.benchmarks.utils.get_iqm_backend": [[119, "iqm-benchmarks-utils-get-iqm-backend"]], "iqm.benchmarks.utils.marginal_distribution": [[120, "iqm-benchmarks-utils-marginal-distribution"]], "iqm.benchmarks.utils.perform_backend_transpilation": [[121, "iqm-benchmarks-utils-perform-backend-transpilation"]], "iqm.benchmarks.utils.reduce_to_active_qubits": [[122, "iqm-benchmarks-utils-reduce-to-active-qubits"]], "iqm.benchmarks.utils.retrieve_all_counts": [[123, "iqm-benchmarks-utils-retrieve-all-counts"]], "iqm.benchmarks.utils.retrieve_all_job_metadata": [[124, "iqm-benchmarks-utils-retrieve-all-job-metadata"]], "iqm.benchmarks.utils.set_coupling_map": [[125, "iqm-benchmarks-utils-set-coupling-map"]], "iqm.benchmarks.utils.sort_batches_by_final_layout": [[126, "iqm-benchmarks-utils-sort-batches-by-final-layout"]], "iqm.benchmarks.utils.submit_execute": [[127, "iqm-benchmarks-utils-submit-execute"]], "iqm.benchmarks.utils.timeit": [[128, "iqm-benchmarks-utils-timeit"]], "iqm.benchmarks.utils.xrvariable_to_counts": [[129, "iqm-benchmarks-utils-xrvariable-to-counts"]], "Changelog": [[130, "changelog"]], "Version 2.19": [[130, "version-2-19"]], "Version 2.18": [[130, "version-2-18"]], "Version 2.17": [[130, "version-2-17"]], "Version 2.16": [[130, "version-2-16"]], "Version 2.15": [[130, "version-2-15"]], "Version 2.14": [[130, "version-2-14"]], "Version 2.13": [[130, "version-2-13"]], "Version 2.12": [[130, "version-2-12"]], "Version 2.11": [[130, "version-2-11"]], "Version 2.10": [[130, "version-2-10"]], "Version 2.9": [[130, "version-2-9"]], "Version 2.8": [[130, "version-2-8"]], "Version 2.7": [[130, "version-2-7"]], "Version 2.6": [[130, "version-2-6"]], "Version 2.5": [[130, "version-2-5"]], "Version 2.4": [[130, "version-2-4"]], "Version 2.3": [[130, "version-2-3"]], "Version 2.2": [[130, "version-2-2"]], "Version 2.1": [[130, "version-2-1"]], "Version 2.0": [[130, "version-2-0"]], "Version 1.12": [[130, "version-1-12"]], "Version 1.11": [[130, "version-1-11"]], "Version 1.10": [[130, "version-1-10"]], "Version 1.9": [[130, "version-1-9"]], "Version 1.8": [[130, "version-1-8"]], "Version 1.7": [[130, "version-1-7"]], "Version 1.6": [[130, "version-1-6"]], "Version 1.5": [[130, "version-1-5"]], "Version 1.4": [[130, "version-1-4"]], "Version 1.3": [[130, "version-1-3"]], "Version 1.2": [[130, "version-1-2"]], "Version 1.1": [[130, "version-1-1"]], "Version 1.0": [[130, "version-1-0"]], "Development": [[131, "development"]], "2-Qubit Clifford Group Decomposition": [[132, "qubit-clifford-group-decomposition"]], "Generate the 1Q Clifford group": [[132, "generate-the-1q-clifford-group"]], "Generate the 2Q Clifford group": [[132, "generate-the-2q-clifford-group"]], "Dump on a pickle file": [[132, "dump-on-a-pickle-file"]], "Load": [[132, "load"]], "Count elements": [[132, "count-elements"]], "2Q": [[132, "q"]], "1Q": [[132, "id1"]], "A way to work out the inverse of sequences": [[132, "a-way-to-work-out-the-inverse-of-sequences"]], "2-design condition": [[132, "design-condition"]], "How to make your own benchmark?": [[133, "how-to-make-your-own-benchmark"]], "Devices": [[134, "devices"]], "Benchmarking IQM Spark": [[135, "benchmarking-iqm-spark"]], "Connect to the backend": [[135, "connect-to-the-backend"], [136, "connect-to-the-backend"]], "GHZ state fidelity": [[135, "ghz-state-fidelity"], [136, "ghz-state-fidelity"], [139, "ghz-state-fidelity"]], "Quantum Volume": [[135, "quantum-volume"], [136, "quantum-volume"], [139, "quantum-volume"]], "Circuit Layer Operations Per Second (CLOPS)": [[135, "circuit-layer-operations-per-second-clops"], [136, "circuit-layer-operations-per-second-clops"], [138, "circuit-layer-operations-per-second-clops"]], "Clifford Randomized Benchmarking": [[135, "clifford-randomized-benchmarking"], [139, "clifford-randomized-benchmarking"]], "Interleaved Randomized Benchmarking (IRB)": [[135, "interleaved-randomized-benchmarking-irb"], [143, "interleaved-randomized-benchmarking-irb"]], "Q-Score": [[135, "q-score"], [136, "q-score"], [145, "q-score"]], "Summary": [[135, "summary"], [136, "summary"]], "Benchmarking IQM Star": [[136, "benchmarking-iqm-star"]], "As one can see, the label \u201c0\u201d is reserved for the resontor. So it is advised to define the qubit indices in the layout of interest starting from 1.": [[136, "as-one-can-see-the-label-0-is-reserved-for-the-resontor-so-it-is-advised-to-define-the-qubit-indices-in-the-layout-of-interest-starting-from-1"]], "Clifford Randomized Benchmarking (RB)": [[137, "clifford-randomized-benchmarking-rb"]], "Choose (or define) a backend": [[137, "choose-or-define-a-backend"], [138, "choose-or-define-a-backend"], [139, "choose-or-define-a-backend"], [142, "choose-or-define-a-backend"], [143, "choose-or-define-a-backend"], [144, "choose-or-define-a-backend"], [145, "choose-or-define-a-backend"], [146, "choose-or-define-a-backend"]], "Set IQM Token if using Resonance.": [[137, "set-iqm-token-if-using-resonance"], [139, "set-iqm-token-if-using-resonance"], [141, "set-iqm-token-if-using-resonance"], [144, "set-iqm-token-if-using-resonance"], [145, "set-iqm-token-if-using-resonance"], [146, "set-iqm-token-if-using-resonance"], [147, "set-iqm-token-if-using-resonance"]], "Randomized Benchmarking Configuration": [[137, "randomized-benchmarking-configuration"]], "Run the experiment": [[137, "run-the-experiment"], [138, "run-the-experiment"], [144, "run-the-experiment"], [145, "run-the-experiment"], [146, "run-the-experiment"], [147, "run-the-experiment"]], "Perform the analysis": [[137, "perform-the-analysis"]], "Set IQM Token if using Resonance": [[138, "set-iqm-token-if-using-resonance"]], "CLOPS Configuration": [[138, "clops-configuration"]], "Perform Analysis": [[138, "perform-analysis"], [145, "perform-analysis"], [146, "perform-analysis"], [147, "perform-analysis"]], "List all the keys in the attributes of the dataset": [[138, "list-all-the-keys-in-the-attributes-of-the-dataset"], [144, "list-all-the-keys-in-the-attributes-of-the-dataset"]], "The observation object contains the benchmark results": [[138, "the-observation-object-contains-the-benchmark-results"], [144, "the-observation-object-contains-the-benchmark-results"]], "Generate plots": [[138, "generate-plots"], [144, "generate-plots"], [146, "generate-plots"], [147, "generate-plots"]], "IQM Benchmarks: Summary Notebook": [[139, "iqm-benchmarks-summary-notebook"]], "Interleaved Randomized Benchmarking": [[139, "interleaved-randomized-benchmarking"]], "Mirror Randomized Benchmarking": [[139, "mirror-randomized-benchmarking"]], "CLOPS": [[139, "clops"]], "QScore": [[139, "qscore"]], "Greenberger\u2013Horne\u2013Zeilinger (GHZ) State Fidelity": [[140, "greenbergerhornezeilinger-ghz-state-fidelity"], [141, "greenbergerhornezeilinger-ghz-state-fidelity"]], "Definition of the benchmark configuration": [[140, "definition-of-the-benchmark-configuration"], [141, "definition-of-the-benchmark-configuration"]], "Running the benchmark": [[140, "running-the-benchmark"], [141, "running-the-benchmark"]], "Accessing the results": [[140, "accessing-the-results"], [141, "accessing-the-results"]], "Compressive Gate Set Tomography (GST)": [[142, "compressive-gate-set-tomography-gst"]], "Minimal GST Experiment configurations": [[142, "minimal-gst-experiment-configurations"]], "Execute GST Experiment(s)": [[142, "execute-gst-experiment-s"]], "Examine the results": [[142, "examine-the-results"]], "High level results stored at result.observations": [[142, "high-level-results-stored-at-result-observations"]], "Accessing the final gate set estimates for further processing": [[142, "accessing-the-final-gate-set-estimates-for-further-processing"]], "Plots": [[142, "plots"]], "Creating a custom gate set": [[142, "creating-a-custom-gate-set"]], "Checking out the process matrix corresponding to the pi rotation around the y-axis": [[142, "checking-out-the-process-matrix-corresponding-to-the-pi-rotation-around-the-y-axis"]], "All plots for the custom gate set": [[142, "all-plots-for-the-custom-gate-set"]], "Interleaved Randomized Benchmarking Configuration": [[143, "interleaved-randomized-benchmarking-configuration"]], "1Q gate IRB": [[143, "q-gate-irb"]], "Run the experiment - 1Q gate IRB": [[143, "run-the-experiment-1q-gate-irb"]], "Analyze the results - 1Q gate IRB": [[143, "analyze-the-results-1q-gate-irb"]], "2Q gate IRB": [[143, "id1"]], "Run the experiment - 2Q gate IRB": [[143, "run-the-experiment-2q-gate-irb"]], "Analyze the results - 2Q gate IRB": [[143, "analyze-the-results-2q-gate-irb"]], "IRB for non-native gate": [[143, "irb-for-non-native-gate"]], "Mirror Randomized Benchmarking (MRB)": [[144, "mirror-randomized-benchmarking-mrb"]], "Mirror RB Configuration": [[144, "mirror-rb-configuration"]], "Analyze the results": [[144, "analyze-the-results"]], "Qscore Configuration": [[145, "qscore-configuration"]], "Quantum Volume (QV)": [[146, "quantum-volume-qv"]], "Quantum Volume Configuration": [[146, "quantum-volume-configuration"], [147, "quantum-volume-configuration"]], "QV on Deneb": [[147, "qv-on-deneb"]], "Choose Deneb as a backend": [[147, "choose-deneb-as-a-backend"]], "Inspect the circuits": [[147, "inspect-the-circuits"]], "Examples": [[148, "examples"]], "IQM Benchmarks": [[149, "iqm-benchmarks"], [151, "iqm-benchmarks"]], "Contents": [[149, "contents"]], "Indices and tables": [[149, "indices-and-tables"]], "License": [[150, "license"]], "Installation (latest release)": [[151, "installation-latest-release"]], "Optional dependencies": [[151, "optional-dependencies"]], "Development installation (latest changes)": [[151, "development-installation-latest-changes"]], "Characterize Physical Hardware": [[151, "characterize-physical-hardware"]], "Using a Jupyter notebook or Python script": [[151, "using-a-jupyter-notebook-or-python-script"]], "Scheduled benchmarks using a CI/CD Pipeline": [[151, "scheduled-benchmarks-using-a-ci-cd-pipeline"]]}, "indexentries": {"iqm.benchmarks": [[1, "module-iqm.benchmarks"]], "module": [[1, "module-iqm.benchmarks"], [2, "module-iqm.benchmarks.benchmark"], [5, "module-iqm.benchmarks.benchmark_definition"], [15, "module-iqm.benchmarks.circuit_containers"], [19, "module-iqm.benchmarks.entanglement"], [20, "module-iqm.benchmarks.entanglement.ghz"], [35, "module-iqm.benchmarks.logging_config"], [36, "module-iqm.benchmarks.optimization"], [37, "module-iqm.benchmarks.optimization.qscore"], [49, "module-iqm.benchmarks.quantum_volume"], [50, "module-iqm.benchmarks.quantum_volume.clops"], [56, "module-iqm.benchmarks.quantum_volume.quantum_volume"], [68, "module-iqm.benchmarks.randomized_benchmarking"], [69, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"], [70, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"], [74, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"], [75, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"], [79, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"], [80, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"], [89, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"], [94, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"], [112, "module-iqm.benchmarks.readout_mitigation"], [116, "module-iqm.benchmarks.utils"]], "iqm.benchmarks.benchmark": [[2, "module-iqm.benchmarks.benchmark"]], "benchmarkbase (class in iqm.benchmarks.benchmark)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase"]], "check_requirements() (iqm.benchmarks.benchmark.benchmarkbase static method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.check_requirements"]], "execute_full_benchmark() (iqm.benchmarks.benchmark.benchmarkbase method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.execute_full_benchmark"]], "generate_requirements() (iqm.benchmarks.benchmark.benchmarkbase method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.generate_requirements"]], "name() (iqm.benchmarks.benchmark.benchmarkbase class method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.name"]], "benchmarkconfigurationbase (class in iqm.benchmarks.benchmark)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase"]], "benchmark (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.benchmark"]], "calset_id (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.calset_id"]], "max_gates_per_batch (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.max_gates_per_batch"]], "model_computed_fields (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_computed_fields"]], "model_config (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_config"]], "model_fields (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_fields"]], "physical_layout (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.physical_layout"]], "routing_method (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.routing_method"]], "shots (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.shots"]], "iqm.benchmarks.benchmark_definition": [[5, "module-iqm.benchmarks.benchmark_definition"]], "benchmark (class in iqm.benchmarks.benchmark_definition)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark"]], "analysis_function() (iqm.benchmarks.benchmark_definition.benchmark static method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.analysis_function"]], "analyze() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.analyze"]], "execute() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.execute"]], "name() (iqm.benchmarks.benchmark_definition.benchmark class method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.name"]], "run() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.run"]], "benchmarkanalysisresult (class in iqm.benchmarks.benchmark_definition)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult"]], "from_run_result() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult class method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.from_run_result"]], "plot() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.plot"]], "plot_all() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.plot_all"]], "benchmarkobservation (class in iqm.benchmarks.benchmark_definition)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation"]], "identifier (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.identifier"]], "name (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.name"]], "uncertainty (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.uncertainty"]], "value (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.value"]], "benchmarkobservationidentifier (class in iqm.benchmarks.benchmark_definition)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier"]], "qubit_indices (iqm.benchmarks.benchmark_definition.benchmarkobservationidentifier attribute)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.qubit_indices"]], "string_identifier (iqm.benchmarks.benchmark_definition.benchmarkobservationidentifier property)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.string_identifier"]], "benchmarkrunresult (class in iqm.benchmarks.benchmark_definition)": [[10, "iqm.benchmarks.benchmark_definition.BenchmarkRunResult"]], "add_counts_to_dataset() (in module iqm.benchmarks.benchmark_definition)": [[11, "iqm.benchmarks.benchmark_definition.add_counts_to_dataset"]], "default_analysis_function() (in module iqm.benchmarks.benchmark_definition)": [[12, "iqm.benchmarks.benchmark_definition.default_analysis_function"]], "merge_datasets_dac() (in module iqm.benchmarks.benchmark_definition)": [[13, "iqm.benchmarks.benchmark_definition.merge_datasets_dac"]], "show_figure() (in module iqm.benchmarks.benchmark_definition)": [[14, "iqm.benchmarks.benchmark_definition.show_figure"]], "iqm.benchmarks.circuit_containers": [[15, "module-iqm.benchmarks.circuit_containers"]], "benchmarkcircuit (class in iqm.benchmarks.circuit_containers)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit"]], "circuit_groups (iqm.benchmarks.circuit_containers.benchmarkcircuit attribute)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.circuit_groups"]], "get_circuit_group_by_name() (iqm.benchmarks.circuit_containers.benchmarkcircuit method)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.get_circuit_group_by_name"]], "group_names (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.group_names"]], "groups (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.groups"]], "name (iqm.benchmarks.circuit_containers.benchmarkcircuit attribute)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.name"]], "qubit_indices (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_indices"]], "qubit_layouts (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_layouts"]], "qubit_layouts_by_index (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_layouts_by_index"]], "qubits (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubits"]], "circuitgroup (class in iqm.benchmarks.circuit_containers)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup"]], "add_circuit() (iqm.benchmarks.circuit_containers.circuitgroup method)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.add_circuit"]], "circuit_names (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.circuit_names"]], "circuits (iqm.benchmarks.circuit_containers.circuitgroup attribute)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.circuits"]], "get_circuits_by_name() (iqm.benchmarks.circuit_containers.circuitgroup method)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.get_circuits_by_name"]], "name (iqm.benchmarks.circuit_containers.circuitgroup attribute)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.name"]], "qubit_layouts (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubit_layouts"]], "qubit_layouts_by_index (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubit_layouts_by_index"]], "qubits (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubits"]], "circuits (class in iqm.benchmarks.circuit_containers)": [[18, "iqm.benchmarks.circuit_containers.Circuits"]], "benchmark_circuits (iqm.benchmarks.circuit_containers.circuits attribute)": [[18, "iqm.benchmarks.circuit_containers.Circuits.benchmark_circuits"]], "get_benchmark_circuits_by_name() (iqm.benchmarks.circuit_containers.circuits method)": [[18, "iqm.benchmarks.circuit_containers.Circuits.get_benchmark_circuits_by_name"]], "iqm.benchmarks.entanglement": [[19, "module-iqm.benchmarks.entanglement"]], "iqm.benchmarks.entanglement.ghz": [[20, "module-iqm.benchmarks.entanglement.ghz"]], "ghzbenchmark (class in iqm.benchmarks.entanglement.ghz)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark"]], "add_configuration_to_dataset() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.add_configuration_to_dataset"]], "analysis_function() (iqm.benchmarks.entanglement.ghz.ghzbenchmark static method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.analysis_function"]], "append_rms() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.append_rms"]], "execute() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.execute"]], "generate_coherence_meas_circuits() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_coherence_meas_circuits"]], "generate_native_ghz() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_native_ghz"]], "generate_readout_circuit() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_readout_circuit"]], "ghzconfiguration (class in iqm.benchmarks.entanglement.ghz)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration"]], "benchmark (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.benchmark"]], "cal_url (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.cal_url"]], "custom_qubits_array (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.custom_qubits_array"]], "fidelity_routine (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.fidelity_routine"]], "mit_shots (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.mit_shots"]], "model_computed_fields (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_config"]], "model_fields (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_fields"]], "num_rms (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.num_RMs"]], "optimize_single_qubit_gates (iqm.benchmarks.entanglement.ghz.ghzconfiguration.iqm.qiskit_iqm.iqm_transpilation attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.iqm.qiskit_iqm.iqm_transpilation.optimize_single_qubit_gates"]], "optimize_sqg (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.optimize_sqg"]], "qiskit_optim_level (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.qiskit_optim_level"]], "qubit_counts (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.qubit_counts"]], "rem (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.rem"]], "state_generation_routine (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.state_generation_routine"]], "extract_fidelities() (in module iqm.benchmarks.entanglement.ghz)": [[23, "iqm.benchmarks.entanglement.ghz.extract_fidelities"]], "fidelity_analysis() (in module iqm.benchmarks.entanglement.ghz)": [[24, "iqm.benchmarks.entanglement.ghz.fidelity_analysis"]], "fidelity_ghz_coherences() (in module iqm.benchmarks.entanglement.ghz)": [[25, "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences"]], "fidelity_ghz_randomized_measurements() (in module iqm.benchmarks.entanglement.ghz)": [[26, "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements"]], "generate_ghz_linear() (in module iqm.benchmarks.entanglement.ghz)": [[27, "iqm.benchmarks.entanglement.ghz.generate_ghz_linear"]], "generate_ghz_log_cruz() (in module iqm.benchmarks.entanglement.ghz)": [[28, "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz"]], "generate_ghz_log_mooney() (in module iqm.benchmarks.entanglement.ghz)": [[29, "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney"]], "generate_ghz_spanning_tree() (in module iqm.benchmarks.entanglement.ghz)": [[30, "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree"]], "generate_ghz_star() (in module iqm.benchmarks.entanglement.ghz)": [[31, "iqm.benchmarks.entanglement.ghz.generate_ghz_star"]], "get_cx_map() (in module iqm.benchmarks.entanglement.ghz)": [[32, "iqm.benchmarks.entanglement.ghz.get_cx_map"]], "get_edges() (in module iqm.benchmarks.entanglement.ghz)": [[33, "iqm.benchmarks.entanglement.ghz.get_edges"]], "plot_fidelities() (in module iqm.benchmarks.entanglement.ghz)": [[34, "iqm.benchmarks.entanglement.ghz.plot_fidelities"]], "iqm.benchmarks.logging_config": [[35, "module-iqm.benchmarks.logging_config"]], "iqm.benchmarks.optimization": [[36, "module-iqm.benchmarks.optimization"]], "iqm.benchmarks.optimization.qscore": [[37, "module-iqm.benchmarks.optimization.qscore"]], "qscorebenchmark (class in iqm.benchmarks.optimization.qscore)": [[38, "iqm.benchmarks.optimization.qscore.QScoreBenchmark"]], "add_all_meta_to_dataset() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[38, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.optimization.qscore.qscorebenchmark static method)": [[38, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.analysis_function"]], "choose_qubits_custom() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[38, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.choose_qubits_custom"]], "choose_qubits_naive() (iqm.benchmarks.optimization.qscore.qscorebenchmark static method)": [[38, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.choose_qubits_naive"]], "execute() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[38, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.execute"]], "generate_maxcut_ansatz() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[38, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.generate_maxcut_ansatz"]], "qscoreconfiguration (class in iqm.benchmarks.optimization.qscore)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration"]], "rem (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.REM"]], "benchmark (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.benchmark"]], "choose_qubits_routine (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.choose_qubits_routine"]], "custom_qubits_array (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.custom_qubits_array"]], "max_num_nodes (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.max_num_nodes"]], "min_num_nodes (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.min_num_nodes"]], "min_num_qubits (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.min_num_qubits"]], "mit_shots (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.mit_shots"]], "model_computed_fields (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_config"]], "model_fields (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_fields"]], "num_instances (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.num_instances"]], "num_qaoa_layers (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.num_qaoa_layers"]], "optimize_sqg (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.optimize_sqg"]], "qiskit_optim_level (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.qiskit_optim_level"]], "qpu_topology (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.qpu_topology"]], "seed (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.seed"]], "use_classically_optimized_angles (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.use_classically_optimized_angles"]], "use_virtual_node (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.use_virtual_node"]], "calculate_optimal_angles_for_qaoa_p1() (in module iqm.benchmarks.optimization.qscore)": [[40, "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1"]], "compute_expectation_value() (in module iqm.benchmarks.optimization.qscore)": [[41, "iqm.benchmarks.optimization.qscore.compute_expectation_value"]], "create_objective_function() (in module iqm.benchmarks.optimization.qscore)": [[42, "iqm.benchmarks.optimization.qscore.create_objective_function"]], "cut_cost_function() (in module iqm.benchmarks.optimization.qscore)": [[43, "iqm.benchmarks.optimization.qscore.cut_cost_function"]], "get_optimal_angles() (in module iqm.benchmarks.optimization.qscore)": [[44, "iqm.benchmarks.optimization.qscore.get_optimal_angles"]], "is_successful() (in module iqm.benchmarks.optimization.qscore)": [[45, "iqm.benchmarks.optimization.qscore.is_successful"]], "plot_approximation_ratios() (in module iqm.benchmarks.optimization.qscore)": [[46, "iqm.benchmarks.optimization.qscore.plot_approximation_ratios"]], "qscore_analysis() (in module iqm.benchmarks.optimization.qscore)": [[47, "iqm.benchmarks.optimization.qscore.qscore_analysis"]], "run_qaoa() (in module iqm.benchmarks.optimization.qscore)": [[48, "iqm.benchmarks.optimization.qscore.run_QAOA"]], "iqm.benchmarks.quantum_volume": [[49, "module-iqm.benchmarks.quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[50, "module-iqm.benchmarks.quantum_volume.clops"]], "clopsbenchmark (class in iqm.benchmarks.quantum_volume.clops)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark"]], "add_all_meta_to_dataset() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark static method)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.analysis_function"]], "append_parameterized_unitary() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.append_parameterized_unitary"]], "assign_random_parameters_to_all() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.assign_random_parameters_to_all"]], "clops_cycle() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.clops_cycle"]], "execute() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.execute"]], "generate_circuit_list() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_circuit_list"]], "generate_random_parameters() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_random_parameters"]], "generate_single_circuit() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_single_circuit"]], "generate_transpiled_clops_templates() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_transpiled_clops_templates"]], "clopsconfiguration (class in iqm.benchmarks.quantum_volume.clops)": [[52, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration"]], "benchmark (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[52, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.benchmark"]], "clops_h_bool (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[52, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.clops_h_bool"]], "model_computed_fields (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[52, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[52, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_config"]], "model_fields (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[52, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_fields"]], "num_circuits (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[52, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_circuits"]], "num_shots (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[52, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_shots"]], "num_updates (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[52, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_updates"]], "optimize_sqg (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[52, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.optimize_sqg"]], "physical_layout (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[52, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.physical_layout"]], "qiskit_optim_level (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[52, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.qiskit_optim_level"]], "qubits (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[52, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.qubits"]], "routing_method (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[52, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.routing_method"]], "clops_analysis() (in module iqm.benchmarks.quantum_volume.clops)": [[53, "iqm.benchmarks.quantum_volume.clops.clops_analysis"]], "plot_times() (in module iqm.benchmarks.quantum_volume.clops)": [[54, "iqm.benchmarks.quantum_volume.clops.plot_times"]], "retrieve_clops_elapsed_times() (in module iqm.benchmarks.quantum_volume.clops)": [[55, "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[56, "module-iqm.benchmarks.quantum_volume.quantum_volume"]], "quantumvolumebenchmark (class in iqm.benchmarks.quantum_volume.quantum_volume)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark"]], "add_all_circuits_to_dataset() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.add_all_circuits_to_dataset"]], "add_all_meta_to_dataset() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark static method)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.analysis_function"]], "execute() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.execute"]], "generate_circuit_list() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.generate_circuit_list"]], "generate_single_circuit() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark static method)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.generate_single_circuit"]], "get_rem_quasidistro() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.get_rem_quasidistro"]], "submit_single_qv_job() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.submit_single_qv_job"]], "quantumvolumeconfiguration (class in iqm.benchmarks.quantum_volume.quantum_volume)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration"]], "benchmark (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.benchmark"]], "choose_qubits_routine (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.choose_qubits_routine"]], "custom_qubits_array (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.custom_qubits_array"]], "mit_shots (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.mit_shots"]], "model_computed_fields (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_config"]], "model_fields (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_fields"]], "num_circuits (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.num_circuits"]], "num_sigmas (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.num_sigmas"]], "optimize_sqg (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.optimize_sqg"]], "physical_layout (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.physical_layout"]], "qiskit_optim_level (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.qiskit_optim_level"]], "rem (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.rem"]], "routing_method (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.routing_method"]], "compute_heavy_output_probabilities() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[59, "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities"]], "cumulative_hop() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[60, "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop"]], "cumulative_std() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[61, "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std"]], "get_ideal_heavy_outputs() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[62, "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs"]], "get_rem_hops() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[63, "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops"]], "heavy_projector() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[64, "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector"]], "is_successful() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[65, "iqm.benchmarks.quantum_volume.quantum_volume.is_successful"]], "plot_hop_threshold() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[66, "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold"]], "qv_analysis() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[67, "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis"]], "iqm.benchmarks.randomized_benchmarking": [[68, "module-iqm.benchmarks.randomized_benchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[69, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[70, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"]], "cliffordrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration"]], "benchmark (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.benchmark"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.num_circuit_samples"]], "parallel_execution (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.parallel_execution"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.qubits_array"]], "sequence_lengths (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.sequence_lengths"]], "shots (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.shots"]], "cliffordrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[72, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking"]], "add_all_circuits_to_dataset() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[72, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.add_all_circuits_to_dataset"]], "add_all_metadata_to_dataset() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[72, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.add_all_metadata_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking static method)": [[72, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[72, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.execute"]], "clifford_rb_analysis() (in module iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[73, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[74, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[75, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"]], "interleavedrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration"]], "interleaved_gate (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.interleaved_gate"]], "interleaved_gate_params (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.interleaved_gate_params"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.num_circuit_samples"]], "parallel_execution (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.parallel_execution"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.qubits_array"]], "sequence_lengths (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.sequence_lengths"]], "shots (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.shots"]], "simultaneous_fit (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.simultaneous_fit"]], "interleavedrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[77, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking"]], "add_all_circuits_to_dataset() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[77, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.add_all_circuits_to_dataset"]], "add_all_meta_to_dataset() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[77, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking static method)": [[77, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[77, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.execute"]], "interleaved_rb_analysis() (in module iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[78, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[79, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[80, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"]], "mirrorrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration"]], "benchmark (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.benchmark"]], "density_2q_gates (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.density_2q_gates"]], "depths_array (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.depths_array"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.num_circuit_samples"]], "num_pauli_samples (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.num_pauli_samples"]], "qiskit_optim_level (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.qiskit_optim_level"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.qubits_array"]], "routing_method (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.routing_method"]], "shots (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.shots"]], "two_qubit_gate_ensemble (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.two_qubit_gate_ensemble"]], "mirrorrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[82, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking"]], "add_all_meta_to_dataset() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[82, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking static method)": [[82, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[82, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.execute"]], "submit_single_mrb_job() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[82, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.submit_single_mrb_job"]], "compute_polarizations() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[83, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations"]], "edge_grab() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[84, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab"]], "generate_fixed_depth_mrb_circuits() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[85, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits"]], "generate_pauli_dressed_mrb_circuits() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[86, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits"]], "list_to_numcircuit_times_numpauli_matrix() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[87, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix"]], "mrb_analysis() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[88, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[89, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"]], "create_multi_dataset_params() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[90, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params"]], "eval_func_single_dataset() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[91, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset"]], "get_param_names_from_func_signature() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[92, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature"]], "multi_dataset_residual() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[93, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[94, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"]], "compute_inverse_clifford() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[95, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford"]], "estimate_survival_probabilities() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[96, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities"]], "exponential_rb() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[97, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb"]], "fit_decay_lmfit() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[98, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit"]], "generate_all_rb_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[99, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits"]], "generate_fixed_depth_parallel_rb_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[100, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits"]], "generate_random_clifford_seq_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[101, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits"]], "get_survival_probabilities() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[102, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities"]], "import_native_gate_cliffords() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[103, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords"]], "lmfit_minimizer() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[104, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer"]], "plot_rb_decay() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[105, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay"]], "relabel_qubits_array_from_zero() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[106, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero"]], "submit_parallel_rb_job() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[107, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job"]], "submit_sequential_rb_jobs() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[108, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs"]], "survival_probabilities_parallel() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[109, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel"]], "validate_irb_gate() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[110, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate"]], "validate_rb_qubits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[111, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits"]], "iqm.benchmarks.readout_mitigation": [[112, "module-iqm.benchmarks.readout_mitigation"]], "m3iqm (class in iqm.benchmarks.readout_mitigation)": [[113, "iqm.benchmarks.readout_mitigation.M3IQM"]], "cals_from_system() (iqm.benchmarks.readout_mitigation.m3iqm method)": [[113, "iqm.benchmarks.readout_mitigation.M3IQM.cals_from_system"]], "apply_readout_error_mitigation() (in module iqm.benchmarks.readout_mitigation)": [[114, "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation"]], "readout_error_m3() (in module iqm.benchmarks.readout_mitigation)": [[115, "iqm.benchmarks.readout_mitigation.readout_error_m3"]], "iqm.benchmarks.utils": [[116, "module-iqm.benchmarks.utils"]], "count_2q_layers() (in module iqm.benchmarks.utils)": [[117, "iqm.benchmarks.utils.count_2q_layers"]], "count_native_gates() (in module iqm.benchmarks.utils)": [[118, "iqm.benchmarks.utils.count_native_gates"]], "get_iqm_backend() (in module iqm.benchmarks.utils)": [[119, "iqm.benchmarks.utils.get_iqm_backend"]], "marginal_distribution() (in module iqm.benchmarks.utils)": [[120, "iqm.benchmarks.utils.marginal_distribution"]], "perform_backend_transpilation() (in module iqm.benchmarks.utils)": [[121, "iqm.benchmarks.utils.perform_backend_transpilation"]], "reduce_to_active_qubits() (in module iqm.benchmarks.utils)": [[122, "iqm.benchmarks.utils.reduce_to_active_qubits"]], "retrieve_all_counts() (in module iqm.benchmarks.utils)": [[123, "iqm.benchmarks.utils.retrieve_all_counts"]], "retrieve_all_job_metadata() (in module iqm.benchmarks.utils)": [[124, "iqm.benchmarks.utils.retrieve_all_job_metadata"]], "set_coupling_map() (in module iqm.benchmarks.utils)": [[125, "iqm.benchmarks.utils.set_coupling_map"]], "sort_batches_by_final_layout() (in module iqm.benchmarks.utils)": [[126, "iqm.benchmarks.utils.sort_batches_by_final_layout"]], "submit_execute() (in module iqm.benchmarks.utils)": [[127, "iqm.benchmarks.utils.submit_execute"]], "timeit() (in module iqm.benchmarks.utils)": [[128, "iqm.benchmarks.utils.timeit"]], "xrvariable_to_counts() (in module iqm.benchmarks.utils)": [[129, "iqm.benchmarks.utils.xrvariable_to_counts"]]}})