Search.setIndex({"docnames": ["API", "api/iqm.benchmarks", "api/iqm.benchmarks.benchmark", "api/iqm.benchmarks.benchmark.BenchmarkBase", "api/iqm.benchmarks.benchmark.BenchmarkConfigurationBase", "api/iqm.benchmarks.benchmark_definition", "api/iqm.benchmarks.benchmark_definition.Benchmark", "api/iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservation", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier", "api/iqm.benchmarks.benchmark_definition.BenchmarkRunResult", "api/iqm.benchmarks.benchmark_definition.add_counts_to_dataset", "api/iqm.benchmarks.benchmark_definition.default_analysis_function", "api/iqm.benchmarks.benchmark_definition.merge_datasets_dac", "api/iqm.benchmarks.benchmark_definition.show_figure", "api/iqm.benchmarks.circuit_containers", "api/iqm.benchmarks.circuit_containers.BenchmarkCircuit", "api/iqm.benchmarks.circuit_containers.CircuitGroup", "api/iqm.benchmarks.circuit_containers.Circuits", "api/iqm.benchmarks.entanglement", "api/iqm.benchmarks.entanglement.ghz", "api/iqm.benchmarks.entanglement.ghz.GHZBenchmark", "api/iqm.benchmarks.entanglement.ghz.GHZConfiguration", "api/iqm.benchmarks.entanglement.ghz.fidelity_analysis", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_linear", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_star", "api/iqm.benchmarks.entanglement.ghz.get_cx_map", "api/iqm.benchmarks.entanglement.ghz.get_edges", "api/iqm.benchmarks.entanglement.ghz.plot_fidelities", "api/iqm.benchmarks.logging_config", "api/iqm.benchmarks.optimization", "api/iqm.benchmarks.optimization.qscore", "api/iqm.benchmarks.optimization.qscore.QScoreBenchmark", "api/iqm.benchmarks.optimization.qscore.QScoreConfiguration", "api/iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1", "api/iqm.benchmarks.optimization.qscore.compute_expectation_value", "api/iqm.benchmarks.optimization.qscore.create_objective_function", "api/iqm.benchmarks.optimization.qscore.cut_cost_function", "api/iqm.benchmarks.optimization.qscore.get_optimal_angles", "api/iqm.benchmarks.optimization.qscore.is_successful", "api/iqm.benchmarks.optimization.qscore.plot_approximation_ratios", "api/iqm.benchmarks.optimization.qscore.qscore_analysis", "api/iqm.benchmarks.optimization.qscore.run_QAOA", "api/iqm.benchmarks.quantum_volume", "api/iqm.benchmarks.quantum_volume.clops", "api/iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark", "api/iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration", "api/iqm.benchmarks.quantum_volume.clops.clops_analysis", "api/iqm.benchmarks.quantum_volume.clops.plot_times", "api/iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times", "api/iqm.benchmarks.quantum_volume.quantum_volume", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration", "api/iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops", "api/iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector", "api/iqm.benchmarks.quantum_volume.quantum_volume.is_successful", "api/iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold", "api/iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis", "api/iqm.benchmarks.randomized_benchmarking", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits", "api/iqm.benchmarks.readout_mitigation", "api/iqm.benchmarks.readout_mitigation.M3IQM", "api/iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation", "api/iqm.benchmarks.readout_mitigation.readout_error_m3", "api/iqm.benchmarks.utils", "api/iqm.benchmarks.utils.GraphPositions", "api/iqm.benchmarks.utils.bootstrap_counts", "api/iqm.benchmarks.utils.count_2q_layers", "api/iqm.benchmarks.utils.count_native_gates", "api/iqm.benchmarks.utils.extract_fidelities", "api/iqm.benchmarks.utils.get_iqm_backend", "api/iqm.benchmarks.utils.marginal_distribution", "api/iqm.benchmarks.utils.perform_backend_transpilation", "api/iqm.benchmarks.utils.plot_layout_fidelity_graph", "api/iqm.benchmarks.utils.reduce_to_active_qubits", "api/iqm.benchmarks.utils.retrieve_all_counts", "api/iqm.benchmarks.utils.retrieve_all_job_metadata", "api/iqm.benchmarks.utils.set_coupling_map", "api/iqm.benchmarks.utils.sort_batches_by_final_layout", "api/iqm.benchmarks.utils.submit_execute", "api/iqm.benchmarks.utils.timeit", "api/iqm.benchmarks.utils.xrvariable_to_counts", "changelog", "development/development", "development/generate_2qubit_cliffords", "development/how_to_make_your_own_benchmark", "devices/devices", "devices/spark", "devices/star", "examples/example_clifford_rb", "examples/example_clops", "examples/example_experiment_all", "examples/example_ghz", "examples/example_ghz_deneb", "examples/example_gst", "examples/example_interleaved_rb", "examples/example_mirror_rb", "examples/example_qscore", "examples/example_quantum_volume", "examples/example_quantum_volume_deneb", "examples/examples", "index", "license", "readme"], "filenames": ["API.rst", "api/iqm.benchmarks.rst", "api/iqm.benchmarks.benchmark.rst", "api/iqm.benchmarks.benchmark.BenchmarkBase.rst", "api/iqm.benchmarks.benchmark.BenchmarkConfigurationBase.rst", "api/iqm.benchmarks.benchmark_definition.rst", "api/iqm.benchmarks.benchmark_definition.Benchmark.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservation.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkRunResult.rst", "api/iqm.benchmarks.benchmark_definition.add_counts_to_dataset.rst", "api/iqm.benchmarks.benchmark_definition.default_analysis_function.rst", "api/iqm.benchmarks.benchmark_definition.merge_datasets_dac.rst", "api/iqm.benchmarks.benchmark_definition.show_figure.rst", "api/iqm.benchmarks.circuit_containers.rst", "api/iqm.benchmarks.circuit_containers.BenchmarkCircuit.rst", "api/iqm.benchmarks.circuit_containers.CircuitGroup.rst", "api/iqm.benchmarks.circuit_containers.Circuits.rst", "api/iqm.benchmarks.entanglement.rst", "api/iqm.benchmarks.entanglement.ghz.rst", "api/iqm.benchmarks.entanglement.ghz.GHZBenchmark.rst", "api/iqm.benchmarks.entanglement.ghz.GHZConfiguration.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_analysis.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_linear.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_star.rst", "api/iqm.benchmarks.entanglement.ghz.get_cx_map.rst", "api/iqm.benchmarks.entanglement.ghz.get_edges.rst", "api/iqm.benchmarks.entanglement.ghz.plot_fidelities.rst", "api/iqm.benchmarks.logging_config.rst", "api/iqm.benchmarks.optimization.rst", "api/iqm.benchmarks.optimization.qscore.rst", "api/iqm.benchmarks.optimization.qscore.QScoreBenchmark.rst", "api/iqm.benchmarks.optimization.qscore.QScoreConfiguration.rst", "api/iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1.rst", "api/iqm.benchmarks.optimization.qscore.compute_expectation_value.rst", "api/iqm.benchmarks.optimization.qscore.create_objective_function.rst", "api/iqm.benchmarks.optimization.qscore.cut_cost_function.rst", "api/iqm.benchmarks.optimization.qscore.get_optimal_angles.rst", "api/iqm.benchmarks.optimization.qscore.is_successful.rst", "api/iqm.benchmarks.optimization.qscore.plot_approximation_ratios.rst", "api/iqm.benchmarks.optimization.qscore.qscore_analysis.rst", "api/iqm.benchmarks.optimization.qscore.run_QAOA.rst", "api/iqm.benchmarks.quantum_volume.rst", "api/iqm.benchmarks.quantum_volume.clops.rst", "api/iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.rst", "api/iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.rst", "api/iqm.benchmarks.quantum_volume.clops.clops_analysis.rst", "api/iqm.benchmarks.quantum_volume.clops.plot_times.rst", "api/iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.is_successful.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits.rst", "api/iqm.benchmarks.readout_mitigation.rst", "api/iqm.benchmarks.readout_mitigation.M3IQM.rst", "api/iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation.rst", "api/iqm.benchmarks.readout_mitigation.readout_error_m3.rst", "api/iqm.benchmarks.utils.rst", "api/iqm.benchmarks.utils.GraphPositions.rst", "api/iqm.benchmarks.utils.bootstrap_counts.rst", "api/iqm.benchmarks.utils.count_2q_layers.rst", "api/iqm.benchmarks.utils.count_native_gates.rst", "api/iqm.benchmarks.utils.extract_fidelities.rst", "api/iqm.benchmarks.utils.get_iqm_backend.rst", "api/iqm.benchmarks.utils.marginal_distribution.rst", "api/iqm.benchmarks.utils.perform_backend_transpilation.rst", "api/iqm.benchmarks.utils.plot_layout_fidelity_graph.rst", "api/iqm.benchmarks.utils.reduce_to_active_qubits.rst", "api/iqm.benchmarks.utils.retrieve_all_counts.rst", "api/iqm.benchmarks.utils.retrieve_all_job_metadata.rst", "api/iqm.benchmarks.utils.set_coupling_map.rst", "api/iqm.benchmarks.utils.sort_batches_by_final_layout.rst", "api/iqm.benchmarks.utils.submit_execute.rst", "api/iqm.benchmarks.utils.timeit.rst", "api/iqm.benchmarks.utils.xrvariable_to_counts.rst", "changelog.rst", "development/development.rst", "development/generate_2qubit_cliffords.ipynb", "development/how_to_make_your_own_benchmark.ipynb", "devices/devices.rst", "devices/spark.ipynb", "devices/star.ipynb", "examples/example_clifford_rb.ipynb", "examples/example_clops.ipynb", "examples/example_experiment_all.ipynb", "examples/example_ghz.ipynb", "examples/example_ghz_deneb.ipynb", "examples/example_gst.ipynb", "examples/example_interleaved_rb.ipynb", "examples/example_mirror_rb.ipynb", "examples/example_qscore.ipynb", "examples/example_quantum_volume.ipynb", "examples/example_quantum_volume_deneb.ipynb", "examples/examples.rst", "index.rst", "license.rst", "readme.md"], "titles": ["API Reference", "iqm.benchmarks", "iqm.benchmarks.benchmark", "iqm.benchmarks.benchmark.BenchmarkBase", "iqm.benchmarks.benchmark.BenchmarkConfigurationBase", "iqm.benchmarks.benchmark_definition", "iqm.benchmarks.benchmark_definition.Benchmark", "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult", "iqm.benchmarks.benchmark_definition.BenchmarkObservation", "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier", "iqm.benchmarks.benchmark_definition.BenchmarkRunResult", "iqm.benchmarks.benchmark_definition.add_counts_to_dataset", "iqm.benchmarks.benchmark_definition.default_analysis_function", "iqm.benchmarks.benchmark_definition.merge_datasets_dac", "iqm.benchmarks.benchmark_definition.show_figure", "iqm.benchmarks.circuit_containers", "iqm.benchmarks.circuit_containers.BenchmarkCircuit", "iqm.benchmarks.circuit_containers.CircuitGroup", "iqm.benchmarks.circuit_containers.Circuits", "iqm.benchmarks.entanglement", "iqm.benchmarks.entanglement.ghz", "iqm.benchmarks.entanglement.ghz.GHZBenchmark", "iqm.benchmarks.entanglement.ghz.GHZConfiguration", "iqm.benchmarks.entanglement.ghz.fidelity_analysis", "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences", "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements", "iqm.benchmarks.entanglement.ghz.generate_ghz_linear", "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz", "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney", "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree", "iqm.benchmarks.entanglement.ghz.generate_ghz_star", "iqm.benchmarks.entanglement.ghz.get_cx_map", "iqm.benchmarks.entanglement.ghz.get_edges", "iqm.benchmarks.entanglement.ghz.plot_fidelities", "iqm.benchmarks.logging_config", "iqm.benchmarks.optimization", "iqm.benchmarks.optimization.qscore", "iqm.benchmarks.optimization.qscore.QScoreBenchmark", "iqm.benchmarks.optimization.qscore.QScoreConfiguration", "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1", "iqm.benchmarks.optimization.qscore.compute_expectation_value", "iqm.benchmarks.optimization.qscore.create_objective_function", "iqm.benchmarks.optimization.qscore.cut_cost_function", "iqm.benchmarks.optimization.qscore.get_optimal_angles", "iqm.benchmarks.optimization.qscore.is_successful", "iqm.benchmarks.optimization.qscore.plot_approximation_ratios", "iqm.benchmarks.optimization.qscore.qscore_analysis", "iqm.benchmarks.optimization.qscore.run_QAOA", "iqm.benchmarks.quantum_volume", "iqm.benchmarks.quantum_volume.clops", "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark", "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration", "iqm.benchmarks.quantum_volume.clops.clops_analysis", "iqm.benchmarks.quantum_volume.clops.plot_times", "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times", "iqm.benchmarks.quantum_volume.quantum_volume", "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark", "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration", "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities", "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop", "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std", "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs", "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops", "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector", "iqm.benchmarks.quantum_volume.quantum_volume.is_successful", "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold", "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis", "iqm.benchmarks.randomized_benchmarking", "iqm.benchmarks.randomized_benchmarking.clifford_rb", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis", "iqm.benchmarks.randomized_benchmarking.interleaved_rb", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis", "iqm.benchmarks.randomized_benchmarking.mirror_rb", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis", "iqm.benchmarks.randomized_benchmarking.multi_lmfit", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits", "iqm.benchmarks.readout_mitigation", "iqm.benchmarks.readout_mitigation.M3IQM", "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation", "iqm.benchmarks.readout_mitigation.readout_error_m3", "iqm.benchmarks.utils", "iqm.benchmarks.utils.GraphPositions", "iqm.benchmarks.utils.bootstrap_counts", "iqm.benchmarks.utils.count_2q_layers", "iqm.benchmarks.utils.count_native_gates", "iqm.benchmarks.utils.extract_fidelities", "iqm.benchmarks.utils.get_iqm_backend", "iqm.benchmarks.utils.marginal_distribution", "iqm.benchmarks.utils.perform_backend_transpilation", "iqm.benchmarks.utils.plot_layout_fidelity_graph", "iqm.benchmarks.utils.reduce_to_active_qubits", "iqm.benchmarks.utils.retrieve_all_counts", "iqm.benchmarks.utils.retrieve_all_job_metadata", "iqm.benchmarks.utils.set_coupling_map", "iqm.benchmarks.utils.sort_batches_by_final_layout", "iqm.benchmarks.utils.submit_execute", "iqm.benchmarks.utils.timeit", "iqm.benchmarks.utils.xrvariable_to_counts", "Changelog", "Development", "2-Qubit Clifford Group Decomposition", "How to make your own benchmark?", "Devices", "Benchmarking IQM Spark", "Benchmarking IQM Star", "Clifford Randomized Benchmarking (RB)", "Circuit Layer Operations Per Second (CLOPS)", "IQM Benchmarks: Summary Notebook", "Greenberger\u2013Horne\u2013Zeilinger (GHZ) State Fidelity", "Greenberger\u2013Horne\u2013Zeilinger (GHZ) State Fidelity", "Compressive Gate Set Tomography (GST)", "Interleaved Randomized Benchmarking (IRB)", "Mirror Randomized Benchmarking (MRB)", "Q-Score", "Quantum Volume (QV)", "QV on Deneb", "Examples", "IQM Benchmarks", "License", "IQM Benchmarks"], "terms": {"": [1, 50, 95, 101, 109, 111, 117, 123, 138, 139, 144, 150, 153, 154], "python": 1, "librari": [1, 75, 80, 109, 135, 145], "suit": [1, 154], "qcvv": [1, 136, 152, 154], "subpackag": [1, 19, 35, 48, 67, 68, 73, 78], "modul": [1, 5, 15, 19, 34, 35, 48, 67, 68, 73, 78, 152], "gener": [2, 3, 18, 19, 21, 22, 26, 27, 28, 29, 30, 31, 37, 45, 50, 53, 56, 65, 71, 75, 76, 80, 83, 84, 85, 88, 89, 98, 99, 100, 115, 116, 117, 124, 133, 138, 139, 140, 142, 143, 144, 145, 146, 153], "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 20, 21, 22, 36, 37, 38, 49, 50, 51, 55, 56, 57, 69, 70, 71, 74, 75, 76, 79, 80, 81, 98, 111, 112, 115, 116, 133, 135, 136, 153, 154], "inherit": [2, 3, 5, 15, 20, 36, 49, 55, 69, 74, 79, 111, 115], "benchmarkbas": [2, 4, 154], "abc": [2, 3, 5, 6, 20, 36, 49, 55, 69, 74, 79], "benchmarkconfigurationbas": [2, 3, 6, 20, 22, 36, 38, 49, 51, 55, 57, 69, 70, 74, 75, 79, 80, 154], "pydant": [2, 4, 20, 22, 36, 38, 49, 51, 55, 57, 69, 70, 74, 75, 79, 80], "main": [2, 7, 8, 20, 36, 49, 55, 69, 74, 79, 138], "basemodel": [2, 4, 20, 36, 49, 55, 69, 74, 79], "backend": [3, 6, 21, 22, 29, 37, 45, 50, 51, 56, 57, 65, 71, 76, 81, 83, 84, 85, 98, 99, 106, 107, 109, 110, 112, 113, 114, 119, 120, 121, 123, 125, 128, 129, 130, 133, 136, 143, 144, 154], "iqmbackendbas": [3, 6, 21, 37, 50, 56, 71, 76, 81, 83, 84, 85, 98, 99, 100, 106, 107, 109, 110, 113, 119, 121, 123, 128, 130], "configur": [3, 4, 6, 21, 22, 37, 38, 50, 51, 56, 57, 64, 70, 71, 75, 76, 80, 81, 133, 153, 154], "base": [3, 4, 5, 6, 7, 8, 9, 10, 16, 17, 18, 21, 22, 24, 31, 37, 38, 40, 50, 51, 56, 57, 70, 71, 75, 76, 80, 81, 93, 112, 116, 133, 134, 138, 139, 153], "The": [3, 6, 7, 12, 16, 17, 18, 21, 22, 23, 24, 25, 26, 29, 31, 32, 33, 37, 38, 41, 47, 50, 51, 53, 56, 57, 59, 60, 62, 63, 70, 71, 75, 76, 80, 81, 82, 83, 84, 94, 104, 108, 114, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 131, 138, 139, 140, 143, 144, 145, 149, 150, 151, 153, 154], "implement": [3, 5, 6, 21, 22, 25, 143, 144], "all": [3, 4, 6, 7, 16, 17, 18, 21, 22, 31, 33, 37, 44, 50, 54, 56, 58, 59, 60, 63, 64, 70, 71, 75, 76, 81, 98, 104, 106, 107, 112, 126, 127, 133, 136, 138, 139, 140, 142, 143, 144, 146, 148, 149, 150, 151, 153, 154], "from": [3, 4, 6, 7, 11, 21, 22, 29, 31, 32, 38, 41, 47, 51, 53, 54, 56, 57, 58, 63, 65, 70, 75, 80, 82, 91, 104, 105, 108, 112, 114, 117, 120, 121, 124, 126, 127, 128, 132, 133, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154], "which": [3, 6, 7, 8, 21, 22, 29, 32, 37, 38, 46, 48, 50, 51, 52, 56, 66, 70, 71, 72, 75, 76, 77, 80, 81, 87, 98, 104, 108, 112, 120, 125, 138, 139, 143, 144, 145, 153, 154], "thei": [3, 17, 145], "method": [3, 4, 6, 7, 8, 9, 10, 16, 17, 18, 21, 22, 24, 37, 38, 50, 51, 56, 57, 70, 71, 75, 76, 80, 81, 112, 116, 123, 133, 138, 139, 141, 142, 143, 144, 145, 149, 150], "paramet": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 139, 141, 142, 143, 144, 145], "abstract": [3, 6, 145], "classmethod": [3, 6, 7], "name": [3, 4, 6, 7, 8, 16, 17, 18, 22, 33, 38, 45, 51, 53, 57, 65, 70, 75, 80, 91, 97, 98, 114, 116, 120, 121, 124, 125, 133, 135, 136, 138, 139, 140, 142, 143, 144, 145, 146, 148, 149, 150, 153], "return": [3, 6, 9, 11, 12, 13, 16, 17, 18, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 71, 72, 76, 77, 81, 82, 83, 84, 85, 86, 87, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136], "execute_full_benchmark": 3, "execut": [3, 4, 6, 9, 16, 17, 18, 21, 31, 35, 37, 45, 48, 50, 51, 56, 57, 58, 65, 70, 71, 75, 76, 80, 81, 82, 95, 101, 106, 107, 108, 123, 130, 131, 132, 133, 136, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 153, 154], "full": [3, 51, 57, 145, 154], "given": [3, 6, 7, 11, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 43, 48, 50, 56, 63, 64, 73, 82, 99, 100, 116, 129, 138, 139, 143, 144, 145, 154], "static": [3, 6, 21, 37, 50, 56, 71, 76, 81, 116], "check_requir": 3, "all_benchmark": 3, "ordereddict": 3, "str": [3, 4, 6, 7, 8, 9, 11, 16, 17, 18, 21, 22, 24, 25, 38, 40, 41, 42, 45, 47, 50, 51, 53, 54, 56, 57, 58, 61, 62, 63, 65, 70, 71, 75, 76, 80, 81, 82, 83, 84, 85, 95, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 132, 135, 136, 138, 142, 143, 144, 145, 147, 149, 150], "check": [3, 44, 64, 135, 138, 139, 143, 144], "whether": [3, 4, 22, 38, 44, 45, 47, 50, 51, 56, 57, 64, 65, 70, 75, 99, 104, 117, 123, 143, 144, 146, 153], "requir": [3, 4, 22, 38, 51, 57, 70, 75, 80, 135, 143, 144, 145, 153, 154], "ar": [3, 4, 7, 11, 16, 17, 18, 21, 22, 31, 32, 56, 57, 85, 104, 110, 122, 124, 125, 133, 135, 138, 139, 143, 144, 145, 151, 153, 154], "met": 3, "valid": [3, 109, 110, 152, 154], "dictionari": [3, 4, 7, 11, 22, 38, 41, 50, 51, 54, 56, 57, 58, 61, 62, 63, 70, 75, 80, 81, 83, 84, 94, 98, 99, 100, 102, 106, 107, 113, 114, 116, 117, 119, 122, 129, 132, 140, 142, 145, 146], "type": [3, 4, 6, 8, 9, 11, 12, 13, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 138, 145, 153], "generate_requir": 3, "none": [3, 4, 6, 7, 8, 16, 17, 18, 22, 29, 32, 38, 45, 50, 51, 56, 57, 70, 75, 80, 83, 84, 85, 89, 94, 97, 98, 99, 100, 104, 106, 107, 109, 112, 116, 117, 123, 124, 125, 126, 130, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 154], "attribut": [3, 4, 6, 7, 8, 9, 10, 16, 17, 18, 21, 22, 37, 38, 50, 51, 56, 57, 70, 71, 75, 76, 80, 81, 116, 131, 145, 149, 150, 153], "shot": [4, 22, 38, 51, 56, 57, 70, 75, 80, 106, 107, 112, 113, 130, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 154], "int": [4, 9, 11, 16, 17, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 40, 41, 42, 43, 45, 47, 50, 51, 53, 56, 57, 58, 61, 64, 65, 70, 75, 80, 81, 82, 83, 84, 85, 86, 95, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 110, 112, 113, 116, 117, 118, 120, 122, 123, 124, 126, 128, 129, 130, 132, 143, 144, 145], "256": [4, 38, 51, 57, 70, 75, 80, 140, 142, 147, 148], "max_gates_per_batch": [4, 22, 38, 51, 57, 70, 75, 80, 106, 107, 130, 138, 139, 140, 141, 142, 147, 149, 150, 154], "calset_id": [4, 22, 38, 51, 57, 70, 75, 80, 106, 107, 130, 138, 139, 140, 141, 142, 146, 147, 148, 149, 150, 154], "routing_method": [4, 22, 38, 51, 57, 70, 75, 80, 84, 85, 123, 138, 139, 140, 141, 142, 147, 149, 150, 154], "liter": [4, 22, 38, 51, 57, 70, 75, 80, 128], "basic": [4, 22, 38, 51, 57, 70, 75, 80, 84, 85], "lookahead": [4, 22, 38, 51, 57, 70, 75, 80], "stochast": [4, 22, 38, 51, 57, 70, 75, 80], "sabr": [4, 22, 38, 51, 57, 70, 75, 80, 123, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 154], "physical_layout": [4, 22, 38, 51, 57, 70, 75, 80, 128, 138, 139, 140, 141, 142, 147, 149, 150, 154], "fix": [4, 22, 38, 51, 57, 70, 75, 80, 81, 84, 99, 106, 108, 128, 133, 138, 139, 140, 141, 142, 145, 149, 150, 154], "batch": [4, 17, 22, 38, 51, 57, 70, 75, 80, 106, 107, 128, 129, 130, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150], "use_dd": [4, 22, 38, 51, 57, 70, 75, 80, 144], "bool": [4, 22, 38, 44, 45, 47, 50, 51, 56, 57, 64, 65, 70, 75, 80, 104, 112, 117, 123], "fals": [4, 22, 38, 51, 57, 65, 70, 75, 80, 104, 112, 117, 123, 138, 140, 142, 149], "dd_strategi": [4, 22, 38, 51, 57, 70, 75, 80], "ddstrategi": [4, 22, 38, 51, 57, 70, 75, 80], "number": [4, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 35, 37, 38, 40, 42, 43, 45, 47, 48, 51, 56, 57, 64, 65, 67, 70, 75, 80, 81, 82, 83, 84, 85, 86, 95, 98, 99, 100, 101, 106, 107, 112, 113, 117, 118, 119, 130, 138, 139, 141, 142, 143, 144, 145], "us": [4, 6, 9, 16, 21, 22, 24, 25, 29, 31, 32, 33, 34, 38, 45, 47, 50, 51, 57, 80, 82, 97, 104, 112, 114, 124, 130, 133, 135, 136, 138, 139, 143, 145, 146, 151, 153], "circuit": [4, 7, 10, 15, 16, 17, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 37, 38, 41, 48, 50, 51, 56, 57, 58, 61, 64, 65, 70, 71, 75, 76, 78, 80, 81, 82, 83, 84, 85, 86, 94, 95, 98, 99, 100, 101, 106, 107, 109, 112, 113, 118, 119, 123, 125, 129, 130, 132, 133, 135, 136, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152], "default": [4, 6, 12, 22, 38, 51, 56, 57, 65, 70, 75, 80, 100, 104, 112, 117, 128, 138, 140, 142, 145, 146, 148, 150], "i": [4, 6, 7, 22, 26, 29, 31, 33, 37, 38, 44, 46, 47, 50, 51, 52, 56, 57, 64, 65, 66, 70, 71, 72, 75, 76, 77, 80, 81, 82, 86, 87, 90, 105, 109, 112, 117, 120, 123, 124, 128, 133, 135, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154], "2": [4, 32, 38, 44, 57, 64, 80, 99, 105, 118, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154], "8": [4, 105, 135, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 153, 154], "maximum": [4, 47, 106, 107, 130, 138, 139, 145], "gate": [4, 21, 22, 26, 30, 31, 32, 38, 48, 50, 51, 57, 67, 68, 71, 73, 75, 76, 80, 83, 85, 94, 97, 98, 99, 100, 102, 104, 106, 107, 109, 118, 119, 123, 124, 130, 133, 138, 143, 144, 147, 151, 152, 154], "per": [4, 48, 51, 57, 70, 80, 82, 84, 85, 86, 106, 107, 112, 113, 130, 145, 151, 152], "option": [4, 22, 32, 38, 45, 56, 57, 75, 84, 85, 94, 97, 99, 100, 104, 106, 107, 109, 117, 123, 125, 126, 130, 133, 136, 141, 142, 144, 145, 150, 152], "calibr": [4, 6, 22, 32, 56, 57, 106, 107, 112, 113, 120, 124, 130, 133, 142, 143, 144, 146, 148, 150], "id": [4, 130, 141, 142, 146, 148], "last": 4, "avail": [4, 153, 154], "qiskit": [4, 6, 38, 51, 57, 75, 80, 109, 123, 130, 133, 135, 136, 138, 145], "rout": [4, 51, 57, 80, 123, 141, 142, 143, 144, 145, 149, 150], "transpil": [4, 16, 21, 22, 24, 25, 38, 50, 51, 57, 80, 98, 99, 109, 113, 119, 123, 129, 133, 136, 138, 141, 142, 143, 144, 145, 149, 150], "physic": [4, 22, 38, 50, 51, 56, 57, 61, 75, 80, 84, 128, 141, 142, 145, 149, 150, 152], "layout": [4, 8, 11, 16, 17, 22, 33, 38, 50, 51, 56, 57, 80, 81, 106, 107, 114, 116, 120, 123, 124, 128, 133, 138, 141, 142, 143, 144, 145, 147, 149, 150], "constrain": [4, 128, 154], "dure": [4, 13, 56, 71, 76], "select": [4, 22, 38, 57, 63, 124, 133, 143, 144, 145], "qubit": [4, 8, 9, 11, 16, 17, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 47, 48, 50, 51, 56, 57, 61, 65, 67, 70, 71, 75, 80, 81, 82, 83, 84, 85, 95, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 110, 112, 114, 118, 120, 123, 124, 125, 128, 129, 133, 134, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152], "initi": [4, 6, 22, 34, 114, 138, 145], "allow": [4, 133, 138, 139, 143, 144, 154], "ani": [4, 8, 24, 25, 54, 56, 75, 81, 86, 104, 106, 107, 113, 125, 127, 135, 139, 153, 154], "other": [4, 22, 130, 133, 138, 139, 153, 154], "accord": [4, 21, 27, 28, 37, 83, 128, 129, 135, 141, 142, 145, 149, 150], "final": [4, 6, 32, 51, 56, 57, 61, 80, 123, 128, 129, 138], "measur": [4, 21, 22, 24, 37, 40, 50, 51, 56, 57, 61, 70, 75, 80, 108, 113, 119, 128, 129, 136, 138, 139, 141, 143, 144, 145], "boolean": [4, 22, 143, 144], "flag": [4, 22], "determin": [4, 22, 153], "dynam": [4, 130, 133], "decoupl": [4, 130, 133], "enabl": [4, 130, 133], "model_computed_field": [4, 22, 38, 51, 57, 70, 75, 80], "classvar": [4, 22, 38, 51, 57, 70, 75, 80], "dict": [4, 7, 11, 22, 24, 25, 38, 40, 41, 47, 50, 51, 53, 54, 56, 57, 58, 61, 62, 63, 70, 75, 80, 81, 82, 83, 84, 85, 94, 95, 98, 99, 100, 101, 102, 104, 106, 107, 108, 113, 114, 116, 117, 119, 122, 126, 127, 129, 130, 132, 136], "computedfieldinfo": [4, 22, 38, 51, 57, 70, 75, 80], "A": [4, 6, 7, 9, 10, 11, 13, 16, 17, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 46, 50, 51, 52, 54, 56, 57, 62, 63, 66, 70, 71, 72, 75, 80, 81, 83, 84, 87, 94, 97, 99, 100, 106, 107, 116, 117, 120, 122, 123, 125, 128, 132, 138, 143, 144, 145, 153, 154], "comput": [4, 21, 22, 23, 29, 38, 40, 41, 51, 56, 57, 58, 59, 60, 62, 70, 75, 80, 94, 95, 101, 122, 124, 135, 138, 139, 143, 144, 145, 152, 153, 154], "field": [4, 6, 22, 38, 51, 57, 70, 75, 80, 153], "correspond": [4, 22, 37, 38, 46, 48, 50, 51, 52, 56, 57, 61, 65, 66, 70, 71, 72, 75, 76, 77, 80, 81, 82, 83, 84, 87, 104, 108, 113, 129, 133, 138, 139, 140, 141, 142, 143, 144, 146, 147, 149, 150], "object": [4, 7, 8, 9, 10, 16, 17, 18, 21, 22, 23, 33, 38, 51, 56, 57, 70, 75, 80, 81, 89, 106, 107, 116, 121, 124, 126, 127, 130, 145, 149, 150, 153], "model_config": [4, 22, 38, 51, 57, 70, 75, 80], "configdict": [4, 22, 38, 51, 57, 70, 75, 80], "model": [4, 22, 38, 51, 57, 70, 75, 80, 97, 103, 104, 138], "should": [4, 6, 8, 10, 21, 22, 29, 34, 38, 51, 57, 70, 75, 80, 99, 133, 141, 142, 143, 144, 145, 153], "conform": [4, 22, 38, 51, 57, 70, 75, 80], "config": [4, 22, 38, 51, 57, 70, 75, 80], "model_field": [4, 22, 38, 51, 57, 70, 75, 80], "fieldinfo": [4, 22, 38, 51, 57, 70, 75, 80], "annot": [4, 22, 38, 51, 57, 70, 75, 80, 114, 153], "true": [4, 22, 24, 38, 51, 56, 57, 70, 75, 80, 104, 123, 135, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 154], "union": [4, 22, 38, 51, 57, 70, 75, 80, 114, 145, 153], "nonetyp": [4, 22, 38, 51, 57, 70, 75, 80], "metadata": [4, 21, 22, 33, 37, 38, 50, 51, 54, 56, 57, 70, 71, 75, 76, 80, 81, 127], "about": [4, 22, 38, 51, 57, 70, 75, 80, 133, 143, 144], "defin": [4, 5, 6, 7, 22, 29, 31, 38, 51, 57, 70, 75, 80, 98, 125, 136, 138, 143, 144, 153, 154], "map": [4, 7, 22, 29, 32, 38, 40, 41, 51, 57, 70, 75, 80, 116, 123, 128, 129, 133, 143, 144], "thi": [4, 5, 6, 15, 16, 21, 22, 29, 33, 38, 44, 51, 57, 64, 70, 75, 80, 105, 114, 116, 134, 135, 136, 137, 138, 139, 143, 144, 145, 151, 153, 154], "replac": [4, 22, 38, 51, 57, 70, 75, 80, 153], "__fields__": [4, 22, 38, 51, 57, 70, 75, 80], "v1": [4, 22, 38, 51, 57, 70, 75, 80, 143, 144], "function": [5, 6, 20, 36, 37, 41, 46, 49, 50, 52, 55, 56, 66, 69, 71, 72, 74, 76, 77, 79, 81, 87, 88, 90, 91, 93, 94, 96, 97, 103, 105, 111, 115, 131, 133, 145], "benchmarkobservationidentifi": [5, 8, 133, 140, 142, 146, 148, 149, 150], "benchmarkobserv": [5, 7, 33, 133, 140, 142, 146, 148, 149, 150], "benchmarkrunresult": [5, 6, 7, 12, 21, 23, 37, 46, 50, 52, 56, 66, 71, 72, 76, 77, 81, 87, 133], "benchmarkanalysisresult": [5, 6, 12, 21, 23, 37, 46, 50, 52, 56, 66, 71, 72, 76, 77, 81, 87, 133], "kwarg": 6, "run": [6, 7, 8, 10, 21, 22, 23, 37, 41, 46, 50, 51, 52, 56, 66, 71, 72, 76, 77, 81, 87, 133, 136, 138, 139, 142, 145, 151, 154], "cortex": [6, 11], "experi": [6, 33, 37, 45, 46, 50, 52, 53, 56, 57, 59, 60, 66, 71, 72, 76, 77, 81, 87, 96, 103, 104, 108, 110, 142, 151], "In": [6, 138, 139, 145, 153, 154], "order": [6, 32, 33, 97, 105, 120, 133, 143, 144, 154], "write": [6, 112, 135, 136, 153], "new": [6, 7, 11, 125, 133, 136, 138, 139, 145, 150, 154], "recommend": [6, 145, 153, 154], "deriv": [6, 153], "baseclass": 6, "addition": [6, 143, 144], "custom": [6, 38, 57, 138, 139, 142, 148, 149, 150, 154], "analysi": [6, 7, 12, 37, 46, 50, 52, 53, 56, 66, 71, 72, 76, 77, 81, 87, 133, 138], "can": [6, 10, 16, 22, 35, 37, 48, 56, 114, 120, 133, 138, 143, 144, 145, 149, 150, 154], "give": [6, 41, 133, 138, 143, 144, 145, 153], "pointer": 6, "analysis_funct": [6, 21, 37, 50, 56, 71, 76, 81, 136], "accept": [6, 45, 133, 153], "analysisresult": [6, 7, 21, 23, 37, 46, 50, 52, 56, 66, 71, 72, 76, 77, 81, 87, 133, 136], "its": [6, 91, 125, 133, 138, 139, 153], "input": [6, 11, 51, 57, 86, 105, 109, 110, 114, 128, 141, 142, 145], "result": [6, 7, 8, 10, 11, 12, 33, 35, 37, 40, 46, 47, 48, 50, 52, 56, 57, 64, 65, 66, 71, 72, 76, 77, 81, 87, 95, 101, 103, 128, 133, 136, 138, 139, 142, 149, 150, 153, 154], "onli": [6, 12, 51, 57, 125, 138, 139, 143, 144, 145, 147, 153], "pass": [6, 12, 86, 107, 114, 123, 130, 136, 142, 148], "through": [6, 12, 25, 153], "iqmbackend": [6, 56, 81, 106, 107, 150], "iqmfacadebackend": 6, "dataset": [6, 7, 10, 11, 13, 21, 23, 24, 25, 33, 37, 50, 53, 56, 71, 76, 81, 88, 90, 104, 132, 133, 136, 138, 139, 140, 142, 145, 146, 149, 150], "overridden": 6, "an": [6, 16, 17, 21, 22, 23, 24, 37, 50, 76, 77, 105, 109, 113, 114, 133, 135, 136, 138, 139, 143, 144, 145, 153, 154], "xarrai": [6, 7, 11, 13, 21, 24, 37, 50, 56, 71, 76, 81, 132, 133, 136], "contain": [6, 7, 9, 10, 13, 15, 16, 17, 18, 21, 23, 24, 25, 33, 81, 83, 106, 107, 116, 120, 124, 125, 133, 138, 139, 145, 149, 150, 151, 153, 154], "inform": [6, 10, 32, 34, 124, 153], "necessari": [6, 138, 143, 144, 154], "analys": 6, "calibration_set_id": [6, 144, 150], "uuid": 6, "calibrationsetid": 6, "latest": [6, 130, 143, 144, 152], "set": [6, 16, 17, 21, 38, 51, 57, 83, 84, 86, 92, 104, 119, 128, 130, 135, 138, 139, 143, 146, 151, 152, 154], "runresult": [6, 7, 10, 21, 23, 37, 46, 50, 52, 56, 66, 71, 72, 76, 77, 81, 87, 133, 136], "analyz": [6, 10, 21, 23, 118, 136, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 154], "run_index": [6, 142, 149, 150], "1": [6, 38, 42, 63, 80, 84, 85, 96, 99, 105, 123, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154], "intern": [6, 17], "perform": [6, 38, 51, 57, 97, 108, 123, 138, 145, 151, 153, 154], "make": [6, 56, 130, 134, 138, 152, 153, 154], "shallow": 6, "copi": [6, 117, 135, 153], "produc": [6, 32, 57, 154], "therefor": [6, 44, 64], "chang": [6, 133, 150, 152, 153], "data": [6, 7, 11, 21, 22, 24, 32, 53, 65, 89, 92, 97, 103, 112, 120, 124, 136, 141, 142, 143, 144, 145, 149, 150], "just": [6, 138], "structur": [6, 138, 139], "arrai": [6, 50, 70, 75, 80, 104, 105, 110, 114, 145], "index": [6, 21, 29, 31, 32, 50, 56, 84, 139, 149, 150, 152], "construct": [6, 22, 26], "updat": [6, 50, 51, 133, 138, 139, 141, 142, 154], "core": 7, "circuit_contain": 7, "plot": [7, 21, 23, 33, 65, 104, 124, 133, 136, 138, 139, 140, 142, 143, 144, 146, 154], "matplotlib": [7, 124, 136, 138, 139, 145], "figur": [7, 14, 33, 45, 53, 65, 104, 124, 136, 142, 145], "factori": [7, 16, 17, 18], "observ": [7, 8, 9, 21, 23, 33, 53, 104, 133, 138, 139, 140, 142, 143, 144, 146, 148, 149, 150], "list": [7, 9, 11, 13, 16, 17, 18, 21, 22, 24, 25, 29, 31, 32, 33, 37, 39, 40, 41, 43, 45, 47, 50, 51, 56, 58, 59, 60, 61, 62, 64, 65, 80, 81, 82, 83, 84, 85, 86, 95, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 117, 118, 119, 120, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 135, 139, 143, 144, 145, 149, 150, 153, 154], "dataclass": [7, 8, 10], "store": [7, 8, 10, 33, 116, 133, 154], "consist": [7, 143, 144, 153], "kei": [7, 40, 47, 50, 56, 61, 80, 83, 119, 122, 129, 135, 145, 149, 150], "valu": [7, 8, 21, 22, 25, 29, 40, 41, 47, 50, 51, 80, 83, 96, 119, 122, 123, 129, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "pair": [7, 30, 32, 50, 110, 120, 138], "plot_nam": 7, "plot_al": [7, 136, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150], "from_run_result": 7, "creat": [7, 21, 22, 29, 30, 37, 41, 46, 50, 52, 56, 66, 71, 72, 76, 77, 81, 87, 124, 134, 136, 144, 150, 154], "identifi": [8, 9, 11, 56, 81, 97, 104, 106, 107, 109, 126, 132, 138, 140, 142, 143, 144, 145, 146, 148, 149, 150, 153], "uncertainti": [8, 25, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "singl": [8, 10, 13, 16, 18, 22, 33, 38, 39, 50, 51, 56, 57, 83, 90, 133, 138, 139, 145, 154], "string": [8, 9, 11, 17, 18, 126, 154], "qubit_indic": [9, 16, 140, 142, 146, 148, 149, 150], "eas": 9, "indic": [9, 56, 61, 116, 122, 124, 129, 143, 144, 153], "wa": [9, 44, 64, 108, 138, 139, 153], "properti": [9, 16, 17], "string_identifi": [9, 138, 142, 143, 144, 145], "version": [9, 88, 135, 138, 139, 153, 154], "enough": [10, 143, 144], "those": [10, 56, 61, 128, 138, 139, 145, 153], "count": [11, 21, 22, 23, 40, 41, 47, 56, 58, 82, 95, 101, 108, 113, 114, 117, 119, 126, 127, 132, 133, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "add": [11, 17, 21, 31, 37, 50, 56, 71, 76, 81, 83, 131, 133, 135, 153, 154], "job": [11, 50, 54, 56, 81, 106, 107, 126, 136, 140, 141, 142, 146, 147, 149, 150], "If": [11, 22, 38, 80, 124, 138, 139, 143, 144, 145, 147, 153], "same": [11, 17, 32, 80, 120, 138, 139, 141, 142, 143, 144, 153], "alreadi": [11, 140], "present": 11, "old": 11, "both": [11, 57, 138, 146, 154], "ad": [11, 133, 140, 142, 146, 147, 149, 150], "togeth": [11, 154], "bitstr": [11, 40, 41, 42, 47, 63, 108, 122], "current": [11, 22, 50, 112, 120, 143, 144, 145, 154], "instanc": [11, 16, 17, 24, 25, 45, 133, 145], "xr": [11, 13, 21, 24, 25, 33, 37, 50, 53, 56, 71, 76, 81, 104, 132, 136], "merg": [11, 13], "where": [11, 16, 17, 22, 85, 124, 133, 138, 139, 143, 144, 145, 153], "dataset_merg": 11, "recurs": 13, "minim": [13, 22, 29, 31, 103, 143, 144], "size": [13, 22, 29, 35, 37, 45, 47, 136, 138, 142, 148], "dateset": 13, "fig": [14, 33, 136, 143, 144], "show": [14, 124, 136, 138, 139, 142, 143, 144], "close": [14, 136], "easili": [15, 133, 154], "interact": [15, 133], "quantum": [15, 21, 22, 24, 26, 27, 28, 29, 30, 37, 48, 50, 51, 55, 56, 57, 58, 61, 64, 66, 83, 84, 95, 99, 100, 101, 112, 113, 116, 118, 119, 123, 124, 125, 130, 133, 143, 144, 145, 151, 152, 154], "circuitgroup": [15, 16, 21, 133], "benchmarkcircuit": [15, 18, 133], "circuit_group": 16, "group": [16, 17, 71, 134, 138, 152], "purpos": [16, 17, 153], "typic": [16, 17, 138, 139], "repres": [16, 17, 53, 65, 122, 124, 153], "exampl": [16, 88, 133, 134, 136, 137, 143, 144, 145, 152, 153, 154], "insid": [16, 133], "get_circuit_group_by_nam": 16, "get": [16, 91, 121, 142, 147], "desir": [16, 17], "doe": [16, 22, 153], "exist": [16, 18, 133, 138, 139, 154], "group_nam": 16, "integ": [16, 17, 22, 56, 61, 84], "qubit_layouts_by_index": [16, 17], "tupl": [16, 17, 22, 25, 29, 40, 41, 45, 47, 50, 51, 53, 56, 61, 65, 81, 97, 98, 99, 100, 102, 104, 106, 113, 116, 120, 123, 129, 130], "qubit_layout": [16, 17, 21, 24, 25, 29, 31, 32, 33, 124, 138, 142, 143, 144, 145], "qiskit_iqm": [17, 22, 133, 136, 138, 139, 142, 144, 150], "iqm_circuit": 17, "iqmcircuit": [17, 21, 26, 27, 28, 29, 30, 50, 56, 61, 81, 83, 84, 85, 94, 98, 99, 100, 102, 106, 107, 109, 113, 118, 119, 123, 125, 129, 130, 133], "It": [17, 135, 138, 139, 154], "common": [17, 93, 153], "activ": [17, 125, 154], "add_circuit": 17, "circuit_nam": 17, "get_circuits_by_nam": 17, "share": [17, 153, 154], "found": [17, 120, 138, 139, 154], "benchmark_circuit": 18, "get_benchmark_circuits_by_nam": 18, "request": 18, "otherwis": [18, 153], "ghz": [19, 133, 151, 152, 154], "verifi": [19, 109, 135], "greenberg": [19, 21, 138, 139, 151, 152], "horn": [19, 21, 138, 139, 151, 152], "zeiling": [19, 21, 138, 139, 151, 152], "state": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 95, 101, 133, 136, 145, 151, 152, 153, 154], "ghzbenchmark": [20, 22, 138, 139, 142, 143, 144], "benchmark_definit": [20, 22, 36, 38, 49, 51, 55, 57, 69, 70, 74, 75, 79, 80, 136], "ghzconfigur": [20, 21, 138, 139, 142, 143, 144], "estim": [21, 22, 24, 25, 35, 37, 51, 56, 71, 76, 81, 82, 108, 133, 138, 139, 141, 142, 143, 144, 146], "qualiti": [21, 138, 139], "fidel": [21, 22, 23, 24, 25, 31, 32, 33, 51, 67, 68, 71, 73, 76, 78, 81, 82, 97, 104, 120, 124, 133, 145, 151, 152, 154], "generate_native_ghz": 21, "qubit_count": [21, 22], "routin": [21, 22, 38, 57, 97], "prepar": [21, 136, 138, 143, 144, 145, 153], "nativ": [21, 32, 99, 100, 102, 109, 119, 133, 138], "topologi": [21, 38, 116, 120, 123, 124, 128, 133, 138, 139, 144], "subset": [21, 24, 25, 29, 31, 32], "system": [21, 22, 24, 25, 29, 31, 32, 112, 138, 139, 145, 153, 154], "protocol": [21, 24, 25, 29, 31, 32, 138, 139, 151], "0": [21, 29, 31, 32, 37, 44, 57, 80, 83, 84, 85, 105, 123, 128, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154], "smaller": [21, 22, 29, 138], "equal": [21, 29, 56, 133, 138, 139], "quantumcircuit": [21, 26, 27, 28, 29, 30, 37, 50, 56, 61, 81, 83, 94, 98, 99, 100, 106, 107, 113, 118, 123, 125, 129, 130, 133, 135, 136, 145], "generate_coherence_meas_circuit": 21, "take": [21, 22, 123, 131, 133, 138, 139, 145, 154], "output": [21, 34, 58, 59, 60, 61, 62, 63, 64, 112, 133, 135, 138, 139, 145, 149, 150, 154], "need": [21, 50, 114, 138, 139, 143, 144, 145, 154], "via": [21, 22, 138, 139, 143, 144, 145], "mult": 21, "q": [21, 35, 37, 38, 44, 142, 145, 151, 152, 154], "coher": [21, 22, 24, 138, 139, 142, 143, 144], "qc_list_transpil": 21, "append_rm": 21, "num_rm": [21, 22, 143, 144], "append": [21, 50, 135, 136, 145], "1q": [21, 102, 133, 138], "clifford": [21, 68, 69, 70, 71, 72, 74, 75, 76, 83, 94, 98, 99, 100, 102, 109, 110, 133, 134, 146, 151, 152, 154], "sampl": [21, 41, 47, 57, 63, 75, 80, 82, 83, 84, 85, 86, 98, 99, 100, 117, 145], "uniformli": [21, 138], "random": [21, 22, 38, 50, 67, 69, 74, 75, 79, 80, 83, 85, 93, 99, 100, 117, 133, 135, 139, 141, 143, 144, 145, 148, 151, 152, 154], "param": [21, 26, 27, 28, 30, 50, 59, 71, 76, 86, 90, 92, 94, 95, 106, 107, 108, 110, 122, 126, 127], "how": [21, 134, 137, 145, 151, 152, 153, 154], "mani": [21, 50, 133, 143], "origin": [21, 56, 61, 117, 123, 125, 153], "generate_readout_circuit": 21, "wrapper": 21, "creation": [21, 143], "differ": [21, 53, 80, 116, 138, 143, 144, 145, 149, 150, 151, 153, 154], "all_circuits_list": 21, "add_configuration_to_dataset": 21, "further": [21, 133], "storag": [21, 133], "1024": 22, "iqm_client": [22, 38, 51, 57, 70, 75, 80], "state_generation_routin": [22, 138, 139, 142, 143, 144], "tree": [22, 29, 31, 138, 142, 143, 144], "custom_qubits_arrai": [22, 37, 38, 57, 133, 138, 139, 142, 143, 144, 148, 149, 150, 154], "sequenc": [22, 38, 51, 56, 57, 70, 75, 80, 81, 82, 95, 98, 99, 100, 101, 123, 128, 138, 140, 142, 145, 146], "qiskit_optim_level": [22, 38, 51, 57, 80, 84, 85, 123, 138, 139, 141, 142, 147, 149, 150, 154], "3": [22, 38, 51, 57, 64, 105, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154], "optimize_sqg": [22, 38, 50, 51, 57, 123, 138, 139, 141, 142, 149, 150, 154], "fidelity_routin": [22, 138, 139, 142, 143, 144], "100": [22, 51, 57, 117, 138, 139, 141, 142, 145, 148, 154], "rem": [22, 24, 38, 57, 65, 113, 133, 138, 139, 142, 143, 144, 148, 149, 150, 154], "mit_shot": [22, 38, 56, 57, 113, 138, 139, 142, 143, 144, 148, 149, 150, 154], "1000": [22, 38, 57, 113, 136, 138, 139, 142, 143, 144, 145, 148, 149, 150], "cal_url": [22, 120, 124, 143, 144], "possibl": [22, 143, 144, 149, 150, 153], "optim": [22, 50, 51, 57, 80, 123, 133, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 154], "log": [22, 27, 28, 29, 31, 143, 144], "depth": [22, 26, 27, 28, 29, 38, 56, 65, 80, 81, 84, 85, 96, 99, 103, 106, 108, 138, 139, 140, 141, 142, 143, 144, 146, 147], "coupl": [22, 29, 32, 51, 57, 120, 123, 128, 138, 143, 144], "cz": [22, 30, 31, 32, 99, 119, 120, 123, 135, 138, 141, 143, 144], "account": [22, 38, 123, 145, 154], "algorithm": [22, 31, 83, 124, 138, 139, 143, 144], "span": [22, 29, 31], "choos": [22, 37, 139, 143, 144, 153], "largest": [22, 138, 139, 143, 144], "weight": [22, 31, 32, 63], "distanc": [22, 31, 145], "parallel": [22, 31, 48, 70, 75, 99, 106, 108, 118, 133, 138, 139, 141, 142, 143, 144, 146], "applic": [22, 31, 83, 135, 143, 144, 153], "cx": [22, 26, 31, 50], "scale": [22, 138, 139], "logarithm": [22, 143, 144], "connect": [22, 31, 110, 124, 133, 143, 144], "naiv": [22, 38, 143, 144], "appli": [22, 26, 31, 50, 57, 133, 142, 143, 144, 147, 153], "textbook": [22, 143, 144], "linearli": 22, "specifi": [22, 51, 56, 57, 75, 81, 83, 84, 106, 107, 110, 119, 122, 128, 130, 133, 138, 139, 147, 154], "assum": [22, 33, 105, 153], "e": [22, 75, 80, 105, 132, 133, 138, 139, 141, 142, 143, 144, 145, 149, 150], "g": [22, 75, 80, 105, 132, 133, 135, 138, 139, 141, 142, 143, 144, 145, 149, 150], "label": [22, 51, 65, 75, 84, 94, 100, 104, 123, 128, 133, 135, 136, 138, 143, 144], "meant": 22, "NOT": 22, "support": [22, 32, 153], "denot": 22, "provid": [22, 43, 116, 134, 136, 137, 138, 139, 142, 143, 144, 153], "here": [22, 82, 136, 138, 139, 145], "ha": [22, 38, 138, 139, 140, 145, 147, 150, 153, 154], "than": [22, 138, 139, 143, 144, 147], "small": [22, 133], "level": [22, 38, 51, 57, 80, 138, 139, 141, 142, 143, 144, 149, 150], "architectur": 22, "consecut": 22, "reduc": [22, 125], "iqm_transpil": 22, "optimize_single_qubit_g": 22, "multipl": [22, 24, 88, 133, 138, 139, 143, 144], "moonei": [22, 24, 138, 139, 143, 144], "2021": [22, 24, 138, 139, 143, 144, 154], "randomized_measur": [22, 143, 144], "outlin": 22, "http": [22, 25, 27, 28, 88, 135, 136, 139, 142, 143, 144, 145, 153, 154], "arxiv": [22, 25, 27, 28, 51, 83, 135, 143, 144, 154], "org": [22, 25, 27, 28, 135, 143, 145, 153], "ab": [22, 25, 27, 28, 135, 143], "1812": [22, 25], "02624": [22, 25], "respect": [22, 80, 82, 138, 144], "chosen": [22, 38, 138, 139, 143, 144, 145], "readout": [22, 24, 38, 56, 57, 62, 111, 112, 114, 133, 142, 143, 144], "error": [22, 24, 38, 56, 57, 62, 104, 114, 124, 133, 138, 142, 143, 144, 145], "mitig": [22, 24, 38, 56, 57, 62, 111, 112, 113, 114, 133, 142, 143, 144], "total": [22, 92, 135, 138, 139, 143, 144], "url": [22, 120, 124, 138, 154], "retriev": [22, 50, 54, 124, 126, 127, 132, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "priorit": 22, "high": [22, 138, 139, 143, 144], "ideal_prob": 25, "num_qubit": [25, 26, 27, 28, 30, 37, 38, 56, 82, 95, 101, 139, 141, 144], "cross": [25, 138, 139, 153], "correl": [25, 143], "rm": 25, "eq": [25, 135], "34": [25, 136, 140, 141, 142, 148, 149], "hadamard": [26, 135, 144], "seri": 26, "linear": [26, 144], "fashion": 26, "symmetr": 26, "halv": 26, "1807": [27, 143, 144], "05572": [27, 143, 144], "2101": [28, 143, 144], "08946": [28, 143, 144], "graph": [29, 31, 32, 37, 38, 39, 40, 41, 42, 44, 45, 47, 116, 124, 138, 139, 143, 144], "n_state": [29, 138], "networkx": [29, 31, 32, 37, 39, 40, 41, 42, 138, 139], "n": [29, 38, 71, 81, 135, 138, 139, 143, 144], "participating_qubit": 29, "qc": [29, 50, 135, 136, 154], "maxim": [30, 138, 139], "between": [30, 31, 85, 112, 124, 138, 139, 143], "move": [30, 133, 150], "calcul": [31, 39, 45, 61, 92, 118, 131, 133, 138, 139], "cx_map": 31, "particip": 31, "2qb": 31, "them": [31, 136, 154], "subgraph": 31, "each": [31, 33, 45, 59, 60, 61, 65, 75, 80, 82, 85, 89, 108, 113, 119, 120, 124, 140, 141, 142, 143, 144, 145, 146, 147, 153, 154], "edg": [31, 32, 40, 41, 42, 83, 124, 133, 138, 139, 143, 144], "Then": [31, 154], "find": [31, 138, 139, 143, 144], "most": [31, 145], "central": 31, "posit": [31, 116, 124], "next": 31, "start": [31, 37, 105, 138, 141, 142, 143, 144, 145, 154], "smallest": 31, "layer": [31, 39, 43, 47, 48, 50, 51, 56, 80, 81, 83, 84, 85, 106, 118, 142, 151, 152, 154], "first": [31, 37, 50, 80, 143, 144, 145, 147, 149, 150, 151], "coupling_map": [32, 123, 138, 139], "couplingmap": [32, 128], "edges_c": 32, "fidelities_c": 32, "float": [32, 37, 39, 40, 42, 43, 44, 45, 47, 50, 53, 54, 58, 59, 60, 61, 62, 63, 64, 65, 75, 80, 82, 83, 84, 85, 95, 96, 97, 101, 104, 108, 109, 112, 114, 116, 119, 120, 122], "have": [32, 99, 138, 139, 153, 154], "wai": [32, 120, 133, 138, 139], "v": [33, 45, 50, 52, 138, 139, 142, 146], "user": [33, 144, 150, 154], "identif": [33, 153], "logger": [34, 131], "everi": 34, "warn": [34, 135, 138, 139, 144, 150], "score": [35, 37, 38, 44, 142, 151, 152, 154], "combinatori": [35, 37, 138, 139], "problem": [35, 37, 39, 40, 41, 42, 44, 45, 138, 139, 154], "meaning": [35, 37, 48, 56, 57], "qscorebenchmark": [36, 38, 138, 139, 142, 148], "qscoreconfigur": [36, 37, 138, 139, 142, 148], "backend_arg": [37, 50, 56, 71, 76, 81, 83, 84, 85, 98, 99, 100, 106, 107, 109, 110, 113, 119], "generate_maxcut_ansatz": 37, "theta": 37, "ansatz": [37, 39, 41, 43, 47], "qaoa": [37, 38, 39, 43, 47], "maxcut": [37, 39, 40, 41, 42, 43, 47, 138, 139, 142, 148], "end": [37, 50, 56, 135, 153], "variat": [37, 138, 139], "gamma": [37, 39], "beta": [37, 39, 44, 45, 138, 139, 142, 148], "add_all_meta_to_dataset": [37, 50, 56, 76, 81], "variabl": [37, 50, 56, 71, 76, 81, 97, 136, 143, 144, 145, 154], "choose_qubits_na": 37, "sequenti": [37, 107, 140, 142], "choose_qubits_custom": 37, "element": 37, "match": [37, 143, 144], "num_inst": [38, 45, 138, 139, 142, 148], "num_qaoa_lay": [38, 138, 139, 142, 148], "min_num_nod": [38, 138, 139, 142, 148], "max_num_nod": [38, 138, 139, 142, 148], "use_virtual_nod": [38, 45, 138, 139, 142, 148], "use_classically_optimized_angl": [38, 45, 138, 139, 142, 148], "choose_qubits_routin": [38, 57, 138, 139, 142, 148, 149, 150, 154], "min_num_qubit": 38, "seed": [38, 138, 139, 142, 148], "qpu_topologi": [38, 138, 139, 148], "crystal": [38, 116, 120, 138, 148], "min": [38, 112, 138, 139], "node": [38, 40, 41, 45, 47, 116, 124, 138, 139, 148], "taken": [38, 138, 139], "max": [38, 138, 139], "increas": [38, 105, 145], "potenti": 38, "pre": 38, "optimis": 38, "tune": 38, "minumum": 38, "virtual_nod": [38, 40, 41, 47], "upon": [38, 51, 57], "qpu": [38, 111, 133, 138, 139, 144], "either": [38, 97, 114, 116, 119, 120, 135, 143, 144, 145, 153, 154], "star": [38, 116, 120, 123, 128, 133, 137, 138, 143, 144, 152], "angl": [39, 43, 45, 47], "qubit_to_nod": [40, 41], "expect": [40, 41, 47, 80, 83, 85, 133, 138], "val": 40, "virtual": [40, 41, 45, 47, 123], "cut": [40, 41, 42, 47, 138, 139], "avg": [40, 142, 145, 148], "callabl": [41, 97, 103], "parametr": [41, 48, 50, 51, 138, 139, 141, 142, 145], "x": [42, 90, 92, 104, 116, 133, 135, 136, 144, 145, 147, 149, 150], "minu": 42, "sign": 42, "solut": [42, 138, 139], "multipli": 42, "obj": 42, "num_lay": 43, "approximation_ratio": [44, 142], "approxim": [44, 45, 138, 139, 142, 148], "ratio": [44, 45, 138, 139, 142, 148], "abov": [44, 64, 138, 139, 145, 153], "being": [44, 50, 56, 61, 64, 65, 82, 83, 95, 101, 119, 122, 138, 139], "success": [44, 64, 138, 139], "condit": [44, 64, 143, 144, 153], "mean": [44, 119, 124, 135, 138, 139, 141, 145, 153], "threshold": [44, 45, 57, 64, 65, 138, 139], "beta_ratio": 45, "beta_std": 45, "backend_nam": [45, 65, 125, 140, 141, 147, 149, 150], "timestamp": [45, 65, 140, 147], "includ": [45, 53, 117, 133, 138, 139, 143, 144, 153], "standard": [45, 57, 60, 69, 104, 119, 133, 145, 154], "deviat": [45, 57, 60, 104, 119], "classic": [45, 47, 56], "graph_phys": 47, "qubit_nod": 47, "use_classical_angl": 47, "qaoa_lay": 47, "solv": [47, 138, 139], "averag": [47, 59, 64, 65, 71, 76, 82, 97, 133, 138, 139, 144, 145], "presenc": 47, "volum": [48, 55, 56, 57, 66, 133, 151, 152, 154], "reflect": [48, 50, 56, 67, 68, 73, 78], "deepest": [48, 56], "oper": [48, 67, 109, 119, 133, 135, 143, 144, 145, 151, 152], "second": [48, 50, 151, 152], "clop": [48, 133, 151, 152, 154], "speed": [48, 50, 138, 139], "clops_v": [48, 138, 139, 141], "qv": [48, 50, 51, 56, 57, 59, 60, 64, 65, 133, 138, 139, 141, 142, 151, 152], "clops_h": [48, 51, 141], "squar": [48, 138, 139, 145], "clopsbenchmark": [49, 51, 138, 139, 141, 142], "clopsconfigur": [49, 50, 138, 139, 141, 142], "h": [50, 52], "append_parameterized_unitari": 50, "q0": 50, "q1": 50, "decompos": [50, 138], "su": 50, "4": [50, 105, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154], "involv": [50, 138, 139], "belong": 50, "generate_single_circuit": [50, 56], "generate_circuit_list": [50, 56], "generate_random_paramet": 50, "ndarrai": [50, 96, 97, 103], "templat": [50, 138, 139, 141, 142], "np": [50, 96, 103, 135, 138, 139, 142, 143, 145, 146], "float64": 50, "assign_random_parameters_to_al": 50, "dict_parametrized_circ": 50, "clops_cycl": 50, "sorted_transpiled_qc_list": [50, 56, 130], "cycl": 50, "assign": [50, 51, 80, 117, 133, 138, 139, 141, 142], "elaps": [50, 53, 54, 131, 141, 142], "time": [50, 53, 54, 56, 81, 106, 107, 131, 138, 139, 141, 142, 144, 145], "submiss": [50, 56, 81, 106, 107, 138, 139, 153], "generate_transpiled_clops_templ": 50, "num_circuit": [51, 57, 138, 139, 141, 142, 145, 149, 150, 154], "num_upd": [51, 138, 139, 141, 142], "10": [51, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 154], "num_shot": [51, 138, 139, 141, 142], "clops_h_bool": [51, 141, 142], "one": [51, 105, 130, 136, 138, 143, 144, 145, 147, 153, 154], "establish": [51, 141, 142], "By": [51, 141, 142], "definit": [51, 138, 139, 141, 142, 153], "2110": [51, 154], "14108": [51, 154], "quant": [51, 83, 154], "ph": [51, 83, 154], "rigor": [51, 145], "loos": 51, "www": [51, 135, 153], "ibm": [51, 112], "com": [51, 139, 143, 144], "blog": 51, "metric": [51, 138, 139, 145, 146], "restrict": [51, 57, 128, 142, 149, 150], "consid": [51, 57, 128], "clops_data": 53, "job_meta": 54, "quantumvolumebenchmark": [55, 57, 138, 139, 142, 149, 150], "quantumvolumeconfigur": [55, 56, 138, 139, 142, 149, 150, 154], "add_all_circuits_to_dataset": [56, 71, 76], "classical_permut": 56, "permut": 56, "avoid": 56, "swap": [56, 135], "get_rem_quasidistro": 56, "sorted_qc_list_indic": [56, 61], "execution_result": [56, 58], "quasicollect": [56, 62, 113], "quasiprob": [56, 62, 113, 114], "qubii": 56, "untranspil": [56, 61, 98, 123, 133], "submit_single_qv_job": 56, "submit": [56, 81, 106, 107, 130, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 153], "vanilla": [56, 65, 81, 106, 107], "dd": [56, 65, 81, 106, 107], "num_sigma": [57, 64, 65, 138, 139, 142, 149, 150, 154], "least": [57, 138, 139, 145, 153], "criteria": 57, "consensu": 57, "post": [57, 140, 142, 146, 147, 149, 150], "process": [57, 138, 139, 140, 142, 146, 147, 149, 150], "when": [57, 133, 138, 143, 144, 154], "unmitig": 57, "1_000": [57, 138, 139, 142, 149, 150, 154], "ideal_heavy_output": [58, 62], "hop": [58, 59, 60, 64, 65, 133], "ideal": [58, 82, 138, 139], "heavi": [58, 59, 60, 61, 62, 63, 64, 138, 139], "cumul": [59, 60], "probabl": [59, 60, 62, 63, 80, 83, 95, 101, 108, 122, 138, 139, 147, 154], "individu": [59, 60, 104, 133, 138, 143, 144, 145, 153, 154], "trial": [59, 60], "qc_list": [61, 123], "bitrstr": 61, "all_rem_quasidistro": 62, "distribut": [62, 63, 122, 135, 138, 139, 153], "noiseless": [62, 142, 149, 150], "project": [63, 154], "onto": 63, "associ": [63, 141, 142, 153], "heavy_output_prob": [64, 149, 150], "over": [64, 112, 122, 138], "within": [64, 153, 154], "sigma": [64, 65], "qv_result": [65, 138, 139, 149, 150], "qv_results_typ": [65, 149, 150], "in_volumetr": 65, "plot_rem": 65, "come": [65, 82, 114], "context": 65, "volumetr": 65, "correct": [65, 82, 112, 113, 138, 139, 145], "rb": [68, 70, 71, 72, 73, 75, 76, 77, 78, 80, 81, 95, 96, 97, 99, 101, 103, 104, 107, 108, 110, 133, 135, 138, 142, 146, 151, 152], "cliffordrandomizedbenchmark": [69, 70, 138, 140, 142], "cliffordrbconfigur": [69, 71, 138, 140, 142], "qubits_arrai": [70, 75, 80, 99, 104, 106, 108, 110, 138, 140, 142, 146, 147, 154], "sequence_length": [70, 75, 98, 99, 138, 140, 142, 146, 154], "num_circuit_sampl": [70, 75, 80, 98, 138, 140, 142, 146, 147, 154], "parallel_execut": [70, 75, 138, 140, 142, 146, 154], "length": [70, 75, 82, 86, 98, 99, 100, 135, 138, 140, 142, 146], "add_all_metadata_to_dataset": 71, "interleav": [73, 74, 75, 76, 77, 80, 85, 96, 97, 98, 99, 100, 104, 133, 140, 151, 152, 154], "interleavedrandomizedbenchmark": [74, 75, 138, 142, 146], "interleavedrbconfigur": [74, 76, 138, 142, 146, 154], "interleaved_g": [75, 98, 99, 100, 104, 138, 142, 146, 154], "interleaved_gate_param": [75, 138, 142, 146, 154], "simultaneous_fit": [75, 138, 142, 146, 154], "amplitud": [75, 96, 138, 142, 146, 154], "offset": [75, 96, 138, 142, 146, 154], "irb": [75, 97, 133, 151, 152], "ygate": 75, "czgate": [75, 80, 135, 138, 142, 145, 146, 147, 154], "enter": [75, 97, 99], "fit": [75, 88, 89, 90, 92, 96, 97, 103, 104, 133, 145, 153], "simultan": [75, 97], "specif": [76, 123, 135, 137, 138, 139, 142, 145, 149, 150, 151, 153], "mirror": [78, 79, 80, 81, 85, 133, 151, 152, 154], "mirrorrandomizedbenchmark": [79, 80, 142, 147, 154], "mirrorrbconfigur": [79, 81, 142, 147, 154], "depths_arrai": [80, 142, 147, 154], "num_pauli_sampl": [80, 82, 86, 142, 147, 154], "two_qubit_gate_ensembl": [80, 83, 84, 85, 142, 147, 154], "density_2q_g": [80, 83, 84, 85, 142, 147, 154], "25": [80, 83, 84, 85, 138, 140, 141, 142, 143, 146, 147, 148, 149, 150, 154], "mrb": [80, 81, 84, 87, 97, 104, 106, 107, 133, 142, 151, 152], "len": [80, 135, 138, 139, 145], "pauli": [80, 82, 84, 85, 86, 135, 145], "two": [80, 83, 135, 136, 138, 143, 144, 145], "ensembl": [80, 81, 83, 104], "cxgate": 80, "densiti": [80, 83, 85, 104, 138, 139], "submit_single_mrb_job": 81, "sorted_transpiled_circuit_dict": [81, 106], "canon": [81, 84, 85, 106], "noisy_count": 82, "ideal_count": 82, "num_circ_sampl": [82, 86, 100], "polar": [82, 97], "noisi": 82, "rescal": 82, "few": [82, 138, 139], "effect": [82, 138, 139, 144], "real": [82, 154], "simul": [82, 112, 133, 141, 142, 147, 149, 150], "qubit_set": [83, 97], "n_layer": 83, "grab": [83, 112], "see": [83, 130, 133, 135, 138, 143, 144, 145, 153], "2204": 83, "07568": 83, "2q": [83, 85, 102, 104, 138, 141, 142], "form": [83, 153], "subsequ": [83, 153], "rais": [83, 86, 110, 112, 123, 128], "valueerror": [83, 86, 110, 123, 128], "do": [83, 112, 146, 153], "up": [83, 138, 154], "uniti": 83, "circ_sampl": 84, "pauli_samples_per_circ": [84, 85], "dress": [84, 85, 86], "input_list": 86, "convert": [86, 135], "flat": 86, "matrix": [86, 135, 138, 139], "shape": 86, "lmfit": [88, 89, 97], "extend": [88, 133], "shown": [88, 138, 139, 143, 144, 145], "document": [88, 130, 138, 139, 153, 154], "github": [88, 154], "io": 88, "py": [88, 144, 150, 154], "example_fit_multi_dataset": 88, "html": [88, 154], "sphx": 88, "glr": 88, "multi": [88, 138, 139], "func": [89, 90, 91, 92, 97, 103], "initial_guess": 89, "constraint": [89, 154], "simultaneously_fit_var": 89, "line": 89, "evalu": [90, 138, 139], "signatur": 91, "residu": 92, "sever": [92, 133, 138, 139], "techniqu": 93, "qc_inv": 94, "clifford_dictionari": 94, "invers": [94, 138], "invert": 94, "de": [94, 100], "stabil": [94, 100, 133], "ground": [95, 101, 136], "depolarization_prob": 96, "non": [96, 138, 139, 153], "depolar": 96, "p": [96, 138], "decai": [96, 104, 133, 138], "exponenti": [96, 138], "rb_identifi": 97, "simultaneous_fit_var": 97, "interleaved_gate_str": 97, "0th": 97, "ap": [97, 145], "m": [97, 138, 139, 140, 142, 146, 147, 150, 154], "b": [97, 135, 138, 153], "stdrb": 97, "clifford_dict": [98, 100], "fir": 98, "cliffords_1q": 99, "cliffords_2q": 99, "num_sampl": [99, 100], "befor": [99, 138], "after": [99, 154], "term": [99, 135, 145, 153], "r": [99, 119, 123, 135, 141, 145, 150], "seq_length": 100, "self": [100, 136], "import": [102, 133, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154], "fit_paramet": 103, "fit_data": 103, "minimizerresult": 103, "violin": 104, "scatter": 104, "bar": [104, 136, 145], "shade_stdev": 104, "shade_meanerror": 104, "logscal": 104, "mrb_2q_densiti": 104, "mrb_2q_ensembl": 104, "point": [104, 143, 144], "shade": 104, "axi": [104, 133], "titl": [104, 153], "arr": 105, "helper": 105, "relabel": 105, "increasingli": 105, "zero": [105, 133, 138, 139], "5": [105, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 153, 154], "7": [105, 135, 138, 140, 141, 142, 143, 144, 145, 146, 147, 150, 153, 154], "note": [105, 114, 133, 143, 144, 145, 154], "sort": [105, 129, 147, 149, 150], "transpiled_circuit": [107, 113, 150], "circuit_compilation_opt": [107, 130], "circuitcompilationopt": [107, 130], "compil": [107, 130, 133, 138, 145, 153], "submit_execut": 107, "margin": [108, 112, 122], "surviv": [108, 138], "gate_id": 109, "gate_param": 109, "basi": [109, 123, 135, 138, 139, 145, 153], "m3": [111, 112, 113], "modif": [111, 153], "m3iqm": [111, 114], "mthree": [111, 114], "m3mitig": [111, 112], "iter_threshold": 112, "4096": 112, "modifi": [112, 133, 138, 139, 153], "work": [112, 114, 138, 139, 153, 154], "devic": [112, 133, 138, 139, 152, 154], "cals_from_system": 112, "initial_reset": 112, "rep_delai": [112, 144, 150], "cals_fil": 112, "async_c": 112, "cal_id": 112, "array_lik": 112, "1e4": 112, "max_shot": 112, "balanc": 112, "hardwar": [112, 152], "independ": [112, 138], "reset": 112, "begin": [112, 135], "delai": 112, "path": 112, "json": [112, 145], "async": 112, "separ": [112, 133, 149, 150, 153], "thread": 112, "m3error": 112, "call": [112, 133], "while": [112, 143, 144, 145, 153], "progress": 112, "against": [113, 153], "outcom": [113, 138, 139, 145], "mit": [114, 153], "iter": [114, 122], "processor": [114, 138, 139], "argument": [114, 133, 143, 144, 154], "util": [114, 133, 143, 144], "final_measurement_map": 114, "like": [114, 135, 138, 139, 154], "qubit_name_to_index": 114, "quasiprobabilti": 114, "we": [114, 136, 138, 139, 145, 153], "could": 114, "also": [114, 133, 143, 144, 145, 149, 150, 153, 154], "would": 114, "out": [114, 153], "box": 114, "u": 114, "sinc": [114, 138, 139, 145], "graphposit": 115, "chip": [116, 120, 124], "predefin": [116, 124, 143, 144, 145], "variou": [116, 151], "garnet_posit": 116, "y": [116, 135], "garnet": [116, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 154], "deneb_posit": 116, "deneb": [116, 133, 139, 140, 141, 142, 144, 146, 147, 148, 149, 151, 152], "predefined_st": 116, "create_posit": 116, "pygraph": 116, "must": [116, 138, 139, 153, 154], "coordin": [116, 136], "original_count": 117, "num_bootstrap_sampl": 117, "rgen": 117, "include_original_count": 117, "resampl": 117, "bootstrap": [117, 133, 145], "numpi": [117, 135, 138, 139, 142, 145, 146], "default_rng": 117, "circuit_list": 118, "transpiled_qc_list": 119, "barrier": [119, 135, 136, 141], "outermost": 119, "under": [120, 133, 135, 138, 145, 153], "list_fid": 120, "list_coupl": 120, "backend_label": 121, "prob_dist": 122, "bit": 122, "basis_g": 123, "drop_final_rz": 123, "target": [123, 145], "optimization_level": [123, 136, 138], "sqg": [123, 141, 142, 143, 144, 149, 150], "z": 123, "drop": 123, "rz": 123, "emploi": 123, "station": [124, 136, 143, 144, 154], "visual": [124, 133, 138, 143, 144], "thick": [124, 133], "thinner": [124, 143, 144], "better": [124, 143, 144], "highlight": 124, "orang": [124, 143, 144], "iqm_job": [126, 127], "iqmjob": [126, 127, 130], "relev": 127, "transpiled_circuit_list": 129, "sorted_indic": 129, "sorted_circuit": 129, "sent": [130, 153], "manag": [130, 153, 154], "abil": 130, "among": [130, 138, 154], "f": [131, 135, 136, 138, 139, 142, 143, 144, 145, 150], "amount": [131, 132], "decor": 131, "statement": [131, 153], "counts_rang": 132, "extract": [132, 138, 154], "rang": [132, 133, 135, 136, 138, 139, 140, 142, 144, 145, 146, 147, 154], "were": [132, 133], "rustworkx": 133, "depend": [133, 143, 144, 145, 152], "wrong": 133, "benchmark": [133, 134, 135, 137, 145, 148, 149, 150, 151], "aid": 133, "notebook": [133, 136, 138, 139, 145, 151, 152], "gst": [133, 151, 152], "don": [133, 153], "t": [133, 153], "overlap": 133, "runtim": 133, "improv": [133, 153], "tensor": 133, "bottom": 133, "top": 133, "qscore": [133, 138, 139], "file": [133, 153, 154], "test": [133, 138, 139, 154], "fake": 133, "iqm": [133, 134, 135, 136, 137, 143, 145, 146, 151, 153], "bug": 133, "done": [133, 135], "instal": [133, 138, 145, 152], "command": [133, 154], "develop": [133, 135, 144, 152], "mode": [133, 135, 154], "41": [133, 142, 146, 147, 148], "folder": [133, 153, 154], "doc": [133, 154], "spark": [133, 137, 152], "30": [133, 138, 140, 142, 146, 148, 154], "compat": 133, "adapt": [133, 154], "behavior": 133, "report": [133, 138], "displai": [133, 135, 138, 139, 140, 142, 145, 146, 150, 153], "publish": 133, "ci": 133, "secur": [133, 154], "scan": [133, 154], "lockfil": [133, 154], "relat": [133, 138], "lead": [133, 143, 144, 145], "modulenotfounderror": 133, "pyrit": [133, 148], "incorrect": 133, "mgst": [133, 145, 153, 154], "hamiltonian": [133, 145], "rank": [133, 145], "compress": [133, 151, 152, 154], "stage": 133, "revert": 133, "ones": [133, 138, 139, 154], "now": [133, 140, 141, 142, 143, 144, 145, 146], "instead": [133, 154], "port": 133, "subclass": 133, "usag": 133, "place": [133, 153], "miscellan": 133, "relax": 133, "api": [133, 143, 144, 152, 154], "build": [133, 154], "overwrit": 133, "tutori": 133, "remov": 133, "explicit": 133, "minor": 133, "longer": [133, 138], "renam": 133, "so": [133, 138, 145], "rebas": 133, "randomizedbenchmark": 133, "quantumvolum": 133, "serial": 133, "some": [133, 138, 139, 143, 144], "available_benchmark": 133, "__init__": 133, "public": 133, "hint": 133, "docstr": 133, "messag": 133, "prevent": 133, "exclus": [133, 153], "jupyt": 133, "section": [134, 137, 151, 153], "guidanc": [134, 137], "packag": [134, 138, 144, 150, 151, 154], "your": [134, 138, 152, 153, 154], "own": [134, 152, 153, 154], "decomposit": [134, 152], "1402": 135, "4848": 135, "copyright": [135, 153], "2024": [135, 140, 141, 150, 153], "licens": [135, 152], "apach": [135, 153], "you": [135, 138, 139, 143, 144, 146, 150, 153, 154], "mai": [135, 138, 139, 153], "except": [135, 136, 153], "complianc": [135, 153], "obtain": [135, 138, 139, 153, 154], "unless": [135, 153], "law": [135, 153], "agre": [135, 153], "softwar": [135, 153], "AS": [135, 153], "without": [135, 138, 139, 143, 144, 153], "warranti": [135, 153], "OR": [135, 153], "OF": [135, 153], "kind": [135, 153], "express": [135, 153], "impli": [135, 153], "languag": [135, 153], "govern": [135, 153], "permiss": [135, 153], "limit": [135, 153], "quantum_info": 135, "qi": 135, "c0": 135, "c": [135, 138, 144, 150, 153], "_": [135, 138, 143, 144, 145], "24": [135, 140, 141, 142, 146, 148, 152], "half": 135, "pi": [135, 142, 146], "x2": 135, "to_gat": 135, "y2": 135, "x2m": 135, "y2m": 135, "compos": 135, "inplac": 135, "2pi": 135, "rotat": [135, 136], "6": [135, 140, 141, 142, 143, 144, 146, 147, 148, 150, 153, 154], "9": [135, 136, 138, 140, 141, 142, 143, 144, 146, 147, 153, 154], "11": [135, 136, 138, 139, 140, 142, 143, 144, 146, 147, 150, 154], "12": [135, 140, 141, 142, 145, 146, 147, 149, 150], "13": [135, 140, 142, 143, 144, 146, 147, 150, 154], "14": [135, 140, 141, 142, 146, 147, 154], "15": [135, 138, 140, 141, 142, 146, 147, 150], "16": [135, 140, 141, 142, 143, 146, 147, 149], "17": [135, 140, 141, 142, 143, 146, 147, 149, 154], "18": [135, 140, 141, 142, 143, 144, 146, 147, 154], "19": [135, 141, 142, 143, 144, 145, 146, 147], "20": [135, 136, 140, 141, 142, 144, 146], "21": [135, 141, 142, 146], "22": [135, 141, 142, 145, 146, 147], "23": [135, 140, 141, 142, 143, 146, 147, 149, 150], "clifford_sqg": 135, "s1": 135, "k": [135, 138, 139, 141, 147, 149, 150], "s1x2": 135, "s1y2": 135, "displaystyl": 135, "sum_": [135, 145], "prime": 135, "left": 135, "mathrm": [135, 138, 139, 143, 144], "tr": [135, 145], "u_": 135, "dagger": [135, 138, 145], "u_k": 135, "right": [135, 153], "s2": 135, "satisfi": [135, 145], "c_kei": 135, "aux": 135, "total_triangl": 135, "c1": 135, "adjoint": 135, "j": [135, 138, 139, 143, 144, 145], "c2": 135, "c3": 135, "to_matrix": 135, "trace": [135, 145], "print": [135, 138, 141, 142, 143, 144, 145, 147, 149, 150, 153], "0f": 135, "diagon": [135, 138, 139], "nsum": 135, "sum": 135, "clifford_2qg": 135, "product": [135, 153], "c2q_0": 135, "c2q": 135, "counter": 135, "to_label": 135, "sqg_class_": 135, "cnot": [135, 143, 144], "sy2": 135, "cnot_class_": 135, "iswap": 135, "sy1": 135, "sx2": 135, "i_swap_class_": 135, "swap_class_": 135, "clifford_1qg": 135, "open": 135, "clifford_1q": 135, "pkl": 135, "wb": 135, "clifford_2q": 135, "loaded_dict": 135, "def": [135, 136], "count_rcz": 135, "c_list": 135, "no_cz": 135, "no_r": 135, "count_op": 135, "els": 135, "num_2qcz": 135, "num_2qr": 135, "num_1qcz": 135, "num_1qr": 135, "875": [135, 138, 142, 146, 149], "200": [135, 142, 148], "randint": [135, 138, 139, 142, 148], "11520": 135, "draw": [135, 138, 139, 150], "mpl": 135, "style": 135, "iqp": 135, "fold": 135, "ninvers": 135, "qc_aux": 135, "qcinv": 135, "op_seq": 135, "ncomposit": 135, "ident": 135, "modulo": 135, "phase": 135, "equiv": 135, "ii": [135, 136, 153], "latex": 135, "composit": 135, "bmatrix": 135, "520": [135, 142, 148], "132": [135, 142, 146], "710": [135, 148], "400": [135, 140, 142, 148], "suffic": 135, "triangular": 135, "part": [135, 153], "howev": [135, 153, 154], "still": [135, 145], "op": 135, "adj": 135, "prod": 135, "100000": 135, "ndone": 135, "defit": 136, "simpl": [136, 138, 154], "anoth": 136, "excit": 136, "add_counts_to_dataset": 136, "pyplot": [136, 138, 139, 145], "plt": [136, 138, 139, 145], "generate_readout_test_circuit": 136, "n_qubit": 136, "qb_to_measur": 136, "qc_transpil": 136, "plot_histogram": [136, 138], "50": [136, 138, 139, 142, 145, 146, 147, 148, 150, 153], "try": 136, "state_": 136, "counts_": 136, "break": 136, "xtick": 136, "90": 136, "legend": 136, "readout_analysi": 136, "histogram": [136, 138], "readouttest": 136, "default_opt": 136, "n_shot": 136, "2048": 136, "staticmethod": 136, "readout_test": 136, "iqmprovid": [136, 138, 139, 142, 144, 154], "iqm_server_url": 136, "fi": [136, 154], "coco": [136, 139, 154], "get_backend": [136, 138, 139, 142, 154], "480b": 136, "dimens": [136, 145], "state_0": 136, "state_1": 136, "u4": 136, "144b": 136, "0000": 136, "0001": 136, "0010": 136, "1010": 136, "1100": 136, "176b": 136, "0011": 136, "0101": 136, "0110": 136, "1101": 136, "1110": 136, "1111": 136, "counts_0": 136, "int64": 136, "72b": 136, "1924": 136, "26": [136, 142, 143, 146, 148], "39": [136, 142, 143, 145, 146, 148], "counts_1": 136, "88b": 136, "72": 136, "48": [136, 142, 144, 146, 148], "78": 136, "36": [136, 142, 143, 144, 148], "1801": 136, "sure": [138, 154], "pip": [138, 154], "ipykernel": 138, "o": [138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 154], "environ": [138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 154], "iqm_tokens_fil": 138, "token": [138, 139, 143, 146, 154], "iqm_url": [138, 139, 142], "access": [138, 139, 154], "everyth": [138, 139], "properli": [138, 139], "nx": [138, 139], "add_edges_from": [138, 139], "po": [138, 139], "spring_layout": [138, 139], "42": [138, 139, 142, 146, 148], "with_label": [138, 139], "node_color": [138, 139], "lightblu": [138, 139], "edge_color": [138, 139], "grai": [138, 139], "node_s": [138, 139], "font_siz": [138, 139], "linewidth": [138, 139], "width": [138, 139, 143, 144], "cell": [138, 139], "below": [138, 139, 143, 144, 145, 153, 154], "ignor": [138, 139], "critic": [138, 139], "filterwarn": [138, 139], "action": [138, 139], "entangl": [138, 139, 142, 143, 144, 154], "three": [138, 139], "more": [138, 139, 153, 154], "superposit": [138, 139], "rangl": [138, 139], "frac": [138, 139, 145], "sqrt": [138, 139], "otim": [138, 139], "act": [138, 139, 153], "wit": [138, 139], "genuin": [138, 139, 143, 144], "cannot": [138, 139, 153], "explain": [138, 139], "great": [138, 139], "rho_": [138, 139], "text": [138, 139, 145, 153], "langl": [138, 139], "pure": [138, 139], "case": [138, 139], "actual": [138, 139], "entri": [138, 139, 145], "written": [138, 139, 153], "00": [138, 139, 142, 145, 147, 149], "corner": [138, 139], "simplifi": [138, 139], "four": [138, 139], "compon": [138, 139], "formula": [138, 139], "nullifi": [138, 139], "To": [138, 139, 140, 143, 144, 145, 153, 154], "off": [138, 139], "want": [138, 139, 143, 144, 154], "pleas": [138, 139], "refer": [138, 139, 145, 152, 154], "generate_ghz_spanning_tre": 138, "get_edg": 138, "ghz_circuit": 138, "qc_transp": 138, "re": [138, 146], "10000": [138, 139, 148], "get_count": 138, "benchmark_ghz": [138, 139, 142, 143, 144], "run_ghz": [138, 139, 142, 143, 144], "result_ghz": [138, 139], "introduc": [138, 139], "2019": [138, 139, 143, 144, 154], "unitari": [138, 139, 145, 150], "successfulli": [138, 139, 140, 142, 146, 147, 149, 150], "occcur": [138, 139], "greater": [138, 139], "median": [138, 139], "ask": [138, 139], "confid": [138, 139], "higher": [138, 139], "97": [138, 139], "around": [138, 139], "85": [138, 139, 154], "asymptot": [138, 139], "log_2": [138, 139], "v_q": [138, 139], "underset": [138, 139], "argmax": [138, 139], "d": [138, 139, 143, 144, 153], "leq": [138, 139], "achiev": [138, 139], "quantum_volum": [138, 139, 141, 142, 149, 150, 154], "combin": [138, 139, 153], "due": [138, 139], "topmost": 138, "500": [138, 139, 142, 147, 149, 150, 154], "60_000": [138, 142, 149, 150, 154], "follow": [138, 139, 143, 144, 145, 153, 154], "code": [138, 139, 145, 152, 153, 154], "minut": [138, 139, 145], "benchmark_qv": [138, 139, 142, 149, 150], "run_qv": [138, 139], "result_qv": [138, 139], "That": [138, 139], "wack": [138, 139], "repeat": [138, 139], "constitut": [138, 139, 153], "_time": [138, 139], "notic": [138, 139, 153], "plot_tim": [138, 139], "benchmark_clop": [138, 139, 141, 142], "run_clop": [138, 139, 141, 142], "result_clop": [138, 139, 141, 142], "fig_clop": [138, 139], "idea": 138, "behind": 138, "crb": 138, "certain": [138, 139], "nois": 138, "langle0": 138, "c_": 138, "inv": 138, "c_m": 138, "cdot": 138, "_2c_1": 138, "sim": 138, "c_1": 138, "c_2": 138, "ldot": 138, "c_1c_2": 138, "_m": 138, "leq1": 138, "constant": 138, "isol": 138, "spam": 138, "magesan": 138, "2012": [138, 154], "turn": 138, "infer": 138, "assumpt": 138, "markovian": 138, "stationari": 138, "theori": [138, 153], "fact": 138, "design": [138, 153, 154], "fulli": [138, 145], "ensur": 138, "our": 138, "overlin": 138, "intend": 138, "becaus": 138, "eventu": 138, "mention": 138, "barend": 138, "2014": 138, "approx": 138, "alwai": [138, 143, 144], "slightli": 138, "care": 138, "compar": 138, "spec": 138, "randomized_benchmark": [138, 140, 142, 146, 147, 154], "clifford_rb": [138, 140, 142], "benchmark_clifford_rb": [138, 140, 142], "run_clifford_rb": [138, 140, 142], "result_clifford_rb": [138, 140, 142], "previou": 138, "aim": [138, 143, 144], "interest": 138, "robust": 138, "sole": [138, 153], "made": [138, 153], "rate": 138, "wish": [138, 150], "character": [138, 152], "interleaved_rb": [138, 142, 146, 154], "irb_cz": 138, "nb": [138, 140, 141, 142], "benchmark_irb_cz": 138, "run_irb_cz": 138, "result_irb_cz": 138, "martiel": [138, 139], "erd\u0151": [138, 139], "r\u00e9nyi": [138, 139], "cost": [138, 139], "geq": [138, 139, 145], "999999": [138, 139, 142, 148], "benchmark_qscor": [138, 139, 142, 148], "run_qscor": [138, 139, 142], "result_qscor": [138, 139, 142], "summar": 138, "tabl": [138, 145], "obs_ghz": [138, 139], "round": [138, 139], "obs_qv": [138, 139], "obs_clop": [138, 139], "item": [138, 139], "obs_crb": 138, "f_crb": 138, "obs_irb": 138, "f_irb": 138, "avg_gate_fidelity_interleav": [138, 142, 146], "obs_q": [138, 139], "argmin": [138, 139], "mean_approximation_ratio": [138, 139, 148], "3000": 138, "999": [138, 140, 141], "98": 138, "format": [138, 153], "num": 138, "iqm_token": [139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 154], "reson": [139, 143, 146, 154], "meetiqm": [139, 143, 144], "chosen_layout": 139, "2000": [139, 145], "10_000": 139, "load_ext": [140, 141, 142, 145, 146, 147, 148, 149, 150], "autoreload": [140, 141, 142, 145, 146, 147, 148, 149, 150], "extens": 140, "load": 140, "reload": 140, "reload_ext": 140, "fakeadoni": [140, 141, 142, 146, 147, 148, 149], "fakeapollo": [140, 141, 142, 143, 146, 147, 148, 149], "example_crb": [140, 142], "56": [140, 142, 148], "750": [140, 148], "logging_config": [140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "info": [140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "Will": [140, 141, 142, 145, 146, 147, 149, 150], "31": [140, 141, 142, 143, 146, 147, 148], "63": [140, 142, 146], "831": [140, 146, 148], "992": [140, 141, 148], "341": [140, 144, 148], "040": [140, 142, 146], "469": [140, 142], "291": 140, "292": [140, 142, 146], "349": 140, "541": [140, 147], "600": [140, 142, 143], "756": [140, 142], "837": [140, 146, 148, 149], "025": [140, 148], "171": [140, 142], "905": [140, 148], "544": [140, 142, 148], "899": [140, 142], "32": [140, 141, 142, 145, 147, 148], "624": [140, 142], "004": [140, 142, 146, 148], "43": [140, 142, 145, 146, 148], "319": 140, "569": [140, 147, 148], "777": [140, 142], "840": 140, "44": [140, 142, 145, 146, 148], "048": [140, 146], "098": [140, 141, 142, 148], "qubits_": [140, 142, 147], "_depth_1": [140, 142, 146], "323": 140, "45": [140, 142, 144, 146, 147, 148], "186": [140, 146], "_depth_3": [140, 142, 146], "225": [140, 142], "_depth_7": [140, 142, 146], "267": [140, 142, 148], "_depth_15": [140, 142, 146], "314": [140, 142], "_depth_31": [140, 142, 146], "315": [140, 142, 148], "364": [140, 142, 147], "_depth_63": [140, 142, 146], "416": [140, 148], "417": [140, 148, 150], "476": 140, "542": [140, 142, 147], "615": [140, 142], "616": [140, 142, 148], "697": [140, 148], "789": [140, 142, 146, 148], "890": [140, 142, 146], "conclud": [140, 142, 146, 147, 149, 150], "931": [140, 142, 148], "938": 140, "945": [140, 142, 147], "952": [140, 146], "959": [140, 142], "966": [140, 142, 148], "972": [140, 142, 148], "979": [140, 142, 148], "986": [140, 142], "993": [140, 142, 147], "46": [140, 142, 144, 145, 148, 150], "006": [140, 142, 148], "013": 140, "946844466999168": 140, "9429197366921651": 140, "attr": [140, 141, 145, 147, 149, 150], "session_timestamp": [140, 141, 147, 149, 150], "20241217": 140, "115553": 140, "execution_timestamp": [140, 141, 147, 149, 150], "backend_configuration_nam": [140, 141, 147, 149, 150], "iqmfakeapollobackend": [140, 141, 143, 145, 149], "depth_1": 140, "time_circuit_gener": [140, 141, 147, 149, 150], "541001081466675": 140, "time_submit": [140, 147, 149, 150], "0006990432739257812": 140, "time_retriev": [140, 147, 149, 150], "22491073608398438": 140, "all_job_metadata": [140, 147, 149, 150], "batch_job_1": [140, 147], "job_id": [140, 147], "8f305755": 140, "e038": 140, "4596": 140, "8617": 140, "d96ba3f42ca9": 140, "aer_simul": [140, 147], "statu": [140, 147], "circuits_in_batch": [140, 147], "depth_3": 140, "05647683143615723": 140, "0005230903625488281": 140, "2fe0b406": 140, "8977": 140, "4567": 140, "bba0": 140, "d4168f0883ed": 140, "depth_7": 140, "19257187843322754": 140, "0004839897155761719": 140, "8299918c": 140, "be26": 140, "40d5": 140, "8778": 140, "9ea4468a1df2": 140, "depth_15": 140, "05831408500671387": 140, "0004811286926269531": 140, "174640c4": 140, "9ff3": 140, "4ca3": 140, "9ffc": 140, "d6aa5be304f3": 140, "depth_31": 140, "1564040184020996": 140, "0006189346313476562": 140, "7bb739f2": 140, "31bc": 140, "40af": 140, "8dbf": 140, "1d60a9310391": 140, "depth_63": 140, "08135986328125": 140, "0004200935363769531": 140, "f414a2c1": 140, "75c8": 140, "4d5a": 140, "9e4b": 140, "ccce29903f5f": 140, "147684812545776": 140, "0005502700805664062": 140, "00039887428283691406": 140, "8832576a": 140, "6d6e": 140, "4abe": 140, "8cfa": 140, "5001e6bb98e": 140, "08015298843383789": 140, "00039315223693847656": 140, "ecc1bcea": 140, "ef4c": 140, "4f35": 140, "9284": 140, "ab49af0c5b9f": 140, "16936397552490234": 140, "0003960132598876953": 140, "5582c842": 140, "0f07": 140, "46b6": 140, "96be": 140, "2fb3925b19d9": 140, "20774221420288086": 140, "0004191398620605469": 140, "6423b02b": 140, "8417": 140, "4300": 140, "b7ac": 140, "84d59f87a51f": 140, "0635080337524414": 140, "0004169940948486328": 140, "0b324804": 140, "44fe": 140, "4c16": 140, "83eb": 140, "08e5cd67aa79": 140, "20784401893615723": 140, "0004961490631103516": 140, "6c633640": 140, "d4b4": 140, "47de": 140, "a46d": 140, "d3ae4c84d212": 140, "avg_gate_fidel": [140, 147], "0012220693932290373": 140, "001545469960991071": 140, "xxxxxx": 141, "example_clop": [141, 142], "06": [141, 142, 147], "07": [141, 142, 146, 147], "198": [141, 142, 148], "199": 141, "828": [141, 146], "829": [141, 142, 146, 148], "383": [141, 146], "401": [141, 142, 148], "458": [141, 142], "010": [141, 144, 148], "428": [141, 144, 147, 148], "429": [141, 142], "497": [141, 142], "029": [141, 142], "482": [141, 142, 148], "483": [141, 142], "502": [141, 142, 148], "113": 141, "843": 141, "844": [141, 148], "906": [141, 146, 148], "527": [141, 148], "987": [141, 142, 148], "988": [141, 142], "050": [141, 142, 147, 148, 149], "636": [141, 142, 146, 148], "099": [141, 142], "166": [141, 146, 148], "712": [141, 148], "27": [141, 142, 143, 144, 146, 148], "328": [141, 142], "329": [141, 142], "404": [141, 142, 148], "766": [141, 142, 147, 148], "29": [141, 142, 143, 146, 148, 149], "386": [141, 142, 144], "387": [141, 142, 146, 147], "406": [141, 142, 148], "418": [141, 142, 150], "487": [141, 142, 148], "037": 141, "33": [141, 142, 147, 148], "488": [141, 142], "556": [141, 142, 148], "240": [141, 142, 144, 148], "916": [141, 146], "There": [141, 142], "all_times_parameter_assign": 141, "all_times_retriev": 141, "all_times_submit": 141, "assign_parameters_tot": 141, "clops_tim": 141, "counts_per_upd": 141, "job_meta_per_upd": 141, "num_paramet": 141, "operation_count": [141, 149, 150], "parallel_2q_lay": 141, "parameters_per_upd": 141, "time_count_lay": 141, "time_sort_batch": 141, "time_transpil": [141, 149, 150], "u_per_lay": 141, "user_retrieve_tot": 141, "user_submit_tot": 141, "9603960396039604": 141, "std": 141, "3960396039603959": 141, "285": [141, 142, 146], "970297029703": 141, "28": [141, 142, 143, 146, 148, 149], "718661075530303": 141, "40594059405941": 141, "915387814641763": 141, "9900990099009901": 141, "09900990099009897": 141, "18796": 141, "nan": [141, 145], "56388": 141, "iqm_provid": [142, 144, 150], "2025": [142, 143, 144, 145, 146, 147, 148, 149, 152], "01": [142, 145, 146, 147, 148, 149], "58": [142, 146, 148], "410": [142, 148], "411": [142, 148], "127": [142, 146], "639": [142, 143, 144], "949": [142, 148], "35": [142, 148], "841": 142, "251": [142, 148], "53": [142, 144, 146, 148], "648": [142, 148], "690": 142, "785": [142, 146], "953": [142, 148], "815": [142, 148], "59": [142, 146, 147, 148], "821": [142, 146, 148], "808": [142, 148], "834": 142, "860": [142, 146], "02": [142, 143, 144, 145, 147, 148], "350": [142, 148], "351": 142, "424": [142, 148], "466": 142, "510": [142, 144, 148], "511": [142, 148], "558": 142, "_depth_127": [142, 146], "559": [142, 148], "611": [142, 148], "643": [142, 148], "647": 142, "651": [142, 147, 148, 150], "655": [142, 148], "659": 142, "663": 142, "667": [142, 148], "9487496885745926": 142, "example_irb_1q": [142, 146], "rgate": [142, 145, 146], "benchmark_irb_1q": [142, 146], "run_irb_1q": [142, 146], "734": [142, 146, 148], "958": 142, "wxecut": 142, "255": [142, 146], "000": [142, 146, 148], "041": [142, 148], "122": 142, "925": 142, "229": 142, "054": 142, "37": [142, 143, 144, 148, 150], "672": 142, "694": 142, "753": 142, "849": [142, 147, 148], "38": [142, 143, 146, 148], "039": [142, 146, 148], "402": [142, 148], "108": [142, 148], "40": [142, 148], "570": [142, 148], "277": [142, 148], "331": [142, 147, 148], "399": [142, 148], "495": [142, 148], "650": [142, 146], "929": [142, 148], "51": [142, 145, 146, 148, 150], "439": 142, "52": [142, 143, 145, 146, 147, 148, 150], "352": [142, 148], "432": [142, 143, 146], "475": [142, 146], "666": [142, 148], "812": 142, "881": [142, 146, 148], "761": 142, "804": 142, "894": [142, 143], "907": [142, 148], "03": [142, 146, 147, 152], "020": 142, "188": [142, 146, 148], "270": 142, "426": [142, 148], "718": [142, 144], "04": [142, 146, 147], "307": [142, 147, 148], "05": [142, 146, 147], "836": [142, 146, 148], "904": [142, 148], "003": [142, 145, 146], "196": [142, 146, 148, 149], "557": [142, 147], "719": 142, "653": [142, 147, 148], "149": [142, 147], "754": [142, 148], "231": 142, "163": [142, 146], "261": 142, "446": [142, 144, 148], "524": 142, "635": [142, 146], "112": [142, 144], "693": [142, 148], "811": 142, "826": [142, 148], "920": [142, 148], "091": 142, "173": [142, 146], "338": [142, 144, 146, 148], "640": [142, 146, 148], "230": 142, "545": [142, 147], "54": [142, 144, 146, 148, 150], "939": [142, 146, 148], "961": 142, "55": [142, 144, 147, 148], "011": [142, 145], "105": [142, 148], "299": [142, 150], "384": 142, "57": [142, 146, 148], "824": [142, 148], "662": 142, "717": [142, 146, 148], "790": [142, 145, 146, 147], "889": [142, 147], "301": [142, 147, 148], "799": [142, 150], "083": [142, 148], "152": [142, 147, 148], "254": 142, "420": [142, 148], "758": [142, 145, 146, 147], "634": [142, 148], "947": [142, 147], "994": [142, 145, 148], "548": 142, "159": [142, 148], "724": 142, "746": 142, "791": [142, 147, 148], "884": [142, 147], "074": [142, 146, 148], "128": [142, 147, 148], "561": 142, "477": 142, "550": [142, 148], "623": [142, 145, 146, 148], "726": 142, "880": [142, 148], "47": [142, 144, 145, 146, 148], "508": 142, "606": [142, 147], "838": [142, 148], "944": [142, 147, 148], "49": [142, 144, 145, 146, 148], "427": 142, "963": [142, 148], "970": [142, 147], "008": [142, 146, 148], "071": 142, "305": 142, "391": [142, 145, 148], "555": [142, 148], "444": 142, "649": [142, 148, 150], "063": [142, 148], "119": [142, 147], "212": 142, "397": [142, 148], "467": [142, 148], "678": [142, 147, 148], "688": [142, 146, 149], "741": [142, 144], "810": [142, 148], "908": 142, "805": [142, 148], "682": [142, 146], "730": 142, "816": 142, "094": [142, 146, 148], "259": 142, "547": 142, "066": [142, 148], "138": [142, 148], "clifford_qubits_": [142, 146], "176": [142, 147, 148], "354": 142, "355": [142, 146, 148], "390": 142, "459": 142, "591": [142, 148], "592": [142, 148], "644": 142, "_depth_255": [142, 146], "703": [142, 146], "767": [142, 147], "768": [142, 148], "839": 142, "918": 142, "919": 142, "007": [142, 146], "104": [142, 148], "211": 142, "728": [142, 143], "971": 142, "232": [142, 148], "509": [142, 146], "151": [142, 148], "498": 142, "862": [142, 148], "248": 142, "249": 142, "654": [142, 148], "142": [142, 148], "143": 142, "085": 142, "626": [142, 147], "180": [142, 147], "732": 142, "733": [142, 148], "923": 142, "interleaved_qubits_": [142, 146], "924": [142, 148], "560": [142, 148], "237": 142, "940": [142, 147], "447": [142, 150], "075": [142, 143, 145, 148], "076": [142, 148], "845": [142, 146], "846": 142, "783": [142, 148, 149], "784": [142, 146, 148], "782": 142, "813": 142, "814": 142, "201": [142, 147, 148], "202": 142, "378": [142, 148], "379": 142, "909": 142, "910": [142, 148], "284": [142, 148], "658": 142, "111": [142, 148, 149], "571": [142, 145, 148], "572": [142, 148], "062": [142, 148], "021": [142, 149], "022": [142, 146], "735": 142, "736": [142, 148], "546": [142, 146, 147], "09": [142, 145, 146, 149, 152], "361": [142, 148], "362": 142, "330": [142, 147], "304": [142, 148], "269": [142, 150], "471": [142, 148], "596": [142, 146, 147, 148], "842": [142, 146, 147], "086": [142, 148], "642": [142, 143, 144], "983": [142, 147], "460": 142, "result_irb_1q": [142, 146], "855": 142, "901": 142, "943": 142, "033": [142, 146, 149], "116": [142, 147], "161": 142, "206": [142, 146, 148], "300": [142, 145, 148], "344": 142, "433": [142, 148], "519": 142, "603": [142, 148], "686": [142, 148], "727": [142, 148], "769": [142, 148], "853": 142, "936": [142, 148], "978": [142, 148], "019": 142, "106": [142, 148], "191": [142, 145], "274": [142, 148], "316": 142, "357": [142, 147, 148], "440": [142, 146], "565": 142, "607": [142, 146], "774": 142, "858": [142, 148], "941": 142, "030": [142, 148], "072": [142, 143, 148], "114": 142, "156": [142, 148], "197": [142, 146], "239": 142, "280": 142, "322": 142, "405": 142, "489": 142, "531": 142, "614": 142, "656": [142, 148], "698": 142, "747": 142, "794": 142, "948": [142, 147], "061": [142, 148], "110": 142, "157": [142, 146], "9987487631380596": 142, "9976446981909068": 142, "9966759568052321": 142, "993530034195362": 142, "9990404653517758": 142, "9981264795208118": 142, "9993022807449614": 142, "9986351324410088": 142, "9973448276409616": 142, "9955188886796882": 142, "252344351282814e": 142, "avg_gate_fidelity_clifford": [142, 146], "427765436266417e": 142, "311072136492597e": 142, "508513064336435e": 142, "00011479325016746003": 142, "00013605231315518148": 142, "126965739294625e": 142, "500976481016944e": 142, "726101631810375e": 142, "232463034652631e": 142, "example_irb_2q": [142, 146], "benchmark_irb_2q": [142, 146], "run_irb_2q": [142, 146], "921": 142, "001": [142, 145, 148], "164": [142, 148], "481": 142, "08": [142, 145, 146, 147, 148], "367": [142, 148], "937": [142, 148], "095": [142, 146], "396": [142, 146, 148], "026": 142, "620": [142, 148], "765": [142, 146, 148], "930": [142, 148], "216": [142, 146], "738": 142, "729": [142, 143], "674": [142, 148], "965": 142, "264": [142, 147, 148], "470": 142, "463": [142, 144, 148], "078": 142, "370": [142, 148], "771": 142, "968": [142, 146], "140": [142, 143], "441": [142, 144, 146], "192": 142, "743": [142, 148], "268": 142, "298": 142, "625": [142, 148, 149], "461": 142, "009": 142, "991": [142, 146], "014": 142, "807": [142, 148], "165": 142, "817": 142, "295": [142, 148], "464": [142, 148], "721": [142, 148], "398": 142, "581": 142, "714": 142, "689": [142, 148], "801": [142, 148], "912": [142, 150], "891": 142, "435": 142, "484": 142, "181": [142, 147], "194": [142, 148], "451": 142, "290": [142, 146, 149], "955": 142, "359": 142, "096": [142, 147], "445": [142, 148], "521": 142, "681": [142, 146], "628": 142, "214": [142, 147], "385": [142, 144], "309": 142, "579": 142, "652": [142, 146, 147], "131": [142, 146, 148], "168": [142, 146], "169": [142, 148], "207": [142, 146], "208": [142, 146], "252": [142, 149], "253": [142, 148], "345": 142, "346": [142, 146, 148], "457": 142, "523": [142, 147], "595": [142, 146, 148], "676": [142, 147], "764": [142, 146, 148], "863": [142, 143], "969": 142, "088": [142, 149], "089": 142, "218": 142, "360": [142, 148, 150], "514": 142, "283": [142, 149], "034": [142, 146], "035": 142, "313": 142, "612": 142, "272": [142, 147], "637": [142, 150], "036": [142, 148], "876": [142, 146, 148], "877": [142, 146], "861": [142, 146], "365": [142, 147, 148], "366": 142, "897": [142, 148], "468": [142, 148], "051": 142, "661": 142, "028": [142, 148], "739": [142, 146, 148], "740": [142, 146], "241": [142, 148], "042": 142, "673": 142, "641": 142, "757": [142, 149], "866": 142, "005": [142, 145, 146, 148], "177": [142, 147, 148], "178": 142, "431": 142, "result_irb_2q": [142, 146], "704": [142, 143, 146], "795": 142, "888": 142, "070": [142, 148], "101": 142, "223": [142, 146, 148], "374": [142, 148], "465": 142, "526": 142, "586": [142, 148], "677": [142, 148], "707": 142, "798": [142, 148], "859": 142, "950": [142, 146], "981": [142, 146], "162": [142, 148], "9742310809885095": 142, "9459834045099638": 142, "9702389918426017": 142, "9373183372682623": 142, "9829862612568532": 142, "9651704260970525": 142, "9600628980342876": 142, "9331175707494691": 142, "example_irb_iswap": [142, 146], "iswapg": [142, 146, 147, 154], "benchmark_irb_iswap": [142, 146], "run_irb_iswap": [142, 146], "567": 142, "751": [142, 146, 148], "573": [142, 148], "742": [142, 148], "879": 142, "079": [142, 147, 148], "954": [142, 146, 148], "145": 142, "781": [142, 146, 149], "496": [142, 143, 146], "725": [142, 148], "408": [142, 145, 148], "895": 142, "788": [142, 146], "513": 142, "517": [142, 148], "087": [142, 148], "773": [142, 146], "684": [142, 148], "638": [142, 148], "691": [142, 146], "204": [142, 146, 149], "339": [142, 146], "580": 142, "608": 142, "609": [142, 147, 148], "336": [142, 148], "708": 142, "833": [142, 148], "990": 142, "084": 142, "187": 142, "303": 142, "576": [142, 148], "097": [142, 147], "530": [142, 146, 148], "776": 142, "044": 142, "045": 142, "332": [142, 148], "333": [142, 146, 148], "984": [142, 148], "985": 142, "result_irb_iswap": [142, 146], "796": 142, "902": [142, 148], "073": 142, "115": [142, 148], "136": 142, "179": [142, 148], "221": [142, 148], "296": [142, 147, 148], "325": [142, 148], "388": [142, 148], "9296485294294863": 142, "9468865104887559": 142, "9168663709049512": 142, "9389212110918619": 142, "mirror_rb": [142, 147, 154], "example_mrb": [142, 147, 154], "benchmark_mrb": [142, 147], "run_mrb": [142, 147], "10x5": [142, 147], "64": [142, 147], "512": [142, 147], "090": [142, 146, 148], "109": [142, 154], "775": 142, "802": [142, 148], "779": [142, 144, 145, 146, 148], "533": 142, "246": 142, "442": [142, 146], "369": 142, "491": [142, 144, 146], "092": [142, 148], "613": 142, "631": [142, 143, 146], "692": [142, 146], "375": [142, 147, 148], "723": [142, 148], "878": 142, "266": 142, "123": 142, "_depth_2": [142, 147], "_depth_4": [142, 147], "_depth_8": [142, 147], "_depth_16": [142, 147], "_depth_32": [142, 147], "822": 142, "_depth_64": [142, 147], "_depth_128": [142, 147], "174": [142, 146], "_depth_256": [142, 147], "175": 142, "_depth_512": [142, 147], "515": 142, "720": [142, 148], "219": 142, "857": [142, 148], "242": 142, "243": [142, 148, 150], "670": 142, "671": [142, 146], "147": [142, 147], "result_mrb": [142, 147], "706": [142, 146], "882": [142, 146], "962": 142, "067": [142, 146], "260": 142, "356": 142, "1600x1200": 142, "ax": 142, "all_qubit_layout": [142, 147], "key_mrb_plot": [142, 147], "example_qv": [142, 149, 150, 154], "run0_qv": [142, 149, 150], "iqmfakeadonisbackend": 142, "234": [142, 143, 148], "subbatch": [142, 149, 150], "562": 142, "588": 142, "093": 142, "023": [142, 143], "434": [142, 148], "587": 142, "result0_qv": [142, 149, 150], "413": [142, 147], "run1_qv": [142, 149, 150], "result1_qv": [142, 149, 150], "865": [142, 148, 150], "213": [142, 148], "800": [142, 143, 145], "321": 142, "887": [142, 147, 148], "024": [142, 150], "155": [142, 148], "516": [142, 148], "247": 142, "278": [142, 148], "347": 142, "265": [142, 148], "358": [142, 143], "453": [142, 143, 148, 149], "454": [142, 143], "554": 142, "552": 142, "minimal_ghz": [142, 143, 144], "745": [142, 146], "792": [142, 148], "900": 142, "049": [142, 146], "238": 142, "306": 142, "423": [142, 148], "8309361141069083": 142, "fidelity_rem": [142, 144], "8897643257271268": 142, "example_qscor": [142, 148], "20_000": 142, "4767": 142, "4900": 142, "6739": 142, "3733": 142, "6246": 142, "3894": 142, "4881": 142, "4714": 142, "4767012007999197": 142, "09979310484432205": 142, "is_succes": [142, 148, 149, 150], "qscore_result": [142, 148], "6738975057778192": 142, "07204344830310698": 142, "6246025280898877": 142, "04717318377784287": 142, "4881333882446109": 142, "04133470512287928": 142, "multipartit": [143, 144], "One": [143, 144, 149, 150], "larger": [143, 144, 145], "suffici": [143, 144], "leibfri": [143, 144], "et": [143, 144], "al": [143, 144], "six": 143, "atom": 143, "schr\u00f6dinger": 143, "cat": 143, "natur": [143, 144], "438": [143, 144, 148], "2005": [143, 144], "offer": [143, 144, 153], "verif": [143, 152, 154], "superconduct": 143, "phy": [143, 144, 154], "commun": [143, 144, 153], "095004": [143, 144], "elben": [143, 144], "statist": 143, "local": 143, "toolbox": 143, "probe": 143, "bodi": 143, "rev": [143, 144, 154], "99": [143, 144], "052323": [143, 144], "ciruit": [143, 144], "hadamrd": 143, "addit": [143, 144, 145, 153, 154], "log_depth": [143, 144], "cruz": [143, 144], "yield": [143, 144], "lower": [143, 144, 145], "hous": 143, "reli": [143, 144], "dai": 143, "thu": [143, 144], "comparison": [143, 144], "best": [143, 144], "gme": [143, 144], "prefer": [143, 144, 153], "control": [143, 144, 153], "whenev": [143, 144], "mitgat": [143, 144], "arang": 143, "For": [143, 144, 145, 153, 154], "think": [143, 144], "help": [143, 144], "your_token": [143, 144, 154], "mark": [143, 144, 153], "w_": [143, 144], "ij": [143, 144, 145], "mathcal": [143, 144], "station_nam": [143, 144], "recogn": [143, 144], "grid": [143, 144], "automat": [143, 144, 154], "plot_layout_fidelity_graph": [143, 144], "130": 143, "144": 143, "864": 143, "146": [143, 146], "601": [143, 148], "486": 143, "055": 143, "057": [143, 148], "854": 143, "490": [143, 146, 148], "645": [143, 148], "893": 143, "fidelitii": [143, 144], "filter": [143, 144], "descript": [143, 144, 153], "l0": [143, 144], "l1": [143, 144], "enumer": [143, 144, 145], "tailor": 144, "novel": 144, "281": [144, 148], "raphaelbrieg": 144, "miniconda3": 144, "env": [144, 150], "lib": [144, 150], "site": [144, 150], "170": [144, 148, 150], "userwarn": [144, 150], "unknown": [144, 150], "unknown_opt": [144, 150], "762": [144, 148], "873": 144, "872": 144, "381": [144, 146], "715": [144, 148], "8606413415449893": 144, "8995408735543517": 144, "introduct": 145, "what": [145, 146], "background": 145, "journal": 145, "prxquantum": 145, "1103": 145, "010325": [145, 154], "compressive_gst": 145, "gstconfigur": 145, "compressivegst": 145, "iqmfakeadoni": 145, "iqmfakeapollo": 145, "gate_set": 145, "1qxyi": 145, "2qxycz": 145, "2qxycz_extend": 145, "3qxycz": 145, "krau": 145, "reconstruct": 145, "rho": 145, "k_i": 145, "trigger": 145, "diamond": 145, "low": 145, "benefit": 145, "less": [145, 147], "captur": 145, "domin": 145, "sourc": [145, 152, 153], "bootstrap_sampl": 145, "trustworthi": 145, "veri": 145, "consum": 145, "minimal_1q_gst": 145, "minimal_2q_gst": 145, "Be": 145, "extra": 145, "871": [145, 148], "20it": 145, "621": 145, "converg": 145, "criterion": 145, "53e": 145, "uncertaintit": 145, "restult": 145, "idl": 145, "qb1": 145, "99693": 145, "00703": 145, "unitar": 145, "98781": 145, "rx": 145, "99918": 145, "0013": 145, "99674": 145, "ry": 145, "99509": 145, "01332": 145, "98074": 145, "tvd": 145, "00698": 145, "03296": 145, "povm": 145, "dist": 145, "00601": 145, "04366": 145, "matric": 145, "results_layout_": 145, "dict_kei": 145, "raw_kraus_oper": 145, "raw_gat": 145, "raw_povm": 145, "raw_stat": 145, "gauge_opt_g": 145, "gauge_opt_gates_pauli_basi": 145, "gauge_opt_povm": 145, "gauge_opt_st": 145, "main_mgst_tim": 145, "gauge_optimization_tim": 145, "choi_ev": 145, "full_metr": 145, "save": 145, "raw": 145, "gaug": 145, "frame": 145, "3d": 145, "raw_result": 145, "array_str": 145, "precis": 145, "suppress_smal": 145, "995": [145, 148], "002": [145, 146, 148], "002j": 145, "003j": 145, "004j": 145, "998": 145, "These": 145, "diplai": 145, "disc": 145, "superoper": 145, "represent": 145, "sinlg": 145, "g_": 145, "p_i": 145, "p_j": 145, "layout_": 145, "_gate_metr": 145, "_choi_eigenvalu": 145, "_other_metr": 145, "_process_matrix_0": 145, "_process_matrix_1": 145, "_process_matrix_2": 145, "_spam_matrices_r": 145, "_spam_matrices_imag": 145, "altern": 145, "ourselv": 145, "xyi": 145, "instruct": 145, "gate_list": 145, "1e": 145, "indentif": 145, "gate_label": 145, "\u03c0": [145, 150], "custom_1q_gst": 145, "verbos": 145, "806": [145, 149], "61": 145, "803": 145, "42e": 145, "008j": 145, "989": [145, 146, 148], "001j": 145, "553": 146, "324": [146, 148], "964": 146, "064": 146, "065": 146, "294": 146, "664": 146, "107": 146, "982": [146, 147], "058": [146, 148], "538": [146, 148], "120": [146, 148], "121": [146, 148], "522": [146, 147], "103": [146, 148], "744": [146, 148], "780": [146, 147, 149], "818": 146, "819": [146, 147], "133": [146, 147], "286": 146, "287": 146, "376": [146, 148], "583": 146, "9975073376613797": 146, "9957157328789242": 146, "9976959612386156": 146, "9957310522299055": 146, "752861001879659e": 146, "028839025109517e": 146, "64196778583225e": 146, "243656712565855e": 146, "know": 146, "679": [146, 147, 148], "118": [146, 148], "820": [146, 148], "915": 146, "577": 146, "148": [146, 148], "874": [146, 148], "951": [146, 148], "205": [146, 148], "380": 146, "485": 146, "685": [146, 148], "9798030906041997": 146, "9431232937255942": 146, "9840858225184934": 146, "945382422883015": 146, "593": [146, 148], "885": [146, 148], "883": [146, 147, 148], "038": 146, "215": [146, 147], "282": 146, "348": 146, "394": 146, "395": [146, 148], "492": 146, "675": 146, "752": [146, 148], "932": 146, "933": 146, "158": [146, 148], "289": [146, 148], "436": [146, 148], "566": 146, "9344679810705316": 146, "9463377694591251": 146, "9267928870925659": 146, "943379008472002": 146, "892": 147, "125": [147, 148], "589": 147, "646": 147, "597": [147, 148], "702": 147, "244": 147, "996": 147, "598": [147, 148], "867": [147, 148], "117": 147, "271": [147, 148], "448": [147, 148], "449": [147, 148], "150": [147, 148], "450": [147, 148], "605": 147, "184": 147, "342": 147, "343": 147, "422": [147, 148], "134": 147, "456": 147, "529": [147, 148], "attr_kei": [147, 149, 150], "depth_2": 147, "14302134513855": 147, "007565975189208984": 147, "06883907318115234": 147, "f8d9d789": 147, "0e9a": 147, "4086": 147, "ab36": 147, "685064a7b66": 147, "depth_4": 147, "0004930496215820312": 147, "0007040500640869141": 147, "87e367b7": 147, "c3ae": 147, "4457": 147, "8a2d": 147, "7b169c528033": 147, "depth_8": 147, "0004889965057373047": 147, "0005979537963867188": 147, "d84330c9": 147, "101f": 147, "40ff": 147, "bea8": 147, "f5e4c0b41527": 147, "depth_16": 147, "0004627704620361328": 147, "0006148815155029297": 147, "1f58b4a0": 147, "fb16": 147, "4d12": 147, "a9e8": 147, "c9263da52418": 147, "depth_32": 147, "00047278404235839844": 147, "0005419254302978516": 147, "4e43834b": 147, "5694": 147, "4c6d": 147, "8a83": 147, "796913d67e40": 147, "depth_64": 147, "000469207763671875": 147, "0005609989166259766": 147, "036e1dd": 147, "ca95": 147, "42a1": 147, "ab68": 147, "30a243f6b4ba": 147, "depth_128": 147, "0004668235778808594": 147, "0005328655242919922": 147, "13a59ca8": 147, "2ab0": 147, "4de8": 147, "a643": 147, "5b3f318f03d4": 147, "depth_256": 147, "0004749298095703125": 147, "e673defd": 147, "039c": 147, "4c37": 147, "9ef3": 147, "d4734436f39a": 147, "depth_512": 147, "0005099773406982422": 147, "0005548000335693359": 147, "d83ac439": 147, "2929": 147, "4d78": 147, "b52b": 147, "f297873c3e44": 147, "9710221314803044": 147, "001462493086363885": 147, "9473471466489307": 147, "00285118172031131": 147, "xxxxxxxxxxxxxx": 148, "put": 148, "run0_qscor": 148, "549": 148, "594": 148, "680": 148, "622": 148, "772": 148, "869": 148, "898": 148, "462": 148, "563": 148, "027": 148, "235": 148, "602": 148, "928": 148, "193": 148, "353": 148, "494": 148, "539": 148, "568": 148, "696": 148, "167": 148, "293": 148, "472": 148, "505": 148, "632": 148, "778": 148, "851": 148, "210": [148, 149], "275": 148, "326": 148, "540": 148, "760": 148, "922": 148, "129": [148, 154], "302": 148, "506": 148, "683": 148, "016": 148, "141": 148, "478": 148, "056": 148, "135": 148, "493": 148, "528": 148, "599": 148, "687": 148, "047": 148, "228": 148, "317": 148, "452": 148, "759": 148, "809": 148, "957": 148, "913": 148, "183": 148, "430": 148, "480": 148, "716": 148, "926": 148, "974": 148, "052": 148, "793": 148, "847": 148, "419": 148, "850": 148, "903": 148, "081": 148, "474": 148, "507": 148, "564": 148, "711": 148, "823": 148, "189": 148, "273": [148, 150], "327": 148, "503": 148, "590": 148, "709": 148, "363": 148, "473": 148, "669": 148, "018": 148, "479": 148, "830": 148, "914": 148, "139": 148, "421": 148, "535": 148, "585": 148, "617": 148, "934": 148, "236": 148, "335": 148, "392": 148, "551": 148, "699": 148, "827": 148, "917": 148, "534": 148, "633": 148, "946": 148, "980": 148, "032": [148, 149], "209": 148, "340": 148, "337": 148, "310": 148, "203": 148, "258": 148, "318": 148, "124": 148, "226": 148, "956": 148, "017": 148, "053": 148, "137": 148, "result0_qscor": 148, "4370": 148, "4700": 148, "6695": 148, "3692": 148, "5902": 148, "3404": 148, "5068": 148, "5085": 148, "4374": 148, "8942": 148, "43697610073325965": 148, "09963324394097106": 148, "6694825328517715": 148, "07553199096996285": 148, "5901951757699432": 148, "04806723107119834": 148, "5067731707198324": 148, "03884606517763287": 148, "4373922810576933": 148, "034249084355823": 148, "217": 149, "082": 149, "rem_quasidistribut": [149, 150], "time_batch": [149, 150], "cumulative_average_heavy_output_prob": [149, 150], "cumulative_stddev_heavy_output_prob": [149, 150], "rem_cumulative_average_heavy_output_prob": [149, 150], "rem_cumulative_stddev_heavy_output_prob": [149, 150], "rem_heavy_output_prob": [149, 150], "60546875": 149, "71875": 149, "578125": 149, "74609375": 149, "6328125": 149, "546875": 149, "56640625": 149, "76953125": 149, "75390625": 149, "67578125": 149, "6171875": 149, "55078125": 149, "64453125": 149, "6875": 149, "7109375": 149, "82421875": 149, "76171875": 149, "6484375": 149, "6015625": 149, "73828125": 149, "63671875": 149, "69140625": 149, "61328125": 149, "734375": 149, "57421875": 149, "6953125": 149, "55859375": 149, "69921875": 149, "609375": 149, "671875": 149, "77734375": 149, "6796875": 149, "62890625": 149, "6640625": 149, "66796875": 149, "62109375": 149, "703125": 149, "68359375": 149, "58984375": 149, "71484375": 149, "59375": 149, "79296875": 149, "66015625": 149, "65234375": 149, "59765625": 149, "65625": 149, "84765625": 149, "5859375": 149, "5625": 149, "72265625": 149, "640625": 149, "58203125": 149, "54296875": 149, "8203125": 149, "78515625": 149, "7265625": 149, "53515625": 149, "5703125": 149, "5546875": 149, "5390625": 149, "828125": 149, "80859375": 149, "765625": 149, "81640625": 149, "5234375": 149, "75": 149, "73046875": 149, "87890625": 149, "7890625": 149, "7734375": 149, "7421875": 149, "70703125": 149, "50390625": 149, "7578125": 149, "52734375": 149, "78125": 149, "8125": 149, "average_heavy_output_prob": [149, 150], "649203125": 149, "021341903733745705": 149, "672703125": 149, "020984452845629994": 149, "rem_average_heavy_output_prob": [149, 150], "67954478782619": 149, "020869291754367154": 149, "rem_is_succes": [149, 150], "rem_qv_result": [149, 150], "710149650958595": 149, "020289757228807877": 149, "vanilla_4_qubits_": [149, 150], "vanilla_rem_4_qubits_": 149, "Or": [149, 150], "onc": [149, 150, 154], "668": 150, "pedrofigueroaromero": 150, "anaconda3": 150, "190": 150, "server": 150, "e48420cb": 150, "30dc": 150, "4274": 150, "9d7d": 150, "e5fffa68f73a": 150, "7404ae11": 150, "823a": 150, "4e66": 150, "b2c4": 150, "41361cf10c69": 150, "untranspiled_circuit": 150, "q_0": 150, "q_1": 150, "q_2": 150, "mea": 150, "48526": 150, "79781": 150, "58665": 150, "3705": 150, "1471": 150, "1775": 150, "1521": 150, "q_3": 150, "q_4": 150, "73475": 150, "1344": 150, "q_5": 150, "q_6": 150, "30103": 150, "7711": 150, "3108": 150, "6909": 150, "6665": 150, "65249": 150, "8837": 150, "24328": 150, "3169": 150, "6809": 150, "71478125": 150, "020192524094250205": 150, "7261292473074281": 150, "019943197512544274": 150, "vanilla_3_qubits_": 150, "vanilla_rem_3_qubits_": 150, "collect": 151, "demonstr": 151, "rest": 151, "summari": [151, 152], "tomographi": [151, 152, 154], "releas": 152, "date": [152, 153], "finland": 152, "tool": [152, 154], "changelog": 152, "search": 152, "page": [152, 153], "januari": 153, "2004": 153, "AND": 153, "FOR": 153, "reproduct": 153, "shall": 153, "licensor": 153, "owner": 153, "entiti": 153, "author": 153, "grant": 153, "legal": 153, "power": 153, "direct": 153, "indirect": 153, "caus": 153, "contract": 153, "ownership": 153, "fifti": 153, "percent": 153, "outstand": 153, "iii": 153, "benefici": 153, "exercis": 153, "mechan": 153, "transform": 153, "translat": 153, "convers": 153, "media": 153, "authorship": 153, "attach": 153, "appendix": 153, "editori": 153, "revis": 153, "elabor": 153, "whole": 153, "remain": 153, "mere": 153, "link": 153, "bind": 153, "interfac": 153, "thereof": 153, "contribut": 153, "intention": 153, "inclus": 153, "behalf": 153, "electron": 153, "verbal": 153, "mail": 153, "issu": 153, "track": 153, "discuss": 153, "exclud": 153, "conspicu": 153, "Not": 153, "contributor": 153, "whom": 153, "been": 153, "receiv": 153, "incorpor": 153, "subject": 153, "herebi": 153, "perpetu": 153, "worldwid": 153, "charg": 153, "royalti": 153, "free": 153, "irrevoc": 153, "reproduc": 153, "publicli": 153, "sublicens": 153, "patent": 153, "sell": 153, "transfer": 153, "claim": 153, "necessarili": 153, "infring": 153, "alon": 153, "institut": 153, "litig": 153, "counterclaim": 153, "lawsuit": 153, "alleg": 153, "contributori": 153, "termin": [153, 154], "redistribut": 153, "medium": 153, "meet": 153, "recipi": 153, "carri": 153, "promin": 153, "retain": 153, "trademark": 153, "pertain": 153, "readabl": 153, "along": 153, "wherev": 153, "third": 153, "parti": 153, "normal": 153, "appear": 153, "content": 153, "alongsid": 153, "addendum": 153, "constru": 153, "compli": 153, "explicitli": 153, "notwithstand": 153, "noth": 153, "herein": 153, "supersed": 153, "agreement": 153, "regard": 153, "trade": 153, "servic": [153, 154], "reason": 153, "customari": 153, "describ": 153, "disclaim": 153, "merchant": 153, "particular": 153, "respons": 153, "appropri": 153, "risk": 153, "liabil": 153, "event": 153, "tort": 153, "neglig": 153, "deliber": [153, 154], "grossli": 153, "liabl": 153, "damag": 153, "special": 153, "incident": 153, "consequenti": 153, "charact": 153, "aris": 153, "inabl": 153, "loss": 153, "goodwil": 153, "stoppag": 153, "failur": 153, "malfunct": 153, "commerci": 153, "even": 153, "advis": 153, "fee": 153, "indemn": 153, "oblig": 153, "indemnifi": 153, "defend": 153, "hold": 153, "harmless": 153, "incur": 153, "assert": 153, "boilerpl": 153, "enclos": 153, "bracket": 153, "comment": 153, "syntax": 153, "easier": 153, "archiv": 153, "repositori": [153, 154], "licenc": 153, "src": 153, "raphael": 153, "brieger": 153, "ingo": 153, "roth": 153, "martin": 153, "kliesch": 153, "comprehens": 154, "modular": 154, "easi": 154, "042311": 154, "lett": 154, "080505": 154, "prx": 154, "2023": 154, "150502": 154, "2022": 154, "holist": 154, "032328": 154, "0712": 154, "0921": 154, "2007": 154, "ieee": 154, "tran": 154, "eng": 154, "split": 154, "legaci": 154, "wrap": 154, "benchmarkexperi": 154, "handl": 154, "uv": 154, "highli": 154, "practic": 154, "With": 154, "machin": 154, "venv": 154, "read": 154, "prompt": 154, "suppli": 154, "txt": 154, "lock": 154, "directli": 154, "repo": 154, "pypi": 154, "lint": 154, "cicd": 154, "clone": 154, "directori": 154, "edit": 154, "docbuild": 154, "pyproject": 154, "toml": 154, "commit": 154, "upgrad": 154, "transit": 154, "cloud": 154, "prem": 154, "platform": 154, "authent": 154, "example_irb": 154, "example_experi": 154, "setup": 154, "weekli": 154, "daili": 154, "gitlab": 154, "scheduled_experi": 154}, "objects": {"iqm": [[1, 0, 0, "-", "benchmarks"]], "iqm.benchmarks": [[2, 0, 0, "-", "benchmark"], [5, 0, 0, "-", "benchmark_definition"], [15, 0, 0, "-", "circuit_containers"], [19, 0, 0, "-", "entanglement"], [34, 0, 0, "-", "logging_config"], [35, 0, 0, "-", "optimization"], [48, 0, 0, "-", "quantum_volume"], [67, 0, 0, "-", "randomized_benchmarking"], [111, 0, 0, "-", "readout_mitigation"], [115, 0, 0, "-", "utils"]], "iqm.benchmarks.benchmark": [[3, 1, 1, "", "BenchmarkBase"], [4, 1, 1, "", "BenchmarkConfigurationBase"]], "iqm.benchmarks.benchmark.BenchmarkBase": [[3, 2, 1, "", "check_requirements"], [3, 2, 1, "", "execute_full_benchmark"], [3, 2, 1, "", "generate_requirements"], [3, 2, 1, "", "name"]], "iqm.benchmarks.benchmark.BenchmarkConfigurationBase": [[4, 3, 1, "", "benchmark"], [4, 3, 1, "", "calset_id"], [4, 3, 1, "", "max_gates_per_batch"], [4, 3, 1, "", "model_computed_fields"], [4, 3, 1, "", "model_config"], [4, 3, 1, "", "model_fields"], [4, 3, 1, "", "physical_layout"], [4, 3, 1, "", "routing_method"], [4, 3, 1, "", "shots"], [4, 3, 1, "", "use_DD"]], "iqm.benchmarks.benchmark_definition": [[6, 1, 1, "", "Benchmark"], [7, 1, 1, "", "BenchmarkAnalysisResult"], [8, 1, 1, "", "BenchmarkObservation"], [9, 1, 1, "", "BenchmarkObservationIdentifier"], [10, 1, 1, "", "BenchmarkRunResult"], [11, 5, 1, "", "add_counts_to_dataset"], [12, 5, 1, "", "default_analysis_function"], [13, 5, 1, "", "merge_datasets_dac"], [14, 5, 1, "", "show_figure"]], "iqm.benchmarks.benchmark_definition.Benchmark": [[6, 2, 1, "", "analysis_function"], [6, 2, 1, "", "analyze"], [6, 2, 1, "", "execute"], [6, 2, 1, "", "name"], [6, 2, 1, "", "run"]], "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult": [[7, 2, 1, "", "from_run_result"], [7, 2, 1, "", "plot"], [7, 2, 1, "", "plot_all"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservation": [[8, 3, 1, "", "identifier"], [8, 3, 1, "", "name"], [8, 3, 1, "", "uncertainty"], [8, 3, 1, "", "value"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier": [[9, 3, 1, "", "qubit_indices"], [9, 4, 1, "", "string_identifier"]], "iqm.benchmarks.circuit_containers": [[16, 1, 1, "", "BenchmarkCircuit"], [17, 1, 1, "", "CircuitGroup"], [18, 1, 1, "", "Circuits"]], "iqm.benchmarks.circuit_containers.BenchmarkCircuit": [[16, 3, 1, "", "circuit_groups"], [16, 2, 1, "", "get_circuit_group_by_name"], [16, 4, 1, "", "group_names"], [16, 4, 1, "", "groups"], [16, 3, 1, "", "name"], [16, 4, 1, "", "qubit_indices"], [16, 4, 1, "", "qubit_layouts"], [16, 4, 1, "", "qubit_layouts_by_index"], [16, 4, 1, "", "qubits"]], "iqm.benchmarks.circuit_containers.CircuitGroup": [[17, 2, 1, "", "add_circuit"], [17, 4, 1, "", "circuit_names"], [17, 3, 1, "", "circuits"], [17, 2, 1, "", "get_circuits_by_name"], [17, 3, 1, "", "name"], [17, 4, 1, "", "qubit_layouts"], [17, 4, 1, "", "qubit_layouts_by_index"], [17, 4, 1, "", "qubits"]], "iqm.benchmarks.circuit_containers.Circuits": [[18, 3, 1, "", "benchmark_circuits"], [18, 2, 1, "", "get_benchmark_circuits_by_name"]], "iqm.benchmarks.entanglement": [[20, 0, 0, "-", "ghz"]], "iqm.benchmarks.entanglement.ghz": [[21, 1, 1, "", "GHZBenchmark"], [22, 1, 1, "", "GHZConfiguration"], [23, 5, 1, "", "fidelity_analysis"], [24, 5, 1, "", "fidelity_ghz_coherences"], [25, 5, 1, "", "fidelity_ghz_randomized_measurements"], [26, 5, 1, "", "generate_ghz_linear"], [27, 5, 1, "", "generate_ghz_log_cruz"], [28, 5, 1, "", "generate_ghz_log_mooney"], [29, 5, 1, "", "generate_ghz_spanning_tree"], [30, 5, 1, "", "generate_ghz_star"], [31, 5, 1, "", "get_cx_map"], [32, 5, 1, "", "get_edges"], [33, 5, 1, "", "plot_fidelities"]], "iqm.benchmarks.entanglement.ghz.GHZBenchmark": [[21, 2, 1, "", "add_configuration_to_dataset"], [21, 2, 1, "", "analysis_function"], [21, 2, 1, "", "append_rms"], [21, 2, 1, "", "execute"], [21, 2, 1, "", "generate_coherence_meas_circuits"], [21, 2, 1, "", "generate_native_ghz"], [21, 2, 1, "", "generate_readout_circuit"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration": [[22, 3, 1, "", "benchmark"], [22, 3, 1, "", "cal_url"], [22, 3, 1, "", "custom_qubits_array"], [22, 3, 1, "", "fidelity_routine"], [22, 3, 1, "", "mit_shots"], [22, 3, 1, "", "model_computed_fields"], [22, 3, 1, "", "model_config"], [22, 3, 1, "", "model_fields"], [22, 3, 1, "", "num_RMs"], [22, 3, 1, "", "optimize_sqg"], [22, 3, 1, "", "qiskit_optim_level"], [22, 3, 1, "", "qubit_counts"], [22, 3, 1, "", "rem"], [22, 3, 1, "", "state_generation_routine"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration.iqm.qiskit_iqm.iqm_transpilation": [[22, 3, 1, "", "optimize_single_qubit_gates"]], "iqm.benchmarks.optimization": [[36, 0, 0, "-", "qscore"]], "iqm.benchmarks.optimization.qscore": [[37, 1, 1, "", "QScoreBenchmark"], [38, 1, 1, "", "QScoreConfiguration"], [39, 5, 1, "", "calculate_optimal_angles_for_QAOA_p1"], [40, 5, 1, "", "compute_expectation_value"], [41, 5, 1, "", "create_objective_function"], [42, 5, 1, "", "cut_cost_function"], [43, 5, 1, "", "get_optimal_angles"], [44, 5, 1, "", "is_successful"], [45, 5, 1, "", "plot_approximation_ratios"], [46, 5, 1, "", "qscore_analysis"], [47, 5, 1, "", "run_QAOA"]], "iqm.benchmarks.optimization.qscore.QScoreBenchmark": [[37, 2, 1, "", "add_all_meta_to_dataset"], [37, 2, 1, "", "analysis_function"], [37, 2, 1, "", "choose_qubits_custom"], [37, 2, 1, "", "choose_qubits_naive"], [37, 2, 1, "", "execute"], [37, 2, 1, "", "generate_maxcut_ansatz"]], "iqm.benchmarks.optimization.qscore.QScoreConfiguration": [[38, 3, 1, "", "REM"], [38, 3, 1, "", "benchmark"], [38, 3, 1, "", "choose_qubits_routine"], [38, 3, 1, "", "custom_qubits_array"], [38, 3, 1, "", "max_num_nodes"], [38, 3, 1, "", "min_num_nodes"], [38, 3, 1, "", "min_num_qubits"], [38, 3, 1, "", "mit_shots"], [38, 3, 1, "", "model_computed_fields"], [38, 3, 1, "", "model_config"], [38, 3, 1, "", "model_fields"], [38, 3, 1, "", "num_instances"], [38, 3, 1, "", "num_qaoa_layers"], [38, 3, 1, "", "optimize_sqg"], [38, 3, 1, "", "qiskit_optim_level"], [38, 3, 1, "", "qpu_topology"], [38, 3, 1, "", "seed"], [38, 3, 1, "", "use_classically_optimized_angles"], [38, 3, 1, "", "use_virtual_node"]], "iqm.benchmarks.quantum_volume": [[49, 0, 0, "-", "clops"], [55, 0, 0, "-", "quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[50, 1, 1, "", "CLOPSBenchmark"], [51, 1, 1, "", "CLOPSConfiguration"], [52, 5, 1, "", "clops_analysis"], [53, 5, 1, "", "plot_times"], [54, 5, 1, "", "retrieve_clops_elapsed_times"]], "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark": [[50, 2, 1, "", "add_all_meta_to_dataset"], [50, 2, 1, "", "analysis_function"], [50, 2, 1, "", "append_parameterized_unitary"], [50, 2, 1, "", "assign_random_parameters_to_all"], [50, 2, 1, "", "clops_cycle"], [50, 2, 1, "", "execute"], [50, 2, 1, "", "generate_circuit_list"], [50, 2, 1, "", "generate_random_parameters"], [50, 2, 1, "", "generate_single_circuit"], [50, 2, 1, "", "generate_transpiled_clops_templates"]], "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration": [[51, 3, 1, "", "benchmark"], [51, 3, 1, "", "clops_h_bool"], [51, 3, 1, "", "model_computed_fields"], [51, 3, 1, "", "model_config"], [51, 3, 1, "", "model_fields"], [51, 3, 1, "", "num_circuits"], [51, 3, 1, "", "num_shots"], [51, 3, 1, "", "num_updates"], [51, 3, 1, "", "optimize_sqg"], [51, 3, 1, "", "physical_layout"], [51, 3, 1, "", "qiskit_optim_level"], [51, 3, 1, "", "qubits"], [51, 3, 1, "", "routing_method"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[56, 1, 1, "", "QuantumVolumeBenchmark"], [57, 1, 1, "", "QuantumVolumeConfiguration"], [58, 5, 1, "", "compute_heavy_output_probabilities"], [59, 5, 1, "", "cumulative_hop"], [60, 5, 1, "", "cumulative_std"], [61, 5, 1, "", "get_ideal_heavy_outputs"], [62, 5, 1, "", "get_rem_hops"], [63, 5, 1, "", "heavy_projector"], [64, 5, 1, "", "is_successful"], [65, 5, 1, "", "plot_hop_threshold"], [66, 5, 1, "", "qv_analysis"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark": [[56, 2, 1, "", "add_all_circuits_to_dataset"], [56, 2, 1, "", "add_all_meta_to_dataset"], [56, 2, 1, "", "analysis_function"], [56, 2, 1, "", "execute"], [56, 2, 1, "", "generate_circuit_list"], [56, 2, 1, "", "generate_single_circuit"], [56, 2, 1, "", "get_rem_quasidistro"], [56, 2, 1, "", "submit_single_qv_job"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration": [[57, 3, 1, "", "benchmark"], [57, 3, 1, "", "choose_qubits_routine"], [57, 3, 1, "", "custom_qubits_array"], [57, 3, 1, "", "mit_shots"], [57, 3, 1, "", "model_computed_fields"], [57, 3, 1, "", "model_config"], [57, 3, 1, "", "model_fields"], [57, 3, 1, "", "num_circuits"], [57, 3, 1, "", "num_sigmas"], [57, 3, 1, "", "optimize_sqg"], [57, 3, 1, "", "physical_layout"], [57, 3, 1, "", "qiskit_optim_level"], [57, 3, 1, "", "rem"], [57, 3, 1, "", "routing_method"]], "iqm.benchmarks.randomized_benchmarking": [[68, 0, 0, "-", "clifford_rb"], [73, 0, 0, "-", "interleaved_rb"], [78, 0, 0, "-", "mirror_rb"], [88, 0, 0, "-", "multi_lmfit"], [93, 0, 0, "-", "randomized_benchmarking_common"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[69, 0, 0, "-", "clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[70, 1, 1, "", "CliffordRBConfiguration"], [71, 1, 1, "", "CliffordRandomizedBenchmarking"], [72, 5, 1, "", "clifford_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration": [[70, 3, 1, "", "benchmark"], [70, 3, 1, "", "model_computed_fields"], [70, 3, 1, "", "model_config"], [70, 3, 1, "", "model_fields"], [70, 3, 1, "", "num_circuit_samples"], [70, 3, 1, "", "parallel_execution"], [70, 3, 1, "", "qubits_array"], [70, 3, 1, "", "sequence_lengths"], [70, 3, 1, "", "shots"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking": [[71, 2, 1, "", "add_all_circuits_to_dataset"], [71, 2, 1, "", "add_all_metadata_to_dataset"], [71, 2, 1, "", "analysis_function"], [71, 2, 1, "", "execute"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[74, 0, 0, "-", "interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[75, 1, 1, "", "InterleavedRBConfiguration"], [76, 1, 1, "", "InterleavedRandomizedBenchmarking"], [77, 5, 1, "", "interleaved_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration": [[75, 3, 1, "", "interleaved_gate"], [75, 3, 1, "", "interleaved_gate_params"], [75, 3, 1, "", "model_computed_fields"], [75, 3, 1, "", "model_config"], [75, 3, 1, "", "model_fields"], [75, 3, 1, "", "num_circuit_samples"], [75, 3, 1, "", "parallel_execution"], [75, 3, 1, "", "qubits_array"], [75, 3, 1, "", "sequence_lengths"], [75, 3, 1, "", "shots"], [75, 3, 1, "", "simultaneous_fit"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking": [[76, 2, 1, "", "add_all_circuits_to_dataset"], [76, 2, 1, "", "add_all_meta_to_dataset"], [76, 2, 1, "", "analysis_function"], [76, 2, 1, "", "execute"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[79, 0, 0, "-", "mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[80, 1, 1, "", "MirrorRBConfiguration"], [81, 1, 1, "", "MirrorRandomizedBenchmarking"], [82, 5, 1, "", "compute_polarizations"], [83, 5, 1, "", "edge_grab"], [84, 5, 1, "", "generate_fixed_depth_mrb_circuits"], [85, 5, 1, "", "generate_pauli_dressed_mrb_circuits"], [86, 5, 1, "", "list_to_numcircuit_times_numpauli_matrix"], [87, 5, 1, "", "mrb_analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration": [[80, 3, 1, "", "benchmark"], [80, 3, 1, "", "density_2q_gates"], [80, 3, 1, "", "depths_array"], [80, 3, 1, "", "model_computed_fields"], [80, 3, 1, "", "model_config"], [80, 3, 1, "", "model_fields"], [80, 3, 1, "", "num_circuit_samples"], [80, 3, 1, "", "num_pauli_samples"], [80, 3, 1, "", "qiskit_optim_level"], [80, 3, 1, "", "qubits_array"], [80, 3, 1, "", "routing_method"], [80, 3, 1, "", "shots"], [80, 3, 1, "", "two_qubit_gate_ensemble"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking": [[81, 2, 1, "", "add_all_meta_to_dataset"], [81, 2, 1, "", "analysis_function"], [81, 2, 1, "", "execute"], [81, 2, 1, "", "submit_single_mrb_job"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[89, 5, 1, "", "create_multi_dataset_params"], [90, 5, 1, "", "eval_func_single_dataset"], [91, 5, 1, "", "get_param_names_from_func_signature"], [92, 5, 1, "", "multi_dataset_residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[94, 5, 1, "", "compute_inverse_clifford"], [95, 5, 1, "", "estimate_survival_probabilities"], [96, 5, 1, "", "exponential_rb"], [97, 5, 1, "", "fit_decay_lmfit"], [98, 5, 1, "", "generate_all_rb_circuits"], [99, 5, 1, "", "generate_fixed_depth_parallel_rb_circuits"], [100, 5, 1, "", "generate_random_clifford_seq_circuits"], [101, 5, 1, "", "get_survival_probabilities"], [102, 5, 1, "", "import_native_gate_cliffords"], [103, 5, 1, "", "lmfit_minimizer"], [104, 5, 1, "", "plot_rb_decay"], [105, 5, 1, "", "relabel_qubits_array_from_zero"], [106, 5, 1, "", "submit_parallel_rb_job"], [107, 5, 1, "", "submit_sequential_rb_jobs"], [108, 5, 1, "", "survival_probabilities_parallel"], [109, 5, 1, "", "validate_irb_gate"], [110, 5, 1, "", "validate_rb_qubits"]], "iqm.benchmarks.readout_mitigation": [[112, 1, 1, "", "M3IQM"], [113, 5, 1, "", "apply_readout_error_mitigation"], [114, 5, 1, "", "readout_error_m3"]], "iqm.benchmarks.readout_mitigation.M3IQM": [[112, 2, 1, "", "cals_from_system"]], "iqm.benchmarks.utils": [[116, 1, 1, "", "GraphPositions"], [117, 5, 1, "", "bootstrap_counts"], [118, 5, 1, "", "count_2q_layers"], [119, 5, 1, "", "count_native_gates"], [120, 5, 1, "", "extract_fidelities"], [121, 5, 1, "", "get_iqm_backend"], [122, 5, 1, "", "marginal_distribution"], [123, 5, 1, "", "perform_backend_transpilation"], [124, 5, 1, "", "plot_layout_fidelity_graph"], [125, 5, 1, "", "reduce_to_active_qubits"], [126, 5, 1, "", "retrieve_all_counts"], [127, 5, 1, "", "retrieve_all_job_metadata"], [128, 5, 1, "", "set_coupling_map"], [129, 5, 1, "", "sort_batches_by_final_layout"], [130, 5, 1, "", "submit_execute"], [131, 5, 1, "", "timeit"], [132, 5, 1, "", "xrvariable_to_counts"]], "iqm.benchmarks.utils.GraphPositions": [[116, 2, 1, "", "create_positions"], [116, 3, 1, "", "deneb_positions"], [116, 3, 1, "", "garnet_positions"], [116, 3, 1, "", "predefined_stations"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": 0, "iqm": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 138, 139, 140, 141, 142, 144, 147, 148, 149, 150, 152, 154], "benchmark": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 152, 154], "benchmarkbas": 3, "benchmarkconfigurationbas": 4, "benchmark_definit": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "benchmarkanalysisresult": 7, "benchmarkobserv": 8, "benchmarkobservationidentifi": 9, "benchmarkrunresult": 10, "add_counts_to_dataset": 11, "default_analysis_funct": 12, "merge_datasets_dac": 13, "show_figur": 14, "circuit_contain": [15, 16, 17, 18], "benchmarkcircuit": 16, "circuitgroup": 17, "circuit": [18, 138, 139, 141, 150], "entangl": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "ghz": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 138, 139, 142, 143, 144], "ghzbenchmark": 21, "ghzconfigur": 22, "fidelity_analysi": 23, "fidelity_ghz_coher": 24, "fidelity_ghz_randomized_measur": 25, "generate_ghz_linear": 26, "generate_ghz_log_cruz": 27, "generate_ghz_log_moonei": 28, "generate_ghz_spanning_tre": 29, "generate_ghz_star": 30, "get_cx_map": 31, "get_edg": 32, "plot_fidel": 33, "logging_config": 34, "optim": [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "qscore": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 142, 148], "qscorebenchmark": 37, "qscoreconfigur": 38, "calculate_optimal_angles_for_qaoa_p1": 39, "compute_expectation_valu": 40, "create_objective_funct": 41, "cut_cost_funct": 42, "get_optimal_angl": 43, "is_success": [44, 64], "plot_approximation_ratio": 45, "qscore_analysi": 46, "run_qaoa": 47, "quantum_volum": [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "clop": [49, 50, 51, 52, 53, 54, 138, 139, 141, 142], "clopsbenchmark": 50, "clopsconfigur": 51, "clops_analysi": 52, "plot_tim": 53, "retrieve_clops_elapsed_tim": 54, "quantumvolumebenchmark": 56, "quantumvolumeconfigur": 57, "compute_heavy_output_prob": 58, "cumulative_hop": 59, "cumulative_std": 60, "get_ideal_heavy_output": 61, "get_rem_hop": 62, "heavy_projector": 63, "plot_hop_threshold": 65, "qv_analysi": 66, "randomized_benchmark": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110], "clifford_rb": [68, 69, 70, 71, 72], "cliffordrbconfigur": 70, "cliffordrandomizedbenchmark": 71, "clifford_rb_analysi": 72, "interleaved_rb": [73, 74, 75, 76, 77], "interleavedrbconfigur": 75, "interleavedrandomizedbenchmark": 76, "interleaved_rb_analysi": 77, "mirror_rb": [78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "mirrorrbconfigur": 80, "mirrorrandomizedbenchmark": 81, "compute_polar": 82, "edge_grab": 83, "generate_fixed_depth_mrb_circuit": 84, "generate_pauli_dressed_mrb_circuit": 85, "list_to_numcircuit_times_numpauli_matrix": 86, "mrb_analysi": 87, "multi_lmfit": [88, 89, 90, 91, 92], "create_multi_dataset_param": 89, "eval_func_single_dataset": 90, "get_param_names_from_func_signatur": 91, "multi_dataset_residu": 92, "randomized_benchmarking_common": [93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110], "compute_inverse_clifford": 94, "estimate_survival_prob": 95, "exponential_rb": 96, "fit_decay_lmfit": 97, "generate_all_rb_circuit": 98, "generate_fixed_depth_parallel_rb_circuit": 99, "generate_random_clifford_seq_circuit": 100, "get_survival_prob": 101, "import_native_gate_clifford": 102, "lmfit_minim": 103, "plot_rb_decai": 104, "relabel_qubits_array_from_zero": 105, "submit_parallel_rb_job": 106, "submit_sequential_rb_job": 107, "survival_probabilities_parallel": 108, "validate_irb_g": 109, "validate_rb_qubit": 110, "readout_mitig": [111, 112, 113, 114], "m3iqm": 112, "apply_readout_error_mitig": 113, "readout_error_m3": 114, "util": [115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132], "graphposit": 116, "bootstrap_count": 117, "count_2q_lay": 118, "count_native_g": 119, "extract_fidel": 120, "get_iqm_backend": 121, "marginal_distribut": 122, "perform_backend_transpil": 123, "plot_layout_fidelity_graph": 124, "reduce_to_active_qubit": 125, "retrieve_all_count": 126, "retrieve_all_job_metadata": 127, "set_coupling_map": 128, "sort_batches_by_final_layout": 129, "submit_execut": 130, "timeit": 131, "xrvariable_to_count": 132, "changelog": 133, "version": 133, "2": [133, 135], "24": 133, "23": 133, "22": 133, "21": 133, "20": 133, "19": 133, "18": 133, "17": 133, "16": 133, "15": 133, "14": 133, "13": 133, "12": 133, "11": 133, "10": 133, "9": 133, "8": 133, "7": 133, "6": 133, "5": 133, "4": 133, "3": 133, "1": [133, 139], "0": [133, 139], "develop": [134, 154], "qubit": [135, 139], "clifford": [135, 138, 140, 142], "group": 135, "decomposit": 135, "gener": [135, 141, 147, 149, 150], "1q": [135, 146], "2q": [135, 146], "dump": 135, "pickl": 135, "file": 135, "load": 135, "count": 135, "element": 135, "A": 135, "wai": 135, "work": 135, "out": [135, 145], "invers": 135, "sequenc": 135, "design": 135, "condit": 135, "how": 136, "make": 136, "your": 136, "own": 136, "devic": 137, "spark": 138, "connect": [138, 139], "backend": [138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150], "state": [138, 139, 142, 143, 144], "fidel": [138, 139, 142, 143, 144], "quantum": [138, 139, 142, 149, 150], "volum": [138, 139, 142, 149, 150], "layer": [138, 139, 141], "oper": [138, 139, 141], "per": [138, 139, 141], "second": [138, 139, 141], "random": [138, 140, 142, 146, 147], "interleav": [138, 142, 146], "irb": [138, 146], "q": [138, 139, 148], "score": [138, 139, 148], "summari": [138, 139, 142], "star": 139, "As": 139, "one": 139, "can": 139, "see": 139, "label": 139, "i": 139, "reserv": 139, "resontor": 139, "so": 139, "advis": 139, "defin": [139, 140, 141, 142, 145, 146, 147, 148, 149], "indic": [139, 152], "layout": 139, "interest": 139, "start": 139, "from": 139, "rb": [140, 147], "choos": [140, 141, 142, 145, 146, 147, 148, 149, 150], "set": [140, 141, 142, 144, 145, 147, 148, 149, 150], "token": [140, 141, 142, 144, 147, 148, 149, 150], "us": [140, 141, 142, 144, 147, 148, 149, 150, 154], "reson": [140, 141, 142, 144, 147, 148, 149, 150], "configur": [140, 141, 143, 144, 145, 146, 147, 148, 149, 150], "run": [140, 141, 143, 144, 146, 147, 148, 149, 150], "experi": [140, 141, 145, 146, 147, 148, 149, 150], "perform": [140, 141, 148, 149, 150], "analysi": [140, 141, 148, 149, 150], "list": [141, 147], "all": [141, 145, 147], "kei": [141, 147], "attribut": [141, 147], "dataset": [141, 147], "The": [141, 147], "observ": [141, 145, 147], "object": [141, 147], "contain": [141, 147], "result": [141, 143, 144, 145, 146, 147], "plot": [141, 145, 147, 149, 150], "notebook": [142, 154], "mirror": [142, 147], "greenberg": [143, 144], "horn": [143, 144], "zeiling": [143, 144], "definit": [143, 144], "access": [143, 144, 145], "compress": 145, "gate": [145, 146], "tomographi": 145, "gst": 145, "minim": 145, "execut": 145, "": 145, "examin": 145, "high": 145, "level": 145, "store": 145, "final": 145, "estim": 145, "further": 145, "process": 145, "creat": 145, "custom": 145, "check": 145, "matrix": 145, "correspond": 145, "pi": 145, "rotat": 145, "around": 145, "y": 145, "axi": 145, "analyz": [146, 147], "non": 146, "nativ": 146, "mrb": 147, "qv": [149, 150], "deneb": 150, "inspect": 150, "exampl": 151, "content": 152, "tabl": 152, "licens": 153, "instal": 154, "latest": 154, "releas": 154, "option": 154, "depend": 154, "chang": 154, "character": 154, "physic": 154, "hardwar": 154, "jupyt": 154, "python": 154, "script": 154, "schedul": 154, "ci": 154, "cd": 154, "pipelin": 154}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"API Reference": [[0, "api-reference"]], "iqm.benchmarks": [[1, "module-iqm.benchmarks"]], "iqm.benchmarks.benchmark": [[2, "module-iqm.benchmarks.benchmark"]], "iqm.benchmarks.benchmark.BenchmarkBase": [[3, "iqm-benchmarks-benchmark-benchmarkbase"]], "iqm.benchmarks.benchmark.BenchmarkConfigurationBase": [[4, "iqm-benchmarks-benchmark-benchmarkconfigurationbase"]], "iqm.benchmarks.benchmark_definition": [[5, "module-iqm.benchmarks.benchmark_definition"]], "iqm.benchmarks.benchmark_definition.Benchmark": [[6, "iqm-benchmarks-benchmark-definition-benchmark"]], "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult": [[7, "iqm-benchmarks-benchmark-definition-benchmarkanalysisresult"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservation": [[8, "iqm-benchmarks-benchmark-definition-benchmarkobservation"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier": [[9, "iqm-benchmarks-benchmark-definition-benchmarkobservationidentifier"]], "iqm.benchmarks.benchmark_definition.BenchmarkRunResult": [[10, "iqm-benchmarks-benchmark-definition-benchmarkrunresult"]], "iqm.benchmarks.benchmark_definition.add_counts_to_dataset": [[11, "iqm-benchmarks-benchmark-definition-add-counts-to-dataset"]], "iqm.benchmarks.benchmark_definition.default_analysis_function": [[12, "iqm-benchmarks-benchmark-definition-default-analysis-function"]], "iqm.benchmarks.benchmark_definition.merge_datasets_dac": [[13, "iqm-benchmarks-benchmark-definition-merge-datasets-dac"]], "iqm.benchmarks.benchmark_definition.show_figure": [[14, "iqm-benchmarks-benchmark-definition-show-figure"]], "iqm.benchmarks.circuit_containers": [[15, "module-iqm.benchmarks.circuit_containers"]], "iqm.benchmarks.circuit_containers.BenchmarkCircuit": [[16, "iqm-benchmarks-circuit-containers-benchmarkcircuit"]], "iqm.benchmarks.circuit_containers.CircuitGroup": [[17, "iqm-benchmarks-circuit-containers-circuitgroup"]], "iqm.benchmarks.circuit_containers.Circuits": [[18, "iqm-benchmarks-circuit-containers-circuits"]], "iqm.benchmarks.entanglement": [[19, "module-iqm.benchmarks.entanglement"]], "iqm.benchmarks.entanglement.ghz": [[20, "module-iqm.benchmarks.entanglement.ghz"]], "iqm.benchmarks.entanglement.ghz.GHZBenchmark": [[21, "iqm-benchmarks-entanglement-ghz-ghzbenchmark"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration": [[22, "iqm-benchmarks-entanglement-ghz-ghzconfiguration"]], "iqm.benchmarks.entanglement.ghz.fidelity_analysis": [[23, "iqm-benchmarks-entanglement-ghz-fidelity-analysis"]], "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences": [[24, "iqm-benchmarks-entanglement-ghz-fidelity-ghz-coherences"]], "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements": [[25, "iqm-benchmarks-entanglement-ghz-fidelity-ghz-randomized-measurements"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_linear": [[26, "iqm-benchmarks-entanglement-ghz-generate-ghz-linear"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz": [[27, "iqm-benchmarks-entanglement-ghz-generate-ghz-log-cruz"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney": [[28, "iqm-benchmarks-entanglement-ghz-generate-ghz-log-mooney"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree": [[29, "iqm-benchmarks-entanglement-ghz-generate-ghz-spanning-tree"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_star": [[30, "iqm-benchmarks-entanglement-ghz-generate-ghz-star"]], "iqm.benchmarks.entanglement.ghz.get_cx_map": [[31, "iqm-benchmarks-entanglement-ghz-get-cx-map"]], "iqm.benchmarks.entanglement.ghz.get_edges": [[32, "iqm-benchmarks-entanglement-ghz-get-edges"]], "iqm.benchmarks.entanglement.ghz.plot_fidelities": [[33, "iqm-benchmarks-entanglement-ghz-plot-fidelities"]], "iqm.benchmarks.logging_config": [[34, "module-iqm.benchmarks.logging_config"]], "iqm.benchmarks.optimization": [[35, "module-iqm.benchmarks.optimization"]], "iqm.benchmarks.optimization.qscore": [[36, "module-iqm.benchmarks.optimization.qscore"]], "iqm.benchmarks.optimization.qscore.QScoreBenchmark": [[37, "iqm-benchmarks-optimization-qscore-qscorebenchmark"]], "iqm.benchmarks.optimization.qscore.QScoreConfiguration": [[38, "iqm-benchmarks-optimization-qscore-qscoreconfiguration"]], "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1": [[39, "iqm-benchmarks-optimization-qscore-calculate-optimal-angles-for-qaoa-p1"]], "iqm.benchmarks.optimization.qscore.compute_expectation_value": [[40, "iqm-benchmarks-optimization-qscore-compute-expectation-value"]], "iqm.benchmarks.optimization.qscore.create_objective_function": [[41, "iqm-benchmarks-optimization-qscore-create-objective-function"]], "iqm.benchmarks.optimization.qscore.cut_cost_function": [[42, "iqm-benchmarks-optimization-qscore-cut-cost-function"]], "iqm.benchmarks.optimization.qscore.get_optimal_angles": [[43, "iqm-benchmarks-optimization-qscore-get-optimal-angles"]], "iqm.benchmarks.optimization.qscore.is_successful": [[44, "iqm-benchmarks-optimization-qscore-is-successful"]], "iqm.benchmarks.optimization.qscore.plot_approximation_ratios": [[45, "iqm-benchmarks-optimization-qscore-plot-approximation-ratios"]], "iqm.benchmarks.optimization.qscore.qscore_analysis": [[46, "iqm-benchmarks-optimization-qscore-qscore-analysis"]], "iqm.benchmarks.optimization.qscore.run_QAOA": [[47, "iqm-benchmarks-optimization-qscore-run-qaoa"]], "iqm.benchmarks.quantum_volume": [[48, "module-iqm.benchmarks.quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[49, "module-iqm.benchmarks.quantum_volume.clops"]], "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark": [[50, "iqm-benchmarks-quantum-volume-clops-clopsbenchmark"]], "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration": [[51, "iqm-benchmarks-quantum-volume-clops-clopsconfiguration"]], "iqm.benchmarks.quantum_volume.clops.clops_analysis": [[52, "iqm-benchmarks-quantum-volume-clops-clops-analysis"]], "iqm.benchmarks.quantum_volume.clops.plot_times": [[53, "iqm-benchmarks-quantum-volume-clops-plot-times"]], "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times": [[54, "iqm-benchmarks-quantum-volume-clops-retrieve-clops-elapsed-times"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[55, "module-iqm.benchmarks.quantum_volume.quantum_volume"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark": [[56, "iqm-benchmarks-quantum-volume-quantum-volume-quantumvolumebenchmark"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration": [[57, "iqm-benchmarks-quantum-volume-quantum-volume-quantumvolumeconfiguration"]], "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities": [[58, "iqm-benchmarks-quantum-volume-quantum-volume-compute-heavy-output-probabilities"]], "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop": [[59, "iqm-benchmarks-quantum-volume-quantum-volume-cumulative-hop"]], "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std": [[60, "iqm-benchmarks-quantum-volume-quantum-volume-cumulative-std"]], "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs": [[61, "iqm-benchmarks-quantum-volume-quantum-volume-get-ideal-heavy-outputs"]], "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops": [[62, "iqm-benchmarks-quantum-volume-quantum-volume-get-rem-hops"]], "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector": [[63, "iqm-benchmarks-quantum-volume-quantum-volume-heavy-projector"]], "iqm.benchmarks.quantum_volume.quantum_volume.is_successful": [[64, "iqm-benchmarks-quantum-volume-quantum-volume-is-successful"]], "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold": [[65, "iqm-benchmarks-quantum-volume-quantum-volume-plot-hop-threshold"]], "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis": [[66, "iqm-benchmarks-quantum-volume-quantum-volume-qv-analysis"]], "iqm.benchmarks.randomized_benchmarking": [[67, "module-iqm.benchmarks.randomized_benchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[68, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[69, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration": [[70, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-cliffordrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking": [[71, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-cliffordrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis": [[72, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-clifford-rb-analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[73, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[74, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration": [[75, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleavedrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking": [[76, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleavedrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis": [[77, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleaved-rb-analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[78, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[79, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration": [[80, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mirrorrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking": [[81, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mirrorrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations": [[82, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-compute-polarizations"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab": [[83, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-edge-grab"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits": [[84, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-generate-fixed-depth-mrb-circuits"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits": [[85, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-generate-pauli-dressed-mrb-circuits"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix": [[86, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-list-to-numcircuit-times-numpauli-matrix"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis": [[87, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mrb-analysis"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[88, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params": [[89, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-create-multi-dataset-params"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset": [[90, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-eval-func-single-dataset"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature": [[91, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-get-param-names-from-func-signature"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual": [[92, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-multi-dataset-residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[93, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford": [[94, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-compute-inverse-clifford"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities": [[95, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-estimate-survival-probabilities"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb": [[96, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-exponential-rb"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit": [[97, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-fit-decay-lmfit"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits": [[98, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-all-rb-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits": [[99, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-fixed-depth-parallel-rb-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits": [[100, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-random-clifford-seq-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities": [[101, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-get-survival-probabilities"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords": [[102, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-import-native-gate-cliffords"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer": [[103, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-lmfit-minimizer"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay": [[104, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-plot-rb-decay"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero": [[105, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-relabel-qubits-array-from-zero"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job": [[106, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-submit-parallel-rb-job"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs": [[107, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-submit-sequential-rb-jobs"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel": [[108, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-survival-probabilities-parallel"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate": [[109, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-validate-irb-gate"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits": [[110, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-validate-rb-qubits"]], "iqm.benchmarks.readout_mitigation": [[111, "module-iqm.benchmarks.readout_mitigation"]], "iqm.benchmarks.readout_mitigation.M3IQM": [[112, "iqm-benchmarks-readout-mitigation-m3iqm"]], "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation": [[113, "iqm-benchmarks-readout-mitigation-apply-readout-error-mitigation"]], "iqm.benchmarks.readout_mitigation.readout_error_m3": [[114, "iqm-benchmarks-readout-mitigation-readout-error-m3"]], "iqm.benchmarks.utils": [[115, "module-iqm.benchmarks.utils"]], "iqm.benchmarks.utils.GraphPositions": [[116, "iqm-benchmarks-utils-graphpositions"]], "iqm.benchmarks.utils.bootstrap_counts": [[117, "iqm-benchmarks-utils-bootstrap-counts"]], "iqm.benchmarks.utils.count_2q_layers": [[118, "iqm-benchmarks-utils-count-2q-layers"]], "iqm.benchmarks.utils.count_native_gates": [[119, "iqm-benchmarks-utils-count-native-gates"]], "iqm.benchmarks.utils.extract_fidelities": [[120, "iqm-benchmarks-utils-extract-fidelities"]], "iqm.benchmarks.utils.get_iqm_backend": [[121, "iqm-benchmarks-utils-get-iqm-backend"]], "iqm.benchmarks.utils.marginal_distribution": [[122, "iqm-benchmarks-utils-marginal-distribution"]], "iqm.benchmarks.utils.perform_backend_transpilation": [[123, "iqm-benchmarks-utils-perform-backend-transpilation"]], "iqm.benchmarks.utils.plot_layout_fidelity_graph": [[124, "iqm-benchmarks-utils-plot-layout-fidelity-graph"]], "iqm.benchmarks.utils.reduce_to_active_qubits": [[125, "iqm-benchmarks-utils-reduce-to-active-qubits"]], "iqm.benchmarks.utils.retrieve_all_counts": [[126, "iqm-benchmarks-utils-retrieve-all-counts"]], "iqm.benchmarks.utils.retrieve_all_job_metadata": [[127, "iqm-benchmarks-utils-retrieve-all-job-metadata"]], "iqm.benchmarks.utils.set_coupling_map": [[128, "iqm-benchmarks-utils-set-coupling-map"]], "iqm.benchmarks.utils.sort_batches_by_final_layout": [[129, "iqm-benchmarks-utils-sort-batches-by-final-layout"]], "iqm.benchmarks.utils.submit_execute": [[130, "iqm-benchmarks-utils-submit-execute"]], "iqm.benchmarks.utils.timeit": [[131, "iqm-benchmarks-utils-timeit"]], "iqm.benchmarks.utils.xrvariable_to_counts": [[132, "iqm-benchmarks-utils-xrvariable-to-counts"]], "Changelog": [[133, "changelog"]], "Version 2.24": [[133, "version-2-24"]], "Version 2.23": [[133, "version-2-23"]], "Version 2.22": [[133, "version-2-22"]], "Version 2.21": [[133, "version-2-21"]], "Version 2.20": [[133, "version-2-20"]], "Version 2.19": [[133, "version-2-19"]], "Version 2.18": [[133, "version-2-18"]], "Version 2.17": [[133, "version-2-17"]], "Version 2.16": [[133, "version-2-16"]], "Version 2.15": [[133, "version-2-15"]], "Version 2.14": [[133, "version-2-14"]], "Version 2.13": [[133, "version-2-13"]], "Version 2.12": [[133, "version-2-12"]], "Version 2.11": [[133, "version-2-11"]], "Version 2.10": [[133, "version-2-10"]], "Version 2.9": [[133, "version-2-9"]], "Version 2.8": [[133, "version-2-8"]], "Version 2.7": [[133, "version-2-7"]], "Version 2.6": [[133, "version-2-6"]], "Version 2.5": [[133, "version-2-5"]], "Version 2.4": [[133, "version-2-4"]], "Version 2.3": [[133, "version-2-3"]], "Version 2.2": [[133, "version-2-2"]], "Version 2.1": [[133, "version-2-1"]], "Version 2.0": [[133, "version-2-0"]], "Version 1.12": [[133, "version-1-12"]], "Version 1.11": [[133, "version-1-11"]], "Version 1.10": [[133, "version-1-10"]], "Version 1.9": [[133, "version-1-9"]], "Version 1.8": [[133, "version-1-8"]], "Version 1.7": [[133, "version-1-7"]], "Version 1.6": [[133, "version-1-6"]], "Version 1.5": [[133, "version-1-5"]], "Version 1.4": [[133, "version-1-4"]], "Version 1.3": [[133, "version-1-3"]], "Version 1.2": [[133, "version-1-2"]], "Version 1.1": [[133, "version-1-1"]], "Version 1.0": [[133, "version-1-0"]], "Development": [[134, "development"]], "2-Qubit Clifford Group Decomposition": [[135, "qubit-clifford-group-decomposition"]], "Generate the 1Q Clifford group": [[135, "generate-the-1q-clifford-group"]], "Generate the 2Q Clifford group": [[135, "generate-the-2q-clifford-group"]], "Dump on a pickle file": [[135, "dump-on-a-pickle-file"]], "Load": [[135, "load"]], "Count elements": [[135, "count-elements"]], "2Q": [[135, "q"]], "1Q": [[135, "id1"]], "A way to work out the inverse of sequences": [[135, "a-way-to-work-out-the-inverse-of-sequences"]], "2-design condition": [[135, "design-condition"]], "How to make your own benchmark?": [[136, "how-to-make-your-own-benchmark"]], "Devices": [[137, "devices"]], "Benchmarking IQM Spark": [[138, "benchmarking-iqm-spark"]], "Connect to the backend": [[138, "connect-to-the-backend"], [139, "connect-to-the-backend"]], "GHZ state fidelity": [[138, "ghz-state-fidelity"], [139, "ghz-state-fidelity"], [142, "ghz-state-fidelity"]], "Quantum Volume": [[138, "quantum-volume"], [139, "quantum-volume"], [142, "quantum-volume"]], "Circuit Layer Operations Per Second (CLOPS)": [[138, "circuit-layer-operations-per-second-clops"], [139, "circuit-layer-operations-per-second-clops"], [141, "circuit-layer-operations-per-second-clops"]], "Clifford Randomized Benchmarking": [[138, "clifford-randomized-benchmarking"], [142, "clifford-randomized-benchmarking"]], "Interleaved Randomized Benchmarking (IRB)": [[138, "interleaved-randomized-benchmarking-irb"], [146, "interleaved-randomized-benchmarking-irb"]], "Q-Score": [[138, "q-score"], [139, "q-score"], [148, "q-score"]], "Summary": [[138, "summary"], [139, "summary"]], "Benchmarking IQM Star": [[139, "benchmarking-iqm-star"]], "As one can see, the label \u201c0\u201d is reserved for the resontor. So it is advised to define the qubit indices in the layout of interest starting from 1.": [[139, "as-one-can-see-the-label-0-is-reserved-for-the-resontor-so-it-is-advised-to-define-the-qubit-indices-in-the-layout-of-interest-starting-from-1"]], "Clifford Randomized Benchmarking (RB)": [[140, "clifford-randomized-benchmarking-rb"]], "Choose (or define) a backend": [[140, "choose-or-define-a-backend"], [141, "choose-or-define-a-backend"], [142, "choose-or-define-a-backend"], [145, "choose-or-define-a-backend"], [146, "choose-or-define-a-backend"], [147, "choose-or-define-a-backend"], [148, "choose-or-define-a-backend"], [149, "choose-or-define-a-backend"]], "Set IQM Token if using Resonance.": [[140, "set-iqm-token-if-using-resonance"], [142, "set-iqm-token-if-using-resonance"], [144, "set-iqm-token-if-using-resonance"], [147, "set-iqm-token-if-using-resonance"], [148, "set-iqm-token-if-using-resonance"], [149, "set-iqm-token-if-using-resonance"], [150, "set-iqm-token-if-using-resonance"]], "Randomized Benchmarking Configuration": [[140, "randomized-benchmarking-configuration"]], "Run the experiment": [[140, "run-the-experiment"], [141, "run-the-experiment"], [147, "run-the-experiment"], [148, "run-the-experiment"], [149, "run-the-experiment"], [150, "run-the-experiment"]], "Perform the analysis": [[140, "perform-the-analysis"]], "Set IQM Token if using Resonance": [[141, "set-iqm-token-if-using-resonance"]], "CLOPS Configuration": [[141, "clops-configuration"]], "Perform Analysis": [[141, "perform-analysis"], [148, "perform-analysis"], [149, "perform-analysis"], [150, "perform-analysis"]], "List all the keys in the attributes of the dataset": [[141, "list-all-the-keys-in-the-attributes-of-the-dataset"], [147, "list-all-the-keys-in-the-attributes-of-the-dataset"]], "The observation object contains the benchmark results": [[141, "the-observation-object-contains-the-benchmark-results"], [147, "the-observation-object-contains-the-benchmark-results"]], "Generate plots": [[141, "generate-plots"], [147, "generate-plots"], [149, "generate-plots"], [150, "generate-plots"]], "IQM Benchmarks: Summary Notebook": [[142, "iqm-benchmarks-summary-notebook"]], "Interleaved Randomized Benchmarking": [[142, "interleaved-randomized-benchmarking"]], "Mirror Randomized Benchmarking": [[142, "mirror-randomized-benchmarking"]], "CLOPS": [[142, "clops"]], "QScore": [[142, "qscore"]], "Greenberger\u2013Horne\u2013Zeilinger (GHZ) State Fidelity": [[143, "greenbergerhornezeilinger-ghz-state-fidelity"], [144, "greenbergerhornezeilinger-ghz-state-fidelity"]], "Definition of the benchmark configuration": [[143, "definition-of-the-benchmark-configuration"], [144, "definition-of-the-benchmark-configuration"]], "Running the benchmark": [[143, "running-the-benchmark"], [144, "running-the-benchmark"]], "Accessing the results": [[143, "accessing-the-results"], [144, "accessing-the-results"]], "Compressive Gate Set Tomography (GST)": [[145, "compressive-gate-set-tomography-gst"]], "Minimal GST Experiment configurations": [[145, "minimal-gst-experiment-configurations"]], "Execute GST Experiment(s)": [[145, "execute-gst-experiment-s"]], "Examine the results": [[145, "examine-the-results"]], "High level results stored at result.observations": [[145, "high-level-results-stored-at-result-observations"]], "Accessing the final gate set estimates for further processing": [[145, "accessing-the-final-gate-set-estimates-for-further-processing"]], "Plots": [[145, "plots"]], "Creating a custom gate set": [[145, "creating-a-custom-gate-set"]], "Checking out the process matrix corresponding to the pi rotation around the y-axis": [[145, "checking-out-the-process-matrix-corresponding-to-the-pi-rotation-around-the-y-axis"]], "All plots for the custom gate set": [[145, "all-plots-for-the-custom-gate-set"]], "Interleaved Randomized Benchmarking Configuration": [[146, "interleaved-randomized-benchmarking-configuration"]], "1Q gate IRB": [[146, "q-gate-irb"]], "Run the experiment - 1Q gate IRB": [[146, "run-the-experiment-1q-gate-irb"]], "Analyze the results - 1Q gate IRB": [[146, "analyze-the-results-1q-gate-irb"]], "2Q gate IRB": [[146, "id1"]], "Run the experiment - 2Q gate IRB": [[146, "run-the-experiment-2q-gate-irb"]], "Analyze the results - 2Q gate IRB": [[146, "analyze-the-results-2q-gate-irb"]], "IRB for non-native gate": [[146, "irb-for-non-native-gate"]], "Mirror Randomized Benchmarking (MRB)": [[147, "mirror-randomized-benchmarking-mrb"]], "Mirror RB Configuration": [[147, "mirror-rb-configuration"]], "Analyze the results": [[147, "analyze-the-results"]], "Qscore Configuration": [[148, "qscore-configuration"]], "Quantum Volume (QV)": [[149, "quantum-volume-qv"]], "Quantum Volume Configuration": [[149, "quantum-volume-configuration"], [150, "quantum-volume-configuration"]], "QV on Deneb": [[150, "qv-on-deneb"]], "Choose Deneb as a backend": [[150, "choose-deneb-as-a-backend"]], "Inspect the circuits": [[150, "inspect-the-circuits"]], "Examples": [[151, "examples"]], "IQM Benchmarks": [[152, "iqm-benchmarks"], [154, "iqm-benchmarks"]], "Contents": [[152, "contents"]], "Indices and tables": [[152, "indices-and-tables"]], "License": [[153, "license"]], "Installation (latest release)": [[154, "installation-latest-release"]], "Optional dependencies": [[154, "optional-dependencies"]], "Development installation (latest changes)": [[154, "development-installation-latest-changes"]], "Characterize Physical Hardware": [[154, "characterize-physical-hardware"]], "Using a Jupyter notebook or Python script": [[154, "using-a-jupyter-notebook-or-python-script"]], "Scheduled benchmarks using a CI/CD Pipeline": [[154, "scheduled-benchmarks-using-a-ci-cd-pipeline"]]}, "indexentries": {"iqm.benchmarks": [[1, "module-iqm.benchmarks"]], "module": [[1, "module-iqm.benchmarks"], [2, "module-iqm.benchmarks.benchmark"], [5, "module-iqm.benchmarks.benchmark_definition"], [15, "module-iqm.benchmarks.circuit_containers"], [19, "module-iqm.benchmarks.entanglement"], [20, "module-iqm.benchmarks.entanglement.ghz"], [34, "module-iqm.benchmarks.logging_config"], [35, "module-iqm.benchmarks.optimization"], [36, "module-iqm.benchmarks.optimization.qscore"], [48, "module-iqm.benchmarks.quantum_volume"], [49, "module-iqm.benchmarks.quantum_volume.clops"], [55, "module-iqm.benchmarks.quantum_volume.quantum_volume"], [67, "module-iqm.benchmarks.randomized_benchmarking"], [68, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"], [69, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"], [73, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"], [74, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"], [78, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"], [79, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"], [88, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"], [93, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"], [111, "module-iqm.benchmarks.readout_mitigation"], [115, "module-iqm.benchmarks.utils"]], "iqm.benchmarks.benchmark": [[2, "module-iqm.benchmarks.benchmark"]], "benchmarkbase (class in iqm.benchmarks.benchmark)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase"]], "check_requirements() (iqm.benchmarks.benchmark.benchmarkbase static method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.check_requirements"]], "execute_full_benchmark() (iqm.benchmarks.benchmark.benchmarkbase method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.execute_full_benchmark"]], "generate_requirements() (iqm.benchmarks.benchmark.benchmarkbase method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.generate_requirements"]], "name() (iqm.benchmarks.benchmark.benchmarkbase class method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.name"]], "benchmarkconfigurationbase (class in iqm.benchmarks.benchmark)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase"]], "benchmark (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.benchmark"]], "calset_id (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.calset_id"]], "max_gates_per_batch (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.max_gates_per_batch"]], "model_computed_fields (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_computed_fields"]], "model_config (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_config"]], "model_fields (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_fields"]], "physical_layout (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.physical_layout"]], "routing_method (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.routing_method"]], "shots (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.shots"]], "use_dd (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.use_DD"]], "iqm.benchmarks.benchmark_definition": [[5, "module-iqm.benchmarks.benchmark_definition"]], "benchmark (class in iqm.benchmarks.benchmark_definition)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark"]], "analysis_function() (iqm.benchmarks.benchmark_definition.benchmark static method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.analysis_function"]], "analyze() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.analyze"]], "execute() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.execute"]], "name() (iqm.benchmarks.benchmark_definition.benchmark class method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.name"]], "run() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.run"]], "benchmarkanalysisresult (class in iqm.benchmarks.benchmark_definition)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult"]], "from_run_result() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult class method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.from_run_result"]], "plot() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.plot"]], "plot_all() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.plot_all"]], "benchmarkobservation (class in iqm.benchmarks.benchmark_definition)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation"]], "identifier (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.identifier"]], "name (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.name"]], "uncertainty (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.uncertainty"]], "value (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.value"]], "benchmarkobservationidentifier (class in iqm.benchmarks.benchmark_definition)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier"]], "qubit_indices (iqm.benchmarks.benchmark_definition.benchmarkobservationidentifier attribute)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.qubit_indices"]], "string_identifier (iqm.benchmarks.benchmark_definition.benchmarkobservationidentifier property)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.string_identifier"]], "benchmarkrunresult (class in iqm.benchmarks.benchmark_definition)": [[10, "iqm.benchmarks.benchmark_definition.BenchmarkRunResult"]], "add_counts_to_dataset() (in module iqm.benchmarks.benchmark_definition)": [[11, "iqm.benchmarks.benchmark_definition.add_counts_to_dataset"]], "default_analysis_function() (in module iqm.benchmarks.benchmark_definition)": [[12, "iqm.benchmarks.benchmark_definition.default_analysis_function"]], "merge_datasets_dac() (in module iqm.benchmarks.benchmark_definition)": [[13, "iqm.benchmarks.benchmark_definition.merge_datasets_dac"]], "show_figure() (in module iqm.benchmarks.benchmark_definition)": [[14, "iqm.benchmarks.benchmark_definition.show_figure"]], "iqm.benchmarks.circuit_containers": [[15, "module-iqm.benchmarks.circuit_containers"]], "benchmarkcircuit (class in iqm.benchmarks.circuit_containers)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit"]], "circuit_groups (iqm.benchmarks.circuit_containers.benchmarkcircuit attribute)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.circuit_groups"]], "get_circuit_group_by_name() (iqm.benchmarks.circuit_containers.benchmarkcircuit method)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.get_circuit_group_by_name"]], "group_names (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.group_names"]], "groups (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.groups"]], "name (iqm.benchmarks.circuit_containers.benchmarkcircuit attribute)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.name"]], "qubit_indices (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_indices"]], "qubit_layouts (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_layouts"]], "qubit_layouts_by_index (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_layouts_by_index"]], "qubits (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubits"]], "circuitgroup (class in iqm.benchmarks.circuit_containers)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup"]], "add_circuit() (iqm.benchmarks.circuit_containers.circuitgroup method)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.add_circuit"]], "circuit_names (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.circuit_names"]], "circuits (iqm.benchmarks.circuit_containers.circuitgroup attribute)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.circuits"]], "get_circuits_by_name() (iqm.benchmarks.circuit_containers.circuitgroup method)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.get_circuits_by_name"]], "name (iqm.benchmarks.circuit_containers.circuitgroup attribute)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.name"]], "qubit_layouts (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubit_layouts"]], "qubit_layouts_by_index (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubit_layouts_by_index"]], "qubits (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubits"]], "circuits (class in iqm.benchmarks.circuit_containers)": [[18, "iqm.benchmarks.circuit_containers.Circuits"]], "benchmark_circuits (iqm.benchmarks.circuit_containers.circuits attribute)": [[18, "iqm.benchmarks.circuit_containers.Circuits.benchmark_circuits"]], "get_benchmark_circuits_by_name() (iqm.benchmarks.circuit_containers.circuits method)": [[18, "iqm.benchmarks.circuit_containers.Circuits.get_benchmark_circuits_by_name"]], "iqm.benchmarks.entanglement": [[19, "module-iqm.benchmarks.entanglement"]], "iqm.benchmarks.entanglement.ghz": [[20, "module-iqm.benchmarks.entanglement.ghz"]], "ghzbenchmark (class in iqm.benchmarks.entanglement.ghz)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark"]], "add_configuration_to_dataset() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.add_configuration_to_dataset"]], "analysis_function() (iqm.benchmarks.entanglement.ghz.ghzbenchmark static method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.analysis_function"]], "append_rms() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.append_rms"]], "execute() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.execute"]], "generate_coherence_meas_circuits() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_coherence_meas_circuits"]], "generate_native_ghz() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_native_ghz"]], "generate_readout_circuit() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_readout_circuit"]], "ghzconfiguration (class in iqm.benchmarks.entanglement.ghz)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration"]], "benchmark (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.benchmark"]], "cal_url (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.cal_url"]], "custom_qubits_array (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.custom_qubits_array"]], "fidelity_routine (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.fidelity_routine"]], "mit_shots (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.mit_shots"]], "model_computed_fields (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_config"]], "model_fields (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_fields"]], "num_rms (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.num_RMs"]], "optimize_single_qubit_gates (iqm.benchmarks.entanglement.ghz.ghzconfiguration.iqm.qiskit_iqm.iqm_transpilation attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.iqm.qiskit_iqm.iqm_transpilation.optimize_single_qubit_gates"]], "optimize_sqg (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.optimize_sqg"]], "qiskit_optim_level (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.qiskit_optim_level"]], "qubit_counts (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.qubit_counts"]], "rem (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.rem"]], "state_generation_routine (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.state_generation_routine"]], "fidelity_analysis() (in module iqm.benchmarks.entanglement.ghz)": [[23, "iqm.benchmarks.entanglement.ghz.fidelity_analysis"]], "fidelity_ghz_coherences() (in module iqm.benchmarks.entanglement.ghz)": [[24, "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences"]], "fidelity_ghz_randomized_measurements() (in module iqm.benchmarks.entanglement.ghz)": [[25, "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements"]], "generate_ghz_linear() (in module iqm.benchmarks.entanglement.ghz)": [[26, "iqm.benchmarks.entanglement.ghz.generate_ghz_linear"]], "generate_ghz_log_cruz() (in module iqm.benchmarks.entanglement.ghz)": [[27, "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz"]], "generate_ghz_log_mooney() (in module iqm.benchmarks.entanglement.ghz)": [[28, "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney"]], "generate_ghz_spanning_tree() (in module iqm.benchmarks.entanglement.ghz)": [[29, "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree"]], "generate_ghz_star() (in module iqm.benchmarks.entanglement.ghz)": [[30, "iqm.benchmarks.entanglement.ghz.generate_ghz_star"]], "get_cx_map() (in module iqm.benchmarks.entanglement.ghz)": [[31, "iqm.benchmarks.entanglement.ghz.get_cx_map"]], "get_edges() (in module iqm.benchmarks.entanglement.ghz)": [[32, "iqm.benchmarks.entanglement.ghz.get_edges"]], "plot_fidelities() (in module iqm.benchmarks.entanglement.ghz)": [[33, "iqm.benchmarks.entanglement.ghz.plot_fidelities"]], "iqm.benchmarks.logging_config": [[34, "module-iqm.benchmarks.logging_config"]], "iqm.benchmarks.optimization": [[35, "module-iqm.benchmarks.optimization"]], "iqm.benchmarks.optimization.qscore": [[36, "module-iqm.benchmarks.optimization.qscore"]], "qscorebenchmark (class in iqm.benchmarks.optimization.qscore)": [[37, "iqm.benchmarks.optimization.qscore.QScoreBenchmark"]], "add_all_meta_to_dataset() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[37, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.optimization.qscore.qscorebenchmark static method)": [[37, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.analysis_function"]], "choose_qubits_custom() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[37, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.choose_qubits_custom"]], "choose_qubits_naive() (iqm.benchmarks.optimization.qscore.qscorebenchmark static method)": [[37, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.choose_qubits_naive"]], "execute() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[37, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.execute"]], "generate_maxcut_ansatz() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[37, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.generate_maxcut_ansatz"]], "qscoreconfiguration (class in iqm.benchmarks.optimization.qscore)": [[38, "iqm.benchmarks.optimization.qscore.QScoreConfiguration"]], "rem (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[38, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.REM"]], "benchmark (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[38, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.benchmark"]], "choose_qubits_routine (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[38, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.choose_qubits_routine"]], "custom_qubits_array (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[38, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.custom_qubits_array"]], "max_num_nodes (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[38, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.max_num_nodes"]], "min_num_nodes (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[38, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.min_num_nodes"]], "min_num_qubits (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[38, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.min_num_qubits"]], "mit_shots (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[38, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.mit_shots"]], "model_computed_fields (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[38, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[38, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_config"]], "model_fields (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[38, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_fields"]], "num_instances (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[38, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.num_instances"]], "num_qaoa_layers (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[38, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.num_qaoa_layers"]], "optimize_sqg (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[38, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.optimize_sqg"]], "qiskit_optim_level (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[38, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.qiskit_optim_level"]], "qpu_topology (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[38, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.qpu_topology"]], "seed (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[38, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.seed"]], "use_classically_optimized_angles (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[38, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.use_classically_optimized_angles"]], "use_virtual_node (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[38, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.use_virtual_node"]], "calculate_optimal_angles_for_qaoa_p1() (in module iqm.benchmarks.optimization.qscore)": [[39, "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1"]], "compute_expectation_value() (in module iqm.benchmarks.optimization.qscore)": [[40, "iqm.benchmarks.optimization.qscore.compute_expectation_value"]], "create_objective_function() (in module iqm.benchmarks.optimization.qscore)": [[41, "iqm.benchmarks.optimization.qscore.create_objective_function"]], "cut_cost_function() (in module iqm.benchmarks.optimization.qscore)": [[42, "iqm.benchmarks.optimization.qscore.cut_cost_function"]], "get_optimal_angles() (in module iqm.benchmarks.optimization.qscore)": [[43, "iqm.benchmarks.optimization.qscore.get_optimal_angles"]], "is_successful() (in module iqm.benchmarks.optimization.qscore)": [[44, "iqm.benchmarks.optimization.qscore.is_successful"]], "plot_approximation_ratios() (in module iqm.benchmarks.optimization.qscore)": [[45, "iqm.benchmarks.optimization.qscore.plot_approximation_ratios"]], "qscore_analysis() (in module iqm.benchmarks.optimization.qscore)": [[46, "iqm.benchmarks.optimization.qscore.qscore_analysis"]], "run_qaoa() (in module iqm.benchmarks.optimization.qscore)": [[47, "iqm.benchmarks.optimization.qscore.run_QAOA"]], "iqm.benchmarks.quantum_volume": [[48, "module-iqm.benchmarks.quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[49, "module-iqm.benchmarks.quantum_volume.clops"]], "clopsbenchmark (class in iqm.benchmarks.quantum_volume.clops)": [[50, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark"]], "add_all_meta_to_dataset() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[50, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark static method)": [[50, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.analysis_function"]], "append_parameterized_unitary() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[50, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.append_parameterized_unitary"]], "assign_random_parameters_to_all() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[50, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.assign_random_parameters_to_all"]], "clops_cycle() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[50, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.clops_cycle"]], "execute() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[50, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.execute"]], "generate_circuit_list() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[50, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_circuit_list"]], "generate_random_parameters() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[50, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_random_parameters"]], "generate_single_circuit() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[50, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_single_circuit"]], "generate_transpiled_clops_templates() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[50, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_transpiled_clops_templates"]], "clopsconfiguration (class in iqm.benchmarks.quantum_volume.clops)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration"]], "benchmark (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.benchmark"]], "clops_h_bool (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.clops_h_bool"]], "model_computed_fields (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_config"]], "model_fields (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_fields"]], "num_circuits (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_circuits"]], "num_shots (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_shots"]], "num_updates (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_updates"]], "optimize_sqg (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.optimize_sqg"]], "physical_layout (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.physical_layout"]], "qiskit_optim_level (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.qiskit_optim_level"]], "qubits (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.qubits"]], "routing_method (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.routing_method"]], "clops_analysis() (in module iqm.benchmarks.quantum_volume.clops)": [[52, "iqm.benchmarks.quantum_volume.clops.clops_analysis"]], "plot_times() (in module iqm.benchmarks.quantum_volume.clops)": [[53, "iqm.benchmarks.quantum_volume.clops.plot_times"]], "retrieve_clops_elapsed_times() (in module iqm.benchmarks.quantum_volume.clops)": [[54, "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[55, "module-iqm.benchmarks.quantum_volume.quantum_volume"]], "quantumvolumebenchmark (class in iqm.benchmarks.quantum_volume.quantum_volume)": [[56, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark"]], "add_all_circuits_to_dataset() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[56, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.add_all_circuits_to_dataset"]], "add_all_meta_to_dataset() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[56, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark static method)": [[56, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.analysis_function"]], "execute() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[56, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.execute"]], "generate_circuit_list() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[56, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.generate_circuit_list"]], "generate_single_circuit() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark static method)": [[56, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.generate_single_circuit"]], "get_rem_quasidistro() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[56, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.get_rem_quasidistro"]], "submit_single_qv_job() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[56, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.submit_single_qv_job"]], "quantumvolumeconfiguration (class in iqm.benchmarks.quantum_volume.quantum_volume)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration"]], "benchmark (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.benchmark"]], "choose_qubits_routine (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.choose_qubits_routine"]], "custom_qubits_array (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.custom_qubits_array"]], "mit_shots (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.mit_shots"]], "model_computed_fields (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_config"]], "model_fields (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_fields"]], "num_circuits (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.num_circuits"]], "num_sigmas (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.num_sigmas"]], "optimize_sqg (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.optimize_sqg"]], "physical_layout (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.physical_layout"]], "qiskit_optim_level (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.qiskit_optim_level"]], "rem (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.rem"]], "routing_method (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.routing_method"]], "compute_heavy_output_probabilities() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities"]], "cumulative_hop() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[59, "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop"]], "cumulative_std() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[60, "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std"]], "get_ideal_heavy_outputs() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[61, "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs"]], "get_rem_hops() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[62, "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops"]], "heavy_projector() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[63, "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector"]], "is_successful() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[64, "iqm.benchmarks.quantum_volume.quantum_volume.is_successful"]], "plot_hop_threshold() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[65, "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold"]], "qv_analysis() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[66, "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis"]], "iqm.benchmarks.randomized_benchmarking": [[67, "module-iqm.benchmarks.randomized_benchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[68, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[69, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"]], "cliffordrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[70, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration"]], "benchmark (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[70, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.benchmark"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[70, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[70, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[70, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[70, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.num_circuit_samples"]], "parallel_execution (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[70, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.parallel_execution"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[70, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.qubits_array"]], "sequence_lengths (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[70, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.sequence_lengths"]], "shots (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[70, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.shots"]], "cliffordrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking"]], "add_all_circuits_to_dataset() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.add_all_circuits_to_dataset"]], "add_all_metadata_to_dataset() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.add_all_metadata_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking static method)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.execute"]], "clifford_rb_analysis() (in module iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[72, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[73, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[74, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"]], "interleavedrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[75, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration"]], "interleaved_gate (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[75, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.interleaved_gate"]], "interleaved_gate_params (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[75, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.interleaved_gate_params"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[75, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[75, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[75, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[75, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.num_circuit_samples"]], "parallel_execution (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[75, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.parallel_execution"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[75, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.qubits_array"]], "sequence_lengths (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[75, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.sequence_lengths"]], "shots (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[75, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.shots"]], "simultaneous_fit (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[75, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.simultaneous_fit"]], "interleavedrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking"]], "add_all_circuits_to_dataset() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.add_all_circuits_to_dataset"]], "add_all_meta_to_dataset() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking static method)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.execute"]], "interleaved_rb_analysis() (in module iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[77, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[78, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[79, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"]], "mirrorrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[80, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration"]], "benchmark (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[80, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.benchmark"]], "density_2q_gates (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[80, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.density_2q_gates"]], "depths_array (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[80, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.depths_array"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[80, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[80, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[80, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[80, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.num_circuit_samples"]], "num_pauli_samples (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[80, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.num_pauli_samples"]], "qiskit_optim_level (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[80, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.qiskit_optim_level"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[80, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.qubits_array"]], "routing_method (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[80, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.routing_method"]], "shots (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[80, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.shots"]], "two_qubit_gate_ensemble (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[80, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.two_qubit_gate_ensemble"]], "mirrorrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking"]], "add_all_meta_to_dataset() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking static method)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.execute"]], "submit_single_mrb_job() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.submit_single_mrb_job"]], "compute_polarizations() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[82, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations"]], "edge_grab() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[83, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab"]], "generate_fixed_depth_mrb_circuits() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[84, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits"]], "generate_pauli_dressed_mrb_circuits() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[85, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits"]], "list_to_numcircuit_times_numpauli_matrix() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[86, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix"]], "mrb_analysis() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[87, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[88, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"]], "create_multi_dataset_params() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[89, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params"]], "eval_func_single_dataset() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[90, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset"]], "get_param_names_from_func_signature() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[91, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature"]], "multi_dataset_residual() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[92, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[93, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"]], "compute_inverse_clifford() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[94, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford"]], "estimate_survival_probabilities() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[95, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities"]], "exponential_rb() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[96, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb"]], "fit_decay_lmfit() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[97, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit"]], "generate_all_rb_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[98, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits"]], "generate_fixed_depth_parallel_rb_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[99, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits"]], "generate_random_clifford_seq_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[100, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits"]], "get_survival_probabilities() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[101, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities"]], "import_native_gate_cliffords() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[102, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords"]], "lmfit_minimizer() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[103, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer"]], "plot_rb_decay() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[104, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay"]], "relabel_qubits_array_from_zero() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[105, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero"]], "submit_parallel_rb_job() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[106, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job"]], "submit_sequential_rb_jobs() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[107, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs"]], "survival_probabilities_parallel() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[108, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel"]], "validate_irb_gate() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[109, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate"]], "validate_rb_qubits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[110, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits"]], "iqm.benchmarks.readout_mitigation": [[111, "module-iqm.benchmarks.readout_mitigation"]], "m3iqm (class in iqm.benchmarks.readout_mitigation)": [[112, "iqm.benchmarks.readout_mitigation.M3IQM"]], "cals_from_system() (iqm.benchmarks.readout_mitigation.m3iqm method)": [[112, "iqm.benchmarks.readout_mitigation.M3IQM.cals_from_system"]], "apply_readout_error_mitigation() (in module iqm.benchmarks.readout_mitigation)": [[113, "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation"]], "readout_error_m3() (in module iqm.benchmarks.readout_mitigation)": [[114, "iqm.benchmarks.readout_mitigation.readout_error_m3"]], "iqm.benchmarks.utils": [[115, "module-iqm.benchmarks.utils"]], "graphpositions (class in iqm.benchmarks.utils)": [[116, "iqm.benchmarks.utils.GraphPositions"]], "create_positions() (iqm.benchmarks.utils.graphpositions static method)": [[116, "iqm.benchmarks.utils.GraphPositions.create_positions"]], "deneb_positions (iqm.benchmarks.utils.graphpositions attribute)": [[116, "iqm.benchmarks.utils.GraphPositions.deneb_positions"]], "garnet_positions (iqm.benchmarks.utils.graphpositions attribute)": [[116, "iqm.benchmarks.utils.GraphPositions.garnet_positions"]], "predefined_stations (iqm.benchmarks.utils.graphpositions attribute)": [[116, "iqm.benchmarks.utils.GraphPositions.predefined_stations"]], "bootstrap_counts() (in module iqm.benchmarks.utils)": [[117, "iqm.benchmarks.utils.bootstrap_counts"]], "count_2q_layers() (in module iqm.benchmarks.utils)": [[118, "iqm.benchmarks.utils.count_2q_layers"]], "count_native_gates() (in module iqm.benchmarks.utils)": [[119, "iqm.benchmarks.utils.count_native_gates"]], "extract_fidelities() (in module iqm.benchmarks.utils)": [[120, "iqm.benchmarks.utils.extract_fidelities"]], "get_iqm_backend() (in module iqm.benchmarks.utils)": [[121, "iqm.benchmarks.utils.get_iqm_backend"]], "marginal_distribution() (in module iqm.benchmarks.utils)": [[122, "iqm.benchmarks.utils.marginal_distribution"]], "perform_backend_transpilation() (in module iqm.benchmarks.utils)": [[123, "iqm.benchmarks.utils.perform_backend_transpilation"]], "plot_layout_fidelity_graph() (in module iqm.benchmarks.utils)": [[124, "iqm.benchmarks.utils.plot_layout_fidelity_graph"]], "reduce_to_active_qubits() (in module iqm.benchmarks.utils)": [[125, "iqm.benchmarks.utils.reduce_to_active_qubits"]], "retrieve_all_counts() (in module iqm.benchmarks.utils)": [[126, "iqm.benchmarks.utils.retrieve_all_counts"]], "retrieve_all_job_metadata() (in module iqm.benchmarks.utils)": [[127, "iqm.benchmarks.utils.retrieve_all_job_metadata"]], "set_coupling_map() (in module iqm.benchmarks.utils)": [[128, "iqm.benchmarks.utils.set_coupling_map"]], "sort_batches_by_final_layout() (in module iqm.benchmarks.utils)": [[129, "iqm.benchmarks.utils.sort_batches_by_final_layout"]], "submit_execute() (in module iqm.benchmarks.utils)": [[130, "iqm.benchmarks.utils.submit_execute"]], "timeit() (in module iqm.benchmarks.utils)": [[131, "iqm.benchmarks.utils.timeit"]], "xrvariable_to_counts() (in module iqm.benchmarks.utils)": [[132, "iqm.benchmarks.utils.xrvariable_to_counts"]]}})