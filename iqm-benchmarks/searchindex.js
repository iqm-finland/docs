Search.setIndex({"docnames": ["API", "api/iqm.benchmarks", "api/iqm.benchmarks.benchmark", "api/iqm.benchmarks.benchmark.BenchmarkBase", "api/iqm.benchmarks.benchmark.BenchmarkConfigurationBase", "api/iqm.benchmarks.benchmark_definition", "api/iqm.benchmarks.benchmark_definition.Benchmark", "api/iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservation", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier", "api/iqm.benchmarks.benchmark_definition.BenchmarkRunResult", "api/iqm.benchmarks.benchmark_definition.add_counts_to_dataset", "api/iqm.benchmarks.benchmark_definition.default_analysis_function", "api/iqm.benchmarks.benchmark_definition.merge_datasets_dac", "api/iqm.benchmarks.benchmark_definition.show_figure", "api/iqm.benchmarks.circuit_containers", "api/iqm.benchmarks.circuit_containers.BenchmarkCircuit", "api/iqm.benchmarks.circuit_containers.CircuitGroup", "api/iqm.benchmarks.circuit_containers.Circuits", "api/iqm.benchmarks.entanglement", "api/iqm.benchmarks.entanglement.ghz", "api/iqm.benchmarks.entanglement.ghz.GHZBenchmark", "api/iqm.benchmarks.entanglement.ghz.GHZConfiguration", "api/iqm.benchmarks.entanglement.ghz.extract_fidelities", "api/iqm.benchmarks.entanglement.ghz.fidelity_analysis", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_linear", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_star", "api/iqm.benchmarks.entanglement.ghz.get_cx_map", "api/iqm.benchmarks.entanglement.ghz.get_edges", "api/iqm.benchmarks.entanglement.ghz.plot_fidelities", "api/iqm.benchmarks.logging_config", "api/iqm.benchmarks.optimization", "api/iqm.benchmarks.optimization.qscore", "api/iqm.benchmarks.optimization.qscore.QScoreBenchmark", "api/iqm.benchmarks.optimization.qscore.QScoreConfiguration", "api/iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1", "api/iqm.benchmarks.optimization.qscore.compute_expectation_value", "api/iqm.benchmarks.optimization.qscore.create_objective_function", "api/iqm.benchmarks.optimization.qscore.cut_cost_function", "api/iqm.benchmarks.optimization.qscore.get_optimal_angles", "api/iqm.benchmarks.optimization.qscore.is_successful", "api/iqm.benchmarks.optimization.qscore.plot_approximation_ratios", "api/iqm.benchmarks.optimization.qscore.qscore_analysis", "api/iqm.benchmarks.optimization.qscore.run_QAOA", "api/iqm.benchmarks.quantum_volume", "api/iqm.benchmarks.quantum_volume.clops", "api/iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark", "api/iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration", "api/iqm.benchmarks.quantum_volume.clops.clops_analysis", "api/iqm.benchmarks.quantum_volume.clops.plot_times", "api/iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times", "api/iqm.benchmarks.quantum_volume.quantum_volume", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration", "api/iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops", "api/iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector", "api/iqm.benchmarks.quantum_volume.quantum_volume.is_successful", "api/iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold", "api/iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis", "api/iqm.benchmarks.randomized_benchmarking", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits", "api/iqm.benchmarks.readout_mitigation", "api/iqm.benchmarks.readout_mitigation.M3IQM", "api/iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation", "api/iqm.benchmarks.readout_mitigation.readout_error_m3", "api/iqm.benchmarks.utils", "api/iqm.benchmarks.utils.bootstrap_counts", "api/iqm.benchmarks.utils.count_2q_layers", "api/iqm.benchmarks.utils.count_native_gates", "api/iqm.benchmarks.utils.get_iqm_backend", "api/iqm.benchmarks.utils.marginal_distribution", "api/iqm.benchmarks.utils.perform_backend_transpilation", "api/iqm.benchmarks.utils.reduce_to_active_qubits", "api/iqm.benchmarks.utils.retrieve_all_counts", "api/iqm.benchmarks.utils.retrieve_all_job_metadata", "api/iqm.benchmarks.utils.set_coupling_map", "api/iqm.benchmarks.utils.sort_batches_by_final_layout", "api/iqm.benchmarks.utils.submit_execute", "api/iqm.benchmarks.utils.timeit", "api/iqm.benchmarks.utils.xrvariable_to_counts", "changelog", "development/development", "development/generate_2qubit_cliffords", "development/how_to_make_your_own_benchmark", "devices/devices", "devices/spark", "devices/star", "examples/example_clifford_rb", "examples/example_clops", "examples/example_experiment_all", "examples/example_ghz", "examples/example_ghz_deneb", "examples/example_gst", "examples/example_interleaved_rb", "examples/example_mirror_rb", "examples/example_qscore", "examples/example_quantum_volume", "examples/example_quantum_volume_deneb", "examples/examples", "index", "license", "readme"], "filenames": ["API.rst", "api/iqm.benchmarks.rst", "api/iqm.benchmarks.benchmark.rst", "api/iqm.benchmarks.benchmark.BenchmarkBase.rst", "api/iqm.benchmarks.benchmark.BenchmarkConfigurationBase.rst", "api/iqm.benchmarks.benchmark_definition.rst", "api/iqm.benchmarks.benchmark_definition.Benchmark.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservation.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.rst", "api/iqm.benchmarks.benchmark_definition.BenchmarkRunResult.rst", "api/iqm.benchmarks.benchmark_definition.add_counts_to_dataset.rst", "api/iqm.benchmarks.benchmark_definition.default_analysis_function.rst", "api/iqm.benchmarks.benchmark_definition.merge_datasets_dac.rst", "api/iqm.benchmarks.benchmark_definition.show_figure.rst", "api/iqm.benchmarks.circuit_containers.rst", "api/iqm.benchmarks.circuit_containers.BenchmarkCircuit.rst", "api/iqm.benchmarks.circuit_containers.CircuitGroup.rst", "api/iqm.benchmarks.circuit_containers.Circuits.rst", "api/iqm.benchmarks.entanglement.rst", "api/iqm.benchmarks.entanglement.ghz.rst", "api/iqm.benchmarks.entanglement.ghz.GHZBenchmark.rst", "api/iqm.benchmarks.entanglement.ghz.GHZConfiguration.rst", "api/iqm.benchmarks.entanglement.ghz.extract_fidelities.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_analysis.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences.rst", "api/iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_linear.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree.rst", "api/iqm.benchmarks.entanglement.ghz.generate_ghz_star.rst", "api/iqm.benchmarks.entanglement.ghz.get_cx_map.rst", "api/iqm.benchmarks.entanglement.ghz.get_edges.rst", "api/iqm.benchmarks.entanglement.ghz.plot_fidelities.rst", "api/iqm.benchmarks.logging_config.rst", "api/iqm.benchmarks.optimization.rst", "api/iqm.benchmarks.optimization.qscore.rst", "api/iqm.benchmarks.optimization.qscore.QScoreBenchmark.rst", "api/iqm.benchmarks.optimization.qscore.QScoreConfiguration.rst", "api/iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1.rst", "api/iqm.benchmarks.optimization.qscore.compute_expectation_value.rst", "api/iqm.benchmarks.optimization.qscore.create_objective_function.rst", "api/iqm.benchmarks.optimization.qscore.cut_cost_function.rst", "api/iqm.benchmarks.optimization.qscore.get_optimal_angles.rst", "api/iqm.benchmarks.optimization.qscore.is_successful.rst", "api/iqm.benchmarks.optimization.qscore.plot_approximation_ratios.rst", "api/iqm.benchmarks.optimization.qscore.qscore_analysis.rst", "api/iqm.benchmarks.optimization.qscore.run_QAOA.rst", "api/iqm.benchmarks.quantum_volume.rst", "api/iqm.benchmarks.quantum_volume.clops.rst", "api/iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.rst", "api/iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.rst", "api/iqm.benchmarks.quantum_volume.clops.clops_analysis.rst", "api/iqm.benchmarks.quantum_volume.clops.plot_times.rst", "api/iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.is_successful.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold.rst", "api/iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix.rst", "api/iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature.rst", "api/iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate.rst", "api/iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits.rst", "api/iqm.benchmarks.readout_mitigation.rst", "api/iqm.benchmarks.readout_mitigation.M3IQM.rst", "api/iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation.rst", "api/iqm.benchmarks.readout_mitigation.readout_error_m3.rst", "api/iqm.benchmarks.utils.rst", "api/iqm.benchmarks.utils.bootstrap_counts.rst", "api/iqm.benchmarks.utils.count_2q_layers.rst", "api/iqm.benchmarks.utils.count_native_gates.rst", "api/iqm.benchmarks.utils.get_iqm_backend.rst", "api/iqm.benchmarks.utils.marginal_distribution.rst", "api/iqm.benchmarks.utils.perform_backend_transpilation.rst", "api/iqm.benchmarks.utils.reduce_to_active_qubits.rst", "api/iqm.benchmarks.utils.retrieve_all_counts.rst", "api/iqm.benchmarks.utils.retrieve_all_job_metadata.rst", "api/iqm.benchmarks.utils.set_coupling_map.rst", "api/iqm.benchmarks.utils.sort_batches_by_final_layout.rst", "api/iqm.benchmarks.utils.submit_execute.rst", "api/iqm.benchmarks.utils.timeit.rst", "api/iqm.benchmarks.utils.xrvariable_to_counts.rst", "changelog.rst", "development/development.rst", "development/generate_2qubit_cliffords.ipynb", "development/how_to_make_your_own_benchmark.ipynb", "devices/devices.rst", "devices/spark.ipynb", "devices/star.ipynb", "examples/example_clifford_rb.ipynb", "examples/example_clops.ipynb", "examples/example_experiment_all.ipynb", "examples/example_ghz.ipynb", "examples/example_ghz_deneb.ipynb", "examples/example_gst.ipynb", "examples/example_interleaved_rb.ipynb", "examples/example_mirror_rb.ipynb", "examples/example_qscore.ipynb", "examples/example_quantum_volume.ipynb", "examples/example_quantum_volume_deneb.ipynb", "examples/examples.rst", "index.rst", "license.rst", "readme.md"], "titles": ["API Reference", "iqm.benchmarks", "iqm.benchmarks.benchmark", "iqm.benchmarks.benchmark.BenchmarkBase", "iqm.benchmarks.benchmark.BenchmarkConfigurationBase", "iqm.benchmarks.benchmark_definition", "iqm.benchmarks.benchmark_definition.Benchmark", "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult", "iqm.benchmarks.benchmark_definition.BenchmarkObservation", "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier", "iqm.benchmarks.benchmark_definition.BenchmarkRunResult", "iqm.benchmarks.benchmark_definition.add_counts_to_dataset", "iqm.benchmarks.benchmark_definition.default_analysis_function", "iqm.benchmarks.benchmark_definition.merge_datasets_dac", "iqm.benchmarks.benchmark_definition.show_figure", "iqm.benchmarks.circuit_containers", "iqm.benchmarks.circuit_containers.BenchmarkCircuit", "iqm.benchmarks.circuit_containers.CircuitGroup", "iqm.benchmarks.circuit_containers.Circuits", "iqm.benchmarks.entanglement", "iqm.benchmarks.entanglement.ghz", "iqm.benchmarks.entanglement.ghz.GHZBenchmark", "iqm.benchmarks.entanglement.ghz.GHZConfiguration", "iqm.benchmarks.entanglement.ghz.extract_fidelities", "iqm.benchmarks.entanglement.ghz.fidelity_analysis", "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences", "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements", "iqm.benchmarks.entanglement.ghz.generate_ghz_linear", "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz", "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney", "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree", "iqm.benchmarks.entanglement.ghz.generate_ghz_star", "iqm.benchmarks.entanglement.ghz.get_cx_map", "iqm.benchmarks.entanglement.ghz.get_edges", "iqm.benchmarks.entanglement.ghz.plot_fidelities", "iqm.benchmarks.logging_config", "iqm.benchmarks.optimization", "iqm.benchmarks.optimization.qscore", "iqm.benchmarks.optimization.qscore.QScoreBenchmark", "iqm.benchmarks.optimization.qscore.QScoreConfiguration", "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1", "iqm.benchmarks.optimization.qscore.compute_expectation_value", "iqm.benchmarks.optimization.qscore.create_objective_function", "iqm.benchmarks.optimization.qscore.cut_cost_function", "iqm.benchmarks.optimization.qscore.get_optimal_angles", "iqm.benchmarks.optimization.qscore.is_successful", "iqm.benchmarks.optimization.qscore.plot_approximation_ratios", "iqm.benchmarks.optimization.qscore.qscore_analysis", "iqm.benchmarks.optimization.qscore.run_QAOA", "iqm.benchmarks.quantum_volume", "iqm.benchmarks.quantum_volume.clops", "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark", "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration", "iqm.benchmarks.quantum_volume.clops.clops_analysis", "iqm.benchmarks.quantum_volume.clops.plot_times", "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times", "iqm.benchmarks.quantum_volume.quantum_volume", "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark", "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration", "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities", "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop", "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std", "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs", "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops", "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector", "iqm.benchmarks.quantum_volume.quantum_volume.is_successful", "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold", "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis", "iqm.benchmarks.randomized_benchmarking", "iqm.benchmarks.randomized_benchmarking.clifford_rb", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis", "iqm.benchmarks.randomized_benchmarking.interleaved_rb", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis", "iqm.benchmarks.randomized_benchmarking.mirror_rb", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix", "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis", "iqm.benchmarks.randomized_benchmarking.multi_lmfit", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature", "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate", "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits", "iqm.benchmarks.readout_mitigation", "iqm.benchmarks.readout_mitigation.M3IQM", "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation", "iqm.benchmarks.readout_mitigation.readout_error_m3", "iqm.benchmarks.utils", "iqm.benchmarks.utils.bootstrap_counts", "iqm.benchmarks.utils.count_2q_layers", "iqm.benchmarks.utils.count_native_gates", "iqm.benchmarks.utils.get_iqm_backend", "iqm.benchmarks.utils.marginal_distribution", "iqm.benchmarks.utils.perform_backend_transpilation", "iqm.benchmarks.utils.reduce_to_active_qubits", "iqm.benchmarks.utils.retrieve_all_counts", "iqm.benchmarks.utils.retrieve_all_job_metadata", "iqm.benchmarks.utils.set_coupling_map", "iqm.benchmarks.utils.sort_batches_by_final_layout", "iqm.benchmarks.utils.submit_execute", "iqm.benchmarks.utils.timeit", "iqm.benchmarks.utils.xrvariable_to_counts", "Changelog", "Development", "2-Qubit Clifford Group Decomposition", "How to make your own benchmark?", "Devices", "Benchmarking IQM Spark", "Benchmarking IQM Star", "Clifford Randomized Benchmarking (RB)", "Circuit Layer Operations Per Second (CLOPS)", "IQM Benchmarks: Summary Notebook", "Greenberger\u2013Horne\u2013Zeilinger (GHZ) State Fidelity", "Greenberger\u2013Horne\u2013Zeilinger (GHZ) State Fidelity", "Compressive Gate Set Tomography (GST)", "Interleaved Randomized Benchmarking (IRB)", "Mirror Randomized Benchmarking (MRB)", "Q-Score", "Quantum Volume (QV)", "QV on Deneb", "Examples", "IQM Benchmarks", "License", "IQM Benchmarks"], "terms": {"": [1, 51, 96, 102, 110, 112, 117, 122, 136, 137, 142, 148, 151, 152], "python": 1, "librari": [1, 76, 81, 110, 133, 143], "suit": [1, 152], "qcvv": [1, 134, 150, 152], "subpackag": [1, 19, 36, 49, 68, 69, 74, 79], "modul": [1, 5, 15, 19, 35, 36, 49, 68, 69, 74, 79, 150], "gener": [2, 3, 18, 19, 21, 22, 27, 28, 29, 30, 31, 32, 38, 46, 51, 54, 57, 66, 72, 76, 77, 81, 84, 85, 86, 89, 90, 99, 100, 101, 116, 117, 131, 136, 137, 138, 140, 141, 142, 143, 144, 151], "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 20, 21, 22, 37, 38, 39, 50, 51, 52, 56, 57, 58, 70, 71, 72, 75, 76, 77, 80, 81, 82, 99, 112, 113, 131, 133, 134, 151, 152], "inherit": [2, 3, 5, 15, 20, 37, 50, 56, 70, 75, 80, 112], "benchmarkbas": [2, 4, 152], "abc": [2, 3, 5, 6, 20, 37, 50, 56, 70, 75, 80], "benchmarkconfigurationbas": [2, 3, 6, 20, 22, 37, 39, 50, 52, 56, 58, 70, 71, 75, 76, 80, 81, 152], "pydant": [2, 4, 20, 22, 37, 39, 50, 52, 56, 58, 70, 71, 75, 76, 80, 81], "main": [2, 7, 8, 20, 37, 50, 56, 70, 75, 80, 136], "basemodel": [2, 4, 20, 37, 50, 56, 70, 75, 80], "backend": [3, 6, 21, 22, 23, 30, 38, 46, 51, 52, 57, 58, 66, 72, 77, 82, 84, 85, 86, 99, 100, 107, 108, 110, 111, 113, 114, 115, 119, 120, 122, 123, 126, 127, 128, 131, 134, 141, 142, 152], "iqmbackendbas": [3, 6, 21, 38, 51, 57, 72, 77, 82, 84, 85, 86, 99, 100, 101, 107, 108, 110, 111, 114, 119, 120, 122, 126, 128], "configur": [3, 4, 6, 21, 22, 38, 39, 51, 52, 57, 58, 65, 71, 72, 76, 77, 81, 82, 131, 151, 152], "base": [3, 4, 5, 6, 7, 8, 9, 10, 16, 17, 18, 21, 22, 25, 32, 38, 39, 41, 51, 52, 57, 58, 71, 72, 76, 77, 81, 82, 94, 113, 131, 132, 136, 137, 151], "The": [3, 6, 7, 12, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 30, 32, 33, 34, 38, 39, 42, 48, 51, 52, 54, 57, 58, 60, 61, 63, 64, 71, 72, 76, 77, 81, 82, 83, 84, 85, 95, 105, 109, 115, 117, 119, 120, 122, 123, 124, 125, 129, 136, 137, 138, 141, 142, 143, 147, 148, 149, 151, 152], "implement": [3, 5, 6, 21, 22, 26, 141, 142], "all": [3, 4, 6, 7, 16, 17, 18, 21, 22, 32, 34, 38, 45, 51, 55, 57, 59, 60, 61, 64, 65, 71, 72, 76, 77, 82, 99, 105, 107, 108, 113, 124, 125, 131, 134, 136, 137, 138, 140, 141, 142, 144, 146, 147, 148, 149, 151, 152], "from": [3, 4, 6, 7, 11, 21, 22, 23, 30, 32, 33, 39, 42, 48, 52, 54, 55, 57, 58, 59, 64, 66, 71, 76, 81, 83, 92, 105, 106, 109, 113, 115, 117, 120, 124, 125, 126, 130, 131, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152], "which": [3, 6, 7, 8, 21, 22, 23, 30, 33, 38, 39, 47, 49, 51, 52, 53, 57, 67, 71, 72, 73, 76, 77, 78, 81, 82, 88, 99, 105, 109, 113, 123, 136, 137, 141, 142, 143, 151, 152], "thei": [3, 17, 143], "method": [3, 4, 6, 7, 8, 9, 10, 16, 17, 18, 21, 22, 25, 38, 39, 51, 52, 57, 58, 71, 72, 76, 77, 81, 82, 113, 122, 131, 136, 137, 139, 140, 141, 142, 143, 147, 148], "paramet": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 136, 137, 139, 140, 141, 142, 143], "abstract": [3, 6, 143], "classmethod": [3, 6, 7], "name": [3, 4, 6, 7, 8, 16, 17, 18, 22, 34, 39, 46, 52, 54, 58, 66, 71, 76, 81, 92, 98, 99, 115, 120, 123, 131, 133, 134, 136, 137, 138, 140, 141, 142, 143, 144, 146, 147, 148, 151], "return": [3, 6, 9, 11, 12, 13, 16, 17, 18, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 77, 78, 82, 83, 84, 85, 86, 87, 88, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134], "execute_full_benchmark": 3, "execut": [3, 4, 6, 9, 16, 17, 18, 21, 32, 36, 38, 46, 49, 51, 52, 57, 58, 59, 66, 71, 72, 76, 77, 81, 82, 83, 96, 102, 107, 108, 109, 122, 128, 129, 130, 131, 134, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 148, 151, 152], "full": [3, 52, 58, 143, 152], "given": [3, 6, 7, 11, 21, 22, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 44, 49, 51, 57, 64, 65, 74, 83, 100, 101, 127, 136, 137, 141, 142, 143, 152], "static": [3, 6, 21, 38, 51, 57, 72, 77, 82], "check_requir": 3, "all_benchmark": 3, "ordereddict": 3, "str": [3, 4, 6, 7, 8, 9, 11, 16, 17, 18, 21, 22, 23, 25, 26, 39, 41, 42, 43, 46, 48, 51, 52, 54, 55, 57, 58, 59, 62, 63, 64, 66, 71, 72, 76, 77, 81, 82, 83, 84, 85, 86, 96, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 113, 114, 115, 117, 119, 120, 121, 122, 123, 124, 125, 128, 130, 133, 134, 136, 140, 141, 142, 143, 145, 147, 148], "check": [3, 45, 65, 133, 136, 137], "whether": [3, 4, 22, 39, 45, 46, 48, 51, 52, 57, 58, 65, 66, 71, 76, 100, 105, 117, 122, 141, 142, 144, 151], "requir": [3, 4, 22, 39, 52, 58, 71, 76, 81, 133, 141, 143, 151, 152], "ar": [3, 4, 7, 11, 16, 17, 18, 21, 22, 32, 33, 57, 58, 86, 105, 111, 121, 123, 131, 133, 136, 137, 141, 142, 143, 149, 151, 152], "met": 3, "valid": [3, 110, 111, 150, 152], "dictionari": [3, 4, 7, 11, 22, 39, 42, 51, 52, 55, 57, 58, 59, 62, 63, 64, 71, 76, 81, 82, 84, 85, 95, 99, 100, 101, 103, 107, 108, 114, 115, 117, 119, 121, 127, 130, 138, 140, 143, 144], "type": [3, 4, 6, 8, 9, 11, 12, 13, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 136, 143, 151], "generate_requir": 3, "none": [3, 4, 6, 7, 8, 16, 17, 18, 22, 30, 33, 39, 46, 51, 52, 57, 58, 71, 76, 81, 84, 85, 86, 90, 95, 98, 99, 100, 101, 105, 107, 108, 110, 113, 117, 122, 123, 124, 128, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 148, 152], "attribut": [3, 4, 6, 7, 8, 9, 10, 16, 17, 18, 21, 22, 38, 39, 51, 52, 57, 58, 71, 72, 76, 77, 81, 82, 129, 143, 147, 148, 151], "shot": [4, 22, 39, 52, 57, 58, 71, 76, 81, 107, 108, 113, 114, 128, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 152], "int": [4, 9, 11, 16, 17, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 41, 42, 43, 44, 46, 48, 51, 52, 54, 57, 58, 59, 62, 65, 66, 71, 76, 81, 82, 83, 84, 85, 86, 87, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 111, 113, 114, 117, 118, 121, 122, 124, 126, 127, 128, 130, 141, 142, 143], "256": [4, 39, 52, 58, 71, 76, 81, 138, 140, 145, 146], "max_gates_per_batch": [4, 22, 39, 52, 58, 71, 76, 81, 107, 108, 128, 136, 137, 138, 139, 140, 145, 147, 148, 152], "calset_id": [4, 22, 39, 52, 58, 71, 76, 81, 107, 108, 128, 136, 137, 138, 139, 140, 144, 145, 146, 147, 148, 152], "routing_method": [4, 22, 39, 52, 58, 71, 76, 81, 85, 86, 122, 136, 137, 138, 139, 140, 145, 147, 148, 152], "liter": [4, 22, 39, 52, 58, 71, 76, 81, 126], "basic": [4, 22, 39, 52, 58, 71, 76, 81, 85, 86], "lookahead": [4, 22, 39, 52, 58, 71, 76, 81], "stochast": [4, 22, 39, 52, 58, 71, 76, 81], "sabr": [4, 22, 39, 52, 58, 71, 76, 81, 122, 136, 137, 138, 139, 140, 141, 142, 143, 147, 148, 152], "physical_layout": [4, 22, 39, 52, 58, 71, 76, 81, 126, 136, 137, 138, 139, 140, 145, 147, 148, 152], "fix": [4, 22, 39, 52, 58, 71, 76, 81, 82, 85, 100, 107, 109, 126, 131, 136, 137, 138, 139, 140, 143, 147, 148, 152], "batch": [4, 17, 22, 39, 52, 58, 71, 76, 81, 107, 108, 126, 127, 128, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148], "number": [4, 21, 22, 26, 27, 28, 29, 30, 31, 32, 34, 36, 38, 39, 41, 43, 44, 46, 48, 49, 52, 57, 58, 65, 66, 68, 71, 76, 81, 82, 83, 84, 85, 86, 87, 96, 99, 100, 101, 102, 107, 108, 113, 114, 117, 118, 119, 128, 136, 137, 139, 140, 141, 142, 143], "us": [4, 6, 9, 16, 21, 22, 23, 25, 26, 30, 32, 33, 34, 35, 39, 46, 48, 51, 52, 58, 81, 83, 98, 105, 113, 115, 128, 131, 133, 134, 136, 137, 141, 143, 144, 149, 151], "circuit": [4, 7, 10, 15, 16, 17, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 38, 39, 42, 49, 51, 52, 57, 58, 59, 62, 65, 66, 71, 72, 76, 77, 79, 81, 82, 83, 84, 85, 86, 87, 95, 96, 99, 100, 101, 102, 107, 108, 110, 113, 114, 118, 119, 122, 123, 127, 128, 130, 131, 133, 134, 138, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150], "default": [4, 6, 12, 22, 39, 52, 57, 58, 66, 71, 76, 81, 101, 105, 113, 117, 126, 136, 138, 140, 143, 144, 146, 148], "i": [4, 6, 7, 22, 23, 27, 30, 32, 34, 38, 39, 45, 47, 48, 51, 52, 53, 57, 58, 65, 66, 67, 71, 72, 73, 76, 77, 78, 81, 82, 83, 87, 88, 91, 106, 110, 113, 117, 122, 126, 131, 133, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152], "2": [4, 33, 39, 45, 58, 65, 81, 100, 106, 118, 132, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152], "8": [4, 106, 133, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 151, 152], "maximum": [4, 48, 107, 108, 128, 136, 137, 143], "gate": [4, 21, 22, 27, 31, 32, 33, 39, 49, 51, 52, 58, 68, 69, 72, 74, 76, 77, 81, 84, 86, 95, 98, 99, 100, 101, 103, 105, 107, 108, 110, 118, 119, 122, 128, 131, 136, 141, 142, 145, 149, 150, 152], "per": [4, 49, 52, 58, 71, 81, 83, 85, 86, 87, 107, 108, 113, 114, 128, 143, 149, 150], "option": [4, 22, 33, 39, 46, 57, 58, 76, 85, 86, 95, 98, 100, 101, 105, 107, 108, 110, 117, 122, 123, 124, 128, 131, 134, 139, 140, 142, 143, 148, 150], "calibr": [4, 6, 22, 23, 33, 57, 58, 107, 108, 113, 114, 128, 131, 140, 141, 142, 144, 146, 148], "id": [4, 128, 139, 140, 144, 146], "last": 4, "avail": [4, 151, 152], "qiskit": [4, 6, 39, 52, 58, 76, 81, 110, 122, 131, 133, 134, 136, 143], "rout": [4, 52, 58, 81, 122, 139, 140, 141, 142, 143, 147, 148], "transpil": [4, 16, 21, 22, 25, 26, 39, 51, 52, 58, 81, 99, 100, 110, 114, 119, 122, 127, 131, 134, 136, 139, 140, 141, 142, 143, 147, 148], "physic": [4, 22, 39, 51, 52, 57, 58, 62, 76, 81, 85, 126, 139, 140, 143, 147, 148, 150], "layout": [4, 8, 11, 16, 17, 22, 34, 39, 51, 52, 57, 58, 81, 82, 107, 108, 115, 122, 126, 131, 136, 139, 140, 141, 142, 143, 145, 147, 148], "constrain": [4, 126, 152], "dure": [4, 13, 57, 72, 77], "select": [4, 22, 39, 58, 64, 143], "qubit": [4, 8, 9, 11, 16, 17, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 41, 42, 48, 49, 51, 52, 57, 58, 62, 66, 68, 71, 72, 76, 81, 82, 83, 84, 85, 86, 96, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 111, 113, 115, 118, 122, 123, 126, 127, 131, 132, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150], "initi": [4, 6, 22, 35, 115, 136, 143], "allow": [4, 131, 136, 137, 141, 142, 152], "ani": [4, 8, 25, 26, 55, 57, 76, 82, 87, 105, 107, 108, 114, 123, 125, 133, 137, 151, 152], "other": [4, 22, 131, 136, 137, 151, 152], "accord": [4, 21, 28, 29, 38, 84, 126, 127, 133, 139, 140, 143, 147, 148], "final": [4, 6, 33, 52, 57, 58, 62, 81, 122, 126, 127, 136], "measur": [4, 21, 22, 25, 38, 41, 51, 52, 57, 58, 62, 71, 76, 81, 109, 114, 119, 126, 127, 134, 136, 137, 139, 141, 142, 143], "model_computed_field": [4, 22, 39, 52, 58, 71, 76, 81], "classvar": [4, 22, 39, 52, 58, 71, 76, 81], "dict": [4, 7, 11, 22, 25, 26, 39, 41, 42, 48, 51, 52, 54, 55, 57, 58, 59, 62, 63, 64, 71, 76, 81, 82, 83, 84, 85, 86, 95, 96, 99, 100, 101, 102, 103, 105, 107, 108, 109, 114, 115, 117, 119, 121, 124, 125, 127, 128, 130, 134], "computedfieldinfo": [4, 22, 39, 52, 58, 71, 76, 81], "A": [4, 6, 7, 9, 10, 11, 13, 16, 17, 21, 22, 23, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 47, 51, 52, 53, 55, 57, 58, 63, 64, 67, 71, 72, 73, 76, 81, 82, 84, 85, 88, 95, 98, 100, 101, 107, 108, 117, 121, 122, 123, 126, 130, 136, 141, 142, 143, 151, 152], "comput": [4, 21, 22, 24, 30, 39, 41, 42, 52, 57, 58, 59, 60, 61, 63, 71, 76, 81, 95, 96, 102, 121, 133, 136, 137, 141, 143, 150, 151, 152], "field": [4, 6, 22, 39, 52, 58, 71, 76, 81, 151], "correspond": [4, 22, 38, 39, 47, 49, 51, 52, 53, 57, 58, 62, 66, 67, 71, 72, 73, 76, 77, 78, 81, 82, 83, 84, 85, 88, 105, 109, 114, 127, 131, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148], "object": [4, 7, 8, 9, 10, 16, 17, 18, 21, 22, 24, 34, 39, 52, 57, 58, 71, 76, 81, 82, 90, 107, 108, 120, 124, 125, 128, 143, 147, 148, 151], "model_config": [4, 22, 39, 52, 58, 71, 76, 81], "configdict": [4, 22, 39, 52, 58, 71, 76, 81], "model": [4, 22, 39, 52, 58, 71, 76, 81, 98, 104, 105, 136], "should": [4, 6, 8, 10, 21, 22, 30, 35, 39, 52, 58, 71, 76, 81, 100, 131, 139, 140, 141, 142, 143, 151], "conform": [4, 22, 39, 52, 58, 71, 76, 81], "config": [4, 22, 39, 52, 58, 71, 76, 81], "model_field": [4, 22, 39, 52, 58, 71, 76, 81], "fieldinfo": [4, 22, 39, 52, 58, 71, 76, 81], "annot": [4, 22, 39, 52, 58, 71, 76, 81, 115, 151], "true": [4, 22, 25, 39, 52, 57, 58, 71, 76, 81, 105, 122, 133, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 152], "union": [4, 22, 39, 52, 58, 71, 76, 81, 115, 143, 151], "nonetyp": [4, 22, 39, 52, 58, 71, 76, 81], "fals": [4, 22, 39, 52, 58, 66, 71, 76, 81, 105, 113, 117, 122, 136, 138, 140, 147], "metadata": [4, 21, 22, 34, 38, 39, 51, 52, 55, 57, 58, 71, 72, 76, 77, 81, 82, 125], "about": [4, 22, 39, 52, 58, 71, 76, 81, 131, 141], "defin": [4, 5, 6, 7, 22, 30, 32, 39, 52, 58, 71, 76, 81, 99, 123, 134, 136, 141, 142, 151, 152], "map": [4, 7, 22, 30, 33, 39, 41, 42, 52, 58, 71, 76, 81, 122, 126, 127, 131, 141, 142], "thi": [4, 5, 6, 15, 16, 21, 22, 30, 34, 39, 45, 52, 58, 65, 71, 76, 81, 106, 115, 132, 133, 134, 135, 136, 137, 141, 142, 143, 149, 151, 152], "replac": [4, 22, 39, 52, 58, 71, 76, 81, 151], "__fields__": [4, 22, 39, 52, 58, 71, 76, 81], "v1": [4, 22, 39, 52, 58, 71, 76, 81], "function": [5, 6, 20, 37, 38, 42, 47, 50, 51, 53, 56, 57, 67, 70, 72, 73, 75, 77, 78, 80, 82, 88, 89, 91, 92, 94, 95, 97, 98, 104, 106, 112, 116, 129, 131, 143], "benchmarkobservationidentifi": [5, 8, 131, 138, 140, 144, 146, 147, 148], "benchmarkobserv": [5, 7, 34, 131, 138, 140, 144, 146, 147, 148], "benchmarkrunresult": [5, 6, 7, 12, 21, 24, 38, 47, 51, 53, 57, 67, 72, 73, 77, 78, 82, 88, 131], "benchmarkanalysisresult": [5, 6, 12, 21, 24, 38, 47, 51, 53, 57, 67, 72, 73, 77, 78, 82, 88, 131], "kwarg": 6, "run": [6, 7, 8, 10, 21, 22, 24, 38, 42, 47, 51, 52, 53, 57, 67, 72, 73, 77, 78, 82, 88, 134, 136, 137, 140, 143, 149, 152], "cortex": [6, 11], "experi": [6, 34, 38, 46, 47, 51, 53, 54, 57, 58, 60, 61, 67, 72, 73, 77, 78, 82, 88, 97, 104, 105, 109, 111, 140, 149], "In": [6, 136, 137, 143, 151, 152], "order": [6, 23, 33, 34, 98, 106, 141, 142, 152], "write": [6, 113, 133, 134, 151], "new": [6, 7, 11, 123, 131, 134, 136, 137, 143, 148, 152], "recommend": [6, 143, 151, 152], "deriv": [6, 151], "baseclass": 6, "addition": [6, 141, 142], "custom": [6, 39, 58, 136, 137, 140, 146, 147, 148, 152], "analysi": [6, 7, 12, 38, 47, 51, 53, 54, 57, 67, 72, 73, 77, 78, 82, 88, 131, 136], "can": [6, 10, 16, 22, 23, 36, 38, 49, 57, 115, 131, 136, 141, 142, 143, 147, 148, 152], "give": [6, 42, 131, 136, 141, 142, 143, 151], "pointer": 6, "analysis_funct": [6, 21, 38, 51, 57, 72, 77, 82, 134], "accept": [6, 46, 131, 151], "analysisresult": [6, 7, 21, 24, 38, 47, 51, 53, 57, 67, 72, 73, 77, 78, 82, 88, 131, 134], "its": [6, 92, 123, 131, 136, 137, 151], "input": [6, 11, 52, 58, 87, 106, 110, 111, 115, 126, 139, 140, 143], "result": [6, 7, 8, 10, 11, 12, 34, 36, 38, 41, 47, 48, 49, 51, 53, 57, 58, 65, 66, 67, 72, 73, 77, 78, 82, 88, 96, 102, 104, 126, 131, 134, 136, 137, 140, 147, 148, 151, 152], "onli": [6, 12, 52, 58, 123, 136, 137, 141, 142, 143, 145, 151], "pass": [6, 12, 87, 115, 122, 134, 140, 146], "through": [6, 12, 26, 151], "iqmbackend": [6, 57, 82, 107, 108, 148], "iqmfacadebackend": 6, "dataset": [6, 7, 10, 11, 13, 21, 24, 25, 26, 34, 38, 51, 54, 57, 72, 77, 82, 89, 91, 105, 130, 131, 134, 136, 137, 138, 140, 141, 143, 144, 147, 148], "overridden": 6, "an": [6, 16, 17, 21, 22, 24, 25, 38, 51, 77, 78, 106, 110, 114, 115, 131, 133, 134, 136, 137, 141, 142, 143, 151, 152], "xarrai": [6, 7, 11, 13, 21, 25, 38, 51, 57, 72, 77, 82, 130, 131, 134], "contain": [6, 7, 9, 10, 13, 15, 16, 17, 18, 21, 23, 24, 25, 26, 34, 82, 84, 107, 108, 123, 131, 136, 137, 143, 147, 148, 149, 151, 152], "inform": [6, 10, 33, 35, 151], "necessari": [6, 136, 141, 142, 152], "analys": 6, "calibration_set_id": [6, 142, 148], "uuid": 6, "calibrationsetid": 6, "latest": [6, 128, 141, 142, 150], "set": [6, 16, 17, 21, 39, 52, 58, 84, 85, 87, 93, 105, 119, 126, 128, 133, 136, 137, 141, 144, 149, 150, 152], "runresult": [6, 7, 10, 21, 24, 38, 47, 51, 53, 57, 67, 72, 73, 77, 78, 82, 88, 131, 134], "analyz": [6, 10, 21, 24, 118, 134, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 152], "run_index": [6, 140, 147, 148], "1": [6, 39, 43, 64, 81, 85, 86, 97, 100, 106, 122, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152], "intern": [6, 17], "perform": [6, 39, 52, 58, 98, 109, 122, 136, 143, 149, 151, 152], "make": [6, 57, 128, 132, 136, 150, 151, 152], "shallow": 6, "copi": [6, 117, 133, 151], "produc": [6, 33, 58, 152], "therefor": [6, 45, 65], "chang": [6, 131, 148, 150, 151], "data": [6, 7, 11, 21, 22, 23, 25, 33, 54, 66, 90, 93, 98, 104, 113, 134, 139, 140, 141, 142, 143, 147, 148], "just": [6, 136], "structur": [6, 136, 137], "arrai": [6, 51, 71, 76, 81, 105, 106, 111, 115, 143], "index": [6, 21, 23, 30, 32, 33, 51, 57, 85, 137, 147, 148, 150], "construct": [6, 22, 27], "updat": [6, 51, 52, 131, 136, 137, 139, 140, 152], "core": 7, "circuit_contain": 7, "plot": [7, 21, 24, 34, 66, 105, 131, 134, 136, 137, 138, 140, 141, 142, 144, 152], "matplotlib": [7, 134, 136, 137, 143], "figur": [7, 14, 34, 46, 54, 66, 105, 134, 140, 143], "factori": [7, 16, 17, 18], "observ": [7, 8, 9, 21, 24, 34, 54, 105, 131, 136, 137, 138, 140, 141, 142, 144, 146, 147, 148], "list": [7, 9, 11, 13, 16, 17, 18, 21, 22, 23, 25, 26, 30, 32, 33, 34, 38, 40, 41, 42, 44, 46, 48, 51, 52, 57, 59, 60, 61, 62, 63, 65, 66, 81, 82, 83, 84, 85, 86, 87, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 130, 131, 133, 137, 141, 142, 143, 147, 148, 151, 152], "dataclass": [7, 8, 10], "store": [7, 8, 10, 34, 131, 152], "consist": [7, 141, 142, 151], "kei": [7, 41, 48, 51, 57, 62, 81, 84, 119, 121, 127, 133, 143, 147, 148], "valu": [7, 8, 21, 22, 26, 30, 41, 42, 48, 51, 52, 81, 84, 97, 119, 121, 122, 127, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148], "pair": [7, 23, 31, 33, 51, 111, 136], "plot_nam": 7, "plot_al": [7, 134, 136, 137, 139, 140, 141, 142, 143, 146, 147, 148], "from_run_result": 7, "creat": [7, 21, 22, 30, 31, 38, 42, 47, 51, 53, 57, 67, 72, 73, 77, 78, 82, 88, 132, 134, 142, 148, 152], "identifi": [8, 9, 11, 57, 82, 98, 105, 107, 108, 110, 124, 130, 136, 138, 140, 141, 142, 143, 144, 146, 147, 148, 151], "uncertainti": [8, 26, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148], "singl": [8, 10, 13, 16, 18, 22, 34, 39, 40, 51, 52, 57, 58, 84, 91, 131, 136, 137, 143, 152], "string": [8, 9, 11, 17, 18, 124, 152], "qubit_indic": [9, 16, 138, 140, 144, 146, 147, 148], "eas": 9, "indic": [9, 57, 62, 121, 127, 151], "wa": [9, 45, 65, 109, 136, 137, 151], "properti": [9, 16, 17], "string_identifi": [9, 136, 140, 141, 142, 143], "version": [9, 89, 133, 136, 137, 151, 152], "enough": [10, 141, 142], "those": [10, 57, 62, 126, 136, 137, 143, 151], "count": [11, 21, 22, 24, 41, 42, 48, 57, 59, 83, 96, 102, 109, 114, 115, 117, 119, 124, 125, 130, 131, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148], "add": [11, 17, 21, 32, 38, 51, 57, 72, 77, 82, 84, 129, 131, 133, 151, 152], "job": [11, 51, 55, 57, 82, 107, 108, 124, 134, 138, 139, 140, 144, 145, 147, 148], "If": [11, 22, 39, 81, 136, 137, 143, 145, 151], "same": [11, 17, 23, 33, 81, 136, 137, 139, 140, 141, 142, 151], "alreadi": [11, 138], "present": 11, "old": 11, "both": [11, 58, 136, 144, 152], "ad": [11, 131, 138, 140, 141, 144, 145, 147, 148], "togeth": [11, 152], "bitstr": [11, 41, 42, 43, 48, 64, 109, 121], "current": [11, 22, 51, 113, 141, 142, 143, 152], "instanc": [11, 16, 17, 25, 26, 46, 131, 143], "xr": [11, 13, 21, 25, 26, 34, 38, 51, 54, 57, 72, 77, 82, 105, 130, 134], "merg": [11, 13], "where": [11, 16, 17, 22, 86, 131, 136, 137, 141, 142, 143, 151], "dataset_merg": 11, "recurs": 13, "minim": [13, 22, 30, 32, 104, 141, 142], "size": [13, 22, 30, 36, 38, 46, 48, 134, 136, 140, 146], "dateset": 13, "fig": [14, 34, 134], "show": [14, 134, 136, 137, 140, 141, 142], "close": [14, 134], "easili": [15, 131, 152], "interact": [15, 131], "quantum": [15, 21, 22, 25, 27, 28, 29, 30, 31, 38, 49, 51, 52, 56, 57, 58, 59, 62, 65, 67, 84, 85, 96, 100, 101, 102, 113, 114, 118, 119, 122, 123, 128, 131, 141, 142, 143, 149, 150, 152], "circuitgroup": [15, 16, 21, 131], "benchmarkcircuit": [15, 18, 131], "circuit_group": 16, "group": [16, 17, 72, 132, 136, 150], "purpos": [16, 17, 151], "typic": [16, 17, 136, 137], "repres": [16, 17, 54, 66, 121, 151], "exampl": [16, 89, 131, 132, 134, 135, 141, 143, 150, 151, 152], "insid": [16, 131], "get_circuit_group_by_nam": 16, "get": [16, 92, 120, 140, 145], "desir": [16, 17], "doe": [16, 22, 151], "exist": [16, 18, 131, 136, 137, 152], "group_nam": 16, "integ": [16, 17, 22, 57, 62, 85], "qubit_layouts_by_index": [16, 17], "tupl": [16, 17, 22, 23, 26, 30, 41, 42, 46, 48, 51, 52, 54, 57, 62, 66, 82, 98, 99, 100, 101, 103, 105, 107, 114, 122, 127, 128], "qubit_layout": [16, 17, 21, 23, 25, 26, 30, 32, 33, 34, 136, 140, 141, 142, 143], "qiskit_iqm": [17, 22, 131, 134, 136, 137, 140, 141, 142, 148], "iqm_circuit": 17, "iqmcircuit": [17, 21, 27, 28, 29, 30, 31, 51, 57, 62, 82, 84, 85, 86, 95, 99, 100, 101, 103, 107, 108, 110, 114, 118, 119, 122, 123, 127, 128, 131], "It": [17, 133, 136, 137, 141, 152], "common": [17, 94, 151], "activ": [17, 123, 152], "add_circuit": 17, "circuit_nam": 17, "get_circuits_by_nam": 17, "share": [17, 151, 152], "found": [17, 23, 136, 137, 152], "benchmark_circuit": 18, "get_benchmark_circuits_by_nam": 18, "request": 18, "otherwis": [18, 151], "ghz": [19, 131, 149, 150, 152], "verifi": [19, 110, 133], "greenberg": [19, 21, 136, 137, 149, 150], "horn": [19, 21, 136, 137, 149, 150], "zeiling": [19, 21, 136, 137, 149, 150], "state": [19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 96, 102, 131, 134, 143, 149, 150, 151, 152], "ghzbenchmark": [20, 22, 136, 137, 140, 141, 142], "benchmark_definit": [20, 22, 37, 39, 50, 52, 56, 58, 70, 71, 75, 76, 80, 81, 134], "ghzconfigur": [20, 21, 136, 137, 140, 141, 142], "estim": [21, 22, 25, 26, 36, 38, 52, 57, 72, 77, 82, 83, 109, 131, 136, 137, 139, 140, 141, 142, 144], "qualiti": [21, 136, 137], "fidel": [21, 22, 23, 24, 25, 26, 32, 33, 34, 52, 68, 69, 72, 74, 77, 79, 82, 83, 98, 105, 131, 143, 149, 150, 152], "generate_native_ghz": 21, "qubit_count": [21, 22], "routin": [21, 22, 39, 58, 98], "prepar": [21, 134, 136, 141, 142, 143, 151], "nativ": [21, 33, 100, 101, 103, 110, 119, 131, 136], "topologi": [21, 39, 122, 126, 131, 136, 137, 142], "subset": [21, 23, 25, 26, 30, 32, 33], "system": [21, 22, 23, 25, 26, 30, 32, 33, 113, 136, 137, 143, 151, 152], "protocol": [21, 23, 25, 26, 30, 32, 33, 136, 137, 149], "0": [21, 23, 30, 32, 33, 38, 45, 58, 81, 84, 85, 86, 106, 122, 126, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152], "smaller": [21, 22, 30, 136], "equal": [21, 30, 57, 131, 136, 137], "quantumcircuit": [21, 27, 28, 29, 30, 31, 38, 51, 57, 62, 82, 84, 95, 99, 100, 101, 107, 108, 114, 118, 122, 123, 127, 128, 131, 133, 134, 143], "generate_coherence_meas_circuit": 21, "take": [21, 22, 122, 129, 131, 136, 137, 143, 152], "output": [21, 35, 59, 60, 61, 62, 63, 64, 65, 113, 131, 133, 136, 137, 143, 147, 148, 152], "need": [21, 51, 115, 136, 137, 143, 152], "via": [21, 22, 136, 137, 143], "mult": 21, "q": [21, 36, 38, 39, 45, 140, 143, 149, 150, 152], "coher": [21, 22, 25, 136, 137, 140, 141, 142], "qc_list_transpil": 21, "append_rm": 21, "num_rm": [21, 22, 141, 142], "append": [21, 51, 133, 134, 143], "1q": [21, 103, 131, 136], "clifford": [21, 69, 70, 71, 72, 73, 75, 76, 77, 84, 95, 99, 100, 101, 103, 110, 111, 131, 132, 144, 149, 150, 152], "sampl": [21, 42, 48, 58, 64, 76, 81, 83, 84, 85, 86, 87, 99, 100, 101, 117, 143], "uniformli": [21, 136], "random": [21, 22, 39, 51, 68, 70, 75, 76, 80, 81, 84, 86, 94, 100, 101, 117, 131, 133, 137, 139, 141, 142, 143, 146, 149, 150, 152], "param": [21, 27, 28, 29, 31, 51, 60, 72, 77, 87, 91, 93, 95, 96, 107, 108, 109, 111, 121, 124, 125], "how": [21, 132, 135, 143, 149, 150, 151, 152], "mani": [21, 51, 131, 141], "origin": [21, 57, 62, 117, 122, 123, 151], "generate_readout_circuit": 21, "wrapper": 21, "creation": [21, 141], "differ": [21, 54, 81, 136, 141, 142, 143, 147, 148, 149, 151, 152], "all_circuits_list": 21, "add_configuration_to_dataset": 21, "further": [21, 131], "storag": [21, 131], "1024": 22, "state_generation_routin": [22, 136, 137, 140, 141, 142], "tree": [22, 30, 32, 136, 140, 141, 142], "custom_qubits_arrai": [22, 38, 39, 58, 131, 136, 137, 140, 141, 142, 146, 147, 148, 152], "sequenc": [22, 39, 52, 57, 58, 71, 76, 81, 82, 83, 96, 99, 100, 101, 102, 122, 126, 136, 138, 140, 143, 144], "qiskit_optim_level": [22, 39, 52, 58, 81, 85, 86, 122, 136, 137, 139, 140, 145, 147, 148, 152], "3": [22, 39, 52, 58, 65, 106, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152], "optimize_sqg": [22, 39, 51, 52, 58, 122, 136, 137, 139, 140, 147, 148, 152], "bool": [22, 39, 45, 46, 48, 51, 52, 57, 58, 65, 66, 71, 76, 105, 113, 117, 122], "fidelity_routin": [22, 136, 137, 140, 141, 142], "100": [22, 52, 58, 117, 136, 137, 139, 140, 143, 146, 152], "rem": [22, 25, 39, 58, 66, 114, 131, 136, 137, 140, 141, 142, 146, 147, 148, 152], "mit_shot": [22, 39, 57, 58, 114, 136, 137, 140, 141, 142, 146, 147, 148, 152], "1000": [22, 39, 58, 114, 134, 136, 137, 140, 141, 142, 143, 146, 147, 148], "cal_url": [22, 23], "possibl": [22, 141, 142, 147, 148, 151], "optim": [22, 51, 52, 58, 81, 122, 131, 136, 137, 139, 140, 141, 142, 143, 146, 147, 148, 152], "log": [22, 28, 29, 30, 32], "depth": [22, 27, 28, 29, 30, 39, 57, 66, 81, 82, 85, 86, 97, 100, 104, 107, 109, 136, 137, 138, 139, 140, 141, 142, 144, 145], "coupl": [22, 23, 30, 33, 52, 58, 122, 126, 136, 141, 142], "cz": [22, 23, 31, 32, 33, 100, 119, 122, 133, 136, 139, 141, 142], "account": [22, 39, 122, 143, 152], "algorithm": [22, 32, 84, 136, 137, 141, 142], "span": [22, 30, 32], "choos": [22, 38, 137, 141, 142, 151], "largest": [22, 136, 137, 141, 142], "weight": [22, 32, 33, 64], "distanc": [22, 32, 143], "parallel": [22, 32, 49, 71, 76, 100, 107, 109, 118, 136, 137, 139, 140, 141, 142, 144], "applic": [22, 32, 84, 133, 141, 142, 151], "cx": [22, 27, 32, 51], "scale": [22, 136, 137], "logarithm": [22, 141, 142], "connect": [22, 32, 111, 131, 141, 142], "naiv": [22, 39, 141, 142], "appli": [22, 27, 32, 51, 58, 131, 140, 141, 142, 145, 151], "textbook": [22, 141, 142], "linearli": 22, "specifi": [22, 52, 57, 58, 76, 82, 84, 85, 107, 108, 111, 119, 121, 126, 128, 131, 136, 137, 145, 152], "assum": [22, 34, 106, 151], "e": [22, 76, 81, 106, 130, 136, 137, 139, 140, 141, 142, 143, 147, 148], "g": [22, 76, 81, 106, 130, 133, 136, 137, 139, 140, 141, 142, 143, 147, 148], "label": [22, 52, 66, 76, 85, 95, 101, 105, 122, 126, 131, 133, 134, 136, 141, 142], "meant": 22, "NOT": 22, "support": [22, 33, 151], "denot": 22, "provid": [22, 44, 132, 134, 135, 136, 137, 140, 151], "here": [22, 83, 134, 136, 137, 143], "ha": [22, 39, 136, 137, 138, 143, 145, 148, 151, 152], "than": [22, 136, 137, 141, 142, 145], "small": [22, 131], "level": [22, 39, 52, 58, 81, 136, 137, 139, 140, 141, 142, 147, 148], "architectur": 22, "consecut": 22, "reduc": [22, 123], "iqm_transpil": 22, "optimize_single_qubit_g": 22, "multipl": [22, 25, 89, 131, 136, 137, 141, 142], "moonei": [22, 25, 136, 137, 141, 142], "2021": [22, 25, 136, 137, 141, 142, 152], "randomized_measur": [22, 141, 142], "outlin": 22, "http": [22, 26, 28, 29, 89, 133, 134, 137, 140, 141, 143, 151, 152], "arxiv": [22, 26, 28, 29, 52, 84, 133, 141, 142, 152], "org": [22, 26, 28, 29, 133, 141, 143, 151], "ab": [22, 26, 28, 29, 133, 141], "1812": [22, 26], "02624": [22, 26], "respect": [22, 81, 83, 136, 142], "chosen": [22, 39, 136, 137, 141, 142, 143], "boolean": [22, 141, 142], "flag": 22, "determin": [22, 151], "readout": [22, 25, 39, 57, 58, 63, 112, 113, 115, 131, 140, 141, 142], "error": [22, 25, 39, 57, 58, 63, 105, 115, 131, 136, 140, 141, 142, 143], "mitig": [22, 25, 39, 57, 58, 63, 112, 113, 114, 115, 131, 140, 141, 142], "total": [22, 93, 133, 136, 137, 141, 142], "url": [22, 23, 136, 152], "retriev": [22, 51, 55, 124, 125, 130, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148], "priorit": 22, "high": [22, 136, 137, 141, 142], "float": [23, 33, 38, 40, 41, 43, 44, 45, 46, 48, 51, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 76, 81, 83, 84, 85, 86, 96, 97, 98, 102, 105, 109, 110, 113, 115, 119, 121], "under": [23, 131, 133, 136, 143, 151], "each": [23, 32, 34, 46, 60, 61, 62, 66, 76, 81, 83, 86, 90, 109, 114, 119, 138, 139, 140, 141, 142, 143, 144, 145, 151, 152], "list_fid": 23, "wai": [23, 33, 131, 136, 137], "list_coupl": 23, "ideal_prob": 26, "num_qubit": [26, 27, 28, 29, 31, 38, 39, 57, 83, 96, 102, 137, 139, 142], "cross": [26, 136, 137, 151], "correl": [26, 141], "rm": 26, "eq": [26, 133], "34": [26, 134, 138, 139, 140, 142, 146, 147], "hadamard": [27, 133, 142], "seri": 27, "linear": [27, 142], "fashion": 27, "symmetr": 27, "halv": 27, "1807": [28, 141, 142], "05572": [28, 141, 142], "2101": [29, 141, 142], "08946": [29, 141, 142], "graph": [30, 32, 33, 38, 39, 40, 41, 42, 43, 45, 46, 48, 136, 137, 141, 142], "n_state": [30, 136], "networkx": [30, 32, 33, 38, 40, 41, 42, 43, 136, 137], "n": [30, 39, 72, 82, 133, 136, 137, 141, 142], "participating_qubit": 30, "qc": [30, 51, 133, 134, 152], "maxim": [31, 136, 137], "between": [31, 32, 86, 113, 136, 137, 141], "move": [31, 131, 148], "calcul": [32, 40, 46, 62, 93, 118, 129, 131, 136, 137], "cx_map": 32, "particip": 32, "2qb": 32, "them": [32, 134, 152], "subgraph": 32, "edg": [32, 33, 41, 42, 43, 84, 136, 137], "Then": [32, 152], "find": [32, 136, 137, 141, 142], "most": [32, 143], "central": 32, "posit": 32, "next": 32, "start": [32, 38, 106, 136, 139, 140, 141, 142, 143, 152], "smallest": 32, "layer": [32, 40, 44, 48, 49, 51, 52, 57, 81, 82, 84, 85, 86, 107, 118, 140, 149, 150, 152], "first": [32, 38, 51, 81, 141, 142, 143, 145, 147, 148, 149], "coupling_map": [33, 122, 136, 137, 141], "couplingmap": [33, 126], "edges_c": 33, "fidelities_c": 33, "have": [33, 100, 136, 137, 151, 152], "v": [34, 46, 51, 53, 136, 137, 140, 144], "user": [34, 148, 152], "identif": [34, 151], "logger": [35, 129], "everi": 35, "warn": [35, 133, 136, 137, 142, 148], "score": [36, 38, 39, 45, 140, 149, 150, 152], "combinatori": [36, 38, 136, 137], "problem": [36, 38, 40, 41, 42, 43, 45, 46, 136, 137, 152], "meaning": [36, 38, 49, 57, 58], "qscorebenchmark": [37, 39, 136, 137, 140, 146], "qscoreconfigur": [37, 38, 136, 137, 140, 146], "backend_arg": [38, 51, 57, 72, 77, 82, 84, 85, 86, 99, 100, 101, 107, 108, 110, 111, 114, 119], "generate_maxcut_ansatz": 38, "theta": 38, "ansatz": [38, 40, 42, 44, 48], "qaoa": [38, 39, 40, 44, 48], "maxcut": [38, 40, 41, 42, 43, 44, 48, 136, 137, 140, 146], "end": [38, 51, 57, 133, 151], "variat": [38, 136, 137], "gamma": [38, 40], "beta": [38, 40, 45, 46, 136, 137, 140, 146], "add_all_meta_to_dataset": [38, 51, 57, 77, 82], "variabl": [38, 51, 57, 72, 77, 82, 98, 134, 143, 152], "choose_qubits_na": 38, "sequenti": [38, 108, 138, 140], "choose_qubits_custom": 38, "element": 38, "match": 38, "num_inst": [39, 46, 136, 137, 140, 146], "num_qaoa_lay": [39, 136, 137, 140, 146], "min_num_nod": [39, 136, 137, 140, 146], "max_num_nod": [39, 136, 137, 140, 146], "use_virtual_nod": [39, 46, 136, 137, 140, 146], "use_classically_optimized_angl": [39, 46, 136, 137, 140, 146], "choose_qubits_routin": [39, 58, 136, 137, 140, 146, 147, 148, 152], "min_num_qubit": 39, "seed": [39, 136, 137, 140, 146], "qpu_topologi": [39, 136, 137, 146], "crystal": [39, 136, 146], "min": [39, 113, 136, 137], "node": [39, 41, 42, 46, 48, 136, 137, 146], "taken": [39, 136, 137], "max": [39, 136, 137], "increas": [39, 106, 143], "potenti": 39, "pre": 39, "optimis": 39, "tune": 39, "minumum": 39, "virtual_nod": [39, 41, 42, 48], "upon": [39, 52, 58], "qpu": [39, 112, 131, 136, 137, 142], "either": [39, 98, 115, 119, 133, 141, 142, 143, 151, 152], "star": [39, 122, 126, 131, 135, 136, 142, 150], "angl": [40, 44, 46, 48], "qubit_to_nod": [41, 42], "expect": [41, 42, 48, 81, 84, 86, 131, 136], "val": 41, "virtual": [41, 42, 46, 48, 122], "cut": [41, 42, 43, 48, 136, 137], "avg": [41, 140, 143, 146], "callabl": [42, 98, 104], "parametr": [42, 49, 51, 52, 136, 137, 139, 140, 143], "x": [43, 91, 93, 105, 131, 133, 134, 142, 143, 145, 147, 148], "minu": 43, "sign": 43, "solut": [43, 136, 137], "multipli": 43, "obj": 43, "num_lay": 44, "approximation_ratio": [45, 140], "approxim": [45, 46, 136, 137, 140, 146], "ratio": [45, 46, 136, 137, 140, 146], "abov": [45, 65, 136, 137, 143, 151], "being": [45, 51, 57, 62, 65, 66, 83, 84, 96, 102, 119, 121, 136, 137], "success": [45, 65, 136, 137], "condit": [45, 65, 141, 142, 151], "mean": [45, 119, 133, 136, 137, 139, 143, 151], "threshold": [45, 46, 58, 65, 66, 136, 137], "beta_ratio": 46, "beta_std": 46, "backend_nam": [46, 66, 123, 138, 139, 145, 147, 148], "timestamp": [46, 66, 138, 145], "includ": [46, 54, 117, 131, 136, 137, 141, 142, 151], "standard": [46, 58, 61, 70, 105, 119, 131, 143, 152], "deviat": [46, 58, 61, 105, 119], "classic": [46, 48, 57], "graph_phys": 48, "qubit_nod": 48, "use_classical_angl": 48, "qaoa_lay": 48, "solv": [48, 136, 137], "averag": [48, 60, 65, 66, 72, 77, 83, 98, 131, 136, 137, 142, 143], "presenc": 48, "volum": [49, 56, 57, 58, 67, 131, 149, 150, 152], "reflect": [49, 51, 57, 68, 69, 74, 79], "deepest": [49, 57], "oper": [49, 68, 110, 119, 131, 133, 141, 142, 143, 149, 150], "second": [49, 51, 149, 150], "clop": [49, 131, 149, 150, 152], "speed": [49, 51, 136, 137], "clops_v": [49, 136, 137, 139], "qv": [49, 51, 52, 57, 58, 60, 61, 65, 66, 131, 136, 137, 139, 140, 149, 150], "clops_h": [49, 52, 139], "squar": [49, 136, 137, 143], "clopsbenchmark": [50, 52, 136, 137, 139, 140], "clopsconfigur": [50, 51, 136, 137, 139, 140], "h": [51, 53], "append_parameterized_unitari": 51, "q0": 51, "q1": 51, "decompos": [51, 136], "su": 51, "4": [51, 106, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152], "involv": [51, 136, 137], "belong": 51, "generate_single_circuit": [51, 57], "generate_circuit_list": [51, 57], "generate_random_paramet": 51, "ndarrai": [51, 97, 98, 104], "templat": [51, 136, 137, 139, 140], "np": [51, 97, 104, 133, 136, 137, 140, 141, 143, 144], "float64": 51, "assign_random_parameters_to_al": 51, "dict_parametrized_circ": 51, "clops_cycl": 51, "sorted_transpiled_qc_list": [51, 57, 128], "cycl": 51, "assign": [51, 52, 81, 117, 136, 137, 139, 140], "elaps": [51, 54, 55, 129, 139, 140], "time": [51, 54, 55, 57, 82, 107, 108, 129, 136, 137, 139, 140, 142, 143], "submiss": [51, 57, 82, 107, 108, 136, 137, 151], "generate_transpiled_clops_templ": 51, "num_circuit": [52, 58, 136, 137, 139, 140, 143, 147, 148, 152], "num_upd": [52, 136, 137, 139, 140], "10": [52, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 152], "num_shot": [52, 136, 137, 139, 140], "clops_h_bool": [52, 139, 140], "one": [52, 106, 128, 134, 136, 141, 142, 143, 145, 151, 152], "establish": [52, 139, 140], "By": [52, 139, 140], "definit": [52, 136, 137, 139, 140, 151], "2110": [52, 152], "14108": [52, 152], "quant": [52, 84, 152], "ph": [52, 84, 152], "rigor": [52, 143], "loos": 52, "www": [52, 133, 151], "ibm": [52, 113], "com": [52, 137], "blog": 52, "metric": [52, 136, 137, 143, 144], "restrict": [52, 58, 126, 140, 147, 148], "consid": [52, 58, 126], "clops_data": 54, "job_meta": 55, "quantumvolumebenchmark": [56, 58, 136, 137, 140, 147, 148], "quantumvolumeconfigur": [56, 57, 136, 137, 140, 147, 148, 152], "add_all_circuits_to_dataset": [57, 72, 77], "classical_permut": 57, "permut": 57, "avoid": 57, "swap": [57, 133], "get_rem_quasidistro": 57, "sorted_qc_list_indic": [57, 62], "execution_result": [57, 59], "quasicollect": [57, 63, 114], "quasiprob": [57, 63, 114, 115], "qubii": 57, "untranspil": [57, 62, 99, 122, 131], "submit_single_qv_job": 57, "submit": [57, 82, 107, 108, 128, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 151], "vanilla": [57, 66, 82, 107, 108], "dd": [57, 66, 82, 107, 108], "num_sigma": [58, 65, 66, 136, 137, 140, 147, 148, 152], "least": [58, 136, 137, 143, 151], "criteria": 58, "consensu": 58, "post": [58, 138, 140, 144, 145, 147, 148], "process": [58, 136, 137, 138, 140, 144, 145, 147, 148], "when": [58, 131, 136, 141, 142, 152], "unmitig": 58, "1_000": [58, 136, 137, 140, 147, 148, 152], "ideal_heavy_output": [59, 63], "hop": [59, 60, 61, 65, 66, 131], "ideal": [59, 83, 136, 137], "heavi": [59, 60, 61, 62, 63, 64, 65, 136, 137], "cumul": [60, 61], "probabl": [60, 61, 63, 64, 81, 84, 96, 102, 109, 121, 136, 137, 145, 152], "individu": [60, 61, 105, 131, 136, 141, 142, 143, 151, 152], "trial": [60, 61], "qc_list": [62, 122], "bitrstr": 62, "all_rem_quasidistro": 63, "distribut": [63, 64, 121, 133, 136, 137, 151], "noiseless": [63, 140, 147, 148], "project": [64, 152], "onto": 64, "associ": [64, 139, 140, 151], "heavy_output_prob": [65, 147, 148], "over": [65, 113, 121, 136], "within": [65, 151, 152], "sigma": [65, 66], "qv_result": [66, 136, 137, 147, 148], "qv_results_typ": [66, 147, 148], "in_volumetr": 66, "plot_rem": 66, "come": [66, 83, 115], "context": 66, "volumetr": 66, "correct": [66, 83, 113, 114, 136, 137, 143], "rb": [69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 96, 97, 98, 100, 102, 104, 105, 108, 109, 111, 131, 133, 136, 140, 144, 149, 150], "cliffordrandomizedbenchmark": [70, 71, 136, 138, 140], "cliffordrbconfigur": [70, 72, 136, 138, 140], "qubits_arrai": [71, 76, 81, 100, 105, 107, 109, 111, 136, 138, 140, 144, 145, 152], "sequence_length": [71, 76, 99, 100, 136, 138, 140, 144, 152], "num_circuit_sampl": [71, 76, 81, 99, 136, 138, 140, 144, 145, 152], "parallel_execut": [71, 76, 136, 138, 140, 144, 152], "length": [71, 76, 83, 87, 99, 100, 101, 133, 136, 138, 140, 144], "add_all_metadata_to_dataset": 72, "interleav": [74, 75, 76, 77, 78, 81, 86, 97, 98, 99, 100, 101, 105, 131, 138, 149, 150, 152], "interleavedrandomizedbenchmark": [75, 76, 136, 140, 144], "interleavedrbconfigur": [75, 77, 136, 140, 144, 152], "interleaved_g": [76, 99, 100, 101, 105, 136, 140, 144, 152], "interleaved_gate_param": [76, 136, 140, 144, 152], "simultaneous_fit": [76, 136, 140, 144, 152], "amplitud": [76, 97, 136, 140, 144, 152], "offset": [76, 97, 136, 140, 144, 152], "irb": [76, 98, 131, 149, 150], "ygate": 76, "czgate": [76, 81, 133, 136, 140, 143, 144, 145, 152], "enter": [76, 98, 100], "fit": [76, 89, 90, 91, 93, 97, 98, 104, 105, 131, 143, 151], "simultan": [76, 98], "specif": [77, 122, 133, 135, 136, 137, 140, 143, 147, 148, 149, 151], "mirror": [79, 80, 81, 82, 86, 131, 149, 150, 152], "mirrorrandomizedbenchmark": [80, 81, 140, 145, 152], "mirrorrbconfigur": [80, 82, 140, 145, 152], "depths_arrai": [81, 140, 145, 152], "num_pauli_sampl": [81, 83, 87, 140, 145, 152], "two_qubit_gate_ensembl": [81, 84, 85, 86, 140, 145, 152], "density_2q_g": [81, 84, 85, 86, 140, 145, 152], "25": [81, 84, 85, 86, 136, 138, 139, 140, 141, 144, 145, 146, 147, 148, 152], "mrb": [81, 82, 85, 88, 98, 105, 107, 108, 131, 140, 149, 150], "len": [81, 133, 136, 137, 143], "pauli": [81, 83, 85, 86, 87, 133, 143], "two": [81, 84, 133, 134, 136, 141, 142, 143], "ensembl": [81, 82, 84, 105], "cxgate": 81, "densiti": [81, 84, 86, 105, 136, 137], "submit_single_mrb_job": 82, "sorted_transpiled_circuit_dict": [82, 107], "canon": [82, 85, 86, 107], "noisy_count": 83, "ideal_count": 83, "num_circ_sampl": [83, 87, 101], "polar": [83, 98], "noisi": 83, "rescal": 83, "few": [83, 136, 137], "effect": [83, 136, 137, 142], "real": [83, 152], "simul": [83, 113, 131, 139, 140, 145, 147, 148], "qubit_set": [84, 98], "n_layer": 84, "grab": [84, 113], "see": [84, 133, 136, 141, 142, 143, 151], "2204": 84, "07568": 84, "2q": [84, 86, 103, 105, 136, 139, 140], "form": [84, 151], "subsequ": [84, 151], "rais": [84, 87, 111, 113, 122, 126], "valueerror": [84, 87, 111, 122, 126], "do": [84, 113, 144, 151], "up": [84, 136, 152], "uniti": 84, "circ_sampl": 85, "pauli_samples_per_circ": [85, 86], "dress": [85, 86, 87], "input_list": 87, "convert": [87, 133], "flat": 87, "matrix": [87, 133, 136, 137], "shape": 87, "lmfit": [89, 90, 98], "extend": [89, 131], "shown": [89, 136, 137, 141, 142, 143], "document": [89, 136, 137, 151, 152], "github": [89, 152], "io": 89, "py": [89, 142, 148, 152], "example_fit_multi_dataset": 89, "html": [89, 152], "sphx": 89, "glr": 89, "multi": [89, 136, 137], "func": [90, 91, 92, 93, 98, 104], "initial_guess": 90, "constraint": [90, 152], "simultaneously_fit_var": 90, "line": 90, "evalu": [91, 136, 137], "signatur": 92, "residu": 93, "sever": [93, 131, 136, 137], "techniqu": 94, "qc_inv": 95, "clifford_dictionari": 95, "invers": [95, 136], "invert": 95, "de": [95, 101], "stabil": [95, 101, 131], "ground": [96, 102, 134], "depolarization_prob": 97, "non": [97, 136, 137, 151], "depolar": 97, "p": [97, 136], "decai": [97, 105, 131, 136], "exponenti": [97, 136], "rb_identifi": 98, "simultaneous_fit_var": 98, "interleaved_gate_str": 98, "0th": 98, "ap": [98, 143], "m": [98, 136, 137, 138, 140, 144, 145, 148, 152], "b": [98, 133, 136, 151], "stdrb": 98, "clifford_dict": [99, 101], "fir": 99, "cliffords_1q": 100, "cliffords_2q": 100, "num_sampl": [100, 101], "befor": [100, 136], "after": [100, 152], "term": [100, 133, 143, 151], "r": [100, 119, 122, 133, 139, 143, 148], "seq_length": 101, "self": [101, 134], "import": [103, 131, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152], "fit_paramet": 104, "fit_data": 104, "minimizerresult": 104, "violin": 105, "scatter": 105, "bar": [105, 134, 143], "shade_stdev": 105, "shade_meanerror": 105, "logscal": 105, "mrb_2q_densiti": 105, "mrb_2q_ensembl": 105, "point": [105, 141, 142], "shade": 105, "axi": [105, 131], "titl": [105, 151], "arr": 106, "helper": 106, "relabel": 106, "increasingli": 106, "zero": [106, 131, 136, 137], "5": [106, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 151, 152], "7": [106, 133, 136, 138, 139, 140, 141, 142, 143, 144, 145, 148, 151, 152], "note": [106, 115, 131, 141, 142, 143, 152], "sort": [106, 127, 145, 147, 148], "transpiled_circuit": [108, 114, 148], "margin": [109, 113, 121], "surviv": [109, 136], "gate_id": 110, "gate_param": 110, "basi": [110, 122, 133, 136, 137, 143, 151], "m3": [112, 113, 114], "modif": [112, 151], "m3iqm": [112, 115], "mthree": [112, 115], "m3mitig": [112, 113], "iter_threshold": 113, "4096": 113, "modifi": [113, 131, 136, 137, 151], "work": [113, 115, 136, 137, 151, 152], "devic": [113, 131, 136, 137, 150, 152], "cals_from_system": 113, "initial_reset": 113, "rep_delai": [113, 142, 148], "cals_fil": 113, "async_c": 113, "cal_id": 113, "array_lik": 113, "1e4": 113, "max_shot": 113, "balanc": 113, "hardwar": [113, 150], "independ": [113, 136], "reset": 113, "begin": [113, 133], "delai": 113, "path": 113, "json": [113, 143], "async": 113, "separ": [113, 131, 147, 148, 151], "thread": 113, "m3error": 113, "call": [113, 131], "while": [113, 141, 142, 143, 151], "progress": 113, "against": [114, 151], "outcom": [114, 136, 137, 143], "mit": [115, 151], "iter": [115, 121], "processor": [115, 136, 137], "argument": [115, 131, 152], "util": [115, 131, 141, 142], "final_measurement_map": 115, "like": [115, 133, 136, 137, 152], "qubit_name_to_index": 115, "quasiprobabilti": 115, "we": [115, 134, 136, 137, 143, 151], "could": 115, "also": [115, 131, 143, 147, 148, 151, 152], "would": 115, "out": [115, 141, 151], "box": 115, "u": 115, "sinc": [115, 136, 137, 143], "original_count": 117, "num_bootstrap_sampl": 117, "rgen": 117, "include_original_count": 117, "resampl": 117, "bootstrap": [117, 131, 143], "numpi": [117, 133, 136, 137, 140, 143, 144], "default_rng": 117, "circuit_list": 118, "transpiled_qc_list": 119, "barrier": [119, 133, 134, 139], "outermost": 119, "backend_label": 120, "prob_dist": 121, "bit": 121, "basis_g": 122, "drop_final_rz": 122, "target": [122, 143], "optimization_level": [122, 134, 136], "sqg": [122, 139, 140, 141, 142, 147, 148], "z": 122, "drop": 122, "rz": 122, "emploi": 122, "iqm_job": [124, 125], "iqmjob": [124, 125, 128], "relev": 125, "transpiled_circuit_list": 127, "sorted_indic": 127, "sorted_circuit": 127, "sent": [128, 151], "manag": [128, 151, 152], "f": [129, 133, 134, 136, 137, 140, 141, 142, 143, 148], "amount": [129, 130], "decor": 129, "statement": [129, 151], "counts_rang": 130, "extract": [130, 136, 152], "rang": [130, 131, 133, 134, 136, 137, 138, 140, 142, 143, 144, 145, 152], "were": [130, 131], "qscore": [131, 136, 137], "file": [131, 151, 152], "test": [131, 136, 137, 152], "fake": 131, "deneb": [131, 137, 138, 139, 140, 142, 144, 145, 146, 147, 149, 150], "notebook": [131, 134, 136, 137, 143, 149, 150], "benchmark": [131, 132, 133, 135, 143, 146, 147, 148, 149], "iqm": [131, 132, 133, 134, 135, 141, 143, 144, 149, 151], "bug": 131, "done": [131, 133], "instal": [131, 136, 143, 150], "command": [131, 152], "develop": [131, 133, 142, 150], "mode": [131, 133, 152], "41": [131, 140, 144, 145, 146], "folder": [131, 151, 152], "doc": [131, 152], "spark": [131, 135, 150], "30": [131, 136, 138, 140, 144, 146, 152], "compat": 131, "adapt": [131, 152], "behavior": 131, "report": [131, 136], "displai": [131, 133, 136, 137, 138, 140, 143, 144, 148, 151], "publish": 131, "ci": 131, "secur": [131, 152], "scan": [131, 152], "lockfil": [131, 152], "depend": [131, 141, 142, 143, 150], "relat": [131, 136], "gst": [131, 149, 150], "lead": [131, 141, 142, 143], "modulenotfounderror": 131, "enabl": 131, "pyrit": [131, 146], "wrong": 131, "incorrect": 131, "mgst": [131, 143, 151, 152], "improv": [131, 151], "hamiltonian": [131, 143], "rank": [131, 143], "compress": [131, 149, 150, 152], "compil": [131, 136, 143, 151], "stage": 131, "revert": 131, "ones": [131, 136, 137, 152], "now": [131, 138, 139, 140, 141, 142, 143, 144], "instead": [131, 152], "port": 131, "subclass": 131, "usag": 131, "place": [131, 151], "miscellan": 131, "relax": 131, "api": [131, 150, 152], "build": [131, 152], "overwrit": 131, "tutori": 131, "remov": 131, "explicit": 131, "minor": 131, "longer": [131, 136], "renam": 131, "so": [131, 136, 143], "rebas": 131, "randomizedbenchmark": 131, "quantumvolum": 131, "serial": 131, "some": [131, 136, 137], "available_benchmark": 131, "__init__": 131, "public": 131, "hint": 131, "docstr": 131, "messag": 131, "prevent": 131, "exclus": [131, 151], "jupyt": 131, "section": [132, 135, 149, 151], "guidanc": [132, 135], "packag": [132, 136, 141, 142, 148, 149, 152], "your": [132, 136, 150, 151, 152], "own": [132, 150, 151, 152], "decomposit": [132, 150], "1402": 133, "4848": 133, "copyright": [133, 151], "2024": [133, 138, 139, 148, 151], "licens": [133, 150], "apach": [133, 151], "you": [133, 136, 137, 144, 148, 151, 152], "mai": [133, 136, 137, 151], "except": [133, 134, 151], "complianc": [133, 151], "obtain": [133, 136, 137, 151, 152], "unless": [133, 151], "law": [133, 151], "agre": [133, 151], "softwar": [133, 151], "AS": [133, 151], "without": [133, 136, 137, 141, 142, 151], "warranti": [133, 151], "OR": [133, 151], "OF": [133, 151], "kind": [133, 151], "express": [133, 151], "impli": [133, 151], "languag": [133, 151], "govern": [133, 151], "permiss": [133, 151], "limit": [133, 151], "quantum_info": 133, "qi": 133, "c0": 133, "c": [133, 136, 148, 151], "_": [133, 136, 143], "24": [133, 138, 139, 140, 141, 144, 146], "half": 133, "pi": [133, 140, 144], "x2": 133, "to_gat": 133, "y2": 133, "y": 133, "x2m": 133, "y2m": 133, "compos": 133, "inplac": 133, "2pi": 133, "rotat": [133, 134], "6": [133, 138, 139, 140, 141, 142, 144, 145, 146, 148, 151, 152], "9": [133, 134, 136, 138, 139, 140, 141, 142, 144, 145, 151, 152], "11": [133, 134, 136, 137, 138, 140, 141, 142, 144, 145, 148, 152], "12": [133, 138, 139, 140, 143, 144, 145, 147, 148], "13": [133, 138, 140, 141, 142, 144, 145, 148, 152], "14": [133, 138, 139, 140, 142, 144, 145, 152], "15": [133, 136, 138, 139, 140, 142, 144, 145, 148], "16": [133, 138, 139, 140, 141, 144, 145, 147], "17": [133, 138, 139, 140, 141, 144, 145, 147, 152], "18": [133, 138, 139, 140, 141, 144, 145, 152], "19": [133, 139, 140, 141, 143, 144, 145], "20": [133, 134, 138, 139, 140, 142, 144], "21": [133, 139, 140, 144], "22": [133, 139, 140, 143, 144, 145, 150], "23": [133, 138, 139, 140, 141, 144, 145, 147, 148], "clifford_sqg": 133, "s1": 133, "k": [133, 136, 137, 139, 145, 147, 148], "s1x2": 133, "s1y2": 133, "displaystyl": 133, "sum_": [133, 143], "prime": 133, "left": 133, "mathrm": [133, 136, 137], "tr": [133, 143], "u_": 133, "dagger": [133, 136, 143], "u_k": 133, "right": [133, 151], "s2": 133, "satisfi": [133, 143], "c_kei": 133, "aux": 133, "total_triangl": 133, "c1": 133, "adjoint": 133, "j": [133, 136, 137, 141, 142, 143], "c2": 133, "c3": 133, "to_matrix": 133, "trace": [133, 143], "print": [133, 136, 139, 140, 141, 142, 143, 145, 147, 148, 151], "0f": 133, "diagon": [133, 136, 137], "nsum": 133, "sum": 133, "clifford_2qg": 133, "product": [133, 151], "c2q_0": 133, "c2q": 133, "counter": 133, "to_label": 133, "sqg_class_": 133, "cnot": [133, 141, 142], "sy2": 133, "cnot_class_": 133, "iswap": 133, "sy1": 133, "sx2": 133, "i_swap_class_": 133, "swap_class_": 133, "clifford_1qg": 133, "open": 133, "clifford_1q": 133, "pkl": 133, "wb": 133, "clifford_2q": 133, "loaded_dict": 133, "def": [133, 134], "count_rcz": 133, "c_list": 133, "no_cz": 133, "no_r": 133, "count_op": 133, "els": 133, "num_2qcz": 133, "num_2qr": 133, "num_1qcz": 133, "num_1qr": 133, "875": [133, 136, 140, 144, 147], "200": [133, 140, 141, 146], "randint": [133, 136, 137, 140, 146], "11520": 133, "draw": [133, 136, 137, 141, 148], "mpl": 133, "style": 133, "iqp": 133, "fold": 133, "ninvers": 133, "qc_aux": 133, "qcinv": 133, "op_seq": 133, "ncomposit": 133, "ident": 133, "modulo": 133, "phase": 133, "equiv": 133, "ii": [133, 134, 151], "latex": 133, "composit": 133, "bmatrix": 133, "520": [133, 140, 146], "132": [133, 140, 144], "710": [133, 146], "400": [133, 138, 140, 146], "suffic": 133, "triangular": 133, "part": [133, 151], "howev": [133, 151, 152], "still": [133, 143], "op": 133, "adj": 133, "prod": 133, "100000": 133, "ndone": 133, "defit": 134, "simpl": [134, 136, 152], "anoth": 134, "excit": 134, "add_counts_to_dataset": 134, "pyplot": [134, 136, 137, 143], "plt": [134, 136, 137, 143], "generate_readout_test_circuit": 134, "n_qubit": 134, "qb_to_measur": 134, "qc_transpil": 134, "plot_histogram": [134, 136], "50": [134, 136, 137, 140, 143, 144, 145, 146, 148, 151], "try": 134, "state_": 134, "counts_": 134, "break": 134, "xtick": 134, "90": 134, "legend": 134, "readout_analysi": 134, "histogram": [134, 136], "readouttest": 134, "default_opt": 134, "n_shot": 134, "2048": 134, "staticmethod": 134, "readout_test": 134, "iqmprovid": [134, 136, 137, 140, 152], "iqm_server_url": 134, "station": [134, 152], "fi": [134, 152], "coco": [134, 137, 152], "get_backend": [134, 136, 137, 140, 152], "480b": 134, "dimens": [134, 143], "state_0": 134, "state_1": 134, "coordin": 134, "u4": 134, "144b": 134, "0000": 134, "0001": 134, "0010": 134, "1010": 134, "1100": 134, "176b": 134, "0011": 134, "0101": 134, "0110": 134, "1101": 134, "1110": 134, "1111": 134, "counts_0": 134, "int64": 134, "72b": 134, "1924": 134, "26": [134, 140, 141, 144, 146], "39": [134, 140, 143, 144, 146], "counts_1": 134, "88b": 134, "72": 134, "48": [134, 140, 144, 146], "78": 134, "36": [134, 140, 146], "1801": 134, "sure": [136, 152], "pip": [136, 152], "ipykernel": 136, "o": [136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 148, 152], "environ": [136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 148, 152], "iqm_tokens_fil": 136, "token": [136, 137, 144, 152], "iqm_url": [136, 137, 140], "access": [136, 137, 152], "everyth": [136, 137], "properli": [136, 137], "nx": [136, 137], "add_edges_from": [136, 137], "po": [136, 137, 141], "spring_layout": [136, 137, 141], "42": [136, 137, 140, 144, 146], "with_label": [136, 137, 141], "node_color": [136, 137, 141], "lightblu": [136, 137], "edge_color": [136, 137], "grai": [136, 137], "node_s": [136, 137], "font_siz": [136, 137], "linewidth": [136, 137], "width": [136, 137], "cell": [136, 137, 141], "below": [136, 137, 141, 142, 143, 151, 152], "ignor": [136, 137], "critic": [136, 137], "filterwarn": [136, 137], "action": [136, 137], "entangl": [136, 137, 140, 141, 142, 152], "three": [136, 137], "more": [136, 137, 151, 152], "superposit": [136, 137], "rangl": [136, 137], "frac": [136, 137, 143], "sqrt": [136, 137], "otim": [136, 137], "act": [136, 137, 151], "wit": [136, 137], "genuin": [136, 137, 141, 142], "cannot": [136, 137, 151], "explain": [136, 137], "great": [136, 137], "rho_": [136, 137], "text": [136, 137, 143, 151], "langl": [136, 137], "pure": [136, 137], "case": [136, 137], "actual": [136, 137], "entri": [136, 137, 143], "written": [136, 137, 151], "00": [136, 137, 140, 143, 145, 147], "corner": [136, 137], "simplifi": [136, 137], "four": [136, 137], "compon": [136, 137], "formula": [136, 137], "nullifi": [136, 137], "To": [136, 137, 138, 141, 142, 143, 151, 152], "off": [136, 137], "want": [136, 137, 152], "pleas": [136, 137], "refer": [136, 137, 143, 150, 152], "visual": [136, 141], "generate_ghz_spanning_tre": 136, "get_edg": 136, "ghz_circuit": 136, "qc_transp": 136, "re": [136, 144], "10000": [136, 137, 146], "get_count": 136, "benchmark_ghz": [136, 137, 140, 141, 142], "run_ghz": [136, 137, 140, 141, 142], "result_ghz": [136, 137], "introduc": [136, 137], "2019": [136, 137, 141, 142, 152], "unitari": [136, 137, 143, 148], "successfulli": [136, 137, 138, 140, 144, 145, 147, 148], "occcur": [136, 137], "greater": [136, 137], "median": [136, 137], "ask": [136, 137], "confid": [136, 137], "higher": [136, 137], "97": [136, 137], "around": [136, 137], "85": [136, 137, 152], "asymptot": [136, 137], "log_2": [136, 137], "v_q": [136, 137], "underset": [136, 137], "argmax": [136, 137], "d": [136, 137, 141, 142, 151], "leq": [136, 137], "achiev": [136, 137], "quantum_volum": [136, 137, 139, 140, 147, 148, 152], "combin": [136, 137, 151], "due": [136, 137], "must": [136, 137, 151, 152], "topmost": 136, "500": [136, 137, 140, 145, 147, 148, 152], "60_000": [136, 140, 147, 148, 152], "follow": [136, 137, 141, 142, 143, 151, 152], "code": [136, 137, 143, 150, 151, 152], "minut": [136, 137, 143], "benchmark_qv": [136, 137, 140, 147, 148], "run_qv": [136, 137], "result_qv": [136, 137], "That": [136, 137], "wack": [136, 137], "repeat": [136, 137], "constitut": [136, 137, 151], "_time": [136, 137], "notic": [136, 137, 151], "plot_tim": [136, 137], "benchmark_clop": [136, 137, 139, 140], "run_clop": [136, 137, 139, 140], "result_clop": [136, 137, 139, 140], "fig_clop": [136, 137], "idea": 136, "behind": 136, "crb": 136, "certain": [136, 137], "nois": 136, "langle0": 136, "c_": 136, "inv": 136, "c_m": 136, "cdot": 136, "_2c_1": 136, "sim": 136, "c_1": 136, "c_2": 136, "ldot": 136, "c_1c_2": 136, "_m": 136, "leq1": 136, "constant": 136, "isol": 136, "spam": 136, "magesan": 136, "2012": [136, 152], "turn": [136, 141], "infer": 136, "assumpt": 136, "markovian": 136, "stationari": 136, "theori": [136, 151], "fact": 136, "design": [136, 151, 152], "fulli": [136, 143], "ensur": 136, "our": 136, "overlin": 136, "intend": 136, "becaus": 136, "eventu": 136, "mention": 136, "barend": 136, "2014": 136, "approx": 136, "alwai": [136, 141, 142], "slightli": 136, "care": 136, "compar": 136, "spec": 136, "randomized_benchmark": [136, 138, 140, 144, 145, 152], "clifford_rb": [136, 138, 140], "benchmark_clifford_rb": [136, 138, 140], "run_clifford_rb": [136, 138, 140], "result_clifford_rb": [136, 138, 140], "previou": 136, "aim": [136, 141, 142], "interest": 136, "robust": 136, "sole": [136, 151], "made": [136, 151], "among": [136, 152], "rate": 136, "wish": [136, 148], "character": [136, 150], "interleaved_rb": [136, 140, 144, 152], "irb_cz": 136, "nb": [136, 138, 139, 140], "benchmark_irb_cz": 136, "run_irb_cz": 136, "result_irb_cz": 136, "martiel": [136, 137], "erd\u0151": [136, 137], "r\u00e9nyi": [136, 137], "cost": [136, 137], "geq": [136, 137, 143], "999999": [136, 137, 140, 146], "benchmark_qscor": [136, 137, 140, 146], "run_qscor": [136, 137, 140], "result_qscor": [136, 137, 140], "summar": 136, "tabl": [136, 143], "obs_ghz": [136, 137], "round": [136, 137], "obs_qv": [136, 137], "obs_clop": [136, 137], "item": [136, 137], "obs_crb": 136, "f_crb": 136, "obs_irb": 136, "f_irb": 136, "avg_gate_fidelity_interleav": [136, 140, 144], "obs_q": [136, 137], "argmin": [136, 137], "mean_approximation_ratio": [136, 137, 146], "3000": 136, "999": [136, 138, 139], "98": 136, "format": [136, 151], "num": 136, "iqm_token": [137, 138, 139, 140, 142, 144, 145, 146, 147, 148, 152], "reson": [137, 144, 152], "meetiqm": 137, "chosen_layout": 137, "2000": [137, 143], "10_000": 137, "load_ext": [138, 139, 140, 143, 144, 145, 146, 147, 148], "autoreload": [138, 139, 140, 143, 144, 145, 146, 147, 148], "extens": 138, "load": 138, "reload": 138, "reload_ext": 138, "fakeadoni": [138, 139, 140, 144, 145, 146, 147], "fakeapollo": [138, 139, 140, 141, 144, 145, 146, 147], "garnet": [138, 139, 140, 143, 144, 145, 146, 147, 152], "example_crb": [138, 140], "56": [138, 140, 146], "750": [138, 146], "logging_config": [138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148], "info": [138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148], "Will": [138, 139, 140, 143, 144, 145, 147, 148], "31": [138, 139, 140, 141, 142, 144, 145, 146], "63": [138, 140, 144], "831": [138, 144, 146], "992": [138, 139, 146], "341": [138, 146], "040": [138, 140, 144], "469": [138, 140], "291": 138, "292": [138, 140, 144], "349": 138, "541": [138, 145], "600": [138, 140], "756": [138, 140], "837": [138, 144, 146, 147], "025": [138, 146], "171": [138, 140], "905": [138, 146], "544": [138, 140, 146], "899": [138, 140], "32": [138, 139, 140, 141, 142, 143, 145, 146], "624": [138, 140], "004": [138, 140, 144, 146], "43": [138, 140, 143, 144, 146], "319": 138, "569": [138, 145, 146], "777": [138, 140], "840": 138, "44": [138, 140, 143, 144, 146], "048": [138, 144], "098": [138, 139, 140, 146], "qubits_": [138, 140, 145], "_depth_1": [138, 140, 144], "323": 138, "45": [138, 140, 144, 145, 146], "186": [138, 144], "_depth_3": [138, 140, 144], "225": [138, 140], "_depth_7": [138, 140, 144], "267": [138, 140, 146], "_depth_15": [138, 140, 144], "314": [138, 140], "_depth_31": [138, 140, 144], "315": [138, 140, 146], "364": [138, 140, 145], "_depth_63": [138, 140, 144], "416": [138, 146], "417": [138, 146, 148], "476": 138, "542": [138, 140, 145], "615": [138, 140], "616": [138, 140, 146], "697": [138, 146], "789": [138, 140, 144, 146], "890": [138, 140, 144], "conclud": [138, 140, 144, 145, 147, 148], "931": [138, 140, 146], "938": 138, "945": [138, 140, 141, 145], "952": [138, 144], "959": [138, 140], "966": [138, 140, 146], "972": [138, 140, 146], "979": [138, 140, 146], "986": [138, 140], "993": [138, 140, 145], "46": [138, 140, 143, 146, 148], "006": [138, 140, 146], "013": 138, "946844466999168": 138, "9429197366921651": 138, "attr": [138, 139, 143, 145, 147, 148], "session_timestamp": [138, 139, 145, 147, 148], "20241217": 138, "115553": 138, "execution_timestamp": [138, 139, 145, 147, 148], "backend_configuration_nam": [138, 139, 145, 147, 148], "iqmfakeapollobackend": [138, 139, 141, 143, 147], "depth_1": 138, "time_circuit_gener": [138, 139, 145, 147, 148], "541001081466675": 138, "time_submit": [138, 145, 147, 148], "0006990432739257812": 138, "time_retriev": [138, 145, 147, 148], "22491073608398438": 138, "all_job_metadata": [138, 145, 147, 148], "batch_job_1": [138, 145], "job_id": [138, 145], "8f305755": 138, "e038": 138, "4596": 138, "8617": 138, "d96ba3f42ca9": 138, "aer_simul": [138, 145], "statu": [138, 145], "circuits_in_batch": [138, 145], "depth_3": 138, "05647683143615723": 138, "0005230903625488281": 138, "2fe0b406": 138, "8977": 138, "4567": 138, "bba0": 138, "d4168f0883ed": 138, "depth_7": 138, "19257187843322754": 138, "0004839897155761719": 138, "8299918c": 138, "be26": 138, "40d5": 138, "8778": 138, "9ea4468a1df2": 138, "depth_15": 138, "05831408500671387": 138, "0004811286926269531": 138, "174640c4": 138, "9ff3": 138, "4ca3": 138, "9ffc": 138, "d6aa5be304f3": 138, "depth_31": 138, "1564040184020996": 138, "0006189346313476562": 138, "7bb739f2": 138, "31bc": 138, "40af": 138, "8dbf": 138, "1d60a9310391": 138, "depth_63": 138, "08135986328125": 138, "0004200935363769531": 138, "f414a2c1": 138, "75c8": 138, "4d5a": 138, "9e4b": 138, "ccce29903f5f": 138, "147684812545776": 138, "0005502700805664062": 138, "00039887428283691406": 138, "8832576a": 138, "6d6e": 138, "4abe": 138, "8cfa": 138, "5001e6bb98e": 138, "08015298843383789": 138, "00039315223693847656": 138, "ecc1bcea": 138, "ef4c": 138, "4f35": 138, "9284": 138, "ab49af0c5b9f": 138, "16936397552490234": 138, "0003960132598876953": 138, "5582c842": 138, "0f07": 138, "46b6": 138, "96be": 138, "2fb3925b19d9": 138, "20774221420288086": 138, "0004191398620605469": 138, "6423b02b": 138, "8417": 138, "4300": 138, "b7ac": 138, "84d59f87a51f": 138, "0635080337524414": 138, "0004169940948486328": 138, "0b324804": 138, "44fe": 138, "4c16": 138, "83eb": 138, "08e5cd67aa79": 138, "20784401893615723": 138, "0004961490631103516": 138, "6c633640": 138, "d4b4": 138, "47de": 138, "a46d": 138, "d3ae4c84d212": 138, "avg_gate_fidel": [138, 145], "0012220693932290373": 138, "001545469960991071": 138, "xxxxxx": 139, "example_clop": [139, 140], "06": [139, 140, 145], "07": [139, 140, 144, 145], "198": [139, 140, 146], "199": 139, "828": [139, 144], "829": [139, 140, 144, 146], "383": [139, 144], "401": [139, 140, 146], "458": [139, 140], "010": [139, 146], "428": [139, 145, 146], "429": [139, 140], "497": [139, 140], "029": [139, 140], "482": [139, 140, 146], "483": [139, 140], "502": [139, 140, 146], "113": 139, "843": 139, "844": [139, 146], "906": [139, 144, 146], "527": [139, 146], "987": [139, 140, 146], "988": [139, 140], "050": [139, 140, 145, 146, 147], "636": [139, 140, 144, 146], "099": [139, 140], "166": [139, 144, 146], "712": [139, 146], "27": [139, 140, 141, 144, 146], "328": [139, 140], "329": [139, 140], "404": [139, 140, 146], "766": [139, 140, 145, 146], "29": [139, 140, 144, 146, 147], "386": [139, 140], "387": [139, 140, 144, 145], "406": [139, 140, 146], "418": [139, 140, 148], "487": [139, 140, 146], "037": 139, "33": [139, 140, 142, 145, 146], "488": [139, 140], "556": [139, 140, 146], "240": [139, 140, 146], "916": [139, 144], "There": [139, 140], "all_times_parameter_assign": 139, "all_times_retriev": 139, "all_times_submit": 139, "assign_parameters_tot": 139, "clops_tim": 139, "counts_per_upd": 139, "job_meta_per_upd": 139, "num_paramet": 139, "operation_count": [139, 147, 148], "parallel_2q_lay": 139, "parameters_per_upd": 139, "time_count_lay": 139, "time_sort_batch": 139, "time_transpil": [139, 147, 148], "u_per_lay": 139, "user_retrieve_tot": 139, "user_submit_tot": 139, "9603960396039604": 139, "std": 139, "3960396039603959": 139, "285": [139, 140, 144], "970297029703": 139, "28": [139, 140, 144, 146, 147], "718661075530303": 139, "40594059405941": 139, "915387814641763": 139, "9900990099009901": 139, "09900990099009897": 139, "18796": 139, "nan": [139, 143], "56388": 139, "iqm_provid": [140, 142, 148], "2025": [140, 141, 142, 143, 144, 145, 146, 147, 150], "01": [140, 141, 143, 144, 145, 146, 147, 150], "58": [140, 142, 144, 146], "410": [140, 146], "411": [140, 146], "127": [140, 144], "639": [140, 141, 142], "949": [140, 146], "35": [140, 146], "841": 140, "251": [140, 146], "53": [140, 144, 146], "648": [140, 146], "690": 140, "785": [140, 144], "953": [140, 146], "815": [140, 146], "59": [140, 144, 145, 146], "821": [140, 144, 146], "808": [140, 146], "834": 140, "860": [140, 144], "02": [140, 142, 143, 145, 146], "350": [140, 146], "351": [140, 141], "424": [140, 146], "466": 140, "510": [140, 146], "511": [140, 146], "558": 140, "_depth_127": [140, 144], "559": [140, 146], "611": [140, 146], "643": [140, 146], "647": 140, "651": [140, 145, 146, 148], "655": [140, 146], "659": 140, "663": 140, "667": [140, 146], "9487496885745926": 140, "example_irb_1q": [140, 144], "rgate": [140, 143, 144], "benchmark_irb_1q": [140, 144], "run_irb_1q": [140, 144], "734": [140, 144, 146], "958": 140, "wxecut": 140, "255": [140, 144], "000": [140, 144, 146], "041": [140, 146], "122": 140, "925": 140, "229": 140, "054": 140, "37": [140, 146, 148], "672": 140, "694": 140, "753": 140, "849": [140, 145, 146], "38": [140, 144, 146], "039": [140, 144, 146], "402": [140, 146], "108": [140, 146], "40": [140, 146], "570": [140, 146], "277": [140, 146], "331": [140, 145, 146], "399": [140, 146], "495": [140, 146], "650": [140, 144], "929": [140, 146], "51": [140, 143, 144, 146, 148], "439": 140, "52": [140, 142, 143, 144, 145, 146, 148], "352": [140, 142, 146], "432": [140, 144], "475": [140, 144], "666": [140, 146], "812": 140, "881": [140, 144, 146], "761": 140, "804": 140, "894": [140, 141], "907": [140, 146], "03": [140, 144, 145, 150], "020": 140, "188": [140, 144, 146], "270": 140, "426": [140, 146], "718": 140, "04": [140, 142, 144, 145], "307": [140, 145, 146], "05": [140, 144, 145], "836": [140, 144, 146], "904": [140, 146], "003": [140, 143, 144], "196": [140, 144, 146, 147], "557": [140, 145], "719": 140, "653": [140, 145, 146], "149": [140, 145], "754": [140, 146], "231": 140, "163": [140, 144], "261": 140, "446": [140, 146], "524": 140, "635": [140, 144], "112": 140, "693": [140, 146], "811": 140, "826": [140, 146], "920": [140, 146], "091": [140, 141], "173": [140, 144], "338": [140, 144, 146], "640": [140, 144, 146], "230": 140, "545": [140, 145], "54": [140, 144, 146, 148], "939": [140, 144, 146], "961": 140, "55": [140, 145, 146], "011": [140, 143], "105": [140, 146], "299": [140, 148], "384": 140, "57": [140, 144, 146], "824": [140, 146], "662": 140, "717": [140, 144, 146], "790": [140, 143, 144, 145], "889": [140, 145], "301": [140, 145, 146], "799": [140, 148], "083": [140, 146], "152": [140, 145, 146], "254": 140, "420": [140, 146], "758": [140, 143, 144, 145], "634": [140, 146], "947": [140, 145], "994": [140, 143, 146], "548": [140, 142], "159": [140, 146], "724": [140, 142], "746": 140, "791": [140, 145, 146], "884": [140, 145], "074": [140, 144, 146], "128": [140, 145, 146], "561": 140, "477": 140, "550": [140, 146], "623": [140, 143, 144, 146], "726": 140, "880": [140, 146], "47": [140, 143, 144, 146], "508": 140, "606": [140, 145], "838": [140, 146], "944": [140, 145, 146], "49": [140, 143, 144, 146], "427": 140, "963": [140, 146], "970": [140, 145], "008": [140, 144, 146], "071": 140, "305": 140, "391": [140, 143, 146], "555": [140, 146], "444": 140, "649": [140, 141, 142, 146, 148], "063": [140, 146], "119": [140, 145], "212": [140, 141], "397": [140, 146], "467": [140, 146], "678": [140, 145, 146], "688": [140, 144, 147], "741": 140, "810": [140, 146], "908": 140, "805": [140, 142, 146], "682": [140, 144], "730": 140, "816": 140, "094": [140, 144, 146], "259": [140, 141], "547": 140, "066": [140, 146], "138": [140, 146], "clifford_qubits_": [140, 144], "176": [140, 145, 146], "354": 140, "355": [140, 144, 146], "390": 140, "459": 140, "591": [140, 146], "592": [140, 146], "644": 140, "_depth_255": [140, 144], "703": [140, 144], "767": [140, 145], "768": [140, 146], "839": 140, "918": 140, "919": [140, 141, 142], "007": [140, 144], "104": [140, 146], "211": 140, "728": 140, "971": 140, "232": [140, 146], "509": [140, 144], "151": [140, 146], "498": 140, "862": [140, 146], "248": 140, "249": 140, "654": [140, 146], "142": [140, 146], "143": 140, "085": 140, "626": [140, 145], "180": [140, 145], "732": 140, "733": [140, 146], "923": 140, "interleaved_qubits_": [140, 144], "924": [140, 146], "560": [140, 146], "237": 140, "940": [140, 145], "447": [140, 148], "075": [140, 143, 146], "076": [140, 146], "845": [140, 141, 144], "846": 140, "783": [140, 146, 147], "784": [140, 144, 146], "782": 140, "813": 140, "814": 140, "201": [140, 145, 146], "202": 140, "378": [140, 146], "379": 140, "909": 140, "910": [140, 146], "284": [140, 146], "658": 140, "111": [140, 146, 147], "571": [140, 143, 146], "572": [140, 141, 146], "062": [140, 141, 146], "021": [140, 147], "022": [140, 144], "735": 140, "736": [140, 146], "546": [140, 144, 145], "09": [140, 141, 143, 144, 147], "361": [140, 146], "362": 140, "330": [140, 145], "304": [140, 146], "269": [140, 148], "471": [140, 146], "596": [140, 144, 145, 146], "842": [140, 144, 145], "086": [140, 146], "642": [140, 141, 142], "983": [140, 145], "460": 140, "result_irb_1q": [140, 144], "855": 140, "901": 140, "943": 140, "033": [140, 144, 147], "116": [140, 145], "161": 140, "206": [140, 144, 146], "300": [140, 143, 146], "344": 140, "433": [140, 146], "519": 140, "603": [140, 146], "686": [140, 146], "727": [140, 146], "769": [140, 146], "853": 140, "936": [140, 146], "978": [140, 146], "019": 140, "106": [140, 146], "191": [140, 143], "274": [140, 146], "316": 140, "357": [140, 145, 146], "440": [140, 144], "565": 140, "607": [140, 144], "774": 140, "858": [140, 146], "941": 140, "030": [140, 146], "072": [140, 146], "114": 140, "156": [140, 146], "197": [140, 144], "239": 140, "280": 140, "322": 140, "405": 140, "489": 140, "531": 140, "614": 140, "656": [140, 146], "698": 140, "747": 140, "794": 140, "948": [140, 145], "061": [140, 146], "110": 140, "157": [140, 144], "9987487631380596": 140, "9976446981909068": 140, "9966759568052321": 140, "993530034195362": 140, "9990404653517758": 140, "9981264795208118": 140, "9993022807449614": 140, "9986351324410088": 140, "9973448276409616": 140, "9955188886796882": 140, "252344351282814e": 140, "avg_gate_fidelity_clifford": [140, 144], "427765436266417e": 140, "311072136492597e": 140, "508513064336435e": 140, "00011479325016746003": 140, "00013605231315518148": 140, "126965739294625e": 140, "500976481016944e": 140, "726101631810375e": 140, "232463034652631e": 140, "example_irb_2q": [140, 144], "benchmark_irb_2q": [140, 144], "run_irb_2q": [140, 144], "921": 140, "001": [140, 143, 146], "164": [140, 146], "481": 140, "08": [140, 143, 144, 145, 146], "367": [140, 146], "937": [140, 146], "095": [140, 144], "396": [140, 144, 146], "026": 140, "620": [140, 146], "765": [140, 144, 146], "930": [140, 146], "216": [140, 144], "738": 140, "729": 140, "674": [140, 146], "965": 140, "264": [140, 145, 146], "470": 140, "463": [140, 146], "078": [140, 142], "370": [140, 146], "771": 140, "968": [140, 144], "140": 140, "441": [140, 142, 144], "192": 140, "743": [140, 146], "268": 140, "298": 140, "625": [140, 146, 147], "461": 140, "009": 140, "991": [140, 144], "014": 140, "807": [140, 146], "165": 140, "817": 140, "295": [140, 141, 146], "464": [140, 146], "721": [140, 146], "398": 140, "581": 140, "714": 140, "689": [140, 146], "801": [140, 146], "912": [140, 142, 148], "891": 140, "435": 140, "484": 140, "181": [140, 145], "194": [140, 146], "451": 140, "290": [140, 144, 147], "955": 140, "359": 140, "096": [140, 145], "445": [140, 146], "521": 140, "681": [140, 144], "628": 140, "214": [140, 145], "385": 140, "309": 140, "579": 140, "652": [140, 144, 145], "131": [140, 144, 146], "168": [140, 144], "169": [140, 146], "207": [140, 144], "208": [140, 144], "252": [140, 141, 147], "253": [140, 146], "345": 140, "346": [140, 144, 146], "457": 140, "523": [140, 145], "595": [140, 142, 144, 146], "676": [140, 145], "764": [140, 144, 146], "863": 140, "969": 140, "088": [140, 147], "089": 140, "218": [140, 141], "360": [140, 146, 148], "514": 140, "283": [140, 147], "034": [140, 144], "035": 140, "313": 140, "612": 140, "272": [140, 145], "637": [140, 148], "036": [140, 146], "876": [140, 144, 146], "877": [140, 144], "861": [140, 144], "365": [140, 145, 146], "366": 140, "897": [140, 146], "468": [140, 146], "051": 140, "661": 140, "028": [140, 146], "739": [140, 144, 146], "740": [140, 142, 144], "241": [140, 146], "042": 140, "673": 140, "641": 140, "757": [140, 147], "866": 140, "005": [140, 141, 143, 144, 146], "177": [140, 145, 146], "178": 140, "431": 140, "result_irb_2q": [140, 144], "704": [140, 142, 144], "795": 140, "888": 140, "070": [140, 146], "101": 140, "223": [140, 144, 146], "374": [140, 146], "465": 140, "526": 140, "586": [140, 146], "677": [140, 146], "707": 140, "798": [140, 146], "859": 140, "950": [140, 144], "981": [140, 144], "162": [140, 146], "9742310809885095": 140, "9459834045099638": 140, "9702389918426017": 140, "9373183372682623": 140, "9829862612568532": 140, "9651704260970525": 140, "9600628980342876": 140, "9331175707494691": 140, "example_irb_iswap": [140, 144], "iswapg": [140, 144, 145, 152], "benchmark_irb_iswap": [140, 144], "run_irb_iswap": [140, 144], "567": 140, "751": [140, 144, 146], "573": [140, 146], "742": [140, 146], "879": 140, "079": [140, 145, 146], "954": [140, 144, 146], "145": 140, "781": [140, 144, 147], "496": [140, 144], "725": [140, 146], "408": [140, 143, 146], "895": 140, "788": [140, 144], "513": 140, "517": [140, 146], "087": [140, 146], "773": [140, 144], "684": [140, 146], "638": [140, 146], "691": [140, 144], "204": [140, 142, 144, 147], "339": [140, 142, 144], "580": 140, "608": 140, "609": [140, 145, 146], "336": [140, 141, 146], "708": 140, "833": [140, 146], "990": 140, "084": 140, "187": 140, "303": 140, "576": [140, 146], "097": [140, 145], "530": [140, 144, 146], "776": [140, 142], "044": 140, "045": 140, "332": [140, 146], "333": [140, 144, 146], "984": [140, 146], "985": 140, "result_irb_iswap": [140, 144], "796": 140, "902": [140, 146], "073": 140, "115": [140, 146], "136": 140, "179": [140, 146], "221": [140, 146], "296": [140, 145, 146], "325": [140, 146], "388": [140, 146], "9296485294294863": 140, "9468865104887559": 140, "9168663709049512": 140, "9389212110918619": 140, "mirror_rb": [140, 145, 152], "example_mrb": [140, 145, 152], "benchmark_mrb": [140, 145], "run_mrb": [140, 145], "10x5": [140, 145], "64": [140, 145], "512": [140, 145], "090": [140, 144, 146], "109": [140, 152], "775": 140, "802": [140, 146], "779": [140, 143, 144, 146], "533": 140, "246": 140, "442": [140, 144], "369": 140, "491": [140, 144], "092": [140, 146], "613": 140, "631": [140, 144], "692": [140, 144], "375": [140, 145, 146], "723": [140, 142, 146], "878": 140, "266": 140, "123": 140, "_depth_2": [140, 145], "_depth_4": [140, 145], "_depth_8": [140, 145], "_depth_16": [140, 145], "_depth_32": [140, 145], "822": 140, "_depth_64": [140, 145], "_depth_128": [140, 145], "174": [140, 144], "_depth_256": [140, 145], "175": 140, "_depth_512": [140, 145], "515": 140, "720": [140, 146], "219": [140, 142], "857": [140, 146], "242": 140, "243": [140, 146, 148], "670": 140, "671": [140, 144], "147": [140, 145], "result_mrb": [140, 145], "706": [140, 144], "882": [140, 144], "962": 140, "067": [140, 144], "260": 140, "356": [140, 142], "1600x1200": 140, "ax": 140, "all_qubit_layout": [140, 145], "key_mrb_plot": [140, 145], "example_qv": [140, 147, 148, 152], "run0_qv": [140, 147, 148], "iqmfakeadonisbackend": 140, "234": [140, 146], "subbatch": [140, 147, 148], "562": 140, "588": 140, "093": 140, "023": 140, "434": [140, 146], "587": 140, "result0_qv": [140, 147, 148], "413": [140, 145], "run1_qv": [140, 147, 148], "result1_qv": [140, 147, 148], "865": [140, 146, 148], "213": [140, 146], "800": [140, 143], "321": 140, "887": [140, 141, 145, 146], "024": [140, 148], "155": [140, 146], "516": [140, 146], "247": 140, "278": [140, 142, 146], "347": 140, "265": [140, 146], "358": 140, "453": [140, 146, 147], "454": 140, "554": 140, "552": 140, "minimal_ghz": [140, 141, 142], "745": [140, 144], "792": [140, 146], "900": 140, "049": [140, 144], "238": 140, "306": 140, "423": [140, 146], "8309361141069083": 140, "fidelity_rem": [140, 142], "8897643257271268": 140, "example_qscor": [140, 146], "20_000": 140, "4767": 140, "4900": 140, "6739": 140, "3733": 140, "6246": 140, "3894": 140, "4881": 140, "4714": 140, "4767012007999197": 140, "09979310484432205": 140, "is_succes": [140, 146, 147, 148], "qscore_result": [140, 146], "6738975057778192": 140, "07204344830310698": 140, "6246025280898877": 140, "04717318377784287": 140, "4881333882446109": 140, "04133470512287928": 140, "multipartit": [141, 142], "One": [141, 142, 147, 148], "larger": [141, 142, 143], "suffici": [141, 142], "leibfri": [141, 142], "et": [141, 142], "al": [141, 142], "six": 141, "atom": 141, "schr\u00f6dinger": 141, "cat": 141, "natur": [141, 142], "438": [141, 142, 146], "2005": [141, 142], "offer": [141, 142, 151], "verif": [141, 150, 152], "superconduct": 141, "phy": [141, 142, 152], "commun": [141, 142, 151], "095004": [141, 142], "elben": [141, 142], "statist": 141, "local": 141, "toolbox": 141, "probe": 141, "bodi": 141, "rev": [141, 142, 152], "99": [141, 142], "052323": [141, 142], "ciruit": [141, 142], "hadamrd": 141, "addit": [141, 142, 143, 151, 152], "log_depth": [141, 142], "cruz": [141, 142], "yield": [141, 142], "lower": [141, 142, 143], "hous": 141, "reli": [141, 142], "dai": 141, "thu": [141, 142], "comparison": [141, 142], "best": [141, 142], "gme": [141, 142], "prefer": [141, 142, 151], "control": [141, 142, 151], "whenev": [141, 142], "mitgat": [141, 142], "arang": 141, "For": [141, 143, 151, 152], "think": 141, "help": 141, "rustworkx": 141, "iqmfakeapollo": [141, 143], "scrambl": 141, "rerun": 141, "usual": 141, "readabl": [141, 151], "mpl_draw": 141, "fake_backend": 141, "fake_apollo": 141, "arrow": 141, "32a8a4": 141, "num_it": 141, "209": [141, 146], "759": [141, 146], "760": [141, 146], "823": [141, 146], "233": 141, "597": [141, 145, 146], "016": [141, 146], "236": [141, 146], "594": [141, 146], "917": [141, 146], "279": 141, "fidelitii": [141, 142], "filter": [141, 142], "descript": [141, 142, 151], "l0": [141, 142], "l1": [141, 142], "enumer": [141, 142, 143], "tailor": 142, "novel": 142, "opt": 142, "anaconda3": [142, 148], "env": [142, 148], "lib": [142, 148], "python3": 142, "site": [142, 148], "170": [142, 146, 148], "userwarn": [142, 148], "unknown": [142, 148], "unknown_opt": [142, 148], "205": [142, 144, 146], "276": 142, "308": 142, "543": 142, "081": [142, 146], "125": [142, 145, 146], "927": 142, "872": 142, "455": 142, "102": 142, "9430881954317198": 142, "9742741960417851": 142, "introduct": 143, "what": [143, 144], "background": 143, "journal": 143, "prxquantum": 143, "1103": 143, "010325": [143, 152], "compressive_gst": 143, "gstconfigur": 143, "compressivegst": 143, "iqmfakeadoni": 143, "gate_set": 143, "predefin": 143, "1qxyi": 143, "2qxycz": 143, "2qxycz_extend": 143, "3qxycz": 143, "krau": 143, "reconstruct": 143, "rho": 143, "k_i": 143, "trigger": 143, "diamond": 143, "low": 143, "benefit": 143, "less": [143, 145], "captur": 143, "domin": 143, "sourc": [143, 150, 151], "bootstrap_sampl": 143, "trustworthi": 143, "veri": 143, "consum": 143, "minimal_1q_gst": 143, "minimal_2q_gst": 143, "Be": 143, "extra": 143, "871": [143, 146], "20it": 143, "621": 143, "converg": 143, "criterion": 143, "53e": 143, "uncertaintit": 143, "restult": 143, "idl": 143, "qb1": 143, "99693": 143, "00703": 143, "unitar": 143, "98781": 143, "rx": 143, "99918": 143, "0013": 143, "99674": 143, "ry": 143, "99509": 143, "01332": 143, "98074": 143, "tvd": 143, "00698": 143, "03296": 143, "povm": 143, "dist": 143, "00601": 143, "04366": 143, "matric": 143, "results_layout_": 143, "dict_kei": 143, "raw_kraus_oper": 143, "raw_gat": 143, "raw_povm": 143, "raw_stat": 143, "gauge_opt_g": 143, "gauge_opt_gates_pauli_basi": 143, "gauge_opt_povm": 143, "gauge_opt_st": 143, "main_mgst_tim": 143, "gauge_optimization_tim": 143, "choi_ev": 143, "full_metr": 143, "save": 143, "raw": 143, "gaug": 143, "frame": 143, "3d": 143, "raw_result": 143, "array_str": 143, "precis": 143, "suppress_smal": 143, "995": [143, 146], "002": [143, 144, 146], "002j": 143, "003j": 143, "004j": 143, "998": 143, "These": 143, "diplai": 143, "disc": 143, "superoper": 143, "represent": 143, "sinlg": 143, "g_": 143, "ij": 143, "p_i": 143, "p_j": 143, "layout_": 143, "_gate_metr": 143, "_choi_eigenvalu": 143, "_other_metr": 143, "_process_matrix_0": 143, "_process_matrix_1": 143, "_process_matrix_2": 143, "_spam_matrices_r": 143, "_spam_matrices_imag": 143, "altern": 143, "ourselv": 143, "xyi": 143, "instruct": 143, "gate_list": 143, "1e": 143, "indentif": 143, "gate_label": 143, "\u03c0": [143, 148], "custom_1q_gst": 143, "verbos": 143, "806": [143, 147], "61": 143, "803": 143, "42e": 143, "008j": 143, "989": [143, 144, 146], "001j": 143, "553": 144, "324": [144, 146], "964": 144, "064": 144, "065": 144, "294": 144, "664": 144, "107": 144, "982": [144, 145], "058": [144, 146], "538": [144, 146], "120": [144, 146], "121": [144, 146], "146": 144, "522": [144, 145], "103": [144, 146], "744": [144, 146], "780": [144, 145, 147], "818": 144, "819": [144, 145], "133": [144, 145], "286": 144, "287": 144, "376": [144, 146], "583": 144, "9975073376613797": 144, "9957157328789242": 144, "9976959612386156": 144, "9957310522299055": 144, "752861001879659e": 144, "028839025109517e": 144, "64196778583225e": 144, "243656712565855e": 144, "know": 144, "679": [144, 145, 146], "118": [144, 146], "820": [144, 146], "915": 144, "577": 144, "148": [144, 146], "874": [144, 146], "951": [144, 146], "380": 144, "381": 144, "485": 144, "685": [144, 146], "9798030906041997": 144, "9431232937255942": 144, "9840858225184934": 144, "945382422883015": 144, "593": [144, 146], "885": [144, 146], "490": [144, 146], "883": [144, 145, 146], "038": 144, "215": [144, 145], "282": 144, "348": 144, "394": 144, "395": [144, 146], "492": 144, "675": 144, "752": [144, 146], "932": 144, "933": 144, "158": [144, 146], "289": [144, 146], "436": [144, 146], "566": 144, "9344679810705316": 144, "9463377694591251": 144, "9267928870925659": 144, "943379008472002": 144, "892": 145, "589": 145, "646": 145, "702": 145, "244": 145, "996": 145, "598": [145, 146], "867": [145, 146], "117": 145, "271": [145, 146], "448": [145, 146], "449": [145, 146], "150": [145, 146], "450": [145, 146], "605": 145, "184": 145, "342": 145, "343": 145, "422": [145, 146], "134": 145, "456": 145, "529": [145, 146], "attr_kei": [145, 147, 148], "depth_2": 145, "14302134513855": 145, "007565975189208984": 145, "06883907318115234": 145, "f8d9d789": 145, "0e9a": 145, "4086": 145, "ab36": 145, "685064a7b66": 145, "depth_4": 145, "0004930496215820312": 145, "0007040500640869141": 145, "87e367b7": 145, "c3ae": 145, "4457": 145, "8a2d": 145, "7b169c528033": 145, "depth_8": 145, "0004889965057373047": 145, "0005979537963867188": 145, "d84330c9": 145, "101f": 145, "40ff": 145, "bea8": 145, "f5e4c0b41527": 145, "depth_16": 145, "0004627704620361328": 145, "0006148815155029297": 145, "1f58b4a0": 145, "fb16": 145, "4d12": 145, "a9e8": 145, "c9263da52418": 145, "depth_32": 145, "00047278404235839844": 145, "0005419254302978516": 145, "4e43834b": 145, "5694": 145, "4c6d": 145, "8a83": 145, "796913d67e40": 145, "depth_64": 145, "000469207763671875": 145, "0005609989166259766": 145, "036e1dd": 145, "ca95": 145, "42a1": 145, "ab68": 145, "30a243f6b4ba": 145, "depth_128": 145, "0004668235778808594": 145, "0005328655242919922": 145, "13a59ca8": 145, "2ab0": 145, "4de8": 145, "a643": 145, "5b3f318f03d4": 145, "depth_256": 145, "0004749298095703125": 145, "e673defd": 145, "039c": 145, "4c37": 145, "9ef3": 145, "d4734436f39a": 145, "depth_512": 145, "0005099773406982422": 145, "0005548000335693359": 145, "d83ac439": 145, "2929": 145, "4d78": 145, "b52b": 145, "f297873c3e44": 145, "9710221314803044": 145, "001462493086363885": 145, "9473471466489307": 145, "00285118172031131": 145, "xxxxxxxxxxxxxx": 146, "put": 146, "run0_qscor": 146, "549": 146, "680": 146, "622": 146, "772": 146, "869": 146, "898": 146, "462": 146, "563": 146, "027": 146, "235": 146, "602": 146, "928": 146, "193": 146, "353": 146, "494": 146, "539": 146, "568": 146, "645": 146, "696": 146, "167": 146, "293": 146, "472": 146, "505": 146, "632": 146, "778": 146, "851": 146, "210": [146, 147], "275": 146, "326": 146, "540": 146, "715": 146, "922": 146, "057": 146, "129": [146, 152], "302": 146, "506": 146, "683": 146, "141": 146, "478": 146, "056": 146, "135": 146, "493": 146, "528": 146, "599": 146, "687": 146, "047": 146, "228": 146, "317": 146, "452": 146, "809": 146, "957": 146, "913": 146, "183": 146, "430": 146, "480": 146, "716": 146, "926": 146, "974": 146, "052": 146, "762": 146, "793": 146, "847": 146, "419": 146, "850": 146, "903": 146, "474": 146, "507": 146, "564": 146, "711": 146, "189": 146, "273": [146, 148], "327": 146, "503": 146, "590": 146, "709": 146, "363": 146, "473": 146, "669": 146, "018": 146, "479": 146, "830": 146, "914": 146, "139": 146, "421": 146, "535": 146, "585": 146, "617": 146, "934": 146, "335": 146, "392": 146, "551": 146, "699": 146, "827": 146, "281": 146, "534": 146, "633": 146, "946": 146, "980": 146, "032": [146, 147], "340": 146, "337": 146, "310": 146, "203": 146, "258": 146, "318": 146, "124": 146, "226": 146, "601": 146, "956": 146, "017": 146, "053": 146, "137": 146, "result0_qscor": 146, "4370": 146, "4700": 146, "6695": 146, "3692": 146, "5902": 146, "3404": 146, "5068": 146, "5085": 146, "4374": 146, "8942": 146, "43697610073325965": 146, "09963324394097106": 146, "6694825328517715": 146, "07553199096996285": 146, "5901951757699432": 146, "04806723107119834": 146, "5067731707198324": 146, "03884606517763287": 146, "4373922810576933": 146, "034249084355823": 146, "217": 147, "082": 147, "rem_quasidistribut": [147, 148], "time_batch": [147, 148], "cumulative_average_heavy_output_prob": [147, 148], "cumulative_stddev_heavy_output_prob": [147, 148], "rem_cumulative_average_heavy_output_prob": [147, 148], "rem_cumulative_stddev_heavy_output_prob": [147, 148], "rem_heavy_output_prob": [147, 148], "60546875": 147, "71875": 147, "578125": 147, "74609375": 147, "6328125": 147, "546875": 147, "56640625": 147, "76953125": 147, "75390625": 147, "67578125": 147, "6171875": 147, "55078125": 147, "64453125": 147, "6875": 147, "7109375": 147, "82421875": 147, "76171875": 147, "6484375": 147, "6015625": 147, "73828125": 147, "63671875": 147, "69140625": 147, "61328125": 147, "734375": 147, "57421875": 147, "6953125": 147, "55859375": 147, "69921875": 147, "609375": 147, "671875": 147, "77734375": 147, "6796875": 147, "62890625": 147, "6640625": 147, "66796875": 147, "62109375": 147, "703125": 147, "68359375": 147, "58984375": 147, "71484375": 147, "59375": 147, "79296875": 147, "66015625": 147, "65234375": 147, "59765625": 147, "65625": 147, "84765625": 147, "5859375": 147, "5625": 147, "72265625": 147, "640625": 147, "58203125": 147, "54296875": 147, "8203125": 147, "78515625": 147, "7265625": 147, "53515625": 147, "5703125": 147, "5546875": 147, "5390625": 147, "828125": 147, "80859375": 147, "765625": 147, "81640625": 147, "5234375": 147, "75": 147, "73046875": 147, "87890625": 147, "7890625": 147, "7734375": 147, "7421875": 147, "70703125": 147, "50390625": 147, "7578125": 147, "52734375": 147, "78125": 147, "8125": 147, "average_heavy_output_prob": [147, 148], "649203125": 147, "021341903733745705": 147, "672703125": 147, "020984452845629994": 147, "rem_average_heavy_output_prob": [147, 148], "67954478782619": 147, "020869291754367154": 147, "rem_is_succes": [147, 148], "rem_qv_result": [147, 148], "710149650958595": 147, "020289757228807877": 147, "vanilla_4_qubits_": [147, 148], "vanilla_rem_4_qubits_": 147, "Or": [147, 148], "onc": [147, 148, 152], "668": 148, "pedrofigueroaromero": 148, "190": 148, "server": 148, "e48420cb": 148, "30dc": 148, "4274": 148, "9d7d": 148, "e5fffa68f73a": 148, "7404ae11": 148, "823a": 148, "4e66": 148, "b2c4": 148, "41361cf10c69": 148, "untranspiled_circuit": 148, "q_0": 148, "q_1": 148, "q_2": 148, "mea": 148, "48526": 148, "79781": 148, "58665": 148, "3705": 148, "1471": 148, "1775": 148, "1521": 148, "q_3": 148, "q_4": 148, "73475": 148, "1344": 148, "q_5": 148, "q_6": 148, "30103": 148, "7711": 148, "3108": 148, "6909": 148, "6665": 148, "65249": 148, "8837": 148, "24328": 148, "3169": 148, "6809": 148, "71478125": 148, "020192524094250205": 148, "7261292473074281": 148, "019943197512544274": 148, "vanilla_3_qubits_": 148, "vanilla_rem_3_qubits_": 148, "collect": 149, "demonstr": 149, "variou": 149, "rest": 149, "summari": [149, 150], "tomographi": [149, 150, 152], "releas": 150, "date": [150, 151], "finland": 150, "tool": [150, 152], "changelog": 150, "search": 150, "page": [150, 151], "januari": 151, "2004": 151, "AND": 151, "FOR": 151, "reproduct": 151, "shall": 151, "licensor": 151, "owner": 151, "entiti": 151, "author": 151, "grant": 151, "legal": 151, "power": 151, "direct": 151, "indirect": 151, "caus": 151, "contract": 151, "ownership": 151, "fifti": 151, "percent": 151, "outstand": 151, "iii": 151, "benefici": 151, "exercis": 151, "mechan": 151, "transform": 151, "translat": 151, "convers": 151, "media": 151, "authorship": 151, "attach": 151, "appendix": 151, "editori": 151, "revis": 151, "elabor": 151, "whole": 151, "remain": 151, "mere": 151, "link": 151, "bind": 151, "interfac": 151, "thereof": 151, "contribut": 151, "intention": 151, "inclus": 151, "behalf": 151, "electron": 151, "verbal": 151, "mail": 151, "issu": 151, "track": 151, "discuss": 151, "exclud": 151, "conspicu": 151, "mark": 151, "Not": 151, "contributor": 151, "whom": 151, "been": 151, "receiv": 151, "incorpor": 151, "subject": 151, "herebi": 151, "perpetu": 151, "worldwid": 151, "charg": 151, "royalti": 151, "free": 151, "irrevoc": 151, "reproduc": 151, "publicli": 151, "sublicens": 151, "patent": 151, "sell": 151, "transfer": 151, "claim": 151, "necessarili": 151, "infring": 151, "alon": 151, "institut": 151, "litig": 151, "counterclaim": 151, "lawsuit": 151, "alleg": 151, "contributori": 151, "termin": [151, 152], "redistribut": 151, "medium": 151, "meet": 151, "recipi": 151, "carri": 151, "promin": 151, "retain": 151, "trademark": 151, "pertain": 151, "along": 151, "wherev": 151, "third": 151, "parti": 151, "normal": 151, "appear": 151, "content": 151, "alongsid": 151, "addendum": 151, "constru": 151, "compli": 151, "explicitli": 151, "notwithstand": 151, "noth": 151, "herein": 151, "supersed": 151, "agreement": 151, "regard": 151, "trade": 151, "servic": [151, 152], "reason": 151, "customari": 151, "describ": 151, "disclaim": 151, "merchant": 151, "particular": 151, "respons": 151, "appropri": 151, "risk": 151, "liabil": 151, "event": 151, "tort": 151, "neglig": 151, "deliber": [151, 152], "grossli": 151, "liabl": 151, "damag": 151, "special": 151, "incident": 151, "consequenti": 151, "charact": 151, "aris": 151, "inabl": 151, "loss": 151, "goodwil": 151, "stoppag": 151, "failur": 151, "malfunct": 151, "commerci": 151, "even": 151, "advis": 151, "fee": 151, "indemn": 151, "oblig": 151, "indemnifi": 151, "defend": 151, "hold": 151, "harmless": 151, "incur": 151, "assert": 151, "boilerpl": 151, "enclos": 151, "bracket": 151, "don": 151, "t": 151, "comment": 151, "syntax": 151, "easier": 151, "archiv": 151, "repositori": [151, 152], "licenc": 151, "src": 151, "raphael": 151, "brieger": 151, "ingo": 151, "roth": 151, "martin": 151, "kliesch": 151, "comprehens": 152, "modular": 152, "easi": 152, "042311": 152, "lett": 152, "080505": 152, "prx": 152, "2023": 152, "150502": 152, "2022": 152, "holist": 152, "032328": 152, "0712": 152, "0921": 152, "2007": 152, "ieee": 152, "tran": 152, "eng": 152, "split": 152, "legaci": 152, "wrap": 152, "benchmarkexperi": 152, "handl": 152, "uv": 152, "highli": 152, "practic": 152, "With": 152, "machin": 152, "venv": 152, "read": 152, "prompt": 152, "suppli": 152, "txt": 152, "lock": 152, "directli": 152, "repo": 152, "pypi": 152, "lint": 152, "cicd": 152, "clone": 152, "directori": 152, "edit": 152, "docbuild": 152, "pyproject": 152, "toml": 152, "commit": 152, "upgrad": 152, "transit": 152, "automat": 152, "cloud": 152, "prem": 152, "platform": 152, "authent": 152, "your_token": 152, "example_irb": 152, "example_experi": 152, "setup": 152, "weekli": 152, "daili": 152, "gitlab": 152, "scheduled_experi": 152}, "objects": {"iqm": [[1, 0, 0, "-", "benchmarks"]], "iqm.benchmarks": [[2, 0, 0, "-", "benchmark"], [5, 0, 0, "-", "benchmark_definition"], [15, 0, 0, "-", "circuit_containers"], [19, 0, 0, "-", "entanglement"], [35, 0, 0, "-", "logging_config"], [36, 0, 0, "-", "optimization"], [49, 0, 0, "-", "quantum_volume"], [68, 0, 0, "-", "randomized_benchmarking"], [112, 0, 0, "-", "readout_mitigation"], [116, 0, 0, "-", "utils"]], "iqm.benchmarks.benchmark": [[3, 1, 1, "", "BenchmarkBase"], [4, 1, 1, "", "BenchmarkConfigurationBase"]], "iqm.benchmarks.benchmark.BenchmarkBase": [[3, 2, 1, "", "check_requirements"], [3, 2, 1, "", "execute_full_benchmark"], [3, 2, 1, "", "generate_requirements"], [3, 2, 1, "", "name"]], "iqm.benchmarks.benchmark.BenchmarkConfigurationBase": [[4, 3, 1, "", "benchmark"], [4, 3, 1, "", "calset_id"], [4, 3, 1, "", "max_gates_per_batch"], [4, 3, 1, "", "model_computed_fields"], [4, 3, 1, "", "model_config"], [4, 3, 1, "", "model_fields"], [4, 3, 1, "", "physical_layout"], [4, 3, 1, "", "routing_method"], [4, 3, 1, "", "shots"]], "iqm.benchmarks.benchmark_definition": [[6, 1, 1, "", "Benchmark"], [7, 1, 1, "", "BenchmarkAnalysisResult"], [8, 1, 1, "", "BenchmarkObservation"], [9, 1, 1, "", "BenchmarkObservationIdentifier"], [10, 1, 1, "", "BenchmarkRunResult"], [11, 5, 1, "", "add_counts_to_dataset"], [12, 5, 1, "", "default_analysis_function"], [13, 5, 1, "", "merge_datasets_dac"], [14, 5, 1, "", "show_figure"]], "iqm.benchmarks.benchmark_definition.Benchmark": [[6, 2, 1, "", "analysis_function"], [6, 2, 1, "", "analyze"], [6, 2, 1, "", "execute"], [6, 2, 1, "", "name"], [6, 2, 1, "", "run"]], "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult": [[7, 2, 1, "", "from_run_result"], [7, 2, 1, "", "plot"], [7, 2, 1, "", "plot_all"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservation": [[8, 3, 1, "", "identifier"], [8, 3, 1, "", "name"], [8, 3, 1, "", "uncertainty"], [8, 3, 1, "", "value"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier": [[9, 3, 1, "", "qubit_indices"], [9, 4, 1, "", "string_identifier"]], "iqm.benchmarks.circuit_containers": [[16, 1, 1, "", "BenchmarkCircuit"], [17, 1, 1, "", "CircuitGroup"], [18, 1, 1, "", "Circuits"]], "iqm.benchmarks.circuit_containers.BenchmarkCircuit": [[16, 3, 1, "", "circuit_groups"], [16, 2, 1, "", "get_circuit_group_by_name"], [16, 4, 1, "", "group_names"], [16, 4, 1, "", "groups"], [16, 3, 1, "", "name"], [16, 4, 1, "", "qubit_indices"], [16, 4, 1, "", "qubit_layouts"], [16, 4, 1, "", "qubit_layouts_by_index"], [16, 4, 1, "", "qubits"]], "iqm.benchmarks.circuit_containers.CircuitGroup": [[17, 2, 1, "", "add_circuit"], [17, 4, 1, "", "circuit_names"], [17, 3, 1, "", "circuits"], [17, 2, 1, "", "get_circuits_by_name"], [17, 3, 1, "", "name"], [17, 4, 1, "", "qubit_layouts"], [17, 4, 1, "", "qubit_layouts_by_index"], [17, 4, 1, "", "qubits"]], "iqm.benchmarks.circuit_containers.Circuits": [[18, 3, 1, "", "benchmark_circuits"], [18, 2, 1, "", "get_benchmark_circuits_by_name"]], "iqm.benchmarks.entanglement": [[20, 0, 0, "-", "ghz"]], "iqm.benchmarks.entanglement.ghz": [[21, 1, 1, "", "GHZBenchmark"], [22, 1, 1, "", "GHZConfiguration"], [23, 5, 1, "", "extract_fidelities"], [24, 5, 1, "", "fidelity_analysis"], [25, 5, 1, "", "fidelity_ghz_coherences"], [26, 5, 1, "", "fidelity_ghz_randomized_measurements"], [27, 5, 1, "", "generate_ghz_linear"], [28, 5, 1, "", "generate_ghz_log_cruz"], [29, 5, 1, "", "generate_ghz_log_mooney"], [30, 5, 1, "", "generate_ghz_spanning_tree"], [31, 5, 1, "", "generate_ghz_star"], [32, 5, 1, "", "get_cx_map"], [33, 5, 1, "", "get_edges"], [34, 5, 1, "", "plot_fidelities"]], "iqm.benchmarks.entanglement.ghz.GHZBenchmark": [[21, 2, 1, "", "add_configuration_to_dataset"], [21, 2, 1, "", "analysis_function"], [21, 2, 1, "", "append_rms"], [21, 2, 1, "", "execute"], [21, 2, 1, "", "generate_coherence_meas_circuits"], [21, 2, 1, "", "generate_native_ghz"], [21, 2, 1, "", "generate_readout_circuit"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration": [[22, 3, 1, "", "benchmark"], [22, 3, 1, "", "cal_url"], [22, 3, 1, "", "custom_qubits_array"], [22, 3, 1, "", "fidelity_routine"], [22, 3, 1, "", "mit_shots"], [22, 3, 1, "", "model_computed_fields"], [22, 3, 1, "", "model_config"], [22, 3, 1, "", "model_fields"], [22, 3, 1, "", "num_RMs"], [22, 3, 1, "", "optimize_sqg"], [22, 3, 1, "", "qiskit_optim_level"], [22, 3, 1, "", "qubit_counts"], [22, 3, 1, "", "rem"], [22, 3, 1, "", "state_generation_routine"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration.iqm.qiskit_iqm.iqm_transpilation": [[22, 3, 1, "", "optimize_single_qubit_gates"]], "iqm.benchmarks.optimization": [[37, 0, 0, "-", "qscore"]], "iqm.benchmarks.optimization.qscore": [[38, 1, 1, "", "QScoreBenchmark"], [39, 1, 1, "", "QScoreConfiguration"], [40, 5, 1, "", "calculate_optimal_angles_for_QAOA_p1"], [41, 5, 1, "", "compute_expectation_value"], [42, 5, 1, "", "create_objective_function"], [43, 5, 1, "", "cut_cost_function"], [44, 5, 1, "", "get_optimal_angles"], [45, 5, 1, "", "is_successful"], [46, 5, 1, "", "plot_approximation_ratios"], [47, 5, 1, "", "qscore_analysis"], [48, 5, 1, "", "run_QAOA"]], "iqm.benchmarks.optimization.qscore.QScoreBenchmark": [[38, 2, 1, "", "add_all_meta_to_dataset"], [38, 2, 1, "", "analysis_function"], [38, 2, 1, "", "choose_qubits_custom"], [38, 2, 1, "", "choose_qubits_naive"], [38, 2, 1, "", "execute"], [38, 2, 1, "", "generate_maxcut_ansatz"]], "iqm.benchmarks.optimization.qscore.QScoreConfiguration": [[39, 3, 1, "", "REM"], [39, 3, 1, "", "benchmark"], [39, 3, 1, "", "choose_qubits_routine"], [39, 3, 1, "", "custom_qubits_array"], [39, 3, 1, "", "max_num_nodes"], [39, 3, 1, "", "min_num_nodes"], [39, 3, 1, "", "min_num_qubits"], [39, 3, 1, "", "mit_shots"], [39, 3, 1, "", "model_computed_fields"], [39, 3, 1, "", "model_config"], [39, 3, 1, "", "model_fields"], [39, 3, 1, "", "num_instances"], [39, 3, 1, "", "num_qaoa_layers"], [39, 3, 1, "", "optimize_sqg"], [39, 3, 1, "", "qiskit_optim_level"], [39, 3, 1, "", "qpu_topology"], [39, 3, 1, "", "seed"], [39, 3, 1, "", "use_classically_optimized_angles"], [39, 3, 1, "", "use_virtual_node"]], "iqm.benchmarks.quantum_volume": [[50, 0, 0, "-", "clops"], [56, 0, 0, "-", "quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[51, 1, 1, "", "CLOPSBenchmark"], [52, 1, 1, "", "CLOPSConfiguration"], [53, 5, 1, "", "clops_analysis"], [54, 5, 1, "", "plot_times"], [55, 5, 1, "", "retrieve_clops_elapsed_times"]], "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark": [[51, 2, 1, "", "add_all_meta_to_dataset"], [51, 2, 1, "", "analysis_function"], [51, 2, 1, "", "append_parameterized_unitary"], [51, 2, 1, "", "assign_random_parameters_to_all"], [51, 2, 1, "", "clops_cycle"], [51, 2, 1, "", "execute"], [51, 2, 1, "", "generate_circuit_list"], [51, 2, 1, "", "generate_random_parameters"], [51, 2, 1, "", "generate_single_circuit"], [51, 2, 1, "", "generate_transpiled_clops_templates"]], "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration": [[52, 3, 1, "", "benchmark"], [52, 3, 1, "", "clops_h_bool"], [52, 3, 1, "", "model_computed_fields"], [52, 3, 1, "", "model_config"], [52, 3, 1, "", "model_fields"], [52, 3, 1, "", "num_circuits"], [52, 3, 1, "", "num_shots"], [52, 3, 1, "", "num_updates"], [52, 3, 1, "", "optimize_sqg"], [52, 3, 1, "", "physical_layout"], [52, 3, 1, "", "qiskit_optim_level"], [52, 3, 1, "", "qubits"], [52, 3, 1, "", "routing_method"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[57, 1, 1, "", "QuantumVolumeBenchmark"], [58, 1, 1, "", "QuantumVolumeConfiguration"], [59, 5, 1, "", "compute_heavy_output_probabilities"], [60, 5, 1, "", "cumulative_hop"], [61, 5, 1, "", "cumulative_std"], [62, 5, 1, "", "get_ideal_heavy_outputs"], [63, 5, 1, "", "get_rem_hops"], [64, 5, 1, "", "heavy_projector"], [65, 5, 1, "", "is_successful"], [66, 5, 1, "", "plot_hop_threshold"], [67, 5, 1, "", "qv_analysis"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark": [[57, 2, 1, "", "add_all_circuits_to_dataset"], [57, 2, 1, "", "add_all_meta_to_dataset"], [57, 2, 1, "", "analysis_function"], [57, 2, 1, "", "execute"], [57, 2, 1, "", "generate_circuit_list"], [57, 2, 1, "", "generate_single_circuit"], [57, 2, 1, "", "get_rem_quasidistro"], [57, 2, 1, "", "submit_single_qv_job"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration": [[58, 3, 1, "", "benchmark"], [58, 3, 1, "", "choose_qubits_routine"], [58, 3, 1, "", "custom_qubits_array"], [58, 3, 1, "", "mit_shots"], [58, 3, 1, "", "model_computed_fields"], [58, 3, 1, "", "model_config"], [58, 3, 1, "", "model_fields"], [58, 3, 1, "", "num_circuits"], [58, 3, 1, "", "num_sigmas"], [58, 3, 1, "", "optimize_sqg"], [58, 3, 1, "", "physical_layout"], [58, 3, 1, "", "qiskit_optim_level"], [58, 3, 1, "", "rem"], [58, 3, 1, "", "routing_method"]], "iqm.benchmarks.randomized_benchmarking": [[69, 0, 0, "-", "clifford_rb"], [74, 0, 0, "-", "interleaved_rb"], [79, 0, 0, "-", "mirror_rb"], [89, 0, 0, "-", "multi_lmfit"], [94, 0, 0, "-", "randomized_benchmarking_common"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[70, 0, 0, "-", "clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[71, 1, 1, "", "CliffordRBConfiguration"], [72, 1, 1, "", "CliffordRandomizedBenchmarking"], [73, 5, 1, "", "clifford_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration": [[71, 3, 1, "", "benchmark"], [71, 3, 1, "", "model_computed_fields"], [71, 3, 1, "", "model_config"], [71, 3, 1, "", "model_fields"], [71, 3, 1, "", "num_circuit_samples"], [71, 3, 1, "", "parallel_execution"], [71, 3, 1, "", "qubits_array"], [71, 3, 1, "", "sequence_lengths"], [71, 3, 1, "", "shots"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking": [[72, 2, 1, "", "add_all_circuits_to_dataset"], [72, 2, 1, "", "add_all_metadata_to_dataset"], [72, 2, 1, "", "analysis_function"], [72, 2, 1, "", "execute"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[75, 0, 0, "-", "interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[76, 1, 1, "", "InterleavedRBConfiguration"], [77, 1, 1, "", "InterleavedRandomizedBenchmarking"], [78, 5, 1, "", "interleaved_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration": [[76, 3, 1, "", "interleaved_gate"], [76, 3, 1, "", "interleaved_gate_params"], [76, 3, 1, "", "model_computed_fields"], [76, 3, 1, "", "model_config"], [76, 3, 1, "", "model_fields"], [76, 3, 1, "", "num_circuit_samples"], [76, 3, 1, "", "parallel_execution"], [76, 3, 1, "", "qubits_array"], [76, 3, 1, "", "sequence_lengths"], [76, 3, 1, "", "shots"], [76, 3, 1, "", "simultaneous_fit"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking": [[77, 2, 1, "", "add_all_circuits_to_dataset"], [77, 2, 1, "", "add_all_meta_to_dataset"], [77, 2, 1, "", "analysis_function"], [77, 2, 1, "", "execute"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[80, 0, 0, "-", "mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[81, 1, 1, "", "MirrorRBConfiguration"], [82, 1, 1, "", "MirrorRandomizedBenchmarking"], [83, 5, 1, "", "compute_polarizations"], [84, 5, 1, "", "edge_grab"], [85, 5, 1, "", "generate_fixed_depth_mrb_circuits"], [86, 5, 1, "", "generate_pauli_dressed_mrb_circuits"], [87, 5, 1, "", "list_to_numcircuit_times_numpauli_matrix"], [88, 5, 1, "", "mrb_analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration": [[81, 3, 1, "", "benchmark"], [81, 3, 1, "", "density_2q_gates"], [81, 3, 1, "", "depths_array"], [81, 3, 1, "", "model_computed_fields"], [81, 3, 1, "", "model_config"], [81, 3, 1, "", "model_fields"], [81, 3, 1, "", "num_circuit_samples"], [81, 3, 1, "", "num_pauli_samples"], [81, 3, 1, "", "qiskit_optim_level"], [81, 3, 1, "", "qubits_array"], [81, 3, 1, "", "routing_method"], [81, 3, 1, "", "shots"], [81, 3, 1, "", "two_qubit_gate_ensemble"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking": [[82, 2, 1, "", "add_all_meta_to_dataset"], [82, 2, 1, "", "analysis_function"], [82, 2, 1, "", "execute"], [82, 2, 1, "", "submit_single_mrb_job"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[90, 5, 1, "", "create_multi_dataset_params"], [91, 5, 1, "", "eval_func_single_dataset"], [92, 5, 1, "", "get_param_names_from_func_signature"], [93, 5, 1, "", "multi_dataset_residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[95, 5, 1, "", "compute_inverse_clifford"], [96, 5, 1, "", "estimate_survival_probabilities"], [97, 5, 1, "", "exponential_rb"], [98, 5, 1, "", "fit_decay_lmfit"], [99, 5, 1, "", "generate_all_rb_circuits"], [100, 5, 1, "", "generate_fixed_depth_parallel_rb_circuits"], [101, 5, 1, "", "generate_random_clifford_seq_circuits"], [102, 5, 1, "", "get_survival_probabilities"], [103, 5, 1, "", "import_native_gate_cliffords"], [104, 5, 1, "", "lmfit_minimizer"], [105, 5, 1, "", "plot_rb_decay"], [106, 5, 1, "", "relabel_qubits_array_from_zero"], [107, 5, 1, "", "submit_parallel_rb_job"], [108, 5, 1, "", "submit_sequential_rb_jobs"], [109, 5, 1, "", "survival_probabilities_parallel"], [110, 5, 1, "", "validate_irb_gate"], [111, 5, 1, "", "validate_rb_qubits"]], "iqm.benchmarks.readout_mitigation": [[113, 1, 1, "", "M3IQM"], [114, 5, 1, "", "apply_readout_error_mitigation"], [115, 5, 1, "", "readout_error_m3"]], "iqm.benchmarks.readout_mitigation.M3IQM": [[113, 2, 1, "", "cals_from_system"]], "iqm.benchmarks.utils": [[117, 5, 1, "", "bootstrap_counts"], [118, 5, 1, "", "count_2q_layers"], [119, 5, 1, "", "count_native_gates"], [120, 5, 1, "", "get_iqm_backend"], [121, 5, 1, "", "marginal_distribution"], [122, 5, 1, "", "perform_backend_transpilation"], [123, 5, 1, "", "reduce_to_active_qubits"], [124, 5, 1, "", "retrieve_all_counts"], [125, 5, 1, "", "retrieve_all_job_metadata"], [126, 5, 1, "", "set_coupling_map"], [127, 5, 1, "", "sort_batches_by_final_layout"], [128, 5, 1, "", "submit_execute"], [129, 5, 1, "", "timeit"], [130, 5, 1, "", "xrvariable_to_counts"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": 0, "iqm": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 140, 142, 145, 146, 147, 148, 150, 152], "benchmark": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 134, 136, 137, 138, 139, 140, 141, 142, 144, 145, 150, 152], "benchmarkbas": 3, "benchmarkconfigurationbas": 4, "benchmark_definit": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "benchmarkanalysisresult": 7, "benchmarkobserv": 8, "benchmarkobservationidentifi": 9, "benchmarkrunresult": 10, "add_counts_to_dataset": 11, "default_analysis_funct": 12, "merge_datasets_dac": 13, "show_figur": 14, "circuit_contain": [15, 16, 17, 18], "benchmarkcircuit": 16, "circuitgroup": 17, "circuit": [18, 136, 137, 139, 148], "entangl": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "ghz": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 136, 137, 140, 141, 142], "ghzbenchmark": 21, "ghzconfigur": 22, "extract_fidel": 23, "fidelity_analysi": 24, "fidelity_ghz_coher": 25, "fidelity_ghz_randomized_measur": 26, "generate_ghz_linear": 27, "generate_ghz_log_cruz": 28, "generate_ghz_log_moonei": 29, "generate_ghz_spanning_tre": 30, "generate_ghz_star": 31, "get_cx_map": 32, "get_edg": 33, "plot_fidel": 34, "logging_config": 35, "optim": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48], "qscore": [37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 140, 146], "qscorebenchmark": 38, "qscoreconfigur": 39, "calculate_optimal_angles_for_qaoa_p1": 40, "compute_expectation_valu": 41, "create_objective_funct": 42, "cut_cost_funct": 43, "get_optimal_angl": 44, "is_success": [45, 65], "plot_approximation_ratio": 46, "qscore_analysi": 47, "run_qaoa": 48, "quantum_volum": [49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "clop": [50, 51, 52, 53, 54, 55, 136, 137, 139, 140], "clopsbenchmark": 51, "clopsconfigur": 52, "clops_analysi": 53, "plot_tim": 54, "retrieve_clops_elapsed_tim": 55, "quantumvolumebenchmark": 57, "quantumvolumeconfigur": 58, "compute_heavy_output_prob": 59, "cumulative_hop": 60, "cumulative_std": 61, "get_ideal_heavy_output": 62, "get_rem_hop": 63, "heavy_projector": 64, "plot_hop_threshold": 66, "qv_analysi": 67, "randomized_benchmark": [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "clifford_rb": [69, 70, 71, 72, 73], "cliffordrbconfigur": 71, "cliffordrandomizedbenchmark": 72, "clifford_rb_analysi": 73, "interleaved_rb": [74, 75, 76, 77, 78], "interleavedrbconfigur": 76, "interleavedrandomizedbenchmark": 77, "interleaved_rb_analysi": 78, "mirror_rb": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "mirrorrbconfigur": 81, "mirrorrandomizedbenchmark": 82, "compute_polar": 83, "edge_grab": 84, "generate_fixed_depth_mrb_circuit": 85, "generate_pauli_dressed_mrb_circuit": 86, "list_to_numcircuit_times_numpauli_matrix": 87, "mrb_analysi": 88, "multi_lmfit": [89, 90, 91, 92, 93], "create_multi_dataset_param": 90, "eval_func_single_dataset": 91, "get_param_names_from_func_signatur": 92, "multi_dataset_residu": 93, "randomized_benchmarking_common": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "compute_inverse_clifford": 95, "estimate_survival_prob": 96, "exponential_rb": 97, "fit_decay_lmfit": 98, "generate_all_rb_circuit": 99, "generate_fixed_depth_parallel_rb_circuit": 100, "generate_random_clifford_seq_circuit": 101, "get_survival_prob": 102, "import_native_gate_clifford": 103, "lmfit_minim": 104, "plot_rb_decai": 105, "relabel_qubits_array_from_zero": 106, "submit_parallel_rb_job": 107, "submit_sequential_rb_job": 108, "survival_probabilities_parallel": 109, "validate_irb_g": 110, "validate_rb_qubit": 111, "readout_mitig": [112, 113, 114, 115], "m3iqm": 113, "apply_readout_error_mitig": 114, "readout_error_m3": 115, "util": [116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "bootstrap_count": 117, "count_2q_lay": 118, "count_native_g": 119, "get_iqm_backend": 120, "marginal_distribut": 121, "perform_backend_transpil": 122, "reduce_to_active_qubit": 123, "retrieve_all_count": 124, "retrieve_all_job_metadata": 125, "set_coupling_map": 126, "sort_batches_by_final_layout": 127, "submit_execut": 128, "timeit": 129, "xrvariable_to_count": 130, "changelog": 131, "version": 131, "2": [131, 133], "22": 131, "21": 131, "20": 131, "19": 131, "18": 131, "17": 131, "16": 131, "15": 131, "14": 131, "13": 131, "12": 131, "11": 131, "10": 131, "9": 131, "8": 131, "7": 131, "6": 131, "5": 131, "4": 131, "3": 131, "1": [131, 137], "0": [131, 137], "develop": [132, 152], "qubit": [133, 137], "clifford": [133, 136, 138, 140], "group": 133, "decomposit": 133, "gener": [133, 139, 145, 147, 148], "1q": [133, 144], "2q": [133, 144], "dump": 133, "pickl": 133, "file": 133, "load": 133, "count": 133, "element": 133, "A": 133, "wai": 133, "work": 133, "out": [133, 143], "invers": 133, "sequenc": 133, "design": 133, "condit": 133, "how": 134, "make": 134, "your": 134, "own": 134, "devic": 135, "spark": 136, "connect": [136, 137], "backend": [136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148], "state": [136, 137, 140, 141, 142], "fidel": [136, 137, 140, 141, 142], "quantum": [136, 137, 140, 147, 148], "volum": [136, 137, 140, 147, 148], "layer": [136, 137, 139], "oper": [136, 137, 139], "per": [136, 137, 139], "second": [136, 137, 139], "random": [136, 138, 140, 144, 145], "interleav": [136, 140, 144], "irb": [136, 144], "q": [136, 137, 146], "score": [136, 137, 146], "summari": [136, 137, 140], "star": 137, "As": 137, "one": 137, "can": 137, "see": 137, "label": 137, "i": 137, "reserv": 137, "resontor": 137, "so": 137, "advis": 137, "defin": [137, 138, 139, 140, 143, 144, 145, 146, 147], "indic": [137, 150], "layout": 137, "interest": 137, "start": 137, "from": 137, "rb": [138, 145], "choos": [138, 139, 140, 143, 144, 145, 146, 147, 148], "set": [138, 139, 140, 142, 143, 145, 146, 147, 148], "token": [138, 139, 140, 142, 145, 146, 147, 148], "us": [138, 139, 140, 142, 145, 146, 147, 148, 152], "reson": [138, 139, 140, 142, 145, 146, 147, 148], "configur": [138, 139, 141, 142, 143, 144, 145, 146, 147, 148], "run": [138, 139, 141, 142, 144, 145, 146, 147, 148], "experi": [138, 139, 143, 144, 145, 146, 147, 148], "perform": [138, 139, 146, 147, 148], "analysi": [138, 139, 146, 147, 148], "list": [139, 145], "all": [139, 143, 145], "kei": [139, 145], "attribut": [139, 145], "dataset": [139, 145], "The": [139, 145], "observ": [139, 143, 145], "object": [139, 145], "contain": [139, 145], "result": [139, 141, 142, 143, 144, 145], "plot": [139, 143, 145, 147, 148], "notebook": [140, 152], "mirror": [140, 145], "greenberg": [141, 142], "horn": [141, 142], "zeiling": [141, 142], "definit": [141, 142], "access": [141, 142, 143], "compress": 143, "gate": [143, 144], "tomographi": 143, "gst": 143, "minim": 143, "execut": 143, "": 143, "examin": 143, "high": 143, "level": 143, "store": 143, "final": 143, "estim": 143, "further": 143, "process": 143, "creat": 143, "custom": 143, "check": 143, "matrix": 143, "correspond": 143, "pi": 143, "rotat": 143, "around": 143, "y": 143, "axi": 143, "analyz": [144, 145], "non": 144, "nativ": 144, "mrb": 145, "qv": [147, 148], "deneb": 148, "inspect": 148, "exampl": 149, "content": 150, "tabl": 150, "licens": 151, "instal": 152, "latest": 152, "releas": 152, "option": 152, "depend": 152, "chang": 152, "character": 152, "physic": 152, "hardwar": 152, "jupyt": 152, "python": 152, "script": 152, "schedul": 152, "ci": 152, "cd": 152, "pipelin": 152}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"API Reference": [[0, "api-reference"]], "iqm.benchmarks": [[1, "module-iqm.benchmarks"]], "iqm.benchmarks.benchmark": [[2, "module-iqm.benchmarks.benchmark"]], "iqm.benchmarks.benchmark.BenchmarkBase": [[3, "iqm-benchmarks-benchmark-benchmarkbase"]], "iqm.benchmarks.benchmark.BenchmarkConfigurationBase": [[4, "iqm-benchmarks-benchmark-benchmarkconfigurationbase"]], "iqm.benchmarks.benchmark_definition": [[5, "module-iqm.benchmarks.benchmark_definition"]], "iqm.benchmarks.benchmark_definition.Benchmark": [[6, "iqm-benchmarks-benchmark-definition-benchmark"]], "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult": [[7, "iqm-benchmarks-benchmark-definition-benchmarkanalysisresult"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservation": [[8, "iqm-benchmarks-benchmark-definition-benchmarkobservation"]], "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier": [[9, "iqm-benchmarks-benchmark-definition-benchmarkobservationidentifier"]], "iqm.benchmarks.benchmark_definition.BenchmarkRunResult": [[10, "iqm-benchmarks-benchmark-definition-benchmarkrunresult"]], "iqm.benchmarks.benchmark_definition.add_counts_to_dataset": [[11, "iqm-benchmarks-benchmark-definition-add-counts-to-dataset"]], "iqm.benchmarks.benchmark_definition.default_analysis_function": [[12, "iqm-benchmarks-benchmark-definition-default-analysis-function"]], "iqm.benchmarks.benchmark_definition.merge_datasets_dac": [[13, "iqm-benchmarks-benchmark-definition-merge-datasets-dac"]], "iqm.benchmarks.benchmark_definition.show_figure": [[14, "iqm-benchmarks-benchmark-definition-show-figure"]], "iqm.benchmarks.circuit_containers": [[15, "module-iqm.benchmarks.circuit_containers"]], "iqm.benchmarks.circuit_containers.BenchmarkCircuit": [[16, "iqm-benchmarks-circuit-containers-benchmarkcircuit"]], "iqm.benchmarks.circuit_containers.CircuitGroup": [[17, "iqm-benchmarks-circuit-containers-circuitgroup"]], "iqm.benchmarks.circuit_containers.Circuits": [[18, "iqm-benchmarks-circuit-containers-circuits"]], "iqm.benchmarks.entanglement": [[19, "module-iqm.benchmarks.entanglement"]], "iqm.benchmarks.entanglement.ghz": [[20, "module-iqm.benchmarks.entanglement.ghz"]], "iqm.benchmarks.entanglement.ghz.GHZBenchmark": [[21, "iqm-benchmarks-entanglement-ghz-ghzbenchmark"]], "iqm.benchmarks.entanglement.ghz.GHZConfiguration": [[22, "iqm-benchmarks-entanglement-ghz-ghzconfiguration"]], "iqm.benchmarks.entanglement.ghz.extract_fidelities": [[23, "iqm-benchmarks-entanglement-ghz-extract-fidelities"]], "iqm.benchmarks.entanglement.ghz.fidelity_analysis": [[24, "iqm-benchmarks-entanglement-ghz-fidelity-analysis"]], "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences": [[25, "iqm-benchmarks-entanglement-ghz-fidelity-ghz-coherences"]], "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements": [[26, "iqm-benchmarks-entanglement-ghz-fidelity-ghz-randomized-measurements"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_linear": [[27, "iqm-benchmarks-entanglement-ghz-generate-ghz-linear"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz": [[28, "iqm-benchmarks-entanglement-ghz-generate-ghz-log-cruz"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney": [[29, "iqm-benchmarks-entanglement-ghz-generate-ghz-log-mooney"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree": [[30, "iqm-benchmarks-entanglement-ghz-generate-ghz-spanning-tree"]], "iqm.benchmarks.entanglement.ghz.generate_ghz_star": [[31, "iqm-benchmarks-entanglement-ghz-generate-ghz-star"]], "iqm.benchmarks.entanglement.ghz.get_cx_map": [[32, "iqm-benchmarks-entanglement-ghz-get-cx-map"]], "iqm.benchmarks.entanglement.ghz.get_edges": [[33, "iqm-benchmarks-entanglement-ghz-get-edges"]], "iqm.benchmarks.entanglement.ghz.plot_fidelities": [[34, "iqm-benchmarks-entanglement-ghz-plot-fidelities"]], "iqm.benchmarks.logging_config": [[35, "module-iqm.benchmarks.logging_config"]], "iqm.benchmarks.optimization": [[36, "module-iqm.benchmarks.optimization"]], "iqm.benchmarks.optimization.qscore": [[37, "module-iqm.benchmarks.optimization.qscore"]], "iqm.benchmarks.optimization.qscore.QScoreBenchmark": [[38, "iqm-benchmarks-optimization-qscore-qscorebenchmark"]], "iqm.benchmarks.optimization.qscore.QScoreConfiguration": [[39, "iqm-benchmarks-optimization-qscore-qscoreconfiguration"]], "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1": [[40, "iqm-benchmarks-optimization-qscore-calculate-optimal-angles-for-qaoa-p1"]], "iqm.benchmarks.optimization.qscore.compute_expectation_value": [[41, "iqm-benchmarks-optimization-qscore-compute-expectation-value"]], "iqm.benchmarks.optimization.qscore.create_objective_function": [[42, "iqm-benchmarks-optimization-qscore-create-objective-function"]], "iqm.benchmarks.optimization.qscore.cut_cost_function": [[43, "iqm-benchmarks-optimization-qscore-cut-cost-function"]], "iqm.benchmarks.optimization.qscore.get_optimal_angles": [[44, "iqm-benchmarks-optimization-qscore-get-optimal-angles"]], "iqm.benchmarks.optimization.qscore.is_successful": [[45, "iqm-benchmarks-optimization-qscore-is-successful"]], "iqm.benchmarks.optimization.qscore.plot_approximation_ratios": [[46, "iqm-benchmarks-optimization-qscore-plot-approximation-ratios"]], "iqm.benchmarks.optimization.qscore.qscore_analysis": [[47, "iqm-benchmarks-optimization-qscore-qscore-analysis"]], "iqm.benchmarks.optimization.qscore.run_QAOA": [[48, "iqm-benchmarks-optimization-qscore-run-qaoa"]], "iqm.benchmarks.quantum_volume": [[49, "module-iqm.benchmarks.quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[50, "module-iqm.benchmarks.quantum_volume.clops"]], "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark": [[51, "iqm-benchmarks-quantum-volume-clops-clopsbenchmark"]], "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration": [[52, "iqm-benchmarks-quantum-volume-clops-clopsconfiguration"]], "iqm.benchmarks.quantum_volume.clops.clops_analysis": [[53, "iqm-benchmarks-quantum-volume-clops-clops-analysis"]], "iqm.benchmarks.quantum_volume.clops.plot_times": [[54, "iqm-benchmarks-quantum-volume-clops-plot-times"]], "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times": [[55, "iqm-benchmarks-quantum-volume-clops-retrieve-clops-elapsed-times"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[56, "module-iqm.benchmarks.quantum_volume.quantum_volume"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark": [[57, "iqm-benchmarks-quantum-volume-quantum-volume-quantumvolumebenchmark"]], "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration": [[58, "iqm-benchmarks-quantum-volume-quantum-volume-quantumvolumeconfiguration"]], "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities": [[59, "iqm-benchmarks-quantum-volume-quantum-volume-compute-heavy-output-probabilities"]], "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop": [[60, "iqm-benchmarks-quantum-volume-quantum-volume-cumulative-hop"]], "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std": [[61, "iqm-benchmarks-quantum-volume-quantum-volume-cumulative-std"]], "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs": [[62, "iqm-benchmarks-quantum-volume-quantum-volume-get-ideal-heavy-outputs"]], "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops": [[63, "iqm-benchmarks-quantum-volume-quantum-volume-get-rem-hops"]], "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector": [[64, "iqm-benchmarks-quantum-volume-quantum-volume-heavy-projector"]], "iqm.benchmarks.quantum_volume.quantum_volume.is_successful": [[65, "iqm-benchmarks-quantum-volume-quantum-volume-is-successful"]], "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold": [[66, "iqm-benchmarks-quantum-volume-quantum-volume-plot-hop-threshold"]], "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis": [[67, "iqm-benchmarks-quantum-volume-quantum-volume-qv-analysis"]], "iqm.benchmarks.randomized_benchmarking": [[68, "module-iqm.benchmarks.randomized_benchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[69, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[70, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration": [[71, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-cliffordrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking": [[72, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-cliffordrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis": [[73, "iqm-benchmarks-randomized-benchmarking-clifford-rb-clifford-rb-clifford-rb-analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[74, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[75, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration": [[76, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleavedrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking": [[77, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleavedrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis": [[78, "iqm-benchmarks-randomized-benchmarking-interleaved-rb-interleaved-rb-interleaved-rb-analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[79, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[80, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration": [[81, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mirrorrbconfiguration"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking": [[82, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mirrorrandomizedbenchmarking"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations": [[83, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-compute-polarizations"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab": [[84, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-edge-grab"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits": [[85, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-generate-fixed-depth-mrb-circuits"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits": [[86, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-generate-pauli-dressed-mrb-circuits"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix": [[87, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-list-to-numcircuit-times-numpauli-matrix"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis": [[88, "iqm-benchmarks-randomized-benchmarking-mirror-rb-mirror-rb-mrb-analysis"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[89, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params": [[90, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-create-multi-dataset-params"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset": [[91, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-eval-func-single-dataset"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature": [[92, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-get-param-names-from-func-signature"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual": [[93, "iqm-benchmarks-randomized-benchmarking-multi-lmfit-multi-dataset-residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[94, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford": [[95, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-compute-inverse-clifford"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities": [[96, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-estimate-survival-probabilities"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb": [[97, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-exponential-rb"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit": [[98, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-fit-decay-lmfit"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits": [[99, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-all-rb-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits": [[100, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-fixed-depth-parallel-rb-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits": [[101, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-generate-random-clifford-seq-circuits"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities": [[102, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-get-survival-probabilities"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords": [[103, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-import-native-gate-cliffords"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer": [[104, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-lmfit-minimizer"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay": [[105, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-plot-rb-decay"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero": [[106, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-relabel-qubits-array-from-zero"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job": [[107, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-submit-parallel-rb-job"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs": [[108, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-submit-sequential-rb-jobs"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel": [[109, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-survival-probabilities-parallel"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate": [[110, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-validate-irb-gate"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits": [[111, "iqm-benchmarks-randomized-benchmarking-randomized-benchmarking-common-validate-rb-qubits"]], "iqm.benchmarks.readout_mitigation": [[112, "module-iqm.benchmarks.readout_mitigation"]], "iqm.benchmarks.readout_mitigation.M3IQM": [[113, "iqm-benchmarks-readout-mitigation-m3iqm"]], "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation": [[114, "iqm-benchmarks-readout-mitigation-apply-readout-error-mitigation"]], "iqm.benchmarks.readout_mitigation.readout_error_m3": [[115, "iqm-benchmarks-readout-mitigation-readout-error-m3"]], "iqm.benchmarks.utils": [[116, "module-iqm.benchmarks.utils"]], "iqm.benchmarks.utils.bootstrap_counts": [[117, "iqm-benchmarks-utils-bootstrap-counts"]], "iqm.benchmarks.utils.count_2q_layers": [[118, "iqm-benchmarks-utils-count-2q-layers"]], "iqm.benchmarks.utils.count_native_gates": [[119, "iqm-benchmarks-utils-count-native-gates"]], "iqm.benchmarks.utils.get_iqm_backend": [[120, "iqm-benchmarks-utils-get-iqm-backend"]], "iqm.benchmarks.utils.marginal_distribution": [[121, "iqm-benchmarks-utils-marginal-distribution"]], "iqm.benchmarks.utils.perform_backend_transpilation": [[122, "iqm-benchmarks-utils-perform-backend-transpilation"]], "iqm.benchmarks.utils.reduce_to_active_qubits": [[123, "iqm-benchmarks-utils-reduce-to-active-qubits"]], "iqm.benchmarks.utils.retrieve_all_counts": [[124, "iqm-benchmarks-utils-retrieve-all-counts"]], "iqm.benchmarks.utils.retrieve_all_job_metadata": [[125, "iqm-benchmarks-utils-retrieve-all-job-metadata"]], "iqm.benchmarks.utils.set_coupling_map": [[126, "iqm-benchmarks-utils-set-coupling-map"]], "iqm.benchmarks.utils.sort_batches_by_final_layout": [[127, "iqm-benchmarks-utils-sort-batches-by-final-layout"]], "iqm.benchmarks.utils.submit_execute": [[128, "iqm-benchmarks-utils-submit-execute"]], "iqm.benchmarks.utils.timeit": [[129, "iqm-benchmarks-utils-timeit"]], "iqm.benchmarks.utils.xrvariable_to_counts": [[130, "iqm-benchmarks-utils-xrvariable-to-counts"]], "Changelog": [[131, "changelog"]], "Version 2.22": [[131, "version-2-22"]], "Version 2.21": [[131, "version-2-21"]], "Version 2.20": [[131, "version-2-20"]], "Version 2.19": [[131, "version-2-19"]], "Version 2.18": [[131, "version-2-18"]], "Version 2.17": [[131, "version-2-17"]], "Version 2.16": [[131, "version-2-16"]], "Version 2.15": [[131, "version-2-15"]], "Version 2.14": [[131, "version-2-14"]], "Version 2.13": [[131, "version-2-13"]], "Version 2.12": [[131, "version-2-12"]], "Version 2.11": [[131, "version-2-11"]], "Version 2.10": [[131, "version-2-10"]], "Version 2.9": [[131, "version-2-9"]], "Version 2.8": [[131, "version-2-8"]], "Version 2.7": [[131, "version-2-7"]], "Version 2.6": [[131, "version-2-6"]], "Version 2.5": [[131, "version-2-5"]], "Version 2.4": [[131, "version-2-4"]], "Version 2.3": [[131, "version-2-3"]], "Version 2.2": [[131, "version-2-2"]], "Version 2.1": [[131, "version-2-1"]], "Version 2.0": [[131, "version-2-0"]], "Version 1.12": [[131, "version-1-12"]], "Version 1.11": [[131, "version-1-11"]], "Version 1.10": [[131, "version-1-10"]], "Version 1.9": [[131, "version-1-9"]], "Version 1.8": [[131, "version-1-8"]], "Version 1.7": [[131, "version-1-7"]], "Version 1.6": [[131, "version-1-6"]], "Version 1.5": [[131, "version-1-5"]], "Version 1.4": [[131, "version-1-4"]], "Version 1.3": [[131, "version-1-3"]], "Version 1.2": [[131, "version-1-2"]], "Version 1.1": [[131, "version-1-1"]], "Version 1.0": [[131, "version-1-0"]], "Development": [[132, "development"]], "2-Qubit Clifford Group Decomposition": [[133, "qubit-clifford-group-decomposition"]], "Generate the 1Q Clifford group": [[133, "generate-the-1q-clifford-group"]], "Generate the 2Q Clifford group": [[133, "generate-the-2q-clifford-group"]], "Dump on a pickle file": [[133, "dump-on-a-pickle-file"]], "Load": [[133, "load"]], "Count elements": [[133, "count-elements"]], "2Q": [[133, "q"]], "1Q": [[133, "id1"]], "A way to work out the inverse of sequences": [[133, "a-way-to-work-out-the-inverse-of-sequences"]], "2-design condition": [[133, "design-condition"]], "How to make your own benchmark?": [[134, "how-to-make-your-own-benchmark"]], "Devices": [[135, "devices"]], "Benchmarking IQM Spark": [[136, "benchmarking-iqm-spark"]], "Connect to the backend": [[136, "connect-to-the-backend"], [137, "connect-to-the-backend"]], "GHZ state fidelity": [[136, "ghz-state-fidelity"], [137, "ghz-state-fidelity"], [140, "ghz-state-fidelity"]], "Quantum Volume": [[136, "quantum-volume"], [137, "quantum-volume"], [140, "quantum-volume"]], "Circuit Layer Operations Per Second (CLOPS)": [[136, "circuit-layer-operations-per-second-clops"], [137, "circuit-layer-operations-per-second-clops"], [139, "circuit-layer-operations-per-second-clops"]], "Clifford Randomized Benchmarking": [[136, "clifford-randomized-benchmarking"], [140, "clifford-randomized-benchmarking"]], "Interleaved Randomized Benchmarking (IRB)": [[136, "interleaved-randomized-benchmarking-irb"], [144, "interleaved-randomized-benchmarking-irb"]], "Q-Score": [[136, "q-score"], [137, "q-score"], [146, "q-score"]], "Summary": [[136, "summary"], [137, "summary"]], "Benchmarking IQM Star": [[137, "benchmarking-iqm-star"]], "As one can see, the label \u201c0\u201d is reserved for the resontor. So it is advised to define the qubit indices in the layout of interest starting from 1.": [[137, "as-one-can-see-the-label-0-is-reserved-for-the-resontor-so-it-is-advised-to-define-the-qubit-indices-in-the-layout-of-interest-starting-from-1"]], "Clifford Randomized Benchmarking (RB)": [[138, "clifford-randomized-benchmarking-rb"]], "Choose (or define) a backend": [[138, "choose-or-define-a-backend"], [139, "choose-or-define-a-backend"], [140, "choose-or-define-a-backend"], [143, "choose-or-define-a-backend"], [144, "choose-or-define-a-backend"], [145, "choose-or-define-a-backend"], [146, "choose-or-define-a-backend"], [147, "choose-or-define-a-backend"]], "Set IQM Token if using Resonance.": [[138, "set-iqm-token-if-using-resonance"], [140, "set-iqm-token-if-using-resonance"], [142, "set-iqm-token-if-using-resonance"], [145, "set-iqm-token-if-using-resonance"], [146, "set-iqm-token-if-using-resonance"], [147, "set-iqm-token-if-using-resonance"], [148, "set-iqm-token-if-using-resonance"]], "Randomized Benchmarking Configuration": [[138, "randomized-benchmarking-configuration"]], "Run the experiment": [[138, "run-the-experiment"], [139, "run-the-experiment"], [145, "run-the-experiment"], [146, "run-the-experiment"], [147, "run-the-experiment"], [148, "run-the-experiment"]], "Perform the analysis": [[138, "perform-the-analysis"]], "Set IQM Token if using Resonance": [[139, "set-iqm-token-if-using-resonance"]], "CLOPS Configuration": [[139, "clops-configuration"]], "Perform Analysis": [[139, "perform-analysis"], [146, "perform-analysis"], [147, "perform-analysis"], [148, "perform-analysis"]], "List all the keys in the attributes of the dataset": [[139, "list-all-the-keys-in-the-attributes-of-the-dataset"], [145, "list-all-the-keys-in-the-attributes-of-the-dataset"]], "The observation object contains the benchmark results": [[139, "the-observation-object-contains-the-benchmark-results"], [145, "the-observation-object-contains-the-benchmark-results"]], "Generate plots": [[139, "generate-plots"], [145, "generate-plots"], [147, "generate-plots"], [148, "generate-plots"]], "IQM Benchmarks: Summary Notebook": [[140, "iqm-benchmarks-summary-notebook"]], "Interleaved Randomized Benchmarking": [[140, "interleaved-randomized-benchmarking"]], "Mirror Randomized Benchmarking": [[140, "mirror-randomized-benchmarking"]], "CLOPS": [[140, "clops"]], "QScore": [[140, "qscore"]], "Greenberger\u2013Horne\u2013Zeilinger (GHZ) State Fidelity": [[141, "greenbergerhornezeilinger-ghz-state-fidelity"], [142, "greenbergerhornezeilinger-ghz-state-fidelity"]], "Definition of the benchmark configuration": [[141, "definition-of-the-benchmark-configuration"], [142, "definition-of-the-benchmark-configuration"]], "Running the benchmark": [[141, "running-the-benchmark"], [142, "running-the-benchmark"]], "Accessing the results": [[141, "accessing-the-results"], [142, "accessing-the-results"]], "Compressive Gate Set Tomography (GST)": [[143, "compressive-gate-set-tomography-gst"]], "Minimal GST Experiment configurations": [[143, "minimal-gst-experiment-configurations"]], "Execute GST Experiment(s)": [[143, "execute-gst-experiment-s"]], "Examine the results": [[143, "examine-the-results"]], "High level results stored at result.observations": [[143, "high-level-results-stored-at-result-observations"]], "Accessing the final gate set estimates for further processing": [[143, "accessing-the-final-gate-set-estimates-for-further-processing"]], "Plots": [[143, "plots"]], "Creating a custom gate set": [[143, "creating-a-custom-gate-set"]], "Checking out the process matrix corresponding to the pi rotation around the y-axis": [[143, "checking-out-the-process-matrix-corresponding-to-the-pi-rotation-around-the-y-axis"]], "All plots for the custom gate set": [[143, "all-plots-for-the-custom-gate-set"]], "Interleaved Randomized Benchmarking Configuration": [[144, "interleaved-randomized-benchmarking-configuration"]], "1Q gate IRB": [[144, "q-gate-irb"]], "Run the experiment - 1Q gate IRB": [[144, "run-the-experiment-1q-gate-irb"]], "Analyze the results - 1Q gate IRB": [[144, "analyze-the-results-1q-gate-irb"]], "2Q gate IRB": [[144, "id1"]], "Run the experiment - 2Q gate IRB": [[144, "run-the-experiment-2q-gate-irb"]], "Analyze the results - 2Q gate IRB": [[144, "analyze-the-results-2q-gate-irb"]], "IRB for non-native gate": [[144, "irb-for-non-native-gate"]], "Mirror Randomized Benchmarking (MRB)": [[145, "mirror-randomized-benchmarking-mrb"]], "Mirror RB Configuration": [[145, "mirror-rb-configuration"]], "Analyze the results": [[145, "analyze-the-results"]], "Qscore Configuration": [[146, "qscore-configuration"]], "Quantum Volume (QV)": [[147, "quantum-volume-qv"]], "Quantum Volume Configuration": [[147, "quantum-volume-configuration"], [148, "quantum-volume-configuration"]], "QV on Deneb": [[148, "qv-on-deneb"]], "Choose Deneb as a backend": [[148, "choose-deneb-as-a-backend"]], "Inspect the circuits": [[148, "inspect-the-circuits"]], "Examples": [[149, "examples"]], "IQM Benchmarks": [[150, "iqm-benchmarks"], [152, "iqm-benchmarks"]], "Contents": [[150, "contents"]], "Indices and tables": [[150, "indices-and-tables"]], "License": [[151, "license"]], "Installation (latest release)": [[152, "installation-latest-release"]], "Optional dependencies": [[152, "optional-dependencies"]], "Development installation (latest changes)": [[152, "development-installation-latest-changes"]], "Characterize Physical Hardware": [[152, "characterize-physical-hardware"]], "Using a Jupyter notebook or Python script": [[152, "using-a-jupyter-notebook-or-python-script"]], "Scheduled benchmarks using a CI/CD Pipeline": [[152, "scheduled-benchmarks-using-a-ci-cd-pipeline"]]}, "indexentries": {"iqm.benchmarks": [[1, "module-iqm.benchmarks"]], "module": [[1, "module-iqm.benchmarks"], [2, "module-iqm.benchmarks.benchmark"], [5, "module-iqm.benchmarks.benchmark_definition"], [15, "module-iqm.benchmarks.circuit_containers"], [19, "module-iqm.benchmarks.entanglement"], [20, "module-iqm.benchmarks.entanglement.ghz"], [35, "module-iqm.benchmarks.logging_config"], [36, "module-iqm.benchmarks.optimization"], [37, "module-iqm.benchmarks.optimization.qscore"], [49, "module-iqm.benchmarks.quantum_volume"], [50, "module-iqm.benchmarks.quantum_volume.clops"], [56, "module-iqm.benchmarks.quantum_volume.quantum_volume"], [68, "module-iqm.benchmarks.randomized_benchmarking"], [69, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"], [70, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"], [74, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"], [75, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"], [79, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"], [80, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"], [89, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"], [94, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"], [112, "module-iqm.benchmarks.readout_mitigation"], [116, "module-iqm.benchmarks.utils"]], "iqm.benchmarks.benchmark": [[2, "module-iqm.benchmarks.benchmark"]], "benchmarkbase (class in iqm.benchmarks.benchmark)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase"]], "check_requirements() (iqm.benchmarks.benchmark.benchmarkbase static method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.check_requirements"]], "execute_full_benchmark() (iqm.benchmarks.benchmark.benchmarkbase method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.execute_full_benchmark"]], "generate_requirements() (iqm.benchmarks.benchmark.benchmarkbase method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.generate_requirements"]], "name() (iqm.benchmarks.benchmark.benchmarkbase class method)": [[3, "iqm.benchmarks.benchmark.BenchmarkBase.name"]], "benchmarkconfigurationbase (class in iqm.benchmarks.benchmark)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase"]], "benchmark (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.benchmark"]], "calset_id (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.calset_id"]], "max_gates_per_batch (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.max_gates_per_batch"]], "model_computed_fields (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_computed_fields"]], "model_config (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_config"]], "model_fields (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.model_fields"]], "physical_layout (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.physical_layout"]], "routing_method (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.routing_method"]], "shots (iqm.benchmarks.benchmark.benchmarkconfigurationbase attribute)": [[4, "iqm.benchmarks.benchmark.BenchmarkConfigurationBase.shots"]], "iqm.benchmarks.benchmark_definition": [[5, "module-iqm.benchmarks.benchmark_definition"]], "benchmark (class in iqm.benchmarks.benchmark_definition)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark"]], "analysis_function() (iqm.benchmarks.benchmark_definition.benchmark static method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.analysis_function"]], "analyze() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.analyze"]], "execute() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.execute"]], "name() (iqm.benchmarks.benchmark_definition.benchmark class method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.name"]], "run() (iqm.benchmarks.benchmark_definition.benchmark method)": [[6, "iqm.benchmarks.benchmark_definition.Benchmark.run"]], "benchmarkanalysisresult (class in iqm.benchmarks.benchmark_definition)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult"]], "from_run_result() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult class method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.from_run_result"]], "plot() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.plot"]], "plot_all() (iqm.benchmarks.benchmark_definition.benchmarkanalysisresult method)": [[7, "iqm.benchmarks.benchmark_definition.BenchmarkAnalysisResult.plot_all"]], "benchmarkobservation (class in iqm.benchmarks.benchmark_definition)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation"]], "identifier (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.identifier"]], "name (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.name"]], "uncertainty (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.uncertainty"]], "value (iqm.benchmarks.benchmark_definition.benchmarkobservation attribute)": [[8, "iqm.benchmarks.benchmark_definition.BenchmarkObservation.value"]], "benchmarkobservationidentifier (class in iqm.benchmarks.benchmark_definition)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier"]], "qubit_indices (iqm.benchmarks.benchmark_definition.benchmarkobservationidentifier attribute)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.qubit_indices"]], "string_identifier (iqm.benchmarks.benchmark_definition.benchmarkobservationidentifier property)": [[9, "iqm.benchmarks.benchmark_definition.BenchmarkObservationIdentifier.string_identifier"]], "benchmarkrunresult (class in iqm.benchmarks.benchmark_definition)": [[10, "iqm.benchmarks.benchmark_definition.BenchmarkRunResult"]], "add_counts_to_dataset() (in module iqm.benchmarks.benchmark_definition)": [[11, "iqm.benchmarks.benchmark_definition.add_counts_to_dataset"]], "default_analysis_function() (in module iqm.benchmarks.benchmark_definition)": [[12, "iqm.benchmarks.benchmark_definition.default_analysis_function"]], "merge_datasets_dac() (in module iqm.benchmarks.benchmark_definition)": [[13, "iqm.benchmarks.benchmark_definition.merge_datasets_dac"]], "show_figure() (in module iqm.benchmarks.benchmark_definition)": [[14, "iqm.benchmarks.benchmark_definition.show_figure"]], "iqm.benchmarks.circuit_containers": [[15, "module-iqm.benchmarks.circuit_containers"]], "benchmarkcircuit (class in iqm.benchmarks.circuit_containers)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit"]], "circuit_groups (iqm.benchmarks.circuit_containers.benchmarkcircuit attribute)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.circuit_groups"]], "get_circuit_group_by_name() (iqm.benchmarks.circuit_containers.benchmarkcircuit method)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.get_circuit_group_by_name"]], "group_names (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.group_names"]], "groups (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.groups"]], "name (iqm.benchmarks.circuit_containers.benchmarkcircuit attribute)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.name"]], "qubit_indices (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_indices"]], "qubit_layouts (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_layouts"]], "qubit_layouts_by_index (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubit_layouts_by_index"]], "qubits (iqm.benchmarks.circuit_containers.benchmarkcircuit property)": [[16, "iqm.benchmarks.circuit_containers.BenchmarkCircuit.qubits"]], "circuitgroup (class in iqm.benchmarks.circuit_containers)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup"]], "add_circuit() (iqm.benchmarks.circuit_containers.circuitgroup method)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.add_circuit"]], "circuit_names (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.circuit_names"]], "circuits (iqm.benchmarks.circuit_containers.circuitgroup attribute)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.circuits"]], "get_circuits_by_name() (iqm.benchmarks.circuit_containers.circuitgroup method)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.get_circuits_by_name"]], "name (iqm.benchmarks.circuit_containers.circuitgroup attribute)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.name"]], "qubit_layouts (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubit_layouts"]], "qubit_layouts_by_index (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubit_layouts_by_index"]], "qubits (iqm.benchmarks.circuit_containers.circuitgroup property)": [[17, "iqm.benchmarks.circuit_containers.CircuitGroup.qubits"]], "circuits (class in iqm.benchmarks.circuit_containers)": [[18, "iqm.benchmarks.circuit_containers.Circuits"]], "benchmark_circuits (iqm.benchmarks.circuit_containers.circuits attribute)": [[18, "iqm.benchmarks.circuit_containers.Circuits.benchmark_circuits"]], "get_benchmark_circuits_by_name() (iqm.benchmarks.circuit_containers.circuits method)": [[18, "iqm.benchmarks.circuit_containers.Circuits.get_benchmark_circuits_by_name"]], "iqm.benchmarks.entanglement": [[19, "module-iqm.benchmarks.entanglement"]], "iqm.benchmarks.entanglement.ghz": [[20, "module-iqm.benchmarks.entanglement.ghz"]], "ghzbenchmark (class in iqm.benchmarks.entanglement.ghz)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark"]], "add_configuration_to_dataset() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.add_configuration_to_dataset"]], "analysis_function() (iqm.benchmarks.entanglement.ghz.ghzbenchmark static method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.analysis_function"]], "append_rms() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.append_rms"]], "execute() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.execute"]], "generate_coherence_meas_circuits() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_coherence_meas_circuits"]], "generate_native_ghz() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_native_ghz"]], "generate_readout_circuit() (iqm.benchmarks.entanglement.ghz.ghzbenchmark method)": [[21, "iqm.benchmarks.entanglement.ghz.GHZBenchmark.generate_readout_circuit"]], "ghzconfiguration (class in iqm.benchmarks.entanglement.ghz)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration"]], "benchmark (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.benchmark"]], "cal_url (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.cal_url"]], "custom_qubits_array (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.custom_qubits_array"]], "fidelity_routine (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.fidelity_routine"]], "mit_shots (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.mit_shots"]], "model_computed_fields (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_config"]], "model_fields (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.model_fields"]], "num_rms (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.num_RMs"]], "optimize_single_qubit_gates (iqm.benchmarks.entanglement.ghz.ghzconfiguration.iqm.qiskit_iqm.iqm_transpilation attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.iqm.qiskit_iqm.iqm_transpilation.optimize_single_qubit_gates"]], "optimize_sqg (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.optimize_sqg"]], "qiskit_optim_level (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.qiskit_optim_level"]], "qubit_counts (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.qubit_counts"]], "rem (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.rem"]], "state_generation_routine (iqm.benchmarks.entanglement.ghz.ghzconfiguration attribute)": [[22, "iqm.benchmarks.entanglement.ghz.GHZConfiguration.state_generation_routine"]], "extract_fidelities() (in module iqm.benchmarks.entanglement.ghz)": [[23, "iqm.benchmarks.entanglement.ghz.extract_fidelities"]], "fidelity_analysis() (in module iqm.benchmarks.entanglement.ghz)": [[24, "iqm.benchmarks.entanglement.ghz.fidelity_analysis"]], "fidelity_ghz_coherences() (in module iqm.benchmarks.entanglement.ghz)": [[25, "iqm.benchmarks.entanglement.ghz.fidelity_ghz_coherences"]], "fidelity_ghz_randomized_measurements() (in module iqm.benchmarks.entanglement.ghz)": [[26, "iqm.benchmarks.entanglement.ghz.fidelity_ghz_randomized_measurements"]], "generate_ghz_linear() (in module iqm.benchmarks.entanglement.ghz)": [[27, "iqm.benchmarks.entanglement.ghz.generate_ghz_linear"]], "generate_ghz_log_cruz() (in module iqm.benchmarks.entanglement.ghz)": [[28, "iqm.benchmarks.entanglement.ghz.generate_ghz_log_cruz"]], "generate_ghz_log_mooney() (in module iqm.benchmarks.entanglement.ghz)": [[29, "iqm.benchmarks.entanglement.ghz.generate_ghz_log_mooney"]], "generate_ghz_spanning_tree() (in module iqm.benchmarks.entanglement.ghz)": [[30, "iqm.benchmarks.entanglement.ghz.generate_ghz_spanning_tree"]], "generate_ghz_star() (in module iqm.benchmarks.entanglement.ghz)": [[31, "iqm.benchmarks.entanglement.ghz.generate_ghz_star"]], "get_cx_map() (in module iqm.benchmarks.entanglement.ghz)": [[32, "iqm.benchmarks.entanglement.ghz.get_cx_map"]], "get_edges() (in module iqm.benchmarks.entanglement.ghz)": [[33, "iqm.benchmarks.entanglement.ghz.get_edges"]], "plot_fidelities() (in module iqm.benchmarks.entanglement.ghz)": [[34, "iqm.benchmarks.entanglement.ghz.plot_fidelities"]], "iqm.benchmarks.logging_config": [[35, "module-iqm.benchmarks.logging_config"]], "iqm.benchmarks.optimization": [[36, "module-iqm.benchmarks.optimization"]], "iqm.benchmarks.optimization.qscore": [[37, "module-iqm.benchmarks.optimization.qscore"]], "qscorebenchmark (class in iqm.benchmarks.optimization.qscore)": [[38, "iqm.benchmarks.optimization.qscore.QScoreBenchmark"]], "add_all_meta_to_dataset() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[38, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.optimization.qscore.qscorebenchmark static method)": [[38, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.analysis_function"]], "choose_qubits_custom() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[38, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.choose_qubits_custom"]], "choose_qubits_naive() (iqm.benchmarks.optimization.qscore.qscorebenchmark static method)": [[38, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.choose_qubits_naive"]], "execute() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[38, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.execute"]], "generate_maxcut_ansatz() (iqm.benchmarks.optimization.qscore.qscorebenchmark method)": [[38, "iqm.benchmarks.optimization.qscore.QScoreBenchmark.generate_maxcut_ansatz"]], "qscoreconfiguration (class in iqm.benchmarks.optimization.qscore)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration"]], "rem (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.REM"]], "benchmark (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.benchmark"]], "choose_qubits_routine (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.choose_qubits_routine"]], "custom_qubits_array (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.custom_qubits_array"]], "max_num_nodes (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.max_num_nodes"]], "min_num_nodes (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.min_num_nodes"]], "min_num_qubits (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.min_num_qubits"]], "mit_shots (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.mit_shots"]], "model_computed_fields (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_config"]], "model_fields (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.model_fields"]], "num_instances (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.num_instances"]], "num_qaoa_layers (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.num_qaoa_layers"]], "optimize_sqg (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.optimize_sqg"]], "qiskit_optim_level (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.qiskit_optim_level"]], "qpu_topology (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.qpu_topology"]], "seed (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.seed"]], "use_classically_optimized_angles (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.use_classically_optimized_angles"]], "use_virtual_node (iqm.benchmarks.optimization.qscore.qscoreconfiguration attribute)": [[39, "iqm.benchmarks.optimization.qscore.QScoreConfiguration.use_virtual_node"]], "calculate_optimal_angles_for_qaoa_p1() (in module iqm.benchmarks.optimization.qscore)": [[40, "iqm.benchmarks.optimization.qscore.calculate_optimal_angles_for_QAOA_p1"]], "compute_expectation_value() (in module iqm.benchmarks.optimization.qscore)": [[41, "iqm.benchmarks.optimization.qscore.compute_expectation_value"]], "create_objective_function() (in module iqm.benchmarks.optimization.qscore)": [[42, "iqm.benchmarks.optimization.qscore.create_objective_function"]], "cut_cost_function() (in module iqm.benchmarks.optimization.qscore)": [[43, "iqm.benchmarks.optimization.qscore.cut_cost_function"]], "get_optimal_angles() (in module iqm.benchmarks.optimization.qscore)": [[44, "iqm.benchmarks.optimization.qscore.get_optimal_angles"]], "is_successful() (in module iqm.benchmarks.optimization.qscore)": [[45, "iqm.benchmarks.optimization.qscore.is_successful"]], "plot_approximation_ratios() (in module iqm.benchmarks.optimization.qscore)": [[46, "iqm.benchmarks.optimization.qscore.plot_approximation_ratios"]], "qscore_analysis() (in module iqm.benchmarks.optimization.qscore)": [[47, "iqm.benchmarks.optimization.qscore.qscore_analysis"]], "run_qaoa() (in module iqm.benchmarks.optimization.qscore)": [[48, "iqm.benchmarks.optimization.qscore.run_QAOA"]], "iqm.benchmarks.quantum_volume": [[49, "module-iqm.benchmarks.quantum_volume"]], "iqm.benchmarks.quantum_volume.clops": [[50, "module-iqm.benchmarks.quantum_volume.clops"]], "clopsbenchmark (class in iqm.benchmarks.quantum_volume.clops)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark"]], "add_all_meta_to_dataset() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark static method)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.analysis_function"]], "append_parameterized_unitary() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.append_parameterized_unitary"]], "assign_random_parameters_to_all() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.assign_random_parameters_to_all"]], "clops_cycle() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.clops_cycle"]], "execute() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.execute"]], "generate_circuit_list() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_circuit_list"]], "generate_random_parameters() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_random_parameters"]], "generate_single_circuit() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_single_circuit"]], "generate_transpiled_clops_templates() (iqm.benchmarks.quantum_volume.clops.clopsbenchmark method)": [[51, "iqm.benchmarks.quantum_volume.clops.CLOPSBenchmark.generate_transpiled_clops_templates"]], "clopsconfiguration (class in iqm.benchmarks.quantum_volume.clops)": [[52, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration"]], "benchmark (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[52, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.benchmark"]], "clops_h_bool (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[52, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.clops_h_bool"]], "model_computed_fields (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[52, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[52, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_config"]], "model_fields (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[52, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.model_fields"]], "num_circuits (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[52, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_circuits"]], "num_shots (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[52, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_shots"]], "num_updates (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[52, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.num_updates"]], "optimize_sqg (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[52, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.optimize_sqg"]], "physical_layout (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[52, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.physical_layout"]], "qiskit_optim_level (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[52, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.qiskit_optim_level"]], "qubits (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[52, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.qubits"]], "routing_method (iqm.benchmarks.quantum_volume.clops.clopsconfiguration attribute)": [[52, "iqm.benchmarks.quantum_volume.clops.CLOPSConfiguration.routing_method"]], "clops_analysis() (in module iqm.benchmarks.quantum_volume.clops)": [[53, "iqm.benchmarks.quantum_volume.clops.clops_analysis"]], "plot_times() (in module iqm.benchmarks.quantum_volume.clops)": [[54, "iqm.benchmarks.quantum_volume.clops.plot_times"]], "retrieve_clops_elapsed_times() (in module iqm.benchmarks.quantum_volume.clops)": [[55, "iqm.benchmarks.quantum_volume.clops.retrieve_clops_elapsed_times"]], "iqm.benchmarks.quantum_volume.quantum_volume": [[56, "module-iqm.benchmarks.quantum_volume.quantum_volume"]], "quantumvolumebenchmark (class in iqm.benchmarks.quantum_volume.quantum_volume)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark"]], "add_all_circuits_to_dataset() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.add_all_circuits_to_dataset"]], "add_all_meta_to_dataset() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark static method)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.analysis_function"]], "execute() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.execute"]], "generate_circuit_list() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.generate_circuit_list"]], "generate_single_circuit() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark static method)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.generate_single_circuit"]], "get_rem_quasidistro() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.get_rem_quasidistro"]], "submit_single_qv_job() (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumebenchmark method)": [[57, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeBenchmark.submit_single_qv_job"]], "quantumvolumeconfiguration (class in iqm.benchmarks.quantum_volume.quantum_volume)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration"]], "benchmark (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.benchmark"]], "choose_qubits_routine (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.choose_qubits_routine"]], "custom_qubits_array (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.custom_qubits_array"]], "mit_shots (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.mit_shots"]], "model_computed_fields (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_config"]], "model_fields (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.model_fields"]], "num_circuits (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.num_circuits"]], "num_sigmas (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.num_sigmas"]], "optimize_sqg (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.optimize_sqg"]], "physical_layout (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.physical_layout"]], "qiskit_optim_level (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.qiskit_optim_level"]], "rem (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.rem"]], "routing_method (iqm.benchmarks.quantum_volume.quantum_volume.quantumvolumeconfiguration attribute)": [[58, "iqm.benchmarks.quantum_volume.quantum_volume.QuantumVolumeConfiguration.routing_method"]], "compute_heavy_output_probabilities() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[59, "iqm.benchmarks.quantum_volume.quantum_volume.compute_heavy_output_probabilities"]], "cumulative_hop() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[60, "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_hop"]], "cumulative_std() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[61, "iqm.benchmarks.quantum_volume.quantum_volume.cumulative_std"]], "get_ideal_heavy_outputs() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[62, "iqm.benchmarks.quantum_volume.quantum_volume.get_ideal_heavy_outputs"]], "get_rem_hops() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[63, "iqm.benchmarks.quantum_volume.quantum_volume.get_rem_hops"]], "heavy_projector() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[64, "iqm.benchmarks.quantum_volume.quantum_volume.heavy_projector"]], "is_successful() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[65, "iqm.benchmarks.quantum_volume.quantum_volume.is_successful"]], "plot_hop_threshold() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[66, "iqm.benchmarks.quantum_volume.quantum_volume.plot_hop_threshold"]], "qv_analysis() (in module iqm.benchmarks.quantum_volume.quantum_volume)": [[67, "iqm.benchmarks.quantum_volume.quantum_volume.qv_analysis"]], "iqm.benchmarks.randomized_benchmarking": [[68, "module-iqm.benchmarks.randomized_benchmarking"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb": [[69, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb"]], "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb": [[70, "module-iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb"]], "cliffordrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration"]], "benchmark (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.benchmark"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.num_circuit_samples"]], "parallel_execution (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.parallel_execution"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.qubits_array"]], "sequence_lengths (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.sequence_lengths"]], "shots (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrbconfiguration attribute)": [[71, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRBConfiguration.shots"]], "cliffordrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[72, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking"]], "add_all_circuits_to_dataset() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[72, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.add_all_circuits_to_dataset"]], "add_all_metadata_to_dataset() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[72, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.add_all_metadata_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking static method)": [[72, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.cliffordrandomizedbenchmarking method)": [[72, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.CliffordRandomizedBenchmarking.execute"]], "clifford_rb_analysis() (in module iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb)": [[73, "iqm.benchmarks.randomized_benchmarking.clifford_rb.clifford_rb.clifford_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb": [[74, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb"]], "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb": [[75, "module-iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb"]], "interleavedrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration"]], "interleaved_gate (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.interleaved_gate"]], "interleaved_gate_params (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.interleaved_gate_params"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.num_circuit_samples"]], "parallel_execution (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.parallel_execution"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.qubits_array"]], "sequence_lengths (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.sequence_lengths"]], "shots (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.shots"]], "simultaneous_fit (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrbconfiguration attribute)": [[76, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRBConfiguration.simultaneous_fit"]], "interleavedrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[77, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking"]], "add_all_circuits_to_dataset() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[77, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.add_all_circuits_to_dataset"]], "add_all_meta_to_dataset() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[77, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking static method)": [[77, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleavedrandomizedbenchmarking method)": [[77, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.InterleavedRandomizedBenchmarking.execute"]], "interleaved_rb_analysis() (in module iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb)": [[78, "iqm.benchmarks.randomized_benchmarking.interleaved_rb.interleaved_rb.interleaved_rb_analysis"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb": [[79, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb"]], "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb": [[80, "module-iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb"]], "mirrorrbconfiguration (class in iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration"]], "benchmark (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.benchmark"]], "density_2q_gates (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.density_2q_gates"]], "depths_array (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.depths_array"]], "model_computed_fields (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_computed_fields"]], "model_config (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_config"]], "model_fields (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.model_fields"]], "num_circuit_samples (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.num_circuit_samples"]], "num_pauli_samples (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.num_pauli_samples"]], "qiskit_optim_level (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.qiskit_optim_level"]], "qubits_array (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.qubits_array"]], "routing_method (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.routing_method"]], "shots (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.shots"]], "two_qubit_gate_ensemble (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrbconfiguration attribute)": [[81, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRBConfiguration.two_qubit_gate_ensemble"]], "mirrorrandomizedbenchmarking (class in iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[82, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking"]], "add_all_meta_to_dataset() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[82, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.add_all_meta_to_dataset"]], "analysis_function() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking static method)": [[82, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.analysis_function"]], "execute() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[82, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.execute"]], "submit_single_mrb_job() (iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mirrorrandomizedbenchmarking method)": [[82, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.MirrorRandomizedBenchmarking.submit_single_mrb_job"]], "compute_polarizations() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[83, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.compute_polarizations"]], "edge_grab() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[84, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.edge_grab"]], "generate_fixed_depth_mrb_circuits() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[85, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_fixed_depth_mrb_circuits"]], "generate_pauli_dressed_mrb_circuits() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[86, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.generate_pauli_dressed_mrb_circuits"]], "list_to_numcircuit_times_numpauli_matrix() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[87, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.list_to_numcircuit_times_numpauli_matrix"]], "mrb_analysis() (in module iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb)": [[88, "iqm.benchmarks.randomized_benchmarking.mirror_rb.mirror_rb.mrb_analysis"]], "iqm.benchmarks.randomized_benchmarking.multi_lmfit": [[89, "module-iqm.benchmarks.randomized_benchmarking.multi_lmfit"]], "create_multi_dataset_params() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[90, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.create_multi_dataset_params"]], "eval_func_single_dataset() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[91, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.eval_func_single_dataset"]], "get_param_names_from_func_signature() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[92, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.get_param_names_from_func_signature"]], "multi_dataset_residual() (in module iqm.benchmarks.randomized_benchmarking.multi_lmfit)": [[93, "iqm.benchmarks.randomized_benchmarking.multi_lmfit.multi_dataset_residual"]], "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common": [[94, "module-iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common"]], "compute_inverse_clifford() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[95, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.compute_inverse_clifford"]], "estimate_survival_probabilities() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[96, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.estimate_survival_probabilities"]], "exponential_rb() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[97, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.exponential_rb"]], "fit_decay_lmfit() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[98, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.fit_decay_lmfit"]], "generate_all_rb_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[99, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_all_rb_circuits"]], "generate_fixed_depth_parallel_rb_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[100, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_fixed_depth_parallel_rb_circuits"]], "generate_random_clifford_seq_circuits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[101, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.generate_random_clifford_seq_circuits"]], "get_survival_probabilities() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[102, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.get_survival_probabilities"]], "import_native_gate_cliffords() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[103, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.import_native_gate_cliffords"]], "lmfit_minimizer() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[104, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.lmfit_minimizer"]], "plot_rb_decay() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[105, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.plot_rb_decay"]], "relabel_qubits_array_from_zero() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[106, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.relabel_qubits_array_from_zero"]], "submit_parallel_rb_job() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[107, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_parallel_rb_job"]], "submit_sequential_rb_jobs() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[108, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.submit_sequential_rb_jobs"]], "survival_probabilities_parallel() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[109, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.survival_probabilities_parallel"]], "validate_irb_gate() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[110, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_irb_gate"]], "validate_rb_qubits() (in module iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common)": [[111, "iqm.benchmarks.randomized_benchmarking.randomized_benchmarking_common.validate_rb_qubits"]], "iqm.benchmarks.readout_mitigation": [[112, "module-iqm.benchmarks.readout_mitigation"]], "m3iqm (class in iqm.benchmarks.readout_mitigation)": [[113, "iqm.benchmarks.readout_mitigation.M3IQM"]], "cals_from_system() (iqm.benchmarks.readout_mitigation.m3iqm method)": [[113, "iqm.benchmarks.readout_mitigation.M3IQM.cals_from_system"]], "apply_readout_error_mitigation() (in module iqm.benchmarks.readout_mitigation)": [[114, "iqm.benchmarks.readout_mitigation.apply_readout_error_mitigation"]], "readout_error_m3() (in module iqm.benchmarks.readout_mitigation)": [[115, "iqm.benchmarks.readout_mitigation.readout_error_m3"]], "iqm.benchmarks.utils": [[116, "module-iqm.benchmarks.utils"]], "bootstrap_counts() (in module iqm.benchmarks.utils)": [[117, "iqm.benchmarks.utils.bootstrap_counts"]], "count_2q_layers() (in module iqm.benchmarks.utils)": [[118, "iqm.benchmarks.utils.count_2q_layers"]], "count_native_gates() (in module iqm.benchmarks.utils)": [[119, "iqm.benchmarks.utils.count_native_gates"]], "get_iqm_backend() (in module iqm.benchmarks.utils)": [[120, "iqm.benchmarks.utils.get_iqm_backend"]], "marginal_distribution() (in module iqm.benchmarks.utils)": [[121, "iqm.benchmarks.utils.marginal_distribution"]], "perform_backend_transpilation() (in module iqm.benchmarks.utils)": [[122, "iqm.benchmarks.utils.perform_backend_transpilation"]], "reduce_to_active_qubits() (in module iqm.benchmarks.utils)": [[123, "iqm.benchmarks.utils.reduce_to_active_qubits"]], "retrieve_all_counts() (in module iqm.benchmarks.utils)": [[124, "iqm.benchmarks.utils.retrieve_all_counts"]], "retrieve_all_job_metadata() (in module iqm.benchmarks.utils)": [[125, "iqm.benchmarks.utils.retrieve_all_job_metadata"]], "set_coupling_map() (in module iqm.benchmarks.utils)": [[126, "iqm.benchmarks.utils.set_coupling_map"]], "sort_batches_by_final_layout() (in module iqm.benchmarks.utils)": [[127, "iqm.benchmarks.utils.sort_batches_by_final_layout"]], "submit_execute() (in module iqm.benchmarks.utils)": [[128, "iqm.benchmarks.utils.submit_execute"]], "timeit() (in module iqm.benchmarks.utils)": [[129, "iqm.benchmarks.utils.timeit"]], "xrvariable_to_counts() (in module iqm.benchmarks.utils)": [[130, "iqm.benchmarks.utils.xrvariable_to_counts"]]}})