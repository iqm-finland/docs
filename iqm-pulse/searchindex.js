Search.setIndex({"docnames": ["API", "api/iqm.pulse", "api/iqm.pulse.builder", "api/iqm.pulse.builder.CircuitOperation", "api/iqm.pulse.builder.ScheduleBuilder", "api/iqm.pulse.builder.build_quantum_ops", "api/iqm.pulse.builder.load_config", "api/iqm.pulse.builder.validate_quantum_circuit", "api/iqm.pulse.circuit_operations", "api/iqm.pulse.circuit_operations.CircuitOperationList", "api/iqm.pulse.circuit_operations.get_unitary_from_circuit", "api/iqm.pulse.circuit_operations.get_unitary_from_op", "api/iqm.pulse.circuit_operations.reorder", "api/iqm.pulse.circuit_operations.reshape_unitary", "api/iqm.pulse.gate_implementation", "api/iqm.pulse.gate_implementation.CompositeGate", "api/iqm.pulse.gate_implementation.CustomIQWaveforms", "api/iqm.pulse.gate_implementation.GateImplementation", "api/iqm.pulse.gate_implementation.Locus", "api/iqm.pulse.gate_implementation.NestedParams", "api/iqm.pulse.gate_implementation.OCalibrationData", "api/iqm.pulse.gate_implementation.OICalibrationData", "api/iqm.pulse.gate_implementation.OILCalibrationData", "api/iqm.pulse.gate_implementation.OpCalibrationDataTree", "api/iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SinglePulseGate", "api/iqm.pulse.gate_implementation.get_waveform_parameters", "api/iqm.pulse.gates", "api/iqm.pulse.gates.barrier", "api/iqm.pulse.gates.barrier.Barrier", "api/iqm.pulse.gates.conditional", "api/iqm.pulse.gates.conditional.CCPRX_Composite", "api/iqm.pulse.gates.cz", "api/iqm.pulse.gates.cz.CZ_CRF", "api/iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF", "api/iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare", "api/iqm.pulse.gates.cz.CZ_Slepian", "api/iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF", "api/iqm.pulse.gates.cz.CZ_Slepian_CRF", "api/iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare", "api/iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate", "api/iqm.pulse.gates.cz.FluxPulseGate", "api/iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF", "api/iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF", "api/iqm.pulse.gates.enums", "api/iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES", "api/iqm.pulse.gates.enums.TwoQubitGate", "api/iqm.pulse.gates.enums.XYGATE_UNITARIES", "api/iqm.pulse.gates.enums.XYGate", "api/iqm.pulse.gates.expose_implementation", "api/iqm.pulse.gates.get_implementation_class", "api/iqm.pulse.gates.measure", "api/iqm.pulse.gates.measure.Measure_Constant", "api/iqm.pulse.gates.measure.Measure_CustomWaveforms", "api/iqm.pulse.gates.measure.ProbePulse_CustomWaveforms", "api/iqm.pulse.gates.move", "api/iqm.pulse.gates.move.MOVE_CRF_CRF", "api/iqm.pulse.gates.move.MOVE_CustomWaveforms", "api/iqm.pulse.gates.move.MOVE_TGSS_CRF", "api/iqm.pulse.gates.move.MoveMarker", "api/iqm.pulse.gates.move.apply_move_gate_phase_corrections", "api/iqm.pulse.gates.move.validate_move_instructions", "api/iqm.pulse.gates.prx", "api/iqm.pulse.gates.prx.PRX_CustomWaveforms", "api/iqm.pulse.gates.prx.PRX_CustomWaveformsSX", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX", "api/iqm.pulse.gates.prx.PRX_DRAGGaussian", "api/iqm.pulse.gates.prx.PRX_DRAGGaussianSX", "api/iqm.pulse.gates.prx.PRX_GateImplementation", "api/iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation", "api/iqm.pulse.gates.prx.get_unitary_prx", "api/iqm.pulse.gates.register_implementation", "api/iqm.pulse.gates.reset", "api/iqm.pulse.gates.reset.RESET_FEEDBACK_KEY", "api/iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY", "api/iqm.pulse.gates.reset.Reset_Conditional", "api/iqm.pulse.gates.reset.Reset_Wait", "api/iqm.pulse.gates.rz", "api/iqm.pulse.gates.rz.RZ_ACStarkShift", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall", "api/iqm.pulse.gates.rz.RZ_Virtual", "api/iqm.pulse.gates.rz.get_unitary_rz", "api/iqm.pulse.gates.sx", "api/iqm.pulse.gates.sx.SXGate", "api/iqm.pulse.gates.u", "api/iqm.pulse.gates.u.UGate", "api/iqm.pulse.gates.u.get_unitary_u", "api/iqm.pulse.playlist", "api/iqm.pulse.playlist.channel", "api/iqm.pulse.playlist.channel.ChannelConfiguration", "api/iqm.pulse.playlist.channel.ChannelDescription", "api/iqm.pulse.playlist.channel.ChannelProperties", "api/iqm.pulse.playlist.channel.IQChannelConfig", "api/iqm.pulse.playlist.channel.ProbeChannelProperties", "api/iqm.pulse.playlist.channel.RealChannelConfig", "api/iqm.pulse.playlist.channel.get_channel_properties", "api/iqm.pulse.playlist.channel.get_channel_properties_from_station_settings", "api/iqm.pulse.playlist.instructions", "api/iqm.pulse.playlist.instructions.AcquisitionMethod", "api/iqm.pulse.playlist.instructions.Block", "api/iqm.pulse.playlist.instructions.ComplexIntegration", "api/iqm.pulse.playlist.instructions.ConditionalInstruction", "api/iqm.pulse.playlist.instructions.IQPulse", "api/iqm.pulse.playlist.instructions.Instruction", "api/iqm.pulse.playlist.instructions.MultiplexedIQPulse", "api/iqm.pulse.playlist.instructions.ReadoutTrigger", "api/iqm.pulse.playlist.instructions.RealPulse", "api/iqm.pulse.playlist.instructions.ThresholdStateDiscrimination", "api/iqm.pulse.playlist.instructions.TimeTrace", "api/iqm.pulse.playlist.instructions.VirtualRZ", "api/iqm.pulse.playlist.instructions.Wait", "api/iqm.pulse.playlist.playlist", "api/iqm.pulse.playlist.schedule", "api/iqm.pulse.playlist.schedule.Nothing", "api/iqm.pulse.playlist.schedule.Schedule", "api/iqm.pulse.playlist.schedule.Segment", "api/iqm.pulse.playlist.schedule.TOLERANCE", "api/iqm.pulse.playlist.visualisation", "api/iqm.pulse.playlist.visualisation.base", "api/iqm.pulse.playlist.visualisation.base.inspect_playlist", "api/iqm.pulse.playlist.waveforms", "api/iqm.pulse.playlist.waveforms.Chirp", "api/iqm.pulse.playlist.waveforms.ChirpImag", "api/iqm.pulse.playlist.waveforms.Cosine", "api/iqm.pulse.playlist.waveforms.CosineRiseFallDerivative", "api/iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall", "api/iqm.pulse.playlist.waveforms.Slepian", "api/iqm.pulse.quantum_ops", "api/iqm.pulse.quantum_ops.QuantumOp", "api/iqm.pulse.quantum_ops.QuantumOpTable", "api/iqm.pulse.quantum_ops.validate_locus_calibration", "api/iqm.pulse.quantum_ops.validate_op_calibration", "api/iqm.pulse.scheduler", "api/iqm.pulse.scheduler.BLOCKING", "api/iqm.pulse.scheduler.NONSOLID", "api/iqm.pulse.scheduler.SegmentPointer", "api/iqm.pulse.scheduler.extend_hard_boundary", "api/iqm.pulse.scheduler.extend_hard_boundary_in_seconds", "api/iqm.pulse.scheduler.extend_schedule", "api/iqm.pulse.scheduler.extend_schedule_new", "api/iqm.pulse.timebox", "api/iqm.pulse.timebox.MultiplexedProbeTimeBox", "api/iqm.pulse.timebox.SchedulingAlgorithm", "api/iqm.pulse.timebox.SchedulingStrategy", "api/iqm.pulse.timebox.TimeBox", "api/iqm.pulse.utils", "api/iqm.pulse.utils.load_yaml", "api/iqm.pulse.utils.map_waveform_param_types", "api/iqm.pulse.utils.merge_dicts", "api/iqm.pulse.utils.normalize_angle", "api/iqm.pulse.utils.phase_transformation", "api/iqm.pulse.validation", "api/iqm.pulse.validation.AWGScheduleValidationData", "api/iqm.pulse.validation.AWGScheduleValidationError", "api/iqm.pulse.validation.InvalidInstructionError", "api/iqm.pulse.validation.PlaylistValidationError", "api/iqm.pulse.validation.validate_awg_and_schedule_compatibility", "api/iqm.pulse.validation.validate_channel", "api/iqm.pulse.validation.validate_instruction_and_wf_length", "api/iqm.pulse.validation.validate_playlist_compatibility", "changelog", "concepts", "custom_gates", "index", "license", "pulse_timing", "references", "using_builder"], "filenames": ["API.rst", "api/iqm.pulse.rst", "api/iqm.pulse.builder.rst", "api/iqm.pulse.builder.CircuitOperation.rst", "api/iqm.pulse.builder.ScheduleBuilder.rst", "api/iqm.pulse.builder.build_quantum_ops.rst", "api/iqm.pulse.builder.load_config.rst", "api/iqm.pulse.builder.validate_quantum_circuit.rst", "api/iqm.pulse.circuit_operations.rst", "api/iqm.pulse.circuit_operations.CircuitOperationList.rst", "api/iqm.pulse.circuit_operations.get_unitary_from_circuit.rst", "api/iqm.pulse.circuit_operations.get_unitary_from_op.rst", "api/iqm.pulse.circuit_operations.reorder.rst", "api/iqm.pulse.circuit_operations.reshape_unitary.rst", "api/iqm.pulse.gate_implementation.rst", "api/iqm.pulse.gate_implementation.CompositeGate.rst", "api/iqm.pulse.gate_implementation.CustomIQWaveforms.rst", "api/iqm.pulse.gate_implementation.GateImplementation.rst", "api/iqm.pulse.gate_implementation.Locus.rst", "api/iqm.pulse.gate_implementation.NestedParams.rst", "api/iqm.pulse.gate_implementation.OCalibrationData.rst", "api/iqm.pulse.gate_implementation.OICalibrationData.rst", "api/iqm.pulse.gate_implementation.OILCalibrationData.rst", "api/iqm.pulse.gate_implementation.OpCalibrationDataTree.rst", "api/iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SinglePulseGate.rst", "api/iqm.pulse.gate_implementation.get_waveform_parameters.rst", "api/iqm.pulse.gates.rst", "api/iqm.pulse.gates.barrier.rst", "api/iqm.pulse.gates.barrier.Barrier.rst", "api/iqm.pulse.gates.conditional.rst", "api/iqm.pulse.gates.conditional.CCPRX_Composite.rst", "api/iqm.pulse.gates.cz.rst", "api/iqm.pulse.gates.cz.CZ_CRF.rst", "api/iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.rst", "api/iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.rst", "api/iqm.pulse.gates.cz.CZ_Slepian.rst", "api/iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.rst", "api/iqm.pulse.gates.cz.CZ_Slepian_CRF.rst", "api/iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.rst", "api/iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.rst", "api/iqm.pulse.gates.cz.FluxPulseGate.rst", "api/iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.rst", "api/iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.rst", "api/iqm.pulse.gates.enums.rst", "api/iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES.rst", "api/iqm.pulse.gates.enums.TwoQubitGate.rst", "api/iqm.pulse.gates.enums.XYGATE_UNITARIES.rst", "api/iqm.pulse.gates.enums.XYGate.rst", "api/iqm.pulse.gates.expose_implementation.rst", "api/iqm.pulse.gates.get_implementation_class.rst", "api/iqm.pulse.gates.measure.rst", "api/iqm.pulse.gates.measure.Measure_Constant.rst", "api/iqm.pulse.gates.measure.Measure_CustomWaveforms.rst", "api/iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.rst", "api/iqm.pulse.gates.move.rst", "api/iqm.pulse.gates.move.MOVE_CRF_CRF.rst", "api/iqm.pulse.gates.move.MOVE_CustomWaveforms.rst", "api/iqm.pulse.gates.move.MOVE_TGSS_CRF.rst", "api/iqm.pulse.gates.move.MoveMarker.rst", "api/iqm.pulse.gates.move.apply_move_gate_phase_corrections.rst", "api/iqm.pulse.gates.move.validate_move_instructions.rst", "api/iqm.pulse.gates.prx.rst", "api/iqm.pulse.gates.prx.PRX_CustomWaveforms.rst", "api/iqm.pulse.gates.prx.PRX_CustomWaveformsSX.rst", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.rst", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.rst", "api/iqm.pulse.gates.prx.PRX_DRAGGaussian.rst", "api/iqm.pulse.gates.prx.PRX_DRAGGaussianSX.rst", "api/iqm.pulse.gates.prx.PRX_GateImplementation.rst", "api/iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation.rst", "api/iqm.pulse.gates.prx.get_unitary_prx.rst", "api/iqm.pulse.gates.register_implementation.rst", "api/iqm.pulse.gates.reset.rst", "api/iqm.pulse.gates.reset.RESET_FEEDBACK_KEY.rst", "api/iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY.rst", "api/iqm.pulse.gates.reset.Reset_Conditional.rst", "api/iqm.pulse.gates.reset.Reset_Wait.rst", "api/iqm.pulse.gates.rz.rst", "api/iqm.pulse.gates.rz.RZ_ACStarkShift.rst", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.rst", "api/iqm.pulse.gates.rz.RZ_Virtual.rst", "api/iqm.pulse.gates.rz.get_unitary_rz.rst", "api/iqm.pulse.gates.sx.rst", "api/iqm.pulse.gates.sx.SXGate.rst", "api/iqm.pulse.gates.u.rst", "api/iqm.pulse.gates.u.UGate.rst", "api/iqm.pulse.gates.u.get_unitary_u.rst", "api/iqm.pulse.playlist.rst", "api/iqm.pulse.playlist.channel.rst", "api/iqm.pulse.playlist.channel.ChannelConfiguration.rst", "api/iqm.pulse.playlist.channel.ChannelDescription.rst", "api/iqm.pulse.playlist.channel.ChannelProperties.rst", "api/iqm.pulse.playlist.channel.IQChannelConfig.rst", "api/iqm.pulse.playlist.channel.ProbeChannelProperties.rst", "api/iqm.pulse.playlist.channel.RealChannelConfig.rst", "api/iqm.pulse.playlist.channel.get_channel_properties.rst", "api/iqm.pulse.playlist.channel.get_channel_properties_from_station_settings.rst", "api/iqm.pulse.playlist.instructions.rst", "api/iqm.pulse.playlist.instructions.AcquisitionMethod.rst", "api/iqm.pulse.playlist.instructions.Block.rst", "api/iqm.pulse.playlist.instructions.ComplexIntegration.rst", "api/iqm.pulse.playlist.instructions.ConditionalInstruction.rst", "api/iqm.pulse.playlist.instructions.IQPulse.rst", "api/iqm.pulse.playlist.instructions.Instruction.rst", "api/iqm.pulse.playlist.instructions.MultiplexedIQPulse.rst", "api/iqm.pulse.playlist.instructions.ReadoutTrigger.rst", "api/iqm.pulse.playlist.instructions.RealPulse.rst", "api/iqm.pulse.playlist.instructions.ThresholdStateDiscrimination.rst", "api/iqm.pulse.playlist.instructions.TimeTrace.rst", "api/iqm.pulse.playlist.instructions.VirtualRZ.rst", "api/iqm.pulse.playlist.instructions.Wait.rst", "api/iqm.pulse.playlist.playlist.rst", "api/iqm.pulse.playlist.schedule.rst", "api/iqm.pulse.playlist.schedule.Nothing.rst", "api/iqm.pulse.playlist.schedule.Schedule.rst", "api/iqm.pulse.playlist.schedule.Segment.rst", "api/iqm.pulse.playlist.schedule.TOLERANCE.rst", "api/iqm.pulse.playlist.visualisation.rst", "api/iqm.pulse.playlist.visualisation.base.rst", "api/iqm.pulse.playlist.visualisation.base.inspect_playlist.rst", "api/iqm.pulse.playlist.waveforms.rst", "api/iqm.pulse.playlist.waveforms.Chirp.rst", "api/iqm.pulse.playlist.waveforms.ChirpImag.rst", "api/iqm.pulse.playlist.waveforms.Cosine.rst", "api/iqm.pulse.playlist.waveforms.CosineRiseFallDerivative.rst", "api/iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall.rst", "api/iqm.pulse.playlist.waveforms.Slepian.rst", "api/iqm.pulse.quantum_ops.rst", "api/iqm.pulse.quantum_ops.QuantumOp.rst", "api/iqm.pulse.quantum_ops.QuantumOpTable.rst", "api/iqm.pulse.quantum_ops.validate_locus_calibration.rst", "api/iqm.pulse.quantum_ops.validate_op_calibration.rst", "api/iqm.pulse.scheduler.rst", "api/iqm.pulse.scheduler.BLOCKING.rst", "api/iqm.pulse.scheduler.NONSOLID.rst", "api/iqm.pulse.scheduler.SegmentPointer.rst", "api/iqm.pulse.scheduler.extend_hard_boundary.rst", "api/iqm.pulse.scheduler.extend_hard_boundary_in_seconds.rst", "api/iqm.pulse.scheduler.extend_schedule.rst", "api/iqm.pulse.scheduler.extend_schedule_new.rst", "api/iqm.pulse.timebox.rst", "api/iqm.pulse.timebox.MultiplexedProbeTimeBox.rst", "api/iqm.pulse.timebox.SchedulingAlgorithm.rst", "api/iqm.pulse.timebox.SchedulingStrategy.rst", "api/iqm.pulse.timebox.TimeBox.rst", "api/iqm.pulse.utils.rst", "api/iqm.pulse.utils.load_yaml.rst", "api/iqm.pulse.utils.map_waveform_param_types.rst", "api/iqm.pulse.utils.merge_dicts.rst", "api/iqm.pulse.utils.normalize_angle.rst", "api/iqm.pulse.utils.phase_transformation.rst", "api/iqm.pulse.validation.rst", "api/iqm.pulse.validation.AWGScheduleValidationData.rst", "api/iqm.pulse.validation.AWGScheduleValidationError.rst", "api/iqm.pulse.validation.InvalidInstructionError.rst", "api/iqm.pulse.validation.PlaylistValidationError.rst", "api/iqm.pulse.validation.validate_awg_and_schedule_compatibility.rst", "api/iqm.pulse.validation.validate_channel.rst", "api/iqm.pulse.validation.validate_instruction_and_wf_length.rst", "api/iqm.pulse.validation.validate_playlist_compatibility.rst", "changelog.rst", "concepts.rst", "custom_gates.rst", "index.rst", "license.rst", "pulse_timing.rst", "references.rst", "using_builder.rst"], "titles": ["API Reference", "pulse", "builder", "CircuitOperation", "ScheduleBuilder", "iqm.pulse.builder.build_quantum_ops", "iqm.pulse.builder.load_config", "iqm.pulse.builder.validate_quantum_circuit", "circuit_operations", "CircuitOperationList", "iqm.pulse.circuit_operations.get_unitary_from_circuit", "iqm.pulse.circuit_operations.get_unitary_from_op", "iqm.pulse.circuit_operations.reorder", "iqm.pulse.circuit_operations.reshape_unitary", "gate_implementation", "CompositeGate", "CustomIQWaveforms", "GateImplementation", "iqm.pulse.gate_implementation.Locus", "iqm.pulse.gate_implementation.NestedParams", "iqm.pulse.gate_implementation.OCalibrationData", "iqm.pulse.gate_implementation.OICalibrationData", "iqm.pulse.gate_implementation.OILCalibrationData", "iqm.pulse.gate_implementation.OpCalibrationDataTree", "iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING", "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING", "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING", "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING", "SinglePulseGate", "iqm.pulse.gate_implementation.get_waveform_parameters", "gates", "barrier", "Barrier", "conditional", "CCPRX_Composite", "cz", "CZ_CRF", "CZ_CRF_ACStarkCRF", "CZ_GaussianSmoothedSquare", "CZ_Slepian", "CZ_Slepian_ACStarkCRF", "CZ_Slepian_CRF", "CZ_TruncatedGaussianSmoothedSquare", "CouplerFluxPulseQubitACStarkPulseGate", "FluxPulseGate", "FluxPulseGate_CRF_CRF", "FluxPulseGate_TGSS_CRF", "enums", "iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES", "TwoQubitGate", "iqm.pulse.gates.enums.XYGATE_UNITARIES", "XYGate", "iqm.pulse.gates.expose_implementation", "iqm.pulse.gates.get_implementation_class", "measure", "Measure_Constant", "Measure_CustomWaveforms", "ProbePulse_CustomWaveforms", "move", "MOVE_CRF_CRF", "MOVE_CustomWaveforms", "MOVE_TGSS_CRF", "MoveMarker", "iqm.pulse.gates.move.apply_move_gate_phase_corrections", "iqm.pulse.gates.move.validate_move_instructions", "prx", "PRX_CustomWaveforms", "PRX_CustomWaveformsSX", "PRX_DRAGCosineRiseFall", "PRX_DRAGCosineRiseFallSX", "PRX_DRAGGaussian", "PRX_DRAGGaussianSX", "PRX_GateImplementation", "PRX_SinglePulse_GateImplementation", "iqm.pulse.gates.prx.get_unitary_prx", "iqm.pulse.gates.register_implementation", "reset", "iqm.pulse.gates.reset.RESET_FEEDBACK_KEY", "iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY", "Reset_Conditional", "Reset_Wait", "rz", "RZ_ACStarkShift", "RZ_ACStarkShift_CosineRiseFall", "RZ_Virtual", "iqm.pulse.gates.rz.get_unitary_rz", "sx", "SXGate", "u", "UGate", "iqm.pulse.gates.u.get_unitary_u", "playlist", "channel", "ChannelConfiguration", "ChannelDescription", "ChannelProperties", "IQChannelConfig", "ProbeChannelProperties", "RealChannelConfig", "iqm.pulse.playlist.channel.get_channel_properties", "iqm.pulse.playlist.channel.get_channel_properties_from_station_settings", "instructions", "AcquisitionMethod", "Block", "ComplexIntegration", "ConditionalInstruction", "IQPulse", "Instruction", "MultiplexedIQPulse", "ReadoutTrigger", "RealPulse", "ThresholdStateDiscrimination", "TimeTrace", "VirtualRZ", "Wait", "playlist", "schedule", "Nothing", "Schedule", "Segment", "iqm.pulse.playlist.schedule.TOLERANCE", "visualisation", "base", "iqm.pulse.playlist.visualisation.base.inspect_playlist", "waveforms", "Chirp", "ChirpImag", "Cosine", "CosineRiseFallDerivative", "ModulatedCosineRiseFall", "Slepian", "quantum_ops", "QuantumOp", "iqm.pulse.quantum_ops.QuantumOpTable", "iqm.pulse.quantum_ops.validate_locus_calibration", "iqm.pulse.quantum_ops.validate_op_calibration", "scheduler", "iqm.pulse.scheduler.BLOCKING", "iqm.pulse.scheduler.NONSOLID", "SegmentPointer", "iqm.pulse.scheduler.extend_hard_boundary", "iqm.pulse.scheduler.extend_hard_boundary_in_seconds", "iqm.pulse.scheduler.extend_schedule", "iqm.pulse.scheduler.extend_schedule_new", "timebox", "MultiplexedProbeTimeBox", "SchedulingAlgorithm", "SchedulingStrategy", "TimeBox", "utils", "iqm.pulse.utils.load_yaml", "iqm.pulse.utils.map_waveform_param_types", "iqm.pulse.utils.merge_dicts", "iqm.pulse.utils.normalize_angle", "iqm.pulse.utils.phase_transformation", "validation", "AWGScheduleValidationData", "iqm.pulse.validation.AWGScheduleValidationError", "iqm.pulse.validation.InvalidInstructionError", "iqm.pulse.validation.PlaylistValidationError", "iqm.pulse.validation.validate_awg_and_schedule_compatibility", "iqm.pulse.validation.validate_channel", "iqm.pulse.validation.validate_instruction_and_wf_length", "iqm.pulse.validation.validate_playlist_compatibility", "Changelog", "Concepts and Classes", "Custom gate implementations", "IQM Pulse", "License", "Pulse timing", "References", "Using ScheduleBuilder"], "terms": {"control": [1, 4, 14, 26, 33, 34, 35, 37, 40, 49, 56, 91, 92, 94, 95, 100, 101, 103, 107, 116, 117, 118, 142, 143, 148, 156, 160, 163, 164, 165, 168, 169, 170, 171], "sequenc": [1, 4, 7, 9, 10, 13, 14, 18, 60, 91, 103, 114, 115, 119, 123, 132, 139, 148, 154, 165, 167, 169, 171], "quantum": [1, 3, 4, 5, 6, 7, 9, 10, 11, 14, 17, 18, 20, 21, 22, 23, 28, 30, 31, 32, 43, 44, 56, 57, 60, 64, 72, 75, 76, 79, 80, 82, 84, 91, 107, 131, 132, 133, 135, 154, 164, 165, 167, 171], "processor": [1, 91], "full": [1, 2, 8, 14, 30, 31, 33, 35, 47, 54, 58, 65, 76, 81, 86, 88, 91, 92, 101, 115, 116, 121, 122, 124, 129, 131, 136, 144, 149, 155, 164], "path": [1, 2, 6, 8, 14, 17, 30, 31, 33, 35, 47, 54, 58, 65, 76, 81, 86, 88, 91, 92, 101, 115, 116, 118, 121, 122, 124, 131, 136, 144, 148, 149, 150, 152, 155, 164], "iqm": [1, 2, 3, 4, 8, 9, 14, 15, 16, 17, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 139, 144, 145, 146, 147, 148, 149, 155, 156, 164, 165, 168, 169, 171], "subpackag": [1, 30, 91, 121], "modul": [1, 3, 4, 9, 14, 15, 16, 17, 28, 30, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 55, 56, 57, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 76, 79, 80, 82, 83, 84, 87, 89, 91, 93, 94, 95, 96, 97, 98, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 139, 145, 146, 147, 148, 156, 165, 167], "tool": [2, 136, 139, 167], "build": [2, 4, 5, 15, 17, 56, 57, 63, 66, 67, 68, 69, 145, 148], "instruct": [2, 4, 14, 17, 28, 29, 32, 44, 56, 57, 58, 60, 62, 63, 64, 72, 73, 80, 84, 94, 95, 97, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 132, 136, 137, 138, 139, 141, 142, 143, 144, 145, 148, 154, 158, 160, 162, 163, 164, 167, 169, 171], "schedul": [2, 4, 14, 17, 28, 32, 43, 44, 56, 57, 62, 63, 64, 67, 72, 73, 80, 82, 84, 95, 103, 114, 115, 117, 119, 132, 139, 144, 145, 146, 147, 148, 155, 157, 164, 167, 169], "puls": [2, 3, 4, 8, 9, 14, 15, 16, 17, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 139, 144, 145, 146, 147, 148, 149, 155, 156, 164, 165, 171], "function": [2, 4, 5, 8, 11, 14, 17, 28, 30, 32, 43, 44, 58, 60, 65, 73, 79, 80, 81, 82, 88, 92, 99, 100, 122, 130, 131, 132, 136, 148, 149, 155, 164], "class": [2, 3, 4, 8, 9, 14, 15, 16, 17, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 136, 137, 138, 139, 144, 145, 146, 147, 148, 155, 156, 164, 167, 168], "inherit": [2, 8, 14, 15, 16, 17, 28, 31, 32, 33, 35, 43, 44, 47, 54, 56, 57, 58, 60, 65, 66, 67, 68, 69, 72, 76, 79, 80, 81, 82, 84, 86, 88, 92, 101, 116, 124, 131, 136, 144, 155, 164], "circuitoper": [2, 4, 7, 8, 9, 10, 11, 64, 164], "schedulebuild": [2, 9, 15, 16, 17, 28, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 55, 56, 57, 59, 60, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 79, 80, 82, 83, 84, 87, 89, 148, 164, 165, 167], "builder": [3, 4, 9, 15, 16, 17, 28, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 55, 56, 57, 59, 60, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 79, 80, 82, 83, 84, 87, 89, 164, 165, 169, 171], "name": [3, 4, 5, 9, 15, 16, 17, 18, 20, 23, 24, 25, 26, 27, 28, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 51, 53, 55, 56, 57, 59, 60, 61, 66, 67, 68, 69, 70, 71, 72, 73, 75, 79, 80, 82, 83, 84, 87, 89, 94, 100, 118, 132, 133, 134, 141, 145, 146, 147, 148, 164, 165, 168, 171], "locu": [3, 4, 9, 15, 16, 17, 22, 24, 25, 26, 27, 28, 30, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 55, 56, 57, 59, 60, 61, 66, 67, 68, 69, 70, 71, 72, 73, 79, 80, 82, 83, 84, 87, 89, 132, 134, 145, 148, 164, 165, 169, 171], "arg": [3, 4, 9, 17, 28, 32, 43, 44, 60, 79, 80, 82], "factori": [3, 4, 14, 95, 97, 132, 145, 148], "implement": [3, 4, 9, 10, 14, 15, 16, 17, 20, 21, 22, 28, 30, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 52, 53, 55, 56, 57, 59, 60, 61, 63, 66, 67, 68, 69, 70, 71, 72, 73, 75, 79, 80, 82, 83, 84, 87, 89, 118, 132, 134, 135, 154, 164, 165, 167, 169, 170, 171], "none": [3, 4, 6, 7, 9, 10, 15, 17, 20, 21, 23, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 66, 67, 68, 69, 70, 71, 75, 80, 83, 107, 118, 119, 132, 134, 135, 139, 140, 141, 142, 143, 145, 146, 147, 148, 152, 161, 163, 164], "base": [3, 4, 9, 15, 16, 17, 28, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 51, 55, 56, 57, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 79, 80, 82, 83, 84, 87, 89, 93, 94, 95, 96, 97, 98, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 125, 126, 127, 128, 129, 130, 132, 139, 145, 146, 147, 148, 156, 164, 168, 169], "object": [3, 4, 8, 9, 29, 93, 94, 95, 102, 107, 118, 119, 132, 139, 148, 156, 164, 168], "specif": [3, 4, 15, 17, 28, 30, 31, 32, 43, 44, 60, 73, 79, 80, 82, 84, 94, 118, 130, 132, 156, 160, 164, 165, 168, 171], "oper": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 31, 32, 34, 43, 44, 56, 57, 58, 60, 72, 75, 76, 78, 79, 80, 82, 84, 131, 132, 133, 134, 135, 148, 156, 164, 165, 167, 169, 171], "appli": [3, 4, 34, 44, 58, 60, 62, 63, 73, 80, 107, 132, 168, 169, 171], "part": [3, 4, 17, 111, 126, 128, 129, 132, 139, 148, 164, 165, 168, 169, 171], "qpu": [3, 4, 17, 18, 32, 114, 132, 140, 144, 148, 165, 171], "e": [3, 4, 15, 16, 17, 28, 32, 43, 44, 55, 56, 57, 60, 65, 66, 67, 68, 69, 70, 71, 73, 75, 80, 81, 82, 84, 86, 88, 125, 127, 129, 130, 132, 136, 140, 141, 142, 143, 148, 164, 170], "g": [3, 4, 15, 16, 17, 28, 32, 43, 44, 55, 56, 57, 66, 67, 68, 69, 70, 71, 75, 80, 82, 84, 125, 127, 129, 130, 140, 141, 148, 164, 170], "circuit": [3, 4, 7, 9, 10, 11, 56, 64, 80, 84, 132, 164, 165, 167, 169, 171], "attribut": [3, 4, 9, 14, 15, 16, 17, 28, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 55, 56, 57, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 76, 79, 80, 82, 83, 84, 87, 89, 94, 95, 96, 97, 98, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 125, 126, 127, 128, 129, 130, 131, 132, 136, 139, 145, 146, 147, 148, 156, 164, 168, 169], "method": [3, 4, 8, 9, 15, 16, 17, 28, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 51, 55, 56, 57, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 75, 79, 80, 82, 83, 84, 87, 89, 93, 94, 95, 96, 97, 98, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 125, 126, 127, 128, 129, 130, 132, 139, 145, 146, 147, 148, 156, 164, 171], "paramet": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 19, 28, 29, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 80, 82, 83, 84, 85, 87, 89, 90, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 123, 125, 126, 127, 128, 129, 130, 132, 134, 135, 139, 140, 141, 142, 143, 145, 148, 150, 151, 152, 153, 154, 156, 160, 161, 162, 163, 164, 165, 171], "str": [3, 4, 5, 6, 7, 9, 10, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 29, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 53, 55, 56, 57, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 75, 79, 80, 82, 83, 84, 87, 89, 94, 95, 99, 102, 104, 105, 111, 112, 118, 123, 125, 127, 129, 130, 132, 133, 134, 140, 141, 142, 143, 145, 148, 150, 163], "tupl": [3, 4, 6, 15, 17, 18, 20, 21, 23, 56, 57, 80, 95, 97, 99, 105, 106, 107, 108, 109, 110, 118, 132, 134, 145, 148, 151, 154, 156], "dict": [3, 4, 5, 6, 7, 10, 11, 15, 16, 17, 19, 20, 21, 22, 23, 29, 44, 56, 57, 60, 66, 67, 75, 80, 84, 99, 118, 125, 127, 129, 130, 132, 133, 140, 141, 142, 143, 145, 148, 150, 152, 163], "ani": [3, 4, 5, 6, 9, 15, 17, 20, 21, 22, 23, 28, 32, 43, 44, 56, 57, 60, 75, 79, 80, 82, 108, 117, 118, 130, 132, 140, 141, 145, 148, 150, 164, 165, 168, 171], "inform": [3, 4, 29, 64, 132, 165, 168, 169, 171], "bear": 3, "compon": [3, 4, 17, 18, 25, 26, 27, 32, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 56, 59, 60, 61, 79, 80, 83, 95, 100, 108, 114, 130, 132, 140, 141, 145, 148, 164, 165, 171], "qubit": [3, 4, 9, 10, 11, 12, 13, 28, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 55, 56, 58, 59, 60, 61, 62, 63, 65, 67, 72, 73, 76, 80, 81, 82, 84, 86, 88, 130, 132, 140, 141, 164, 165, 169, 170, 171], "comput": [3, 4, 14, 28, 56, 60, 79, 88, 95, 107, 118, 119, 132, 136, 140, 141, 148, 154, 164, 165, 167, 168, 171], "reson": [3, 58, 59, 60, 61, 62, 63, 82, 89, 95, 140, 141, 154, 164, 165, 170, 171], "act": [3, 4, 11, 13, 15, 17, 18, 30, 57, 60, 79, 80, 84, 132, 140, 141, 164, 165, 168, 169, 171], "argument": [3, 9, 10, 17, 28, 32, 34, 43, 44, 56, 57, 67, 80, 82, 84, 132, 164, 171], "valid": [3, 4, 7, 58, 64, 105, 106, 107, 110, 118, 134, 135, 148, 156, 164, 171], "op_tabl": [3, 4, 7, 9, 15, 79, 87, 89], "against": [3, 4, 111, 135, 168, 171], "tabl": [3, 5, 7, 9, 10, 11, 94, 133, 164], "definit": [3, 4, 5, 6, 10, 16, 32, 57, 60, 90, 124, 132, 133, 164, 165, 168], "quantumop": [3, 4, 5, 6, 7, 9, 10, 11, 15, 16, 17, 28, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 55, 56, 57, 59, 60, 61, 66, 67, 68, 69, 70, 71, 72, 73, 75, 79, 80, 82, 83, 84, 87, 89, 131, 133, 134, 164, 167, 171], "contain": [3, 4, 7, 9, 16, 17, 34, 56, 57, 64, 80, 94, 105, 106, 107, 110, 118, 132, 145, 148, 160, 164, 165, 168, 171], "allow": [3, 4, 7, 9, 15, 17, 75, 84, 95, 108, 118, 140, 164, 165, 169, 171], "rais": [3, 4, 7, 52, 64, 95, 105, 106, 107, 110, 125, 132, 134, 135, 150, 151, 157, 158, 159, 165], "valueerror": [3, 4, 7, 64, 95, 105, 106, 107, 110, 132, 134, 135, 151], "i": [3, 4, 5, 9, 11, 15, 16, 17, 18, 28, 29, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 79, 80, 81, 82, 83, 84, 86, 88, 95, 105, 106, 107, 108, 110, 111, 118, 119, 120, 125, 127, 128, 129, 130, 132, 134, 135, 136, 139, 140, 141, 142, 143, 148, 154, 160, 163, 164, 165, 167, 168, 169, 171], "return": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 17, 28, 29, 32, 34, 43, 44, 49, 52, 53, 56, 57, 60, 63, 64, 66, 67, 68, 69, 72, 73, 74, 75, 79, 80, 82, 84, 85, 87, 89, 90, 94, 95, 99, 100, 102, 105, 106, 107, 110, 118, 119, 123, 125, 127, 128, 129, 130, 132, 134, 135, 139, 140, 141, 142, 143, 145, 148, 150, 151, 152, 153, 154, 161, 163, 164], "type": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 28, 29, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 63, 64, 66, 67, 68, 69, 72, 73, 74, 75, 79, 80, 82, 83, 84, 85, 87, 89, 90, 94, 95, 97, 99, 100, 105, 106, 107, 110, 118, 119, 120, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 139, 140, 141, 142, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 161, 163, 168], "calibr": [4, 6, 7, 15, 16, 17, 20, 21, 22, 23, 28, 30, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 55, 56, 57, 59, 60, 61, 66, 67, 68, 69, 70, 71, 73, 79, 80, 83, 84, 87, 89, 125, 127, 129, 130, 132, 134, 135, 164, 165, 171], "chip_topologi": [4, 17, 80, 99, 100, 171], "channel": [4, 16, 17, 28, 29, 32, 34, 44, 55, 56, 57, 62, 63, 66, 67, 68, 69, 70, 71, 73, 76, 79, 80, 82, 84, 93, 94, 95, 96, 97, 98, 103, 106, 107, 113, 117, 118, 119, 136, 140, 141, 142, 143, 145, 146, 148, 160, 161, 163, 164, 165, 169, 171], "component_channel": 4, "out": [4, 66, 68, 165, 168, 169], "individu": [4, 132, 165, 168], "encapsul": [4, 17, 30, 64, 171], "known": [4, 5, 52, 75, 118, 130, 133, 135], "op": [4, 5, 10, 11, 14, 15, 17, 132, 133, 134, 135], "them": [4, 9, 10, 57, 80, 84, 95, 132, 148, 164, 167, 171], "topologi": [4, 100, 171], "properti": [4, 9, 17, 58, 73, 75, 92, 94, 95, 99, 100, 118, 119, 132, 139, 141, 142, 143, 164, 171], "quantumopt": [4, 9, 10, 11, 135, 164], "opcalibrationdatatre": [4, 135], "data": [4, 6, 15, 17, 20, 21, 22, 23, 28, 30, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 55, 56, 57, 59, 60, 61, 66, 67, 68, 69, 70, 71, 73, 80, 83, 84, 94, 102, 125, 127, 129, 130, 132, 134, 135, 155, 156, 160, 163, 164, 165], "tree": [4, 6, 17, 100, 134, 135], "chiptopologi": [4, 17, 43, 44, 56, 57, 72, 79, 80, 84, 99, 100], "chip": [4, 9, 100], "deriv": [4, 73, 128, 130, 168], "from": [4, 5, 6, 9, 11, 15, 16, 17, 34, 43, 44, 56, 60, 63, 67, 68, 69, 73, 79, 87, 89, 95, 100, 102, 108, 111, 118, 119, 123, 124, 125, 127, 128, 129, 130, 139, 141, 145, 148, 150, 152, 160, 164, 165, 168, 169, 171], "chad": [4, 132], "channelproperti": [4, 17, 92, 97, 99, 118, 141, 142, 143, 161, 163], "map": [4, 5, 9, 15, 17, 20, 21, 23, 24, 25, 26, 27, 43, 44, 48, 49, 50, 51, 56, 57, 72, 75, 79, 84, 94, 100, 105, 118, 125, 127, 129, 130, 132, 133, 141, 148, 151, 164], "configur": [4, 5, 93, 96, 98, 160, 163, 168], "drive": [4, 17, 25, 28, 32, 34, 43, 44, 56, 62, 63, 73, 79, 82, 84, 89, 95, 113, 154, 164, 165, 169], "flux": [4, 17, 26, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 59, 60, 61, 132, 164], "readout": [4, 17, 27, 34, 55, 56, 57, 79, 102, 109, 118, 145, 164, 169], "respons": [4, 95, 98, 168, 169], "_cach": 4, "gateimplement": [4, 14, 15, 16, 19, 28, 29, 30, 31, 32, 33, 35, 43, 44, 52, 53, 54, 58, 60, 65, 72, 75, 76, 79, 80, 81, 82, 84, 86, 88, 132, 134, 148, 164, 167, 169, 171], "cach": [4, 17, 28, 32, 43, 44, 56, 60, 79, 80, 82, 118, 148, 164], "The": [4, 9, 10, 15, 16, 17, 18, 28, 30, 31, 32, 34, 35, 43, 44, 56, 57, 58, 60, 62, 65, 67, 73, 75, 76, 77, 79, 80, 81, 82, 84, 86, 87, 88, 89, 106, 111, 113, 118, 123, 125, 127, 128, 129, 130, 132, 136, 140, 141, 142, 143, 148, 160, 162, 163, 164, 165, 168, 169, 171], "ha": [4, 9, 17, 26, 30, 34, 43, 56, 58, 60, 75, 80, 82, 84, 94, 107, 108, 111, 118, 125, 127, 128, 129, 130, 132, 140, 141, 142, 143, 148, 160, 163, 164, 165, 168, 169, 171], "same": [4, 9, 17, 32, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 56, 59, 60, 61, 62, 73, 75, 83, 106, 111, 125, 127, 128, 129, 130, 141, 148, 160, 163, 164, 165, 168, 169, 171], "structur": [4, 164], "_channel_to_compon": 4, "self": [4, 9, 15, 16, 17, 43, 44, 56, 57, 68, 69, 73, 79, 80, 87, 89, 95, 118, 132, 139, 148, 165], "invert": 4, "algorithm": [4, 136, 140, 142, 146, 148, 164, 171], "perform": [4, 44, 104, 111, 118, 168], "thi": [4, 9, 15, 16, 17, 28, 30, 32, 34, 43, 44, 49, 51, 56, 57, 58, 60, 62, 66, 67, 68, 69, 72, 73, 75, 77, 78, 79, 80, 82, 84, 94, 95, 106, 108, 109, 111, 114, 118, 124, 125, 127, 128, 129, 130, 132, 136, 139, 140, 142, 143, 146, 148, 164, 165, 168, 169, 171], "us": [4, 9, 14, 15, 16, 17, 30, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 49, 51, 55, 56, 57, 59, 60, 61, 63, 66, 67, 73, 75, 77, 78, 79, 80, 82, 84, 87, 88, 89, 94, 95, 103, 111, 113, 114, 117, 118, 123, 125, 127, 129, 130, 132, 140, 141, 146, 148, 154, 160, 163, 164, 165, 167, 168, 169, 170], "determin": [4, 29, 140, 148, 165, 168, 171], "block": [4, 32, 34, 44, 56, 57, 73, 79, 80, 95, 101, 114, 117, 138, 140, 141, 145, 148, 164, 165, 169, 171], "associ": [4, 9, 56, 80, 94, 95, 109, 111, 168, 169], "onli": [4, 9, 15, 17, 32, 34, 36, 37, 38, 39, 40, 41, 42, 45, 46, 51, 56, 57, 58, 59, 60, 61, 73, 79, 83, 95, 118, 130, 132, 139, 148, 164, 165, 168, 169, 170, 171], "ar": [4, 9, 15, 16, 17, 29, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 56, 59, 60, 61, 65, 67, 68, 69, 75, 83, 84, 88, 94, 95, 106, 108, 111, 118, 119, 125, 127, 128, 129, 130, 132, 135, 139, 140, 141, 142, 143, 146, 147, 148, 160, 163, 164, 165, 167, 168, 169, 171], "includ": [4, 7, 9, 16, 56, 57, 60, 66, 67, 94, 132, 148, 164, 165, 168], "non": [4, 9, 15, 17, 56, 76, 80, 125, 127, 129, 130, 151, 168, 171], "certain": [4, 16, 43, 44, 68, 69, 95, 171], "virtual": [4, 34, 44, 60, 62, 63, 80, 84, 89, 95, 164, 169, 171], "do": [4, 7, 9, 29, 84, 86, 95, 118, 124, 127, 140, 154, 164, 165, 168, 171], "just": [4, 15, 28, 56, 67, 79, 132, 148, 164], "themselv": [4, 57, 165], "_channel_typ": 4, "probe": [4, 24, 32, 34, 55, 56, 57, 80, 97, 102, 109, 141, 145, 164], "_require_scheduling_in_second": 4, "bool": [4, 7, 15, 16, 17, 32, 36, 37, 38, 39, 40, 41, 42, 45, 46, 52, 55, 56, 57, 59, 60, 61, 63, 64, 66, 67, 68, 69, 70, 71, 75, 83, 95, 97, 118, 132, 139, 140, 141, 152, 164], "whether": [4, 11, 17, 64, 75, 95, 140, 141, 152, 168, 171], "requir": [4, 17, 19, 29, 36, 37, 38, 39, 40, 41, 42, 45, 46, 55, 56, 59, 60, 61, 68, 69, 70, 71, 73, 78, 80, 83, 84, 95, 125, 127, 129, 130, 132, 134, 135, 145, 154, 160, 163, 164, 165, 168], "second": [4, 9, 10, 17, 28, 32, 34, 43, 44, 56, 57, 58, 80, 82, 84, 95, 118, 125, 127, 129, 130, 139, 141, 142, 143, 164, 169, 171], "instead": [4, 17, 62, 114, 140, 164, 165, 169, 171], "sampl": [4, 17, 29, 62, 95, 97, 98, 102, 103, 106, 107, 108, 112, 114, 118, 119, 125, 127, 128, 129, 130, 140, 141, 145, 160, 163, 165, 167], "can": [4, 9, 14, 15, 16, 17, 28, 30, 32, 34, 35, 43, 44, 49, 51, 52, 56, 57, 60, 67, 68, 69, 73, 79, 80, 82, 84, 87, 89, 94, 95, 103, 105, 107, 108, 111, 113, 117, 118, 123, 125, 127, 129, 130, 132, 136, 138, 142, 143, 148, 150, 154, 164, 165, 169, 171], "happen": [4, 58, 62, 84, 114, 136, 148, 165], "two": [4, 9, 34, 35, 37, 40, 44, 47, 49, 56, 58, 60, 67, 132, 140, 148, 152, 164, 165, 169, 171], "reason": [4, 67, 130, 148, 158, 165, 168], "1": [4, 9, 17, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 55, 56, 57, 58, 59, 60, 61, 66, 67, 68, 69, 70, 71, 75, 80, 83, 95, 106, 119, 125, 126, 128, 130, 132, 140, 146, 147, 148, 168, 169, 170, 171], "differ": [4, 9, 14, 15, 17, 30, 31, 32, 43, 44, 56, 57, 58, 60, 63, 67, 72, 79, 84, 111, 118, 132, 141, 147, 148, 164, 168, 169], "rate": [4, 29, 62, 95, 98, 106, 107, 118, 140, 141, 160, 163, 167], "other": [4, 9, 13, 15, 17, 56, 60, 73, 79, 80, 87, 89, 117, 127, 132, 140, 141, 146, 148, 160, 163, 164, 165, 168, 169, 171], "uhfqa": [4, 95], "2": [4, 9, 34, 43, 49, 50, 55, 56, 58, 65, 67, 81, 82, 86, 87, 88, 89, 90, 95, 125, 126, 127, 128, 129, 130, 140, 148, 168, 169, 170, 171], "have": [4, 9, 17, 25, 26, 27, 29, 44, 56, 60, 73, 79, 80, 108, 118, 124, 132, 135, 140, 141, 148, 154, 164, 165, 168, 169, 171], "granular": [4, 95, 108, 118, 141, 156, 160, 163, 164, 165, 169], "some": [4, 15, 75, 88, 95, 124, 125, 127, 129, 130, 142, 143, 148, 164, 165, 171], "mix": 4, "station": [4, 34, 64, 95, 100, 132, 164, 165], "ro": 4, "devic": [4, 169], "vendor": 4, "than": [4, 9, 80, 118, 132, 139, 142, 143, 160, 163, 164], "awg": [4, 26, 34, 36, 38, 39, 42, 43, 44, 60, 73, 118, 157, 160, 163, 164, 169], "_channel_templ": 4, "repres": [4, 11, 14, 17, 30, 35, 47, 74, 75, 85, 90, 118, 132, 133, 165, 168, 169], "inject_calibr": 4, "partial_calibr": 4, "inject": 4, "new": [4, 9, 75, 118, 132, 140, 141, 142, 143, 145, 148, 164, 165], "chang": [4, 15, 17, 84, 107, 113, 132, 139, 154, 168, 169], "after": [4, 67, 69, 71, 84, 97, 106, 114, 138, 139, 140, 154, 169, 171], "initialis": [4, 16, 55, 56, 57, 66, 67, 68, 69, 70, 71, 80], "invalid": [4, 158], "gate_implement": [4, 15, 16, 17, 28, 31, 33, 35, 54, 58, 65, 76, 81, 86, 88], "affect": [4, 9, 32, 56, 84, 118, 119, 132, 148, 164, 169], "loci": [4, 9, 21, 56, 80, 132, 171], "also": [4, 9, 15, 16, 17, 28, 32, 43, 44, 60, 63, 68, 69, 73, 79, 80, 82, 87, 89, 94, 118, 132, 136, 140, 141, 143, 148, 152, 154, 164, 168, 169], "factoriz": [4, 56, 79, 80, 132, 164], "gate": [4, 9, 15, 16, 17, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 130, 132, 134, 154, 164, 165, 167, 169, 170, 171], "its": [4, 5, 15, 17, 30, 32, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 56, 57, 59, 60, 61, 83, 100, 107, 108, 118, 119, 132, 141, 142, 143, 146, 148, 164, 165, 168, 171], "wa": [4, 34, 60, 63, 130, 164, 168, 169, 171], "must": [4, 7, 9, 10, 17, 34, 44, 95, 118, 119, 130, 132, 148, 164, 168], "doe": [4, 9, 34, 44, 52, 56, 64, 80, 106, 108, 114, 132, 164, 165, 168, 169, 171], "all": [4, 9, 10, 13, 16, 17, 24, 25, 26, 27, 28, 29, 32, 44, 51, 56, 57, 58, 63, 66, 67, 73, 80, 84, 95, 100, 105, 106, 107, 110, 113, 118, 119, 125, 127, 129, 130, 136, 140, 146, 160, 163, 164, 165, 167, 168, 169, 171], "valu": [4, 9, 11, 15, 17, 36, 37, 38, 39, 40, 41, 42, 45, 46, 49, 51, 55, 56, 59, 61, 68, 69, 70, 71, 75, 83, 103, 106, 108, 110, 111, 114, 125, 128, 135, 146, 147, 152, 164, 165, 171], "found": [4, 9, 15, 52, 75, 118, 132], "merg": [4, 15, 136, 140, 152], "actual": [4, 34, 56, 125, 127, 128, 129, 130, 140, 160, 163, 169, 171], "previou": [4, 169], "validate_calibr": 4, "check": [4, 11, 95, 160, 163], "match": [4, 118, 119, 160, 162, 163, 164, 171], "someth": [4, 16, 56, 57, 95, 105, 106, 107, 110, 134, 135, 154], "wrong": [4, 134, 135, 164], "get_drive_channel": [4, 171], "given": [4, 9, 10, 13, 15, 16, 17, 29, 30, 44, 52, 56, 57, 75, 79, 82, 83, 87, 89, 95, 107, 118, 119, 123, 132, 141, 148, 150, 153, 160, 163, 165, 171], "exist": [4, 15, 52, 75, 79, 87, 89, 118, 165, 171], "keyerror": 4, "get_flux_channel": 4, "see": [4, 16, 56, 68, 69, 70, 71, 90, 124, 129, 148, 164, 165, 168, 169], "get_probe_channel": 4, "line": [4, 24, 34, 56, 57, 97, 164], "belong": [4, 56, 164], "get_virtual_feedback_channel": 4, "feedback": [4, 34, 56, 77, 78, 79, 111, 164, 167, 171], "signal": [4, 14, 34, 56, 104, 111, 112, 129, 164, 167, 169, 170], "A": [4, 9, 12, 34, 56, 75, 103, 125, 132, 136, 142, 143, 145, 148, 151, 152, 164, 165, 167, 168, 169, 170, 171], "between": [4, 14, 56, 58, 60, 62, 64, 80, 105, 118, 128, 130, 136, 165, 169], "sourc": [4, 60, 139, 164, 168, 169], "destin": [4, 169], "either": [4, 32, 84, 113, 148, 165, 168], "list": [4, 8, 9, 10, 11, 12, 15, 16, 17, 34, 43, 44, 52, 68, 69, 79, 87, 89, 118, 119, 139, 164, 165, 168], "get_virtual_feedback_channel_for": 4, "awg_nam": 4, "feedback_qubit": [4, 34, 164, 169], "get": [4, 11, 17, 43, 44, 53, 56, 57, 72, 79, 84, 94, 99, 100, 132, 139, 164, 169, 171], "node": [4, 17], "receiv": [4, 111, 168, 169], "bit": [4, 34, 164, 169], "which": [4, 9, 13, 17, 32, 43, 56, 60, 75, 82, 84, 118, 119, 126, 127, 129, 130, 132, 140, 148, 154, 164, 165, 167, 168, 169, 171], "": [4, 9, 16, 28, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 55, 56, 57, 58, 59, 60, 61, 66, 67, 68, 69, 70, 71, 73, 80, 83, 84, 88, 94, 95, 118, 125, 127, 129, 130, 145, 151, 164, 165, 167, 168, 171], "measur": [4, 7, 17, 34, 55, 56, 57, 78, 79, 84, 95, 132, 141, 164, 165, 167, 171], "result": [4, 9, 34, 56, 57, 63, 79, 84, 104, 109, 111, 118, 164, 165, 168, 171], "support": [4, 30, 34, 56, 80, 128, 130, 151, 160, 163, 164, 165, 168, 169], "fast": [4, 43, 56, 77, 78, 111, 164, 167, 170, 171], "_get_channel_for_compon": 4, "has_calibr": 4, "op_nam": [4, 15, 17], "impl_nam": [4, 9, 15, 17, 75, 134, 164], "true": [4, 7, 16, 17, 32, 36, 37, 38, 39, 40, 41, 42, 45, 46, 52, 55, 56, 57, 59, 60, 61, 63, 64, 66, 67, 68, 69, 70, 71, 75, 83, 95, 97, 118, 132, 152, 164, 171], "iff": [4, 7, 15, 17, 32, 36, 37, 38, 39, 40, 41, 42, 45, 46, 59, 60, 61, 83, 95, 132], "request": [4, 9, 15, 17, 72, 96, 98, 164, 165, 171], "get_calibr": 4, "get_control_channel": 4, "directli": [4, 9, 57, 113, 164], "neighbor": [4, 140, 141, 148], "coupler": [4, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 58, 59, 60, 61, 80, 130, 132, 140, 141, 148, 164, 165, 170, 171], "ad": [4, 9, 56, 63, 75, 94, 118, 136, 140, 141, 164, 171], "separ": [4, 15, 17, 29, 79, 87, 89, 164, 165, 168, 171], "timebox": [4, 9, 17, 28, 30, 32, 34, 43, 44, 56, 57, 60, 67, 72, 73, 79, 80, 82, 84, 87, 89, 140, 145, 146, 147, 164, 167, 169], "resolut": [4, 148, 171], "phase": [4, 9, 34, 35, 37, 40, 43, 55, 56, 57, 58, 60, 63, 65, 67, 72, 73, 74, 82, 83, 84, 86, 106, 113, 125, 126, 127, 129, 132, 154, 164, 165, 171], "Will": [4, 146], "iter": [4, 7, 10, 17, 64, 80, 118, 119, 132, 145, 148, 171], "wait": [4, 32, 34, 58, 62, 79, 80, 95, 101, 103, 117, 118, 138, 140, 164, 165, 169, 171], "durat": [4, 17, 28, 29, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 55, 56, 57, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 73, 80, 82, 83, 84, 95, 103, 105, 106, 107, 108, 109, 110, 113, 114, 117, 118, 119, 125, 127, 128, 129, 130, 136, 139, 140, 141, 142, 143, 145, 148, 160, 163, 164, 165, 169, 171], "round": [4, 95, 169, 171], "fals": [4, 7, 15, 17, 41, 45, 46, 52, 56, 59, 61, 75, 83, 95, 97, 118, 132], "util": [4, 15, 17, 164], "everi": [4, 17, 106, 160, 163, 164, 171], "guarante": [4, 165], "idl": [4, 80, 114, 118, 164], "cannot": [4, 103, 118, 148, 164, 168, 169], "replac": [4, 9, 17, 75, 103, 114, 164, 168], "dynam": [4, 114, 164], "decoupl": [4, 114, 164], "thei": [4, 9, 15, 16, 55, 56, 57, 66, 67, 68, 69, 70, 71, 84, 88, 94, 95, 118, 119, 132, 148, 160, 163, 164, 165, 169, 171], "treat": [4, 140, 148, 171], "content": [4, 5, 9, 95, 107, 118, 119, 132, 139, 147, 148, 150, 152, 164, 165, 168, 171], "remain": [4, 136, 139, 154, 168], "align": [4, 165, 169, 171], "time": [4, 9, 17, 34, 56, 57, 58, 60, 62, 73, 80, 84, 95, 97, 103, 107, 111, 117, 118, 119, 130, 136, 139, 140, 142, 143, 148, 164, 165, 167, 171], "dure": [4, 60, 95, 103, 117, 130, 148, 165, 171], "particular": [4, 9, 17, 20, 21, 22, 134, 168, 169, 171], "mai": [4, 15, 16, 17, 18, 28, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 55, 56, 57, 58, 59, 60, 61, 66, 67, 68, 69, 70, 71, 72, 79, 80, 82, 83, 84, 111, 114, 132, 148, 165, 168, 169], "thu": [4, 29, 58, 84, 165, 169], "less": [4, 9, 136, 164], "space": [4, 11, 13, 130, 169], "side": [4, 31, 32, 95, 142, 143, 165], "todo": [4, 34, 56, 75, 95, 120], "For": [4, 9, 20, 21, 56, 75, 95, 118, 125, 132, 164, 165, 168, 169, 171], "now": [4, 84, 164], "nearest": 4, "each": [4, 9, 10, 17, 30, 34, 56, 60, 63, 80, 94, 108, 118, 132, 140, 141, 145, 148, 163, 165, 168, 169, 171], "benefit": 4, "exa": [4, 17, 151, 164, 167, 171], "sweep": 4, "over": [4, 5, 10, 56, 118, 164], "In": [4, 5, 9, 15, 34, 56, 57, 58, 62, 73, 80, 103, 107, 111, 118, 132, 140, 164, 165, 168, 169, 171], "futur": 4, "gener": [4, 9, 17, 56, 57, 73, 84, 123, 148, 164, 168], "should": [4, 9, 15, 17, 34, 44, 56, 57, 77, 78, 79, 87, 89, 94, 95, 130, 132, 136, 140, 141, 164, 168, 169], "experi": [4, 9, 51, 132, 164], "float": [4, 17, 28, 32, 34, 43, 44, 56, 57, 62, 66, 67, 72, 73, 74, 80, 82, 84, 85, 89, 90, 95, 96, 97, 98, 106, 110, 111, 113, 118, 120, 125, 126, 127, 128, 129, 130, 132, 139, 141, 142, 143, 153, 154, 156, 164], "how": [4, 132, 148, 165, 168, 169, 171], "long": [4, 58, 95, 164, 165], "start": [4, 49, 51, 118, 136, 139, 140, 141, 146, 147, 164, 165, 169], "simultan": [4, 56, 108, 136, 148, 171], "box": [4, 34, 72, 73, 140, 146, 147, 148, 164, 171], "get_implement": [4, 15, 17, 56, 164, 171], "use_priority_ord": 4, "strict_locu": [4, 15, 17], "priority_calibr": [4, 171], "provid": [4, 9, 15, 16, 17, 28, 29, 55, 56, 57, 66, 67, 68, 69, 70, 71, 73, 132, 160, 163, 165, 167, 168, 171], "an": [4, 9, 11, 14, 15, 16, 17, 26, 31, 43, 52, 56, 58, 65, 66, 68, 73, 82, 83, 84, 85, 88, 90, 94, 95, 96, 105, 106, 108, 118, 119, 123, 130, 132, 140, 142, 145, 148, 154, 157, 158, 164, 165, 167, 168, 169, 171], "mean": [4, 9, 56, 58, 111, 132, 148, 164, 168, 169, 171], "chosen": [4, 89, 165], "automat": [4, 9, 16, 57, 164], "logic": [4, 16, 17, 28, 32, 43, 44, 60, 79, 80, 82, 118, 164, 171], "describ": [4, 9, 10, 17, 102, 132, 148, 165, 168, 171], "below": [4, 17, 165, 168, 169, 171], "symmetr": [4, 15, 17, 32, 36, 37, 38, 39, 40, 41, 42, 45, 46, 59, 60, 61, 83, 132, 164], "order": [4, 9, 10, 11, 15, 17, 18, 31, 32, 34, 60, 118, 130, 132, 148, 165, 167, 169, 171], "avail": [4, 15, 17, 165, 168, 169, 171], "effect": [4, 17, 34, 58, 73, 82, 132, 136, 148, 165, 167, 169, 171], "get_default_implementation_for_locu": [4, 132, 164], "otherwis": [4, 15, 17, 44, 56, 62, 75, 79, 95, 118, 119, 128, 164, 168], "first": [4, 9, 11, 31, 32, 34, 44, 56, 118, 130, 132, 169, 171], "prioriti": [4, 5, 132, 164], "follow": [4, 9, 56, 57, 58, 79, 84, 100, 113, 130, 136, 140, 148, 160, 163, 164, 165, 168, 169, 171], "defin": [4, 5, 9, 15, 16, 19, 25, 26, 27, 29, 43, 44, 56, 57, 58, 65, 68, 69, 80, 81, 95, 124, 125, 130, 132, 134, 135, 146, 148, 164, 165, 167, 168, 171], "defaults_for_locu": [4, 132, 164], "global": [4, 132, 164], "load": [4, 6, 150], "common": [4, 15, 16, 56, 57, 66, 67, 79, 87, 88, 89, 140, 164, 167, 168], "If": [4, 9, 11, 15, 16, 17, 52, 55, 56, 57, 66, 67, 68, 69, 70, 71, 75, 84, 94, 95, 114, 118, 119, 125, 127, 129, 130, 132, 142, 148, 164, 165, 168, 171], "empti": [4, 9, 15, 56, 57, 111, 118, 132, 152, 164], "note": [4, 14, 44, 56, 106, 118, 135, 139, 148, 169], "prevent": [4, 165], "save": 4, "via": [4, 15, 17, 67, 79, 80, 87, 89, 128, 130, 164], "could": [4, 132, 169], "_find_implementation_and_locu": 4, "find": [4, 130, 171], "instanc": [4, 9, 11, 15, 17, 30, 56, 62, 73, 82, 83, 106, 109, 132, 154, 171], "compat": [4, 56, 73, 160, 163, 164], "highest": [4, 132], "we": [4, 60, 84, 95, 130, 132, 154, 168, 169, 171], "equival": [4, 84, 136, 148, 154, 165, 171], "one": [4, 7, 9, 15, 37, 40, 44, 47, 56, 57, 118, 132, 140, 141, 145, 148, 164, 165, 168, 169, 171], "had": [4, 164], "_get_implement": 4, "built": [4, 9, 88], "when": [4, 9, 32, 34, 56, 58, 80, 118, 120, 125, 127, 129, 130, 140, 141, 148, 157, 158, 159, 164, 165, 169, 171], "later": [4, 9], "oilcalibrationdata": [4, 15, 16, 17, 28, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 55, 56, 57, 59, 60, 61, 66, 67, 68, 69, 70, 71, 72, 73, 79, 80, 82, 83, 84, 87, 89, 134], "impli": [4, 168], "get_implementation_class": [4, 52], "default": [4, 5, 9, 15, 17, 28, 29, 32, 34, 43, 44, 56, 57, 60, 72, 75, 79, 80, 82, 84, 106, 111, 125, 126, 127, 129, 130, 132, 135, 164, 165, 171], "validate_quantum_circuit": [4, 164], "require_measur": [4, 7], "constitut": [4, 7, 168], "least": [4, 7, 95, 140, 141, 160, 163, 165, 168], "circuit_to_timebox": 4, "scheduling_algorithm": [4, 145, 148], "schedulingalgorithm": [4, 144, 145, 148], "hard_boundari": [4, 145, 146, 148], "convert": [4, 9, 17, 67, 89, 95, 103, 117, 125, 127, 129, 130, 138, 148, 165, 167], "resolv": [4, 17, 146, 148, 165, 167], "unresolv": 4, "timeboxes_to_front_padded_playlist": 4, "neighborhood": [4, 146, 148, 164], "0": [4, 9, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 55, 56, 57, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 76, 80, 83, 88, 89, 95, 97, 105, 106, 123, 125, 126, 127, 128, 129, 130, 139, 145, 148, 154, 168, 171], "temporari": 4, "helper": [4, 17], "playlist": [4, 58, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 129, 130, 137, 138, 159, 160, 163, 164, 167, 169, 171], "front": [4, 118], "pad": [4, 32, 118, 140, 146, 171], "equal": [4, 9, 34, 58, 84, 87, 139, 142, 143, 165, 171], "sinc": [4, 29, 44, 60, 84, 130, 132, 164], "delai": [4, 34, 55, 56, 57, 79, 102, 108, 164, 165, 169], "befor": [4, 62, 67, 69, 71, 75, 95, 97, 154, 164, 171], "final": [4, 125, 165, 171], "wish": 4, "lose": 4, "coher": [4, 106], "done": [4, 67, 113, 120, 130, 136, 141, 164], "onc": [4, 164, 165], "handl": [4, 16, 29, 57, 79, 94, 95, 140, 143, 154, 164], "better": [4, 95, 148], "remov": [4, 9, 17, 84, 95, 118, 119, 120, 164, 171], "timeboxes_to_playlist": 4, "int": [4, 9, 12, 13, 62, 66, 67, 82, 94, 95, 97, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 123, 125, 126, 127, 128, 129, 130, 132, 139, 140, 145, 148, 156], "far": 4, "By": [4, 17, 43, 44, 56, 57, 60, 72, 79, 84, 125, 127, 129, 130, 154], "occupi": [4, 118, 140, 141, 148, 165], "unnecessari": [4, 34, 140], "pack": [4, 146], "assum": [4, 32, 44, 63, 73, 79, 84, 89, 118, 130, 165, 168, 171], "refer": [4, 67, 88, 94, 113, 164, 167, 171], "ensur": [4, 165, 169, 171], "work": [4, 9, 60, 80, 118, 139, 164, 165, 168, 171], "intend": [4, 60, 80, 132, 165], "properli": 4, "higher": [4, 165, 169], "help": [4, 9, 165, 169], "defend": [4, 168], "crosstalk": [4, 136], "expens": 4, "longer": [4, 80, 164], "more": [4, 16, 95, 103, 132, 148, 164, 165, 168, 169], "decoher": 4, "timebox_to_schedul": 4, "finish": [4, 80, 164], "readi": [4, 167], "execut": [4, 31, 32, 94, 107, 115, 118, 132, 136, 165, 167, 168, 169, 171], "sample_r": [4, 95, 96, 97, 98], "_finish_schedul": 4, "filter": 4, "zero": [4, 9, 32, 44, 60, 73, 76, 103, 108, 114, 129, 130, 132, 139, 142, 143, 165], "spacer": [4, 136], "consequ": 4, "step": [4, 114, 130, 164], "process": [4, 63, 103, 165, 170], "consist": [4, 43, 44, 67, 73, 82, 118, 125, 127, 129, 130, 132, 164, 168], "extend": [4, 5, 11, 13, 117, 118, 119, 140, 141, 142, 143, 148], "anoth": [4, 32, 44, 60, 62, 90, 132, 142, 143, 152, 164], "gone": 4, "copi": [4, 9, 63, 107, 118, 119, 132, 152, 168], "resolve_timebox": [4, 148, 164, 171], "compute_neighborhood_hard_boundari": 4, "recurs": [4, 148, 152, 165, 171], "children": [4, 145, 148, 165, 171], "concaten": [4, 148, 165, 171], "strategi": [4, 140, 141, 147, 148], "composit": [4, 15, 146, 147, 148, 164, 165, 171], "solid": 4, "rectangl": [4, 171], "longest": [4, 140, 146], "within": [4, 11, 111, 118, 147, 165, 168], "tetri": [4, 103, 146], "tightli": [4, 146], "possibl": [4, 9, 84, 105, 118, 130, 140, 141, 146, 147, 148, 164, 165, 168, 169, 171], "still": [4, 9, 119], "overlap": [4, 103, 108, 117, 140, 165, 171], "regardless": [4, 169], "boundari": [4, 49, 51, 140, 146, 147], "modifi": [4, 5, 9, 118, 119, 139, 140, 141, 142, 143, 154, 168, 171], "so": [4, 9, 16, 34, 52, 55, 56, 57, 66, 67, 68, 69, 70, 71, 80, 84, 118, 119, 136, 148, 164, 165, 167, 171], "becom": [4, 9, 34, 125, 171], "atom": [4, 17, 145, 146, 148, 165, 171], "isn": 4, "t": [4, 88, 124, 125, 127, 128, 130, 150, 164, 168], "alreadi": [4, 9, 52, 118, 148], "precomput": [4, 118, 148], "while": [4, 17, 67, 146, 165, 168, 171], "typic": [4, 44, 56, 95, 132, 136, 165, 169, 171], "want": [4, 9, 16, 43, 44, 56, 68, 69, 114], "top": 4, "layer": 4, "would": [4, 9, 44, 62, 164, 169, 171], "unus": 4, "set": [4, 9, 16, 17, 19, 29, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 55, 56, 57, 59, 60, 61, 66, 67, 68, 69, 70, 71, 75, 76, 79, 83, 100, 118, 126, 132, 140, 141, 145, 148, 164, 165, 167, 169, 171], "lower": [4, 167, 169], "where": [4, 43, 44, 56, 57, 58, 65, 81, 82, 88, 95, 108, 118, 125, 127, 128, 130, 132, 140, 143, 164, 165, 168], "improv": [4, 34, 56, 164, 168], "need": [4, 9, 15, 17, 28, 32, 34, 43, 44, 56, 57, 60, 75, 79, 80, 82, 118, 119, 125, 127, 129, 130, 132, 164, 165, 167, 171], "_resolve_timebox_hard_boundari": 4, "compute_neighborhood": 4, "_get_neighborhood_hard_boundari": 4, "whose": [4, 51, 111], "plu": 4, "mayb": 4, "_resolve_timebox_tetri": 4, "_block_neighborhood_tetri": 4, "add": [4, 9, 17, 52, 75, 80, 94, 118, 142, 143, 164, 165, 168, 171], "addit": [4, 9, 17, 28, 29, 32, 43, 44, 56, 58, 60, 79, 80, 82, 86, 106, 118, 129, 132, 148, 168, 171], "ideal": [4, 14, 132, 136], "model": [4, 124, 136, 165], "correctli": [4, 164], "interact": [4, 44], "frame": [4, 60, 130, 154, 164], "subspac": [4, 58, 132, 136, 165], "connect": [4, 9, 80, 132, 148, 165, 171], "those": [4, 29, 56, 79, 132, 148, 168, 171], "henc": [4, 154], "evolut": 4, "Of": 4, "cours": 4, "realiti": 4, "possibli": [4, 44, 169], "applic": [4, 168], "essenti": 4, "precis": [4, 165], "interest": 4, "howev": [4, 15, 79, 114, 125, 127, 129, 130, 165, 168], "well": [4, 64, 80, 107, 118, 132, 160, 163, 167, 169, 171], "local": [4, 60, 84, 113, 154], "shut": 4, "down": 4, "unwant": 4, "like": [4, 9, 16, 17, 56, 80, 102, 125, 127, 129, 130, 165, 171], "end": [4, 9, 35, 60, 62, 63, 84, 88, 103, 117, 118, 119, 128, 164, 165, 168, 169], "carri": [4, 165, 168], "meant": [4, 9], "etc": 4, "build_playlist": 4, "finish_schedul": 4, "number": [4, 9, 13, 14, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 55, 56, 57, 59, 60, 61, 66, 67, 68, 69, 70, 71, 80, 83, 95, 104, 108, 118, 130, 132, 145, 148, 160, 163, 165, 169, 171], "involv": [4, 17, 32, 165, 167, 171], "compress": [4, 165], "duplic": 4, "transfer": [4, 73, 168], "drop": 4, "point": [4, 84, 139, 140, 141], "finalis": 4, "unless": [4, 17, 125, 127, 129, 130, 148, 164, 168, 171], "call": [4, 9, 11, 15, 17, 60, 80, 87, 164, 171], "uniform": 4, "_set_gate_implementation_shortcut": 4, "creat": [4, 9, 15, 17, 28, 34, 44, 123, 164, 165, 167], "shortcut": [4, 9, 164, 171], "collis": [4, 5], "won": 4, "warn": 4, "hardcod": 5, "nativ": [5, 30, 132, 171], "ones": [5, 15, 31, 32, 79, 87, 89, 146, 148], "case": [5, 9, 17, 28, 32, 43, 44, 56, 57, 73, 80, 82, 84, 118, 127, 128, 132, 140, 143, 154, 164, 165], "take": [5, 9, 17, 34, 44, 118, 129, 130, 132, 152, 164, 169, 171], "gate_definit": 5, "section": [5, 165, 168, 169, 171], "yaml": [5, 6, 150], "file": [5, 6, 150, 168], "config": [6, 94, 164], "circuitoperationlist": [8, 164], "circuit_oper": 9, "num_qubit": [9, 13], "transform": [9, 164, 165, 167, 168], "It": [9, 35, 65, 73, 79, 80, 84, 86, 88, 108, 130, 148, 164], "mostli": [9, 165], "conveni": [9, 17, 56, 148, 164, 167], "enabl": [9, 60, 164], "easi": [9, 171], "creation": 9, "calcul": [9, 10, 13, 60, 128, 130, 164], "onto": 9, "physic": [9, 18, 95, 140, 164, 165], "import": [9, 47, 168, 171], "former": [9, 164], "present": [9, 10, 58, 118, 140, 171], "think": 9, "about": [9, 64, 105, 106, 107, 110, 165, 169, 171], "qiskit": [9, 164], "regist": [9, 10, 11, 15, 75, 132, 165, 171], "latter": 9, "quantum_op": [9, 132], "most": [9, 167], "simpli": [9, 34, 84, 132, 165], "taken": [9, 164], "context": [9, 11, 15, 17, 28, 32, 43, 44, 56, 57, 80, 82, 84, 165, 171], "good": 9, "practic": [9, 169, 171], "mutabl": [9, 118], "fundament": 9, "popul": [9, 58], "qb1": [9, 56, 132, 171], "qbn": 9, "qb2": [9, 56, 132, 169, 171], "altern": [9, 165, 169], "you": [9, 56, 57, 60, 114, 132, 164, 167, 168, 171], "To": [9, 34, 118, 167, 168, 169, 171], "your": [9, 168], "own": [9, 17, 30, 132, 164, 165, 168], "initi": [9, 29, 30, 125, 130, 165], "my_tabl": 9, "rememb": 9, "circuit_op": 9, "find_qubit": 9, "origin": [9, 13, 17, 118, 119, 152, 168], "what": [9, 15, 132, 164, 165], "multipli": 9, "get_item": 9, "redefin": [9, 125, 127, 129, 130], "3": [9, 34, 55, 56, 140, 170, 171], "circuit1": [9, 171], "circuit2": [9, 171], "4": [9, 48, 86, 88, 95, 170], "produc": [9, 142, 164, 165, 169, 171], "prx": [9, 15, 16, 34, 55, 56, 57, 64, 66, 67, 68, 69, 70, 71, 72, 73, 79, 84, 87, 89, 132, 154, 164, 165, 169, 171], "add_op": 9, "angl": [9, 17, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 59, 60, 61, 65, 67, 72, 73, 74, 79, 81, 84, 85, 87, 88, 90, 132, 153, 154, 164, 171], "drag_crf": 9, "abov": [9, 165, 167, 168, 171], "shorten": 9, "exactli": [9, 17, 132, 145], "syntax": [9, 164, 165, 168, 171], "usual": [9, 109, 130, 165, 169, 171], "attach": [9, 168], "init": [9, 164], "ariti": [9, 17, 32, 36, 37, 38, 39, 40, 41, 42, 45, 46, 56, 59, 60, 61, 83, 132], "unitari": [9, 10, 11, 13, 35, 49, 51, 58, 74, 76, 85, 90, 132, 164, 165], "quickli": 9, "entir": [9, 11, 95, 164], "u": [9, 48, 89, 164], "get_unitari": 9, "dimens": 9, "alwai": [9, 15, 31, 32, 34, 60, 79, 87, 89, 132, 136, 140, 142], "qb3": [9, 56, 132, 169, 171], "8x8": 9, "matrix": [9, 10, 11, 12, 13, 35, 88, 132, 164], "correspond": [9, 11, 15, 48, 49, 50, 51, 79, 87, 89, 105, 132, 140, 148, 165, 169], "three": 9, "big": [9, 10, 11, 132], "endian": [9, 10, 11, 132], "convent": [9, 10, 60, 100], "With": [9, 16, 56, 57, 169], "expect": [9, 17, 29], "action": [9, 10, 132, 165], "ident": [9, 13, 50, 73], "physical_circuit": 9, "map_loci": 9, "physical_qubit": 9, "placehold": [9, 164], "exampl": [9, 15, 60, 95, 132, 165, 168, 171], "qb5": [9, 132], "qb10": 9, "occurr": 9, "mani": [9, 164, 171], "run": [9, 164, 169], "parallel": [9, 132, 164], "larg": [9, 165], "ignor": [9, 34], "add_qubit": 9, "n": [9, 12, 13, 31, 32, 95, 125, 130], "qubit_nam": [9, 10], "overal": [9, 10], "option": [9, 10, 11, 29, 56, 118, 132, 164, 169], "arrai": [9, 10, 48, 50, 55, 56, 125, 127, 128, 129, 130, 164], "ndarrai": [9, 10, 11, 12, 13, 34, 55, 56, 74, 85, 90, 127, 128, 129, 130, 132], "locus_indic": 9, "append": [9, 32, 56, 118, 119], "store": [9, 11, 17, 43, 44, 56, 57, 72, 79, 84, 132], "select": [9, 13, 169, 171], "indic": [9, 13, 62, 123, 165, 168], "qb4": [9, 169], "param": [9, 11, 17, 132, 164], "barrier": [9, 10, 132], "compos": [9, 167], "safer": 9, "wai": [9, 15, 102, 148, 164, 165, 171], "togeth": [9, 34, 43, 56, 62, 140, 148, 164, 165, 171], "probabl": 9, "wire": 9, "k": [9, 130], "achiev": 9, "count_op": 9, "count": 9, "counter": 9, "occur": [9, 148], "fresh": 9, "length": [9, 32, 55, 56, 57, 112, 118, 130, 140, 146, 160, 162, 163, 164], "total": [9, 63, 119, 136, 171], "across": 9, "deepcopi": 9, "_set_specific_operation_shortcut": 9, "through": [10, 30, 56, 164, 168], "skip": [10, 118], "product": [10, 165, 168], "fetch": 11, "correct": [11, 60, 63, 86, 164, 171], "size": [11, 152], "Then": [11, 148], "hilbert": [11, 13], "whole": [11, 165, 168], "mat": 12, "perm": 12, "accord": [12, 148, 171], "permut": [12, 164], "vector": [12, 164], "n_qubit": 13, "propag": [13, 49, 51, 79, 164, 169], "larger": [13, 118, 165], "system": [13, 164, 168, 169, 171], "rang": [13, 125, 148, 164], "term": [14, 15, 125, 127, 129, 130, 132, 165, 167, 168], "conceptu": [14, 165], "abstract": [14, 132, 165, 167], "wherea": [14, 56, 103, 132, 165], "concret": [14, 132, 167, 171], "One": [14, 17, 72, 165, 171], "approxim": 14, "abc": [14, 15, 17, 31, 33, 35, 54, 58, 65, 66, 67, 72, 73, 76, 81, 86, 88], "customiqwaveform": [14, 54, 56, 57, 65, 66, 67], "singlepulseg": [14, 65, 73, 164], "compositeg": [14, 33, 34, 76, 79, 86, 87, 88, 89, 164], "parent": [15, 16, 17, 28, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 55, 56, 57, 59, 60, 61, 66, 67, 68, 69, 70, 71, 72, 73, 79, 80, 82, 83, 84, 87, 89, 164], "calibration_data": [15, 16, 17, 28, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 55, 56, 57, 59, 60, 61, 66, 67, 68, 69, 70, 71, 72, 73, 79, 80, 82, 83, 84, 87, 89], "pre": [15, 130], "__call__": [15, 17, 28, 32, 43, 44, 56, 60, 79, 80, 82, 164], "member": [15, 49, 51], "abl": [15, 164], "know": [15, 17], "consid": [15, 16, 55, 56, 57, 66, 67, 68, 69, 70, 71, 139, 142, 143, 171], "registered_g": [15, 79, 87, 89], "cz": [15, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 58, 60, 84, 132, 164, 165, 170, 171], "insid": [15, 17, 28, 32, 34, 43, 44, 60, 67, 79, 80, 82, 125, 139, 148, 164, 165], "kei": [15, 17, 34, 56, 57, 77, 78, 79, 87, 89, 164, 165], "besid": [15, 79, 80, 87, 89], "here": [15, 67, 75, 79, 87, 89, 124, 130, 169, 171], "construct": [15, 17, 30, 56, 73, 79, 82, 83, 87, 89, 125, 127, 129, 130, 164, 165, 167], "default_implement": [15, 132], "design": [15, 168], "fill": [15, 165], "he": 15, "sought": 15, "custom": [16, 17, 56, 57, 164, 165, 167], "waveform": [16, 29, 36, 38, 39, 42, 43, 44, 55, 56, 57, 59, 60, 61, 66, 67, 68, 69, 70, 71, 82, 94, 106, 107, 110, 125, 126, 127, 128, 129, 130, 160, 162, 163, 164, 165, 167], "iqpuls": [16, 43, 56, 57, 66, 67, 68, 69, 73, 82, 84, 101, 104, 108, 111, 113, 154, 162, 165], "info": [16, 17, 164], "somethingels": [16, 56, 57], "q": [16, 43, 55, 56, 57, 66, 67, 68, 69, 70, 71, 82, 106, 170, 171], "mygat": [16, 56, 57], "i_wav": [16, 56, 57], "q_wave": [16, 56, 57], "wave_i": [16, 55, 68, 69, 70, 71, 106], "wave_q": [16, 55, 68, 69, 70, 71, 106], "dependent_wav": [16, 55, 56, 57, 66, 67, 68, 69, 70, 71], "depend": [16, 17, 28, 32, 43, 44, 55, 56, 57, 66, 67, 68, 69, 70, 71, 80, 82, 84, 105, 164], "share": [16, 29, 44, 55, 56, 57, 62, 66, 67, 68, 69, 70, 71, 168], "drag": [16, 55, 56, 57, 66, 67, 68, 69, 70, 71], "root_paramet": [16, 44, 56, 57, 60, 66, 67], "independ": [16, 56, 57, 66, 67, 118, 119, 132, 165, 169], "overrid": [16, 17, 28, 32, 43, 44, 56, 57, 60, 66, 67, 68, 69, 72, 79, 80, 82, 84, 164, 171], "excluded_paramet": [16, 43, 44, 68, 69], "exclud": [16, 43, 44, 68, 69, 168], "There": [17, 67, 169, 171], "subclass": [17, 28, 30, 32, 43, 44, 56, 57, 80, 82, 84, 125, 127, 129, 130, 132], "__init__": [17, 164], "usabl": [17, 34, 164], "rotat": [17, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 51, 59, 60, 61, 65, 67, 72, 73, 74, 81, 84, 85, 86, 88, 90, 154, 171], "input": [17, 34, 56, 165], "raw": [17, 104, 111, 112, 123, 169], "meaning": [17, 32, 36, 37, 38, 39, 40, 41, 42, 45, 46, 59, 60, 61, 83, 132], "nest": [17, 19, 36, 37, 38, 39, 40, 41, 42, 45, 46, 55, 59, 60, 61, 68, 69, 70, 71, 80, 83, 84], "special_implement": [17, 164], "special": [17, 44, 62, 73, 124, 132, 164, 168, 171], "purpos": [17, 56, 164, 168], "never": [17, 164], "explicitli": [17, 56, 164, 168, 171], "qualified_nam": 17, "qualifi": 17, "classmethod": [17, 43, 44, 56, 57, 66, 67, 68, 69, 72, 79, 80, 82, 84, 164], "needs_calibr": 17, "appropri": [17, 165, 168], "_call": [17, 28, 32, 34, 43, 44, 56, 57, 60, 67, 72, 73, 79, 80, 82, 84, 87, 89, 164], "kwarg": [17, 28, 32, 43, 44, 60, 68, 69, 79, 80, 82], "signatur": [17, 28, 32, 43, 44, 60, 79, 80, 82, 132, 164], "suffici": [17, 28, 32, 43, 44, 60, 79, 80, 82, 95, 130], "assign": [17, 44, 56, 57, 94, 164], "specifi": [17, 28, 34, 107, 146, 169, 171], "to_timebox": 17, "wrap": [17, 171], "duration_in_second": [17, 28, 32, 43, 44, 56, 57, 80, 82, 84, 118], "left": [17, 28, 32, 43, 44, 56, 57, 80, 82, 84, 142, 143, 165, 169], "unimpl": [17, 28, 32, 43, 44, 56, 57, 80, 82, 84], "reimplement": [17, 28, 32, 43, 44, 56, 57, 80, 82, 84], "make": [17, 28, 32, 43, 44, 56, 57, 60, 80, 82, 84, 107, 114, 118, 119, 132, 136, 139, 164, 168, 171], "sens": [17, 28, 32, 43, 44, 56, 57, 80, 82, 84], "convert_calibration_data": 17, "channel_prop": 17, "item": [17, 118], "fraction": 17, "hz": [17, 37, 40, 55, 56, 59, 60, 61, 83, 95, 96, 98, 125, 127, 129, 130], "addition": [17, 140, 141, 169], "under": [17, 136, 148, 168], "n_sampl": [17, 29, 66, 67, 82, 125, 126, 127, 128, 129, 130], "subset": [17, 49], "nestedparam": [17, 34, 36, 37, 38, 39, 40, 41, 42, 45, 46, 55, 59, 60, 61, 68, 69, 70, 71, 80, 83], "cl": 17, "get_paramet": 17, "wildcard": 17, "charact": [17, 118, 168], "dot": 17, "root": [17, 49], "settingnod": [17, 99, 100], "get_locus_mapping_nam": [17, 43, 44, 56, 57, 72, 79, 84], "operation_nam": [17, 43, 44, 56, 57, 72, 79, 84], "implementation_nam": [17, 43, 44, 56, 57, 72, 79, 84], "behaviour": [17, 43, 44, 56, 57, 72, 79, 84, 164], "get_custom_locus_map": [17, 80, 164], "component_to_channel": [17, 80, 100], "wrt": 17, "often": 17, "set_locus_map": 17, "frozenset": [17, 80], "matter": [18, 60], "alia": [18, 19, 20, 21, 22, 23, 36, 37, 38, 39, 40, 41, 42, 45, 46, 55, 59, 61, 68, 69, 70, 71, 73, 83, 133], "probe_lin": [24, 56, 57], "single_components_with_dr": 25, "single_components_with_flux_awg": 26, "single_components_with_readout": 27, "plai": [28, 36, 38, 39, 42, 43, 44, 56, 60, 82, 106, 108, 109, 110, 145, 165, 171], "singl": [28, 30, 51, 55, 56, 57, 65, 66, 67, 69, 73, 81, 84, 86, 88, 118, 119, 132, 145, 148, 161, 164, 165, 169, 171], "_get_puls": [28, 66, 67, 68, 69, 164], "_get_pulse_channel": 28, "basic": [28, 119, 164], "insert": [28, 62, 75, 164], "overridden": [28, 132], "wave": [29, 110, 127], "label_prefix": 29, "prefix": [29, 56], "label": [29, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 55, 56, 57, 59, 60, 61, 66, 67, 68, 69, 70, 71, 77, 78, 80, 83, 102, 104, 111, 112, 145, 148, 164, 165], "format": [29, 168], "been": [30, 34, 75, 80, 148, 165, 168, 169], "sever": [30, 103, 132, 164, 169, 171], "scheme": [30, 165], "likewis": 30, "sometim": [30, 165], "metaoper": [31, 32, 132], "forc": [31, 95], "tempor": [31, 32], "preced": [31, 32, 84, 152, 154], "qudit": [32, 132], "metainstruct": 32, "caus": [32, 34, 168, 169], "turn": [32, 164], "impos": 32, "relat": [32, 63, 155, 169, 171], "classic": [33, 34, 164, 169], "ccprx_composit": [33, 164, 169], "condit": [34, 79, 105, 111, 160, 163, 164, 168, 169], "discrimin": 34, "obtain": [34, 73, 165, 168, 170], "segment": [34, 80, 111, 113, 116, 118, 123, 139, 140, 141, 164, 165, 169], "activ": [34, 109, 165], "underneath": 34, "extra": [34, 60, 67], "Not": [34, 168, 171], "legaci": 34, "program": [34, 118], "mode": [34, 56], "control_delai": [34, 169], "unit": [34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 55, 56, 57, 59, 60, 61, 66, 67, 68, 69, 70, 71, 80, 83, 106, 118, 125, 127, 129, 130, 165, 169], "data_typ": [34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 55, 56, 57, 59, 60, 61, 66, 67, 68, 69, 70, 71, 80, 83], "datatyp": [34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 55, 56, 57, 59, 60, 61, 66, 67, 68, 69, 70, 71, 80, 83, 151], "collection_typ": [34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 55, 56, 57, 59, 60, 61, 66, 67, 68, 69, 70, 71, 80, 83], "collectiontyp": [34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 55, 56, 57, 59, 60, 61, 66, 67, 68, 69, 70, 71, 80, 83, 151], "element_indic": [34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 55, 56, 57, 59, 60, 61, 66, 67, 68, 69, 70, 71, 80, 83], "_parent_nam": [34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 55, 56, 57, 59, 60, 61, 66, 67, 68, 69, 70, 71, 80, 83], "_parent_label": [34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 55, 56, 57, 59, 60, 61, 66, 67, 68, 69, 70, 71, 80, 83], "instrument": [34, 84, 95, 98, 101, 116, 169], "drive_control": [34, 99], "feedback_sourc": 34, "141592653589793": 34, "feedback_kei": [34, 56, 164], "conditionalinstruct": [34, 56, 101, 111, 169], "until": [34, 84, 165], "enough": [34, 169], "arriv": [34, 169], "normal": [34, 130, 132, 153, 164, 168], "place": [34, 118, 129, 140, 141, 168], "sequenti": 34, "without": [34, 112, 117, 148, 164, 165, 168, 171], "care": [34, 171], "yourself": [34, 167], "rad": [34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 55, 56, 57, 59, 60, 61, 67, 69, 71, 74, 83, 85, 106, 154], "identifi": [34, 95, 102, 118, 168], "multipl": [34, 56, 80, 95, 105, 108, 111, 125, 127, 129, 130, 164, 165], "f": [34, 56, 57, 125, 127, 128, 130, 132], "__": [34, 56, 57, 164], "current": [34, 56, 60, 139], "hw": [34, 56, 164], "per": [34, 56, 132, 164], "listen": [34, 164], "user": [34, 56, 130, 148, 164, 165, 169, 171], "z": [35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 49, 54, 55, 59, 60, 61, 67, 81, 84, 86, 88, 90, 154, 164], "flip": [35, 164], "rel": [35, 60, 106, 125, 127, 129, 130, 164, 165, 171], "11": [35, 170], "state": [35, 58, 60, 65, 67, 76, 79, 80, 84, 86, 88, 132, 154, 165, 168, 169], "text": [35, 58, 67, 128, 130, 168], "begin": [35, 60, 62, 88, 102, 108, 119, 128, 139, 142, 143, 164, 169, 171], "pmatrix": [35, 88], "fluxpulseg": [35, 36, 38, 39, 41, 42, 45, 46, 58, 60], "cz_gaussiansmoothedsquar": 35, "cz_slepian": 35, "cz_truncatedgaussiansmoothedsquar": 35, "cz_slepian_crf": 35, "cz_crf": 35, "fluxpulsegate_tgss_crf": 35, "fluxpulsegate_crf_crf": [35, 164], "couplerfluxpulsequbitacstarkpulseg": [35, 37, 40, 164], "cz_slepian_acstarkcrf": 35, "cz_crf_acstarkcrf": 35, "cosinerisefal": [36, 37, 41, 45, 46, 59, 61, 68, 69, 129], "coupler_wav": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 59, 60, 61], "amplitud": [36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 55, 56, 57, 59, 61, 66, 67, 68, 69, 70, 71, 73, 82, 83, 125, 127, 129, 130], "scalar": [36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 55, 56, 57, 59, 60, 61, 66, 67, 68, 69, 70, 71, 80, 83], "center_offset": [36, 37, 38, 39, 40, 41, 42, 45, 46, 59, 61, 68, 69, 70, 71, 83, 128, 129, 130], "crf": [36, 37, 40, 41, 45, 46, 59, 61, 68, 69], "full_width": [36, 37, 39, 40, 41, 42, 45, 46, 59, 61, 68, 69, 70, 71, 83, 128, 129, 130], "rise_tim": [36, 37, 40, 41, 42, 45, 46, 59, 61, 68, 69, 83, 128, 129], "rz": [36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 59, 60, 61, 67, 69, 71, 82, 83, 84, 89, 154, 164], "qubit_wav": [36, 38, 39, 41, 42, 44, 45, 46, 59, 60, 61], "cosin": [37, 40, 83, 124, 125, 129, 130, 164], "rise": [37, 40, 83, 128, 129, 164], "fall": [37, 40, 83, 128, 129, 132, 164], "ac": [37, 40, 43, 82, 83, 164], "stark": [37, 40, 43, 82, 83, 164], "first_qubit": [37, 40], "mcrf": [37, 40, 83], "modulation_frequ": [37, 40, 83, 106, 129], "second_qubit": [37, 40], "qubit_drive_wav": [37, 40, 43], "modulatedcosinerisefal": [37, 40, 83, 124], "gaussiansmoothedsquar": 38, "gss": 38, "gaussian_sigma": 38, "square_width": 38, "slepian": [39, 40, 41, 124, 164], "coupling_strength_norm": [39, 40, 41, 130], "frequency_initial_norm": [39, 40, 41, 130], "frequency_to_minimize_norm": [39, 40, 41, 130], "lambda_1": [39, 40, 41, 130], "lambda_2": [39, 40, 41, 130], "squid_asymmetri": [39, 40, 41, 130], "truncatedgaussiansmoothedsquar": [42, 46, 61, 129], "tgss": [42, 46, 61], "analog": 43, "tune": 43, "frequenc": [43, 55, 56, 57, 60, 82, 96, 97, 106, 125, 127, 129, 130, 164], "_ac_stark_puls": [43, 82], "phase_incr": [43, 82, 83, 84, 106, 113], "quadratur": [43, 82, 106], "pi": [43, 66, 67, 68, 69, 70, 71, 73, 79, 82, 86, 87, 88, 125, 126, 127, 128, 153, 164, 169, 171], "discret": 44, "mediat": [44, 58], "coupl": [44, 130], "tunabl": [44, 170], "both": [44, 60, 142, 164, 169, 171], "arbitrari": [44, 84, 88, 108, 154, 169, 171], "slot": 44, "move": [44, 59, 60, 61, 62, 139, 164, 171], "being": [44, 73, 132, 169], "flux_puls": 44, "radian": [44, 65, 72, 73, 81, 84, 88, 106, 113, 127, 153], "enumer": [47, 49, 51], "xygat": [47, 50, 72], "intenum": [47, 51], "reprenum": 47, "twoqubitg": [47, 48], "iswap": [48, 49, 170], "j": [48, 50], "sqrt_iswap": [48, 49], "70710678": [48, 50], "70710678j": [48, 50], "matric": [48, 50], "enum": [49, 51, 144, 146, 147], "qualnam": [49, 51, 146, 147], "dictionari": [49, 152], "two_qubit_unitari": 49, "squar": 49, "x_90": 50, "x_180": 50, "x_m90": 50, "y_90": 50, "y_180": 50, "y_m90": 50, "su": [50, 88, 89, 90], "clifford": [51, 72], "axi": [51, 65, 86, 88, 154, 164], "xy": [51, 65, 72], "plane": [51, 65, 86], "xygate_unitari": 51, "tomographi": 51, "overwrit": [52, 75], "error": [52, 130, 134, 148, 150, 157, 158, 159, 164, 165, 171], "class_nam": 53, "project": [54, 55, 79, 84], "basi": [54, 55, 79, 84, 88, 132, 168], "measure_customwaveform": [54, 55, 57], "measure_const": [54, 164], "probepulse_customwaveform": [54, 164], "dispers": [55, 56], "constant": [55, 56, 78, 128, 164, 169], "acquisition_delai": [55, 56, 57], "acquisit": [55, 56, 57, 102, 109, 164, 169], "acquisition_typ": [55, 56], "string": [55, 56, 111, 123], "threshold": [55, 56, 111], "amplitude_i": [55, 56, 57, 66, 67, 68, 69, 70, 71], "amplitude_q": [55, 56, 57, 66, 67, 68, 69, 70, 71], "integration_length": [55, 56, 57, 164], "integr": [55, 56, 57, 97, 104, 111, 112, 130, 164, 169], "integration_threshold": [55, 56], "integration_weights_i": [55, 56], "weight": [55, 56, 104, 111, 164], "dtype": [55, 56, 125, 127, 128, 129, 130], "float64": [55, 56], "integration_weights_q": [55, 56], "dimension": 56, "len": 56, "intermedi": 56, "IF": 56, "center": [56, 97, 128, 129, 130], "offset": [56, 108, 128, 130], "readouttrigg": [56, 57, 101, 111, 145, 165, 167], "_multiplexed_timebox": 56, "multiplexedprobetimebox": [56, 144, 164], "probe_timebox": 56, "_time_trac": 56, "time_trac": [56, 57, 102], "_build_instruct": [56, 57], "waveform_param": [56, 57], "root_param": [56, 57], "if_freq": 56, "acquisitionmethod": [56, 57, 101, 104, 109, 112], "do_acquisit": 56, "nake": 56, "multiplex": [56, 79, 145, 164], "__add__": [56, 164], "b": [56, 136, 142, 143, 148, 152], "trigger": [56, 57, 109, 118, 145, 164, 169], "goe": 56, "maintain": 56, "backward": [56, 73], "rout": [56, 111], "probelin": [56, 165, 169], "behav": [56, 103, 114], "featur": [56, 167], "pick": 56, "up": [56, 60, 63, 95, 118, 130, 140], "anywher": [56, 111, 164], "whenev": 56, "pass": [56, 62, 63, 64, 164, 169], "acquisition_dur": 56, "trace": [56, 57], "except": [56, 67, 155, 157, 158, 159, 165, 168], "record": 56, "acqusit": 56, "contrari": 57, "probl": 57, "exchang": 58, "invari": 58, "span": 58, "00": 58, "rangl": [58, 76], "01": [58, 167], "10": [58, 170], "swap": 58, "anyth": 58, "orthogon": 58, "involut": 58, "_": 58, "i_": 58, "langl": 58, "undefin": [58, 165], "complex": [58, 104, 169, 171], "degre": [58, 86], "freedom": [58, 169], "continuum": 58, "cancel": 58, "due": [58, 60, 82, 165], "movemark": [58, 60, 164], "move_customwaveform": [58, 59, 61, 63, 164], "move_crf_crf": [58, 164], "move_tgss_crf": 58, "detun": [59, 60, 61, 62, 63, 164], "bookkeep": 60, "unknown": [60, 132, 158], "pair": [60, 108, 132], "back": [60, 132, 139], "came": 60, "sandwich": [60, 63, 64, 164], "At": 60, "annot": [60, 62, 168], "mark": [60, 168], "counteract": 60, "accumul": 60, "proport": 60, "sum": [60, 63, 108, 119, 125, 127, 129, 130, 148, 171], "virtualrz": [60, 62, 63, 84, 101, 165], "itself": [60, 80, 169], "complet": [60, 165], "apply_move_gate_phase_correct": [60, 164], "track": [60, 119, 140, 164, 168, 171], "right": [62, 165, 168, 169, 171], "link": [62, 124, 164, 168], "noth": [62, 116, 118, 136, 138, 142, 143, 168], "explicit": [62, 164, 165], "aforement": [62, 119, 140], "marker": 62, "post": 62, "compil": [62, 64, 95, 103, 167, 168, 171], "apply_detuning_correct": 63, "level": [63, 64, 132, 165, 167, 169, 171], "validate_prx": 64, "prepar": [64, 168], "conform": 64, "constraint": [64, 108, 165, 169], "unmodifi": 64, "x": [65, 67, 69, 72, 73, 86, 88, 164, 170], "r_": [65, 67, 84], "phi": [65, 67, 81, 84, 88, 89, 90, 127, 154, 164], "theta": [65, 67, 84, 88, 89, 90, 130, 154, 164], "co": [65, 88, 125, 127], "y": [65, 72, 86, 88, 90, 164], "sin": [65, 88, 128], "r_z": [65, 67, 81, 84, 88, 89], "r_x": 65, "dagger": 65, "around": [65, 86, 88, 129, 154], "li": 65, "bloch": [65, 88], "sphere": [65, 88], "prx_gateimplement": [65, 73], "prx_singlepulse_gateimplement": [65, 66, 67], "prx_customwaveform": [65, 68, 70, 164], "prx_draggaussian": 65, "prx_dragcosinerisefal": 65, "prx_customwaveformssx": [65, 69, 71, 164], "prx_draggaussiansx": [65, 164], "prx_dragcosinerisefallsx": [65, 164], "iq": [66, 67, 68, 69, 70, 71, 73, 95, 96, 104, 108, 111, 112, 154, 160, 163], "hot": [66, 67], "swappabl": [66, 67], "rest_of_calibration_data": [66, 67], "x_pi": [66, 68, 164], "sx": [67, 87, 164], "manipul": 67, "formula": 67, "fuse": 67, "rz_after": [67, 69, 71], "rz_befor": [67, 69, 71, 164], "sqrt": [67, 69, 86, 164], "cosinerisefallderiv": [68, 69, 124], "vz": [69, 71], "prx_customwaveformsvz": [69, 71], "truncatedgaussian": [70, 71], "tg": [70, 71], "truncatedgaussianderiv": [70, 71], "gaussian": 71, "rx": [72, 169, 171], "ry": [72, 164, 171], "xy_gat": 72, "static": [73, 125, 127, 129, 130, 145, 148, 164], "_single_iq_puls": [73, 164], "resonantli": 73, "x_": 73, "linear": [73, 125, 126], "linearli": 73, "scale": [73, 106, 110, 165], "adjust": [73, 154, 164, 165, 169], "iq_puls": [73, 164], "2x2": [74, 85, 90], "gate_nam": 75, "impl_class": 75, "set_as_default": 75, "quantum_op_spec": 75, "split": [75, 165], "human": [75, 148, 165], "readabl": [75, 148, 165, 168], "python": [75, 150, 151], "previous": [75, 164], "constructor": [75, 118], "miss": 75, "suitabl": 75, "qb": 75, "reset_condit": [76, 169], "reset_wait": [76, 164], "__default_feedback": 77, "doubl": [77, 78], "underscor": [77, 78], "emphas": [77, 78], "fact": [77, 78], "manual": [77, 78, 127], "__reset": 78, "reset": [79, 80, 106, 132, 164, 165, 169], "necessari": [79, 136, 165, 171], "accommod": 79, "upon": 79, "cc_prx": [79, 164, 169], "relax": [80, 164], "compar": [80, 111, 118, 164], "maximum": [80, 118, 130, 140], "shot": [80, 165], "destroi": 80, "wait_box": 80, "rz_virtual": 81, "rz_acstarkshift": [81, 83], "rz_acstarkshift_cosinerisefal": 81, "strong": 82, "off": [82, 164], "lead": [82, 164], "shift": 82, "ac_stark_puls": 82, "ac_stark_waveform": 83, "increment": [83, 84, 106, 113, 154, 164], "techniqu": [84, 89], "oscil": [84, 113, 154], "shortest": 84, "algebra": [84, 113], "commut": [84, 154], "toward": 84, "hit": 84, "elimin": 84, "multi": 84, "hold": [84, 168], "diagon": 84, "immedi": [84, 136], "conjug": 84, "alpha": [84, 125, 126], "accomplish": 84, "assumpt": [84, 130], "negat": 84, "r": [86, 128, 170], "sigma": [86, 170], "_x": 86, "xz": 86, "90": [86, 170], "sxgate": [86, 164], "limit": [87, 160, 163, 164, 168, 171], "parametr": [88, 130, 170], "euler": [88, 89], "lambda": [88, 89, 164], "subsequ": [88, 168], "r_y": [88, 89], "express": [88, 130, 168], "h": 88, "8": 88, "http": [88, 164, 168], "openqasm": 88, "com": 88, "languag": [88, 165, 168], "html": [88, 123, 164], "ugat": [88, 164], "lam": [89, 90], "decomposit": 89, "cdot": 89, "probechannelproperti": 92, "channelconfigur": [92, 98], "realchannelconfig": [92, 94, 96], "iqchannelconfig": 92, "channeldescript": [92, 160, 161], "instruction_t": 94, "uniqu": [94, 132, 165], "waveform_t": 94, "add_instruct": 94, "integ": [94, 95, 105, 148, 171], "index": [94, 119, 139, 165, 167], "similar": [94, 164], "manner": 94, "instruction_duration_granular": [95, 97], "instruction_duration_min": [95, 97], "compatible_instruct": [95, 97, 156], "is_iq": [95, 97], "is_virtu": [95, 97], "blocks_compon": [95, 97], "zi": 95, "hdawg": 95, "shfsg": 95, "shfqa": 95, "32": [95, 165], "16": [95, 118, 165, 170], "might": [95, 165, 169, 171], "capabl": [95, 171], "command": [95, 107, 165, 169], "hack": 95, "frontend": 95, "sent": [95, 164, 165, 168], "duration_to_sampl": 95, "duration_to_second": 95, "duration_to_int_sampl": 95, "messag": [95, 134, 148], "check_min_sampl": 95, "close": [95, 171], "test": 95, "output": [95, 103, 114, 123, 132, 165, 169, 171], "unaccept": 95, "round_duration_to_granular": 95, "round_up": 95, "force_min_dur": 95, "closest": 95, "upconvers": [96, 113], "center_frequ": 97, "integration_start_dead_tim": 97, "integration_stop_dead_tim": 97, "dead": 97, "real": [98, 106, 110, 111, 130, 165], "flux_control": 99, "readout_control": 99, "intern": [99, 164, 165, 171], "standard": [100, 171], "flat": 100, "channel_properti": [100, 118, 141], "realpuls": [101, 160, 162, 163], "multiplexediqpuls": [101, 109], "timetrac": 101, "complexintegr": [101, 111], "thresholdstatediscrimin": 101, "delay_sampl": [102, 104, 111, 112], "acquir": [102, 109, 165], "qb1__readout": 102, "window": [102, 112, 125, 127, 128, 129, 130], "strictli": [103, 165], "strict": [103, 164, 165], "version": [103, 167, 168], "dd": 103, "outcom": 105, "choic": 105, "evalu": 105, "ok": [105, 106, 107, 110], "get_child_instruct": [105, 107], "child": [105, 107, 140, 141, 160, 163], "scale_i": 106, "scale_q": 106, "upconvert": 106, "envelop": [106, 170], "factor": [106, 110, 130], "success": 106, "carrier": 106, "get_waveform": [106, 107, 110], "entri": 108, "outsid": [108, 165], "interv": [108, 165], "truncat": [108, 139, 164], "neg": 108, "probe_puls": 109, "shape": [110, 125, 127, 128, 129, 130, 167], "feedback_signal_label": [111, 164], "boolean": 111, "transmit": 111, "field": [111, 168], "duration_sampl": 112, "captur": [112, 167], "updat": [113, 164, 169], "hardwar": [113, 132, 160, 163, 165, 167, 169], "sure": 114, "synchron": 118, "critic": 118, "account": [118, 130, 164], "pprint": 118, "time_unit": 118, "fix": [118, 165], "width": [118, 128, 129], "graphic": 118, "represent": [118, 148, 165], "symbol": 118, "keysview": 118, "mutat": [118, 119], "vice": [118, 119], "versa": [118, 119], "immut": [118, 119], "add_channel": 118, "channel_nam": [118, 171], "unchang": [118, 152], "front_pad": 118, "to_dur": 118, "variabl": [118, 140, 164], "front_pad_in_second": 118, "pad_to_hard_box": 118, "pad_to_hard_box_in_second": 118, "smallest": 118, "revers": 118, "preserv": [118, 136, 165, 171], "rear": 118, "reverse_hard_box": 118, "No": [118, 164], "synchronis": 118, "break": 118, "cleanup": [118, 164], "clean": [118, 164], "thing": 118, "has_content_in": 118, "keep": [119, 140], "_instruct": 119, "_durat": 119, "prepend": 119, "pop": 119, "idx": [119, 139], "1e": [120, 142, 143], "12": [120, 142, 143], "comp": [120, 164], "1281": 120, "visualis": [122, 164], "view": [123, 164], "browser": 123, "jupyt": 123, "notebook": 123, "ipython": 123, "core": [123, 164], "displai": [123, 168], "inspect": 123, "don": [124, 168], "serial": 124, "reimport": 124, "document": [124, 164, 168], "appear": [124, 165, 168], "chirp": [124, 126, 164], "chirpimag": [124, 164], "freq_start": [125, 126], "freq_stop": [125, 126], "05": [125, 126], "omega": 125, "f_": 125, "mathrm": 125, "d": [125, 148, 170], "taper": 125, "rectangular": [125, 140], "hann": 125, "nyquist": 125, "zone": 125, "constrain": 125, "5": [125, 170, 171], "_sampl": [125, 127, 128, 129, 130], "sample_coord": [125, 127, 128, 129, 130], "coordin": [125, 127, 128, 129, 130], "non_timelike_attribut": [125, 127, 129, 130], "timelik": [125, 127, 129, 130], "dimensionless": [125, 127, 129, 130], "invers": [125, 127, 129, 130], "5707963267948966": 126, "imaginari": 126, "period": 127, "sinusoid": [127, 128, 129], "c": [128, 148], "p": [128, 170], "plateau": 128, "Its": [128, 165], "midpoint": [128, 130], "descript": [129, 148, 168], "further": [129, 130, 148], "detail": [129, 130, 132, 165, 167, 169], "middl": 129, "minim": [130, 136], "adiabat": [130, 170], "prior": 130, "optim": [130, 142, 164], "lambda_n": 130, "tau_": 130, "acceler": 130, "reconstruct": 130, "tau": 130, "lab": 130, "interpol": 130, "v": [130, 160, 163, 164], "voltag": 130, "go": 130, "advis": [130, 168], "look": 130, "mathemat": [130, 167], "heavi": 130, "coeffici": 130, "leakag": 130, "strength": 130, "squid": [130, 164], "asymmetri": [130, 164], "_sample_normalized_slepian": 130, "coord": 130, "_t_tau": 130, "num_sampl": 130, "129": 130, "convers": [130, 168], "analyt": 130, "solut": 130, "therefor": [130, 165], "numer": 130, "scipi": [130, 164], "romb": 130, "form": [130, 164, 165, 168], "_theta_tau": 130, "fourier": 130, "shown": [130, 164, 169], "th": 130, "tau_puls": 130, "short": [132, 142], "simpl": [132, 148, 165, 170], "unambigu": [132, 165], "subsystem": 132, "qumod": 132, "pictur": [132, 169], "famili": [132, 165], "plural": 132, "intent": 132, "target": [132, 164, 171], "callabl": 132, "np": [132, 169, 171], "lowest": [132, 165], "docstr": 132, "kron": 132, "first_qubit_basis_ket": 132, "second_qubit_basis_ket": 132, "set_default_implement": 132, "set_default_implementation_for_locu": 132, "cal_data": 134, "impl": 134, "noiseless": 136, "sync": 136, "try": 136, "segmentpoint": 136, "nonsolid": 137, "nevertheless": 137, "tol": [139, 142, 143], "frac": 139, "serv": 139, "pointer": 139, "smaller": [139, 142, 143], "toler": 139, "remaind": 139, "next": [139, 165, 169], "cut_tail": 139, "cut": 139, "tail": 139, "onward": 139, "rewind": 139, "fastforward": 139, "forward": 139, "child_schedul": [140, 141], "child_compon": [140, 141], "neighborhood_compon": [140, 141, 145, 148], "component_dur": [140, 141], "is_alap": [140, 141], "respect": [140, 146, 160, 163, 165], "hard": [140, 164], "rag": [140, 142, 143], "edg": [140, 164], "earliest": [140, 141], "max": 140, "combin": [140, 168], "extend_hard_boundary_in_second": 140, "computational_reson": [140, 141], "These": [140, 141, 148, 165, 171], "even": [140, 141, 168], "yet": [140, 141, 164], "ever": [140, 141], "alap": [140, 141, 147, 148, 165, 171], "As": [140, 141, 148, 169], "late": [140, 141, 147, 148], "extend_hard_boundari": 141, "incom": 141, "extens": [142, 143, 164], "reserv": 144, "resourc": 144, "schedulingstrategi": [144, 145, 146, 148, 171], "locus_compon": [145, 148], "asap": [145, 147, 148, 165, 169, 171], "from_readout_trigg": 145, "readout_trigg": 145, "probe_channel": 145, "block_channel": 145, "block_dur": 145, "soon": [147, 148, 164, 169], "fragment": 148, "union": [148, 168, 171], "made": [148, 167, 168, 171], "rule": [148, 154, 165, 171], "operand": [148, 171], "pipe": [148, 171], "group": [148, 171], "element": [148, 164, 165, 171], "let": 148, "a_then_b": 148, "c_then_d": 148, "set_alap": [148, 171], "abcd": 148, "abb": 148, "ccd": 148, "all_togeth": 148, "dictat": 148, "flatten": 148, "ancestor": 148, "set_asap": 148, "print": [148, 164, 168, 171], "_idx": 148, "type_hint": 151, "typehint": 151, "merge_non": 152, "leav": 152, "psi_1": 154, "psi_2": 154, "decrement": 154, "beforehand": 154, "opposit": 154, "direct": [154, 168], "playlistvalidationerror": 155, "awgschedulevalidationdata": [155, 160], "awgschedulevalidationerror": 155, "invalidinstructionerror": 155, "sampling_r": 156, "min_number_of_sampl": 156, "fail": [157, 159], "issue_str": 158, "encount": 158, "channel_descript": [160, 161], "device_constraint": [160, 161, 163], "minimum": [160, 163, 165], "diffrenet": 164, "broader": 164, "numpi": [164, 171], "verifi": 164, "compatibili": 164, "ruff": 164, "migrat": 164, "guid": 164, "org": [164, 168], "doc": 164, "stabl": 164, "numpy_2_0_migration_guid": 164, "builtin": 164, "easili": [164, 167, 171], "quantumcircuit": 164, "extract": 164, "crf_acstarkcrf": 164, "slepian_acstarkcrf": 164, "bump": 164, "repo": 164, "organ": [164, 171], "issu": [164, 168], "sw": 164, "1042": 164, "disabl": 164, "horizont": 164, "scroll": 164, "toggl": 164, "cover": 164, "concept": [164, 167], "usag": 164, "531": 164, "gitlab": 164, "public": 164, "page": [164, 167, 168], "776": 164, "didn": 164, "mr": 164, "514": 164, "client": [164, 165, 167], "licens": [164, 167], "apach": [164, 168], "extlink": 164, "sphinx": 164, "916": 164, "intersphinx": 164, "665": 164, "becaus": 164, "proper": 164, "realiz": [164, 170], "semant": [164, 165], "disturb": 164, "774": 164, "leak": 164, "web": 164, "artifact": 164, "resetwait": 164, "comfort": 164, "timelin": [164, 165], "broken": 164, "redisplai": 164, "upcom": 164, "releas": 164, "prefer": [164, 168], "font": 164, "viewer": 164, "358": 164, "typo": 164, "api": [164, 167, 171], "workflow": [164, 171], "meth": 164, "pulla": [164, 167, 171], "potenti": 164, "crash": 164, "discoveri": 164, "throw": 164, "sc": 164, "nonsens": 164, "mcm": 164, "merge_dict": 164, "did": 164, "crf_crf": 164, "interfac": [164, 168], "feedback_label": 164, "renam": 164, "similarli": 164, "conditional_prx": 164, "hopefulli": 164, "yml": 164, "conditionalreset": 164, "mid": 164, "constant_qnd": 164, "qndness": 164, "phase_increment_befor": 164, "sign": 164, "phase_transform": 164, "fulfil": 164, "satisfi": [164, 169], "conditionalprx": 164, "accept": [164, 168], "signifi": 164, "weigth": 164, "canon": 164, "whitelist": 164, "2112": 164, "write": [164, 168], "1831": 164, "drag_crf_sx": 164, "drag_gaussian_sx": 164, "prx_u": 164, "prx_sx": 164, "_x_pi_puls": 164, "register_implement": [164, 165], "547": 164, "prioritis": 164, "1929": 164, "1468": 164, "programm": 164, "1925": 164, "crude": 164, "visual": [164, 165, 169], "measure_nop": 164, "small": [164, 165], "validate_move_instruct": 164, "2056": 164, "pipelin": [164, 169], "packag": 164, "give": [165, 168, 171], "overview": 165, "main": 165, "terminologi": 165, "deliv": 165, "send": [165, 169], "assembli": 165, "batch": 165, "summar": 165, "imag": [165, 169], "illustr": [165, 169], "visibl": 165, "microwav": [165, 167], "ambigu": 165, "machin": 165, "though": 165, "subject": [165, 168], "violat": 165, "concern": 165, "philosophi": 165, "inaccess": 165, "attempt": 165, "smart": 165, "magic": 165, "inconsist": 165, "transpar": 165, "technic": 165, "apart": 165, "few": 165, "instant": 165, "thought": [165, 169], "desir": [165, 171], "read": [165, 169, 171], "importantli": 165, "disjoint": [165, 171], "simulten": 165, "partli": 165, "figur": [165, 169], "demonstr": 165, "explain": 165, "necessarili": [165, 168], "variou": 165, "runtim": [165, 169, 171], "build_quantum_op": 165, "bridg": 165, "gap": 165, "collect": 165, "repeat": [165, 171], "repetit": 165, "encod": 165, "aim": 165, "memori": 165, "fit": [165, 168], "memeori": 165, "chunk": 165, "much": 165, "inspect_playlist": 165, "neat": 165, "7": 167, "15": 167, "date": [167, 168], "2025": 167, "31": 167, "high": [167, 170], "unifi": 167, "hide": 167, "But": 167, "framework": [167, 171], "machineri": 167, "standalon": 167, "librari": [167, 169], "encourag": [167, 171], "familiar": 167, "especi": [167, 171], "quick": [167, 171], "miscellan": 167, "pitfal": 167, "changelog": 167, "search": 167, "januari": 168, "2004": [168, 170], "www": 168, "AND": 168, "FOR": 168, "reproduct": 168, "distribut": 168, "shall": 168, "9": [168, 169, 171], "licensor": 168, "copyright": 168, "owner": 168, "entiti": 168, "author": 168, "grant": 168, "legal": 168, "power": 168, "indirect": 168, "manag": 168, "contract": 168, "ii": 168, "ownership": 168, "fifti": 168, "percent": 168, "50": 168, "outstand": 168, "iii": 168, "benefici": 168, "exercis": 168, "permiss": 168, "modif": 168, "softwar": [168, 170], "code": [168, 169], "mechan": 168, "translat": 168, "media": 168, "authorship": 168, "notic": [168, 171], "appendix": 168, "editori": 168, "revis": 168, "elabor": 168, "mere": 168, "bind": 168, "thereof": 168, "contribut": 168, "intention": 168, "submit": 168, "inclus": 168, "behalf": 168, "electron": 168, "verbal": 168, "written": 168, "commun": 168, "mail": 168, "discuss": 168, "conspicu": 168, "contributor": 168, "whom": 168, "incorpor": 168, "herebi": 168, "perpetu": 168, "worldwid": 168, "exclus": 168, "charg": 168, "royalti": 168, "free": [168, 170], "irrevoc": 168, "reproduc": 168, "publicli": 168, "sublicens": 168, "patent": 168, "offer": 168, "sell": 168, "claim": 168, "infring": 168, "alon": 168, "institut": 168, "litig": 168, "cross": [168, 171], "counterclaim": 168, "lawsuit": 168, "alleg": 168, "contributori": 168, "termin": 168, "redistribut": 168, "medium": 168, "meet": 168, "recipi": 168, "promin": 168, "retain": 168, "trademark": 168, "pertain": 168, "along": 168, "wherev": 168, "third": 168, "parti": 168, "alongsid": 168, "addendum": 168, "constru": 168, "statement": [168, 169], "compli": 168, "submiss": 168, "notwithstand": 168, "herein": 168, "supersed": 168, "agreement": 168, "regard": 168, "trade": 168, "servic": 168, "customari": 168, "disclaim": 168, "warranti": 168, "law": 168, "agre": 168, "AS": 168, "OR": 168, "OF": 168, "kind": 168, "titl": 168, "merchant": 168, "sole": 168, "risk": 168, "liabil": 168, "event": 168, "theori": 168, "tort": 168, "neglig": 168, "deliber": 168, "grossli": 168, "liabl": 168, "damag": 168, "incident": 168, "consequenti": 168, "aris": 168, "inabl": 168, "loss": 168, "goodwil": 168, "stoppag": 168, "failur": 168, "malfunct": 168, "commerci": 168, "choos": 168, "fee": 168, "indemn": 168, "oblig": 168, "indemnifi": 168, "harmless": 168, "incur": 168, "assert": 168, "boilerpl": 168, "enclos": 168, "bracket": 168, "comment": 168, "recommend": 168, "easier": 168, "identif": 168, "archiv": 168, "2024": 168, "complianc": 168, "govern": 168, "simplifi": 169, "show": 169, "flexibl": 169, "goal": 169, "finit": 169, "condition": 169, "On": 169, "qccsw": 169, "excut": 169, "last": [169, 171], "too": 169, "earli": 169, "facilit": 169, "effici": 169, "travel": 169, "conditionalinstrucion": 169, "equaival": 169, "feedaback_kei": 169, "reset_qb2": 169, "set_qb3_to_1": 169, "cc_prx_qb4": 169, "2nd": [169, 170], "prx_qb3": 169, "prx_qb4": 169, "80e": [169, 171], "clariti": 169, "bottom": 169, "understand": [169, 170], "master": 169, "slave": 169, "compens": 169, "trigger_delai": 169, "explan": 169, "end_delai": 169, "spcecifi": 169, "trigger_mast": 169, "emit": 169, "daisi": 169, "chain": 169, "central": 169, "cabl": 169, "john": 170, "m": 170, "martini": 170, "michael": 170, "geller": 170, "_z": 170, "phy": 170, "rev": 170, "022307": 170, "aug": 170, "2014": 170, "arxiv": 170, "1402": 170, "5467": 170, "doi": 170, "1103": 170, "physreva": 170, "lyon": 170, "digit": 170, "prentic": 170, "hall": 170, "edit": 170, "isbn": 170, "978": 170, "0131089891": 170, "cecilia": 170, "gisel": 170, "jarn": 170, "heurist": 170, "approach": 170, "anal": 170, "afa": 170, "29": 170, "51": 170, "57": 170, "2018": 170, "1703": 170, "06812": 170, "31527": 170, "analesafa": 170, "eyob": 170, "sete": 170, "nicola": 170, "didier": 170, "angela": 170, "chen": 170, "shobhan": 170, "kulshreshtha": 170, "riccardo": 170, "manenti": 170, "stefano": 170, "poletto": 170, "entangl": 170, "appl": 170, "024050": 170, "2021": 170, "2104": 170, "03511": 170, "physrevappli": 170, "youngkyu": 170, "sung": 170, "leon": 170, "ding": 170, "jochen": 170, "braum\u00fcller": 170, "antti": 170, "veps\u00e4l\u00e4inen": 170, "bharath": 170, "kannan": 170, "morten": 170, "kjaergaard": 170, "ami": 170, "green": 170, "gabriel": 170, "o": 170, "samach": 170, "chri": 170, "mcnalli": 170, "david": 170, "kim": 170, "alexand": 170, "melvil": 170, "bethani": 170, "niedzielski": 170, "molli": 170, "schwartz": 170, "jonilyn": 170, "l": 170, "yoder": 170, "terri": 170, "orlando": 170, "simon": 170, "gustavsson": 170, "william": 170, "oliv": 170, "fidel": 170, "zz": 170, "021058": 170, "jun": 170, "2011": 170, "01261": 170, "physrevx": 170, "ask": 171, "recogn": 171, "cz_gate_impl": 171, "prx_gate_impl": 171, "measure_gate_impl": 171, "keyword": 171, "instanti": 171, "x180": 171, "y90": 171, "100e": 171, "decid": 171, "p1": 171, "p2": 171, "handi": 171, "everyth": 171, "circuit3": 171, "sub": 171, "word": 171, "slide": 171, "past": 171, "neighbour": 171, "talk": 171, "neighbourhood": 171, "come": 171, "question": 171, "worri": 171, "advers": 171, "ruin": 171, "best": 171, "arrang": 171, "aid": 171, "discov": 171, "all_qubit": 171, "get_neighbor_locus_compon": 171, "drag_gaussian": 171, "160e": 171, "access": 171, "cz_schedul": 171, "forget": 171}, "objects": {"iqm": [[1, 0, 0, "-", "pulse"]], "iqm.pulse": [[2, 0, 0, "-", "builder"], [8, 0, 0, "-", "circuit_operations"], [14, 0, 0, "-", "gate_implementation"], [30, 0, 0, "-", "gates"], [91, 0, 0, "-", "playlist"], [131, 0, 0, "-", "quantum_ops"], [136, 0, 0, "-", "scheduler"], [144, 0, 0, "-", "timebox"], [149, 0, 0, "-", "utils"], [155, 0, 0, "-", "validation"]], "iqm.pulse.builder": [[3, 1, 1, "", "CircuitOperation"], [4, 1, 1, "", "ScheduleBuilder"], [5, 4, 1, "", "build_quantum_ops"], [6, 4, 1, "", "load_config"], [7, 4, 1, "", "validate_quantum_circuit"]], "iqm.pulse.builder.CircuitOperation": [[3, 2, 1, "", "args"], [3, 2, 1, "", "implementation"], [3, 2, 1, "", "locus"], [3, 2, 1, "", "name"], [3, 3, 1, "", "validate"]], "iqm.pulse.builder.ScheduleBuilder": [[4, 3, 1, "", "_block_neighborhood_tetris"], [4, 2, 1, "", "_cache"], [4, 2, 1, "", "_channel_templates"], [4, 2, 1, "", "_channel_to_component"], [4, 2, 1, "", "_channel_types"], [4, 3, 1, "", "_find_implementation_and_locus"], [4, 3, 1, "", "_finish_schedule"], [4, 3, 1, "", "_get_channel_for_component"], [4, 3, 1, "", "_get_implementation"], [4, 3, 1, "", "_get_neighborhood_hard_boundary"], [4, 2, 1, "", "_require_scheduling_in_seconds"], [4, 3, 1, "", "_resolve_timebox_hard_boundary"], [4, 3, 1, "", "_resolve_timebox_tetris"], [4, 3, 1, "", "_set_gate_implementation_shortcut"], [4, 3, 1, "", "build_playlist"], [4, 3, 1, "", "circuit_to_timebox"], [4, 3, 1, "", "get_calibration"], [4, 3, 1, "", "get_control_channels"], [4, 3, 1, "", "get_drive_channel"], [4, 3, 1, "", "get_flux_channel"], [4, 3, 1, "", "get_implementation"], [4, 3, 1, "", "get_implementation_class"], [4, 3, 1, "", "get_probe_channel"], [4, 3, 1, "", "get_virtual_feedback_channel_for"], [4, 3, 1, "", "get_virtual_feedback_channels"], [4, 3, 1, "", "has_calibration"], [4, 3, 1, "", "inject_calibration"], [4, 3, 1, "", "resolve_timebox"], [4, 3, 1, "", "timebox_to_schedule"], [4, 3, 1, "", "timeboxes_to_front_padded_playlist"], [4, 3, 1, "", "timeboxes_to_playlist"], [4, 3, 1, "", "validate_calibration"], [4, 3, 1, "", "validate_quantum_circuit"], [4, 3, 1, "", "wait"]], "iqm.pulse.circuit_operations": [[9, 1, 1, "", "CircuitOperationList"], [10, 4, 1, "", "get_unitary_from_circuit"], [11, 4, 1, "", "get_unitary_from_op"], [12, 4, 1, "", "reorder"], [13, 4, 1, "", "reshape_unitary"]], "iqm.pulse.circuit_operations.CircuitOperationList": [[9, 3, 1, "", "_set_specific_operation_shortcut"], [9, 3, 1, "", "add_op"], [9, 3, 1, "", "add_qubits"], [9, 3, 1, "", "barrier"], [9, 3, 1, "", "compose"], [9, 3, 1, "", "count_ops"], [9, 3, 1, "", "find_qubits"], [9, 3, 1, "", "get_unitary"], [9, 3, 1, "", "map_loci"]], "iqm.pulse.gate_implementation": [[15, 1, 1, "", "CompositeGate"], [16, 1, 1, "", "CustomIQWaveforms"], [17, 1, 1, "", "GateImplementation"], [18, 6, 1, "", "Locus"], [19, 6, 1, "", "NestedParams"], [20, 6, 1, "", "OCalibrationData"], [21, 6, 1, "", "OICalibrationData"], [22, 6, 1, "", "OILCalibrationData"], [23, 6, 1, "", "OpCalibrationDataTree"], [24, 6, 1, "", "PROBE_LINES_LOCUS_MAPPING"], [25, 6, 1, "", "SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING"], [26, 6, 1, "", "SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING"], [27, 6, 1, "", "SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING"], [28, 1, 1, "", "SinglePulseGate"], [29, 4, 1, "", "get_waveform_parameters"]], "iqm.pulse.gate_implementation.CompositeGate": [[15, 3, 1, "", "build"], [15, 2, 1, "", "default_implementations"], [15, 2, 1, "", "registered_gates"]], "iqm.pulse.gate_implementation.CustomIQWaveforms": [[16, 2, 1, "", "dependent_waves"], [16, 2, 1, "", "excluded_parameters"], [16, 2, 1, "", "root_parameters"], [16, 2, 1, "", "wave_i"], [16, 2, 1, "", "wave_q"]], "iqm.pulse.gate_implementation.GateImplementation": [[17, 3, 1, "", "_call"], [17, 3, 1, "", "build"], [17, 3, 1, "", "convert_calibration_data"], [17, 3, 1, "", "duration_in_seconds"], [17, 3, 1, "", "get_custom_locus_mapping"], [17, 3, 1, "", "get_locus_mapping_name"], [17, 3, 1, "", "get_parameters"], [17, 3, 1, "", "needs_calibration"], [17, 2, 1, "", "parameters"], [17, 5, 1, "", "qualified_name"], [17, 2, 1, "", "special_implementation"], [17, 2, 1, "", "symmetric"], [17, 3, 1, "", "to_timebox"]], "iqm.pulse.gate_implementation.SinglePulseGate": [[28, 3, 1, "", "_call"], [28, 3, 1, "", "_get_pulse"], [28, 3, 1, "", "_get_pulse_channel"], [28, 3, 1, "", "duration_in_seconds"]], "iqm.pulse.gates": [[31, 0, 0, "-", "barrier"], [33, 0, 0, "-", "conditional"], [35, 0, 0, "-", "cz"], [47, 0, 0, "-", "enums"], [52, 4, 1, "", "expose_implementation"], [53, 4, 1, "", "get_implementation_class"], [54, 0, 0, "-", "measure"], [58, 0, 0, "-", "move"], [65, 0, 0, "-", "prx"], [75, 4, 1, "", "register_implementation"], [76, 0, 0, "-", "reset"], [81, 0, 0, "-", "rz"], [86, 0, 0, "-", "sx"], [88, 0, 0, "-", "u"]], "iqm.pulse.gates.barrier": [[32, 1, 1, "", "Barrier"]], "iqm.pulse.gates.barrier.Barrier": [[32, 3, 1, "", "_call"], [32, 3, 1, "", "duration_in_seconds"], [32, 2, 1, "", "symmetric"]], "iqm.pulse.gates.conditional": [[34, 1, 1, "", "CCPRX_Composite"]], "iqm.pulse.gates.conditional.CCPRX_Composite": [[34, 3, 1, "", "_call"], [34, 2, 1, "", "parameters"]], "iqm.pulse.gates.cz": [[36, 1, 1, "", "CZ_CRF"], [37, 1, 1, "", "CZ_CRF_ACStarkCRF"], [38, 1, 1, "", "CZ_GaussianSmoothedSquare"], [39, 1, 1, "", "CZ_Slepian"], [40, 1, 1, "", "CZ_Slepian_ACStarkCRF"], [41, 1, 1, "", "CZ_Slepian_CRF"], [42, 1, 1, "", "CZ_TruncatedGaussianSmoothedSquare"], [43, 1, 1, "", "CouplerFluxPulseQubitACStarkPulseGate"], [44, 1, 1, "", "FluxPulseGate"], [45, 1, 1, "", "FluxPulseGate_CRF_CRF"], [46, 1, 1, "", "FluxPulseGate_TGSS_CRF"]], "iqm.pulse.gates.cz.CZ_CRF": [[36, 2, 1, "", "coupler_wave"], [36, 2, 1, "", "parameters"], [36, 2, 1, "", "qubit_wave"], [36, 2, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF": [[37, 2, 1, "", "coupler_wave"], [37, 2, 1, "", "parameters"], [37, 2, 1, "", "qubit_drive_wave"], [37, 2, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare": [[38, 2, 1, "", "coupler_wave"], [38, 2, 1, "", "parameters"], [38, 2, 1, "", "qubit_wave"], [38, 2, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_Slepian": [[39, 2, 1, "", "coupler_wave"], [39, 2, 1, "", "parameters"], [39, 2, 1, "", "qubit_wave"], [39, 2, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF": [[40, 2, 1, "", "coupler_wave"], [40, 2, 1, "", "parameters"], [40, 2, 1, "", "qubit_drive_wave"], [40, 2, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_Slepian_CRF": [[41, 2, 1, "", "coupler_wave"], [41, 2, 1, "", "parameters"], [41, 2, 1, "", "qubit_wave"], [41, 2, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare": [[42, 2, 1, "", "coupler_wave"], [42, 2, 1, "", "parameters"], [42, 2, 1, "", "qubit_wave"], [42, 2, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate": [[43, 3, 1, "", "_ac_stark_pulse"], [43, 3, 1, "", "_call"], [43, 2, 1, "", "coupler_wave"], [43, 3, 1, "", "duration_in_seconds"], [43, 2, 1, "", "excluded_parameters"], [43, 3, 1, "", "get_locus_mapping_name"], [43, 2, 1, "", "qubit_drive_wave"]], "iqm.pulse.gates.cz.FluxPulseGate": [[44, 3, 1, "", "_call"], [44, 2, 1, "", "coupler_wave"], [44, 3, 1, "", "duration_in_seconds"], [44, 2, 1, "", "excluded_parameters"], [44, 3, 1, "", "get_locus_mapping_name"], [44, 2, 1, "", "qubit_wave"], [44, 2, 1, "", "root_parameters"]], "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF": [[45, 2, 1, "", "coupler_wave"], [45, 2, 1, "", "parameters"], [45, 2, 1, "", "qubit_wave"], [45, 2, 1, "", "symmetric"]], "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF": [[46, 2, 1, "", "coupler_wave"], [46, 2, 1, "", "parameters"], [46, 2, 1, "", "qubit_wave"], [46, 2, 1, "", "symmetric"]], "iqm.pulse.gates.enums": [[48, 6, 1, "", "TWO_QUBIT_UNITARIES"], [49, 1, 1, "", "TwoQubitGate"], [50, 6, 1, "", "XYGATE_UNITARIES"], [51, 1, 1, "", "XYGate"]], "iqm.pulse.gates.enums.TwoQubitGate": [[49, 2, 1, "", "CZ"], [49, 2, 1, "", "ISWAP"], [49, 2, 1, "", "SQRT_ISWAP"]], "iqm.pulse.gates.measure": [[55, 1, 1, "", "Measure_Constant"], [56, 1, 1, "", "Measure_CustomWaveforms"], [57, 1, 1, "", "ProbePulse_CustomWaveforms"]], "iqm.pulse.gates.measure.Measure_Constant": [[55, 2, 1, "", "dependent_waves"], [55, 2, 1, "", "parameters"], [55, 2, 1, "", "wave_i"], [55, 2, 1, "", "wave_q"]], "iqm.pulse.gates.measure.Measure_CustomWaveforms": [[56, 3, 1, "", "_build_instructions"], [56, 3, 1, "", "_call"], [56, 2, 1, "", "_multiplexed_timeboxes"], [56, 2, 1, "", "_time_traces"], [56, 2, 1, "", "dependent_waves"], [56, 3, 1, "", "duration_in_seconds"], [56, 3, 1, "", "get_locus_mapping_name"], [56, 3, 1, "", "probe_timebox"], [56, 2, 1, "", "root_parameters"], [56, 3, 1, "", "time_trace"]], "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms": [[57, 3, 1, "", "_build_instructions"], [57, 3, 1, "", "_call"], [57, 2, 1, "", "dependent_waves"], [57, 3, 1, "", "duration_in_seconds"], [57, 3, 1, "", "get_locus_mapping_name"], [57, 2, 1, "", "root_parameters"]], "iqm.pulse.gates.move": [[59, 1, 1, "", "MOVE_CRF_CRF"], [60, 1, 1, "", "MOVE_CustomWaveforms"], [61, 1, 1, "", "MOVE_TGSS_CRF"], [62, 1, 1, "", "MoveMarker"], [63, 4, 1, "", "apply_move_gate_phase_corrections"], [64, 4, 1, "", "validate_move_instructions"]], "iqm.pulse.gates.move.MOVE_CRF_CRF": [[59, 2, 1, "", "coupler_wave"], [59, 2, 1, "", "parameters"], [59, 2, 1, "", "qubit_wave"], [59, 2, 1, "", "symmetric"]], "iqm.pulse.gates.move.MOVE_CustomWaveforms": [[60, 3, 1, "", "_call"], [60, 2, 1, "", "coupler_wave"], [60, 2, 1, "", "parameters"], [60, 2, 1, "", "qubit_wave"], [60, 2, 1, "", "root_parameters"], [60, 2, 1, "", "symmetric"]], "iqm.pulse.gates.move.MOVE_TGSS_CRF": [[61, 2, 1, "", "coupler_wave"], [61, 2, 1, "", "parameters"], [61, 2, 1, "", "qubit_wave"], [61, 2, 1, "", "symmetric"]], "iqm.pulse.gates.move.MoveMarker": [[62, 2, 1, "", "duration"]], "iqm.pulse.gates.prx": [[66, 1, 1, "", "PRX_CustomWaveforms"], [67, 1, 1, "", "PRX_CustomWaveformsSX"], [68, 1, 1, "", "PRX_DRAGCosineRiseFall"], [69, 1, 1, "", "PRX_DRAGCosineRiseFallSX"], [70, 1, 1, "", "PRX_DRAGGaussian"], [71, 1, 1, "", "PRX_DRAGGaussianSX"], [72, 1, 1, "", "PRX_GateImplementation"], [73, 1, 1, "", "PRX_SinglePulse_GateImplementation"], [74, 4, 1, "", "get_unitary_prx"]], "iqm.pulse.gates.prx.PRX_CustomWaveforms": [[66, 3, 1, "", "_get_pulse"], [66, 2, 1, "", "dependent_waves"], [66, 2, 1, "", "root_parameters"]], "iqm.pulse.gates.prx.PRX_CustomWaveformsSX": [[67, 3, 1, "", "_call"], [67, 3, 1, "", "_get_pulse"], [67, 2, 1, "", "dependent_waves"], [67, 2, 1, "", "root_parameters"]], "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall": [[68, 3, 1, "", "_get_pulse"], [68, 2, 1, "", "dependent_waves"], [68, 2, 1, "", "excluded_parameters"], [68, 2, 1, "", "parameters"], [68, 2, 1, "", "wave_i"], [68, 2, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX": [[69, 3, 1, "", "_get_pulse"], [69, 2, 1, "", "dependent_waves"], [69, 2, 1, "", "excluded_parameters"], [69, 2, 1, "", "parameters"], [69, 2, 1, "", "wave_i"], [69, 2, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_DRAGGaussian": [[70, 2, 1, "", "dependent_waves"], [70, 2, 1, "", "parameters"], [70, 2, 1, "", "wave_i"], [70, 2, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_DRAGGaussianSX": [[71, 2, 1, "", "dependent_waves"], [71, 2, 1, "", "parameters"], [71, 2, 1, "", "wave_i"], [71, 2, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_GateImplementation": [[72, 3, 1, "", "_call"], [72, 3, 1, "", "clifford"], [72, 3, 1, "", "get_locus_mapping_name"], [72, 3, 1, "", "rx"], [72, 3, 1, "", "ry"]], "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation": [[73, 3, 1, "", "_call"], [73, 5, 1, "", "iq_pulse"]], "iqm.pulse.gates.reset": [[77, 6, 1, "", "RESET_FEEDBACK_KEY"], [78, 6, 1, "", "RESET_MEASUREMENT_KEY"], [79, 1, 1, "", "Reset_Conditional"], [80, 1, 1, "", "Reset_Wait"]], "iqm.pulse.gates.reset.Reset_Conditional": [[79, 3, 1, "", "_call"], [79, 3, 1, "", "get_locus_mapping_name"], [79, 2, 1, "", "registered_gates"]], "iqm.pulse.gates.reset.Reset_Wait": [[80, 3, 1, "", "_call"], [80, 3, 1, "", "duration_in_seconds"], [80, 3, 1, "", "get_custom_locus_mapping"], [80, 2, 1, "", "parameters"], [80, 3, 1, "", "wait_box"]], "iqm.pulse.gates.rz": [[82, 1, 1, "", "RZ_ACStarkShift"], [83, 1, 1, "", "RZ_ACStarkShift_CosineRiseFall"], [84, 1, 1, "", "RZ_Virtual"], [85, 4, 1, "", "get_unitary_rz"]], "iqm.pulse.gates.rz.RZ_ACStarkShift": [[82, 3, 1, "", "_ac_stark_pulse"], [82, 3, 1, "", "_call"], [82, 3, 1, "", "duration_in_seconds"]], "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall": [[83, 2, 1, "", "ac_stark_waveform"], [83, 2, 1, "", "parameters"], [83, 2, 1, "", "symmetric"]], "iqm.pulse.gates.rz.RZ_Virtual": [[84, 3, 1, "", "_call"], [84, 3, 1, "", "duration_in_seconds"], [84, 3, 1, "", "get_locus_mapping_name"], [84, 2, 1, "", "parameters"]], "iqm.pulse.gates.sx": [[87, 1, 1, "", "SXGate"]], "iqm.pulse.gates.sx.SXGate": [[87, 3, 1, "", "_call"], [87, 2, 1, "", "registered_gates"]], "iqm.pulse.gates.u": [[89, 1, 1, "", "UGate"], [90, 4, 1, "", "get_unitary_u"]], "iqm.pulse.gates.u.UGate": [[89, 3, 1, "", "_call"], [89, 2, 1, "", "registered_gates"]], "iqm.pulse.playlist": [[92, 0, 0, "-", "channel"], [101, 0, 0, "-", "instructions"], [115, 0, 0, "-", "playlist"], [116, 0, 0, "-", "schedule"], [121, 0, 0, "-", "visualisation"], [124, 0, 0, "-", "waveforms"]], "iqm.pulse.playlist.channel": [[93, 1, 1, "", "ChannelConfiguration"], [94, 1, 1, "", "ChannelDescription"], [95, 1, 1, "", "ChannelProperties"], [96, 1, 1, "", "IQChannelConfig"], [97, 1, 1, "", "ProbeChannelProperties"], [98, 1, 1, "", "RealChannelConfig"], [99, 4, 1, "", "get_channel_properties"], [100, 4, 1, "", "get_channel_properties_from_station_settings"]], "iqm.pulse.playlist.channel.ChannelDescription": [[94, 3, 1, "", "add_instruction"]], "iqm.pulse.playlist.channel.ChannelProperties": [[95, 2, 1, "", "blocks_component"], [95, 2, 1, "", "compatible_instructions"], [95, 3, 1, "", "duration_to_int_samples"], [95, 3, 1, "", "duration_to_samples"], [95, 3, 1, "", "duration_to_seconds"], [95, 2, 1, "", "instruction_duration_granularity"], [95, 2, 1, "", "instruction_duration_min"], [95, 2, 1, "", "is_iq"], [95, 2, 1, "", "is_virtual"], [95, 3, 1, "", "round_duration_to_granularity"], [95, 2, 1, "", "sample_rate"]], "iqm.pulse.playlist.channel.IQChannelConfig": [[96, 2, 1, "", "frequency"]], "iqm.pulse.playlist.channel.ProbeChannelProperties": [[97, 2, 1, "", "center_frequency"], [97, 2, 1, "", "integration_start_dead_time"], [97, 2, 1, "", "integration_stop_dead_time"]], "iqm.pulse.playlist.channel.RealChannelConfig": [[98, 2, 1, "", "sample_rate"]], "iqm.pulse.playlist.instructions": [[102, 1, 1, "", "AcquisitionMethod"], [103, 1, 1, "", "Block"], [104, 1, 1, "", "ComplexIntegration"], [105, 1, 1, "", "ConditionalInstruction"], [106, 1, 1, "", "IQPulse"], [107, 1, 1, "", "Instruction"], [108, 1, 1, "", "MultiplexedIQPulse"], [109, 1, 1, "", "ReadoutTrigger"], [110, 1, 1, "", "RealPulse"], [111, 1, 1, "", "ThresholdStateDiscrimination"], [112, 1, 1, "", "TimeTrace"], [113, 1, 1, "", "VirtualRZ"], [114, 1, 1, "", "Wait"]], "iqm.pulse.playlist.instructions.AcquisitionMethod": [[102, 2, 1, "", "delay_samples"], [102, 2, 1, "", "label"]], "iqm.pulse.playlist.instructions.ComplexIntegration": [[104, 2, 1, "", "weights"]], "iqm.pulse.playlist.instructions.ConditionalInstruction": [[105, 2, 1, "", "condition"], [105, 3, 1, "", "get_child_instructions"], [105, 2, 1, "", "outcomes"], [105, 3, 1, "", "validate"]], "iqm.pulse.playlist.instructions.IQPulse": [[106, 3, 1, "", "get_waveforms"], [106, 2, 1, "", "modulation_frequency"], [106, 2, 1, "", "phase"], [106, 2, 1, "", "phase_increment"], [106, 2, 1, "", "scale_i"], [106, 2, 1, "", "scale_q"], [106, 3, 1, "", "validate"], [106, 2, 1, "", "wave_i"], [106, 2, 1, "", "wave_q"]], "iqm.pulse.playlist.instructions.Instruction": [[107, 3, 1, "", "copy"], [107, 2, 1, "", "duration"], [107, 3, 1, "", "get_child_instructions"], [107, 3, 1, "", "get_waveforms"], [107, 3, 1, "", "validate"]], "iqm.pulse.playlist.instructions.MultiplexedIQPulse": [[108, 2, 1, "", "entries"]], "iqm.pulse.playlist.instructions.ReadoutTrigger": [[109, 2, 1, "", "acquisitions"], [109, 2, 1, "", "probe_pulse"]], "iqm.pulse.playlist.instructions.RealPulse": [[110, 3, 1, "", "get_waveforms"], [110, 2, 1, "", "scale"], [110, 3, 1, "", "validate"], [110, 2, 1, "", "wave"]], "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination": [[111, 2, 1, "", "feedback_signal_label"], [111, 2, 1, "", "threshold"]], "iqm.pulse.playlist.instructions.TimeTrace": [[112, 2, 1, "", "duration_samples"]], "iqm.pulse.playlist.instructions.VirtualRZ": [[113, 2, 1, "", "phase_increment"]], "iqm.pulse.playlist.schedule": [[117, 1, 1, "", "Nothing"], [118, 1, 1, "", "Schedule"], [119, 1, 1, "", "Segment"], [120, 6, 1, "", "TOLERANCE"]], "iqm.pulse.playlist.schedule.Schedule": [[118, 3, 1, "", "add_channels"], [118, 3, 1, "", "append"], [118, 3, 1, "", "channels"], [118, 3, 1, "", "cleanup"], [118, 3, 1, "", "copy"], [118, 5, 1, "", "duration"], [118, 3, 1, "", "duration_in_seconds"], [118, 3, 1, "", "extend"], [118, 3, 1, "", "front_pad"], [118, 3, 1, "", "front_pad_in_seconds"], [118, 3, 1, "", "has_content_in"], [118, 3, 1, "", "items"], [118, 3, 1, "", "pad_to_hard_box"], [118, 3, 1, "", "pad_to_hard_box_in_seconds"], [118, 3, 1, "", "pprint"], [118, 3, 1, "", "reverse"], [118, 3, 1, "", "reverse_hard_box"], [118, 3, 1, "", "validate"]], "iqm.pulse.playlist.schedule.Segment": [[119, 2, 1, "", "_duration"], [119, 2, 1, "", "_instructions"], [119, 3, 1, "", "append"], [119, 3, 1, "", "copy"], [119, 5, 1, "", "duration"], [119, 3, 1, "", "extend"], [119, 3, 1, "", "pop"], [119, 3, 1, "", "prepend"]], "iqm.pulse.playlist.visualisation": [[122, 0, 0, "-", "base"]], "iqm.pulse.playlist.visualisation.base": [[123, 4, 1, "", "inspect_playlist"]], "iqm.pulse.playlist.waveforms": [[125, 1, 1, "", "Chirp"], [126, 1, 1, "", "ChirpImag"], [127, 1, 1, "", "Cosine"], [128, 1, 1, "", "CosineRiseFallDerivative"], [129, 1, 1, "", "ModulatedCosineRiseFall"], [130, 1, 1, "", "Slepian"]], "iqm.pulse.playlist.waveforms.Chirp": [[125, 3, 1, "", "_sample"], [125, 3, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.waveforms.ChirpImag": [[126, 2, 1, "", "phase"]], "iqm.pulse.playlist.waveforms.Cosine": [[127, 3, 1, "", "_sample"], [127, 3, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.waveforms.CosineRiseFallDerivative": [[128, 3, 1, "", "_sample"]], "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall": [[129, 3, 1, "", "_sample"], [129, 3, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.waveforms.Slepian": [[130, 3, 1, "", "_sample"], [130, 3, 1, "", "_sample_normalized_slepian"], [130, 3, 1, "", "_t_tau"], [130, 3, 1, "", "_theta_tau"], [130, 3, 1, "", "non_timelike_attributes"]], "iqm.pulse.quantum_ops": [[132, 1, 1, "", "QuantumOp"], [133, 6, 1, "", "QuantumOpTable"], [134, 4, 1, "", "validate_locus_calibration"], [135, 4, 1, "", "validate_op_calibration"]], "iqm.pulse.quantum_ops.QuantumOp": [[132, 2, 1, "", "arity"], [132, 3, 1, "", "copy"], [132, 5, 1, "", "default_implementation"], [132, 2, 1, "", "defaults_for_locus"], [132, 2, 1, "", "factorizable"], [132, 3, 1, "", "get_default_implementation_for_locus"], [132, 2, 1, "", "implementations"], [132, 2, 1, "", "name"], [132, 2, 1, "", "params"], [132, 3, 1, "", "set_default_implementation"], [132, 3, 1, "", "set_default_implementation_for_locus"], [132, 2, 1, "", "symmetric"], [132, 2, 1, "", "unitary"]], "iqm.pulse.scheduler": [[137, 6, 1, "", "BLOCKING"], [138, 6, 1, "", "NONSOLID"], [139, 1, 1, "", "SegmentPointer"], [140, 4, 1, "", "extend_hard_boundary"], [141, 4, 1, "", "extend_hard_boundary_in_seconds"], [142, 4, 1, "", "extend_schedule"], [143, 4, 1, "", "extend_schedule_new"]], "iqm.pulse.scheduler.SegmentPointer": [[139, 2, 1, "", "TOL"], [139, 3, 1, "", "cut_tail"], [139, 3, 1, "", "fastforward"], [139, 2, 1, "", "frac"], [139, 3, 1, "", "get"], [139, 2, 1, "", "idx"], [139, 3, 1, "", "next"], [139, 5, 1, "", "remainder"], [139, 3, 1, "", "rewind"], [139, 2, 1, "", "source"], [139, 3, 1, "", "tail"]], "iqm.pulse.timebox": [[145, 1, 1, "", "MultiplexedProbeTimeBox"], [146, 1, 1, "", "SchedulingAlgorithm"], [147, 1, 1, "", "SchedulingStrategy"], [148, 1, 1, "", "TimeBox"]], "iqm.pulse.timebox.MultiplexedProbeTimeBox": [[145, 3, 1, "", "from_readout_trigger"]], "iqm.pulse.timebox.SchedulingAlgorithm": [[146, 2, 1, "", "HARD_BOUNDARY"], [146, 2, 1, "", "TETRIS"]], "iqm.pulse.timebox.SchedulingStrategy": [[147, 2, 1, "", "ALAP"], [147, 2, 1, "", "ASAP"]], "iqm.pulse.timebox.TimeBox": [[148, 2, 1, "", "atom"], [148, 3, 1, "", "atomic"], [148, 2, 1, "", "children"], [148, 3, 1, "", "composite"], [148, 2, 1, "", "label"], [148, 2, 1, "", "locus_components"], [148, 2, 1, "", "neighborhood_components"], [148, 3, 1, "", "print"], [148, 2, 1, "", "scheduling"], [148, 2, 1, "", "scheduling_algorithm"], [148, 3, 1, "", "set_alap"], [148, 3, 1, "", "set_asap"], [148, 3, 1, "", "validate"]], "iqm.pulse.utils": [[150, 4, 1, "", "load_yaml"], [151, 4, 1, "", "map_waveform_param_types"], [152, 4, 1, "", "merge_dicts"], [153, 4, 1, "", "normalize_angle"], [154, 4, 1, "", "phase_transformation"]], "iqm.pulse.validation": [[156, 1, 1, "", "AWGScheduleValidationData"], [157, 7, 1, "", "AWGScheduleValidationError"], [158, 7, 1, "", "InvalidInstructionError"], [159, 7, 1, "", "PlaylistValidationError"], [160, 4, 1, "", "validate_awg_and_schedule_compatibility"], [161, 4, 1, "", "validate_channel"], [162, 4, 1, "", "validate_instruction_and_wf_length"], [163, 4, 1, "", "validate_playlist_compatibility"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:property", "6": "py:data", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"api": 0, "refer": [0, 165, 170], "puls": [1, 5, 6, 7, 10, 11, 12, 13, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 48, 50, 52, 53, 63, 64, 74, 75, 77, 78, 85, 90, 99, 100, 120, 123, 133, 134, 135, 137, 138, 140, 141, 142, 143, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 167, 169], "builder": [2, 5, 6, 7], "circuitoper": 3, "schedulebuild": [4, 171], "iqm": [5, 6, 7, 10, 11, 12, 13, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 48, 50, 52, 53, 63, 64, 74, 75, 77, 78, 85, 90, 99, 100, 120, 123, 133, 134, 135, 137, 138, 140, 141, 142, 143, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 167], "build_quantum_op": 5, "load_config": 6, "validate_quantum_circuit": 7, "circuit_oper": [8, 10, 11, 12, 13], "circuitoperationlist": 9, "get_unitary_from_circuit": 10, "get_unitary_from_op": 11, "reorder": 12, "reshape_unitari": 13, "gate_implement": [14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29], "compositeg": 15, "customiqwaveform": 16, "gateimplement": [17, 165], "locu": 18, "nestedparam": 19, "ocalibrationdata": 20, "oicalibrationdata": 21, "oilcalibrationdata": 22, "opcalibrationdatatre": 23, "probe_lines_locus_map": 24, "single_components_with_drive_locus_map": 25, "single_components_with_flux_awg_locus_map": 26, "single_components_with_readout_locus_map": 27, "singlepulseg": 28, "get_waveform_paramet": 29, "gate": [30, 48, 50, 52, 53, 63, 64, 74, 75, 77, 78, 85, 90, 166], "barrier": [31, 32], "condit": 33, "ccprx_composit": 34, "cz": 35, "cz_crf": 36, "cz_crf_acstarkcrf": 37, "cz_gaussiansmoothedsquar": 38, "cz_slepian": 39, "cz_slepian_acstarkcrf": 40, "cz_slepian_crf": 41, "cz_truncatedgaussiansmoothedsquar": 42, "couplerfluxpulsequbitacstarkpulseg": 43, "fluxpulseg": 44, "fluxpulsegate_crf_crf": 45, "fluxpulsegate_tgss_crf": 46, "enum": [47, 48, 50], "two_qubit_unitari": 48, "twoqubitg": 49, "xygate_unitari": 50, "xygat": 51, "expose_implement": 52, "get_implementation_class": 53, "measur": [54, 169], "measure_const": 55, "measure_customwaveform": 56, "probepulse_customwaveform": 57, "move": [58, 63, 64], "move_crf_crf": 59, "move_customwaveform": 60, "move_tgss_crf": 61, "movemark": 62, "apply_move_gate_phase_correct": 63, "validate_move_instruct": 64, "prx": [65, 74], "prx_customwaveform": 66, "prx_customwaveformssx": 67, "prx_dragcosinerisefal": 68, "prx_dragcosinerisefallsx": 69, "prx_draggaussian": 70, "prx_draggaussiansx": 71, "prx_gateimplement": 72, "prx_singlepulse_gateimplement": 73, "get_unitary_prx": 74, "register_implement": 75, "reset": [76, 77, 78], "reset_feedback_kei": 77, "reset_measurement_kei": 78, "reset_condit": 79, "reset_wait": 80, "rz": [81, 85], "rz_acstarkshift": 82, "rz_acstarkshift_cosinerisefal": 83, "rz_virtual": 84, "get_unitary_rz": 85, "sx": 86, "sxgate": 87, "u": [88, 90], "ugat": 89, "get_unitary_u": 90, "playlist": [91, 99, 100, 115, 120, 123, 165], "channel": [92, 99, 100], "channelconfigur": 93, "channeldescript": 94, "channelproperti": 95, "iqchannelconfig": 96, "probechannelproperti": 97, "realchannelconfig": 98, "get_channel_properti": 99, "get_channel_properties_from_station_set": 100, "instruct": [101, 107, 165], "acquisitionmethod": 102, "block": [103, 137], "complexintegr": 104, "conditionalinstruct": 105, "iqpuls": 106, "multiplexediqpuls": 108, "readouttrigg": [109, 169], "realpuls": 110, "thresholdstatediscrimin": 111, "timetrac": 112, "virtualrz": 113, "wait": 114, "schedul": [116, 118, 120, 136, 137, 138, 140, 141, 142, 143, 165, 171], "noth": 117, "segment": 119, "toler": 120, "visualis": [121, 123], "base": [122, 123], "inspect_playlist": 123, "waveform": 124, "chirp": 125, "chirpimag": 126, "cosin": 127, "cosinerisefallderiv": 128, "modulatedcosinerisefal": 129, "slepian": 130, "quantum_op": [131, 133, 134, 135], "quantumop": [132, 165], "quantumopt": 133, "validate_locus_calibr": 134, "validate_op_calibr": 135, "nonsolid": 138, "segmentpoint": 139, "extend_hard_boundari": 140, "extend_hard_boundary_in_second": 141, "extend_schedul": 142, "extend_schedule_new": 143, "timebox": [144, 148, 165, 171], "multiplexedprobetimebox": 145, "schedulingalgorithm": 146, "schedulingstrategi": 147, "util": [149, 150, 151, 152, 153, 154], "load_yaml": 150, "map_waveform_param_typ": 151, "merge_dict": 152, "normalize_angl": 153, "phase_transform": 154, "valid": [155, 157, 158, 159, 160, 161, 162, 163], "awgschedulevalidationdata": 156, "awgschedulevalidationerror": 157, "invalidinstructionerror": 158, "playlistvalidationerror": 159, "validate_awg_and_schedule_compat": 160, "validate_channel": 161, "validate_instruction_and_wf_length": 162, "validate_playlist_compat": 163, "changelog": 164, "version": 164, "7": 164, "15": 164, "2025": 164, "01": 164, "28": 164, "bug": 164, "fix": 164, "14": 164, "featur": [164, 171], "13": 164, "12": 164, "27": 164, "11": 164, "24": 164, "10": 164, "17": 164, "9": 164, "08": 164, "8": 164, "02": 164, "2024": 164, "30": 164, "6": 164, "5": 164, "4": 164, "3": 164, "09": 164, "2": 164, "05": 164, "1": 164, "04": 164, "0": 164, "29": 164, "break": 164, "chang": 164, "20": 164, "19": 164, "18": 164, "31": 164, "25": 164, "21": 164, "16": 164, "23": 164, "06": 164, "26": 164, "22": 164, "07": 164, "03": 164, "concept": 165, "class": 165, "quick": 165, "custom": 166, "implement": 166, "content": 167, "indic": 167, "tabl": 167, "licens": 168, "time": 169, "fast": 169, "feedback": 169, "us": 171, "creat": 171, "compos": 171, "resolv": 171, "miscellan": 171, "common": 171, "pitfal": 171}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinxcontrib.bibtex": 9, "sphinx": 60}, "alltitles": {"API Reference": [[0, "api-reference"]], "pulse": [[1, "module-iqm.pulse"]], "builder": [[2, "module-iqm.pulse.builder"]], "CircuitOperation": [[3, "circuitoperation"]], "ScheduleBuilder": [[4, "schedulebuilder"]], "iqm.pulse.builder.build_quantum_ops": [[5, "iqm-pulse-builder-build-quantum-ops"]], "iqm.pulse.builder.load_config": [[6, "iqm-pulse-builder-load-config"]], "iqm.pulse.builder.validate_quantum_circuit": [[7, "iqm-pulse-builder-validate-quantum-circuit"]], "circuit_operations": [[8, "module-iqm.pulse.circuit_operations"]], "CircuitOperationList": [[9, "circuitoperationlist"]], "iqm.pulse.circuit_operations.get_unitary_from_circuit": [[10, "iqm-pulse-circuit-operations-get-unitary-from-circuit"]], "iqm.pulse.circuit_operations.get_unitary_from_op": [[11, "iqm-pulse-circuit-operations-get-unitary-from-op"]], "iqm.pulse.circuit_operations.reorder": [[12, "iqm-pulse-circuit-operations-reorder"]], "iqm.pulse.circuit_operations.reshape_unitary": [[13, "iqm-pulse-circuit-operations-reshape-unitary"]], "gate_implementation": [[14, "module-iqm.pulse.gate_implementation"]], "CompositeGate": [[15, "compositegate"]], "CustomIQWaveforms": [[16, "customiqwaveforms"]], "GateImplementation": [[17, "gateimplementation"]], "iqm.pulse.gate_implementation.Locus": [[18, "iqm-pulse-gate-implementation-locus"]], "iqm.pulse.gate_implementation.NestedParams": [[19, "iqm-pulse-gate-implementation-nestedparams"]], "iqm.pulse.gate_implementation.OCalibrationData": [[20, "iqm-pulse-gate-implementation-ocalibrationdata"]], "iqm.pulse.gate_implementation.OICalibrationData": [[21, "iqm-pulse-gate-implementation-oicalibrationdata"]], "iqm.pulse.gate_implementation.OILCalibrationData": [[22, "iqm-pulse-gate-implementation-oilcalibrationdata"]], "iqm.pulse.gate_implementation.OpCalibrationDataTree": [[23, "iqm-pulse-gate-implementation-opcalibrationdatatree"]], "iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING": [[24, "iqm-pulse-gate-implementation-probe-lines-locus-mapping"]], "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING": [[25, "iqm-pulse-gate-implementation-single-components-with-drive-locus-mapping"]], "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING": [[26, "iqm-pulse-gate-implementation-single-components-with-flux-awg-locus-mapping"]], "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING": [[27, "iqm-pulse-gate-implementation-single-components-with-readout-locus-mapping"]], "SinglePulseGate": [[28, "singlepulsegate"]], "iqm.pulse.gate_implementation.get_waveform_parameters": [[29, "iqm-pulse-gate-implementation-get-waveform-parameters"]], "gates": [[30, "module-iqm.pulse.gates"]], "barrier": [[31, "module-iqm.pulse.gates.barrier"]], "Barrier": [[32, "barrier"]], "conditional": [[33, "module-iqm.pulse.gates.conditional"]], "CCPRX_Composite": [[34, "ccprx-composite"]], "cz": [[35, "module-iqm.pulse.gates.cz"]], "CZ_CRF": [[36, "cz-crf"]], "CZ_CRF_ACStarkCRF": [[37, "cz-crf-acstarkcrf"]], "CZ_GaussianSmoothedSquare": [[38, "cz-gaussiansmoothedsquare"]], "CZ_Slepian": [[39, "cz-slepian"]], "CZ_Slepian_ACStarkCRF": [[40, "cz-slepian-acstarkcrf"]], "CZ_Slepian_CRF": [[41, "cz-slepian-crf"]], "CZ_TruncatedGaussianSmoothedSquare": [[42, "cz-truncatedgaussiansmoothedsquare"]], "CouplerFluxPulseQubitACStarkPulseGate": [[43, "couplerfluxpulsequbitacstarkpulsegate"]], "FluxPulseGate": [[44, "fluxpulsegate"]], "FluxPulseGate_CRF_CRF": [[45, "fluxpulsegate-crf-crf"]], "FluxPulseGate_TGSS_CRF": [[46, "fluxpulsegate-tgss-crf"]], "enums": [[47, "module-iqm.pulse.gates.enums"]], "iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES": [[48, "iqm-pulse-gates-enums-two-qubit-unitaries"]], "TwoQubitGate": [[49, "twoqubitgate"]], "iqm.pulse.gates.enums.XYGATE_UNITARIES": [[50, "iqm-pulse-gates-enums-xygate-unitaries"]], "XYGate": [[51, "xygate"]], "iqm.pulse.gates.expose_implementation": [[52, "iqm-pulse-gates-expose-implementation"]], "iqm.pulse.gates.get_implementation_class": [[53, "iqm-pulse-gates-get-implementation-class"]], "measure": [[54, "module-iqm.pulse.gates.measure"]], "Measure_Constant": [[55, "measure-constant"]], "Measure_CustomWaveforms": [[56, "measure-customwaveforms"]], "ProbePulse_CustomWaveforms": [[57, "probepulse-customwaveforms"]], "move": [[58, "module-iqm.pulse.gates.move"]], "MOVE_CRF_CRF": [[59, "move-crf-crf"]], "MOVE_CustomWaveforms": [[60, "move-customwaveforms"]], "MOVE_TGSS_CRF": [[61, "move-tgss-crf"]], "MoveMarker": [[62, "movemarker"]], "iqm.pulse.gates.move.apply_move_gate_phase_corrections": [[63, "iqm-pulse-gates-move-apply-move-gate-phase-corrections"]], "iqm.pulse.gates.move.validate_move_instructions": [[64, "iqm-pulse-gates-move-validate-move-instructions"]], "prx": [[65, "module-iqm.pulse.gates.prx"]], "PRX_CustomWaveforms": [[66, "prx-customwaveforms"]], "PRX_CustomWaveformsSX": [[67, "prx-customwaveformssx"]], "PRX_DRAGCosineRiseFall": [[68, "prx-dragcosinerisefall"]], "PRX_DRAGCosineRiseFallSX": [[69, "prx-dragcosinerisefallsx"]], "PRX_DRAGGaussian": [[70, "prx-draggaussian"]], "PRX_DRAGGaussianSX": [[71, "prx-draggaussiansx"]], "PRX_GateImplementation": [[72, "prx-gateimplementation"]], "PRX_SinglePulse_GateImplementation": [[73, "prx-singlepulse-gateimplementation"]], "iqm.pulse.gates.prx.get_unitary_prx": [[74, "iqm-pulse-gates-prx-get-unitary-prx"]], "iqm.pulse.gates.register_implementation": [[75, "iqm-pulse-gates-register-implementation"]], "reset": [[76, "module-iqm.pulse.gates.reset"]], "iqm.pulse.gates.reset.RESET_FEEDBACK_KEY": [[77, "iqm-pulse-gates-reset-reset-feedback-key"]], "iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY": [[78, "iqm-pulse-gates-reset-reset-measurement-key"]], "Reset_Conditional": [[79, "reset-conditional"]], "Reset_Wait": [[80, "reset-wait"]], "rz": [[81, "module-iqm.pulse.gates.rz"]], "RZ_ACStarkShift": [[82, "rz-acstarkshift"]], "RZ_ACStarkShift_CosineRiseFall": [[83, "rz-acstarkshift-cosinerisefall"]], "RZ_Virtual": [[84, "rz-virtual"]], "iqm.pulse.gates.rz.get_unitary_rz": [[85, "iqm-pulse-gates-rz-get-unitary-rz"]], "sx": [[86, "module-iqm.pulse.gates.sx"]], "SXGate": [[87, "sxgate"]], "u": [[88, "module-iqm.pulse.gates.u"]], "UGate": [[89, "ugate"]], "iqm.pulse.gates.u.get_unitary_u": [[90, "iqm-pulse-gates-u-get-unitary-u"]], "playlist": [[91, "module-iqm.pulse.playlist"], [115, "module-iqm.pulse.playlist.playlist"]], "channel": [[92, "module-iqm.pulse.playlist.channel"]], "ChannelConfiguration": [[93, "channelconfiguration"]], "ChannelDescription": [[94, "channeldescription"]], "ChannelProperties": [[95, "channelproperties"]], "IQChannelConfig": [[96, "iqchannelconfig"]], "ProbeChannelProperties": [[97, "probechannelproperties"]], "RealChannelConfig": [[98, "realchannelconfig"]], "iqm.pulse.playlist.channel.get_channel_properties": [[99, "iqm-pulse-playlist-channel-get-channel-properties"]], "iqm.pulse.playlist.channel.get_channel_properties_from_station_settings": [[100, "iqm-pulse-playlist-channel-get-channel-properties-from-station-settings"]], "instructions": [[101, "module-iqm.pulse.playlist.instructions"]], "AcquisitionMethod": [[102, "acquisitionmethod"]], "Block": [[103, "block"]], "ComplexIntegration": [[104, "complexintegration"]], "ConditionalInstruction": [[105, "conditionalinstruction"]], "IQPulse": [[106, "iqpulse"]], "Instruction": [[107, "instruction"]], "MultiplexedIQPulse": [[108, "multiplexediqpulse"]], "ReadoutTrigger": [[109, "readouttrigger"]], "RealPulse": [[110, "realpulse"]], "ThresholdStateDiscrimination": [[111, "thresholdstatediscrimination"]], "TimeTrace": [[112, "timetrace"]], "VirtualRZ": [[113, "virtualrz"]], "Wait": [[114, "wait"]], "schedule": [[116, "module-iqm.pulse.playlist.schedule"]], "Nothing": [[117, "nothing"]], "Schedule": [[118, "schedule"]], "Segment": [[119, "segment"]], "iqm.pulse.playlist.schedule.TOLERANCE": [[120, "iqm-pulse-playlist-schedule-tolerance"]], "visualisation": [[121, "module-iqm.pulse.playlist.visualisation"]], "base": [[122, "module-iqm.pulse.playlist.visualisation.base"]], "iqm.pulse.playlist.visualisation.base.inspect_playlist": [[123, "iqm-pulse-playlist-visualisation-base-inspect-playlist"]], "waveforms": [[124, "module-iqm.pulse.playlist.waveforms"]], "Chirp": [[125, "chirp"]], "ChirpImag": [[126, "chirpimag"]], "Cosine": [[127, "cosine"]], "CosineRiseFallDerivative": [[128, "cosinerisefallderivative"]], "ModulatedCosineRiseFall": [[129, "modulatedcosinerisefall"]], "Slepian": [[130, "slepian"]], "quantum_ops": [[131, "module-iqm.pulse.quantum_ops"]], "QuantumOp": [[132, "quantumop"]], "iqm.pulse.quantum_ops.QuantumOpTable": [[133, "iqm-pulse-quantum-ops-quantumoptable"]], "iqm.pulse.quantum_ops.validate_locus_calibration": [[134, "iqm-pulse-quantum-ops-validate-locus-calibration"]], "iqm.pulse.quantum_ops.validate_op_calibration": [[135, "iqm-pulse-quantum-ops-validate-op-calibration"]], "scheduler": [[136, "module-iqm.pulse.scheduler"]], "iqm.pulse.scheduler.BLOCKING": [[137, "iqm-pulse-scheduler-blocking"]], "iqm.pulse.scheduler.NONSOLID": [[138, "iqm-pulse-scheduler-nonsolid"]], "SegmentPointer": [[139, "segmentpointer"]], "iqm.pulse.scheduler.extend_hard_boundary": [[140, "iqm-pulse-scheduler-extend-hard-boundary"]], "iqm.pulse.scheduler.extend_hard_boundary_in_seconds": [[141, "iqm-pulse-scheduler-extend-hard-boundary-in-seconds"]], "iqm.pulse.scheduler.extend_schedule": [[142, "iqm-pulse-scheduler-extend-schedule"]], "iqm.pulse.scheduler.extend_schedule_new": [[143, "iqm-pulse-scheduler-extend-schedule-new"]], "timebox": [[144, "module-iqm.pulse.timebox"]], "MultiplexedProbeTimeBox": [[145, "multiplexedprobetimebox"]], "SchedulingAlgorithm": [[146, "schedulingalgorithm"]], "SchedulingStrategy": [[147, "schedulingstrategy"]], "TimeBox": [[148, "timebox"]], "utils": [[149, "module-iqm.pulse.utils"]], "iqm.pulse.utils.load_yaml": [[150, "iqm-pulse-utils-load-yaml"]], "iqm.pulse.utils.map_waveform_param_types": [[151, "iqm-pulse-utils-map-waveform-param-types"]], "iqm.pulse.utils.merge_dicts": [[152, "iqm-pulse-utils-merge-dicts"]], "iqm.pulse.utils.normalize_angle": [[153, "iqm-pulse-utils-normalize-angle"]], "iqm.pulse.utils.phase_transformation": [[154, "iqm-pulse-utils-phase-transformation"]], "validation": [[155, "module-iqm.pulse.validation"]], "AWGScheduleValidationData": [[156, "awgschedulevalidationdata"]], "iqm.pulse.validation.AWGScheduleValidationError": [[157, "iqm-pulse-validation-awgschedulevalidationerror"]], "iqm.pulse.validation.InvalidInstructionError": [[158, "iqm-pulse-validation-invalidinstructionerror"]], "iqm.pulse.validation.PlaylistValidationError": [[159, "iqm-pulse-validation-playlistvalidationerror"]], "iqm.pulse.validation.validate_awg_and_schedule_compatibility": [[160, "iqm-pulse-validation-validate-awg-and-schedule-compatibility"]], "iqm.pulse.validation.validate_channel": [[161, "iqm-pulse-validation-validate-channel"]], "iqm.pulse.validation.validate_instruction_and_wf_length": [[162, "iqm-pulse-validation-validate-instruction-and-wf-length"]], "iqm.pulse.validation.validate_playlist_compatibility": [[163, "iqm-pulse-validation-validate-playlist-compatibility"]], "Changelog": [[164, "changelog"]], "Version 7.15 (2025-01-28)": [[164, "version-7-15-2025-01-28"]], "Bug fix": [[164, "bug-fix"], [164, "id10"]], "Version 7.14 (2025-01-28)": [[164, "version-7-14-2025-01-28"]], "Features": [[164, "features"], [164, "id1"], [164, "id2"], [164, "id3"], [164, "id4"], [164, "id5"], [164, "id6"], [164, "id7"], [164, "id8"], [164, "id9"], [164, "id11"], [164, "id12"], [164, "id13"], [164, "id14"], [164, "id15"], [164, "id16"], [164, "id17"], [164, "id21"], [164, "id23"], [164, "id26"], [164, "id28"], [164, "id29"], [164, "id31"], [164, "id34"], [164, "id37"], [164, "id39"], [164, "id40"], [164, "id41"], [164, "id42"], [164, "id43"], [164, "id44"], [164, "id45"], [164, "id47"], [164, "id48"], [164, "id49"], [164, "id50"], [164, "id51"], [164, "id52"], [164, "id53"], [164, "id54"], [164, "id55"], [164, "id56"], [164, "id58"], [164, "id59"], [164, "id61"], [164, "id62"], [164, "id63"]], "Version 7.13 (2025-01-28)": [[164, "version-7-13-2025-01-28"]], "Version 7.12 (2025-01-27)": [[164, "version-7-12-2025-01-27"]], "Version 7.11 (2025-01-24)": [[164, "version-7-11-2025-01-24"]], "Version 7.10 (2025-01-17)": [[164, "version-7-10-2025-01-17"]], "Version 7.9 (2025-01-08)": [[164, "version-7-9-2025-01-08"]], "Version 7.8 (2025-01-02)": [[164, "version-7-8-2025-01-02"]], "Version 7.7 (2024-12-30)": [[164, "version-7-7-2024-12-30"]], "Version 7.6 (2024-12-30)": [[164, "version-7-6-2024-12-30"]], "Version 7.5 (2024-12-12)": [[164, "version-7-5-2024-12-12"]], "Version 7.4 (2024-12-10)": [[164, "version-7-4-2024-12-10"]], "Version 7.3 (2024-12-09)": [[164, "version-7-3-2024-12-09"]], "Version 7.2 (2024-12-05)": [[164, "version-7-2-2024-12-05"]], "Version 7.1 (2024-12-04)": [[164, "version-7-1-2024-12-04"]], "Version 7.0 (2024-11-29)": [[164, "version-7-0-2024-11-29"]], "Breaking changes": [[164, "breaking-changes"], [164, "id27"], [164, "id36"], [164, "id38"], [164, "id46"], [164, "id60"]], "Bug fixes": [[164, "bug-fixes"], [164, "id18"], [164, "id19"], [164, "id20"], [164, "id22"], [164, "id24"], [164, "id25"], [164, "id30"], [164, "id32"], [164, "id33"], [164, "id35"], [164, "id57"]], "Version 6.14 (2024-11-27)": [[164, "version-6-14-2024-11-27"]], "Version 6.13 (2024-11-20)": [[164, "version-6-13-2024-11-20"]], "Version 6.12 (2024-11-19)": [[164, "version-6-12-2024-11-19"]], "Version 6.11 (2024-11-18)": [[164, "version-6-11-2024-11-18"]], "Version 6.10 (2024-11-15)": [[164, "version-6-10-2024-11-15"]], "Version 6.9 (2024-11-13)": [[164, "version-6-9-2024-11-13"]], "Version 6.8 (2024-11-12)": [[164, "version-6-8-2024-11-12"]], "Version 6.7 (2024-11-12)": [[164, "version-6-7-2024-11-12"]], "Version 6.6 (2024-11-08)": [[164, "version-6-6-2024-11-08"]], "Version 6.5 (2024-10-31)": [[164, "version-6-5-2024-10-31"]], "Version 6.4 (2024-10-30)": [[164, "version-6-4-2024-10-30"]], "Version 6.3 (2024-10-30)": [[164, "version-6-3-2024-10-30"]], "Version 6.2 (2024-10-28)": [[164, "version-6-2-2024-10-28"]], "Version 6.1 (2024-10-28)": [[164, "version-6-1-2024-10-28"]], "Version 6.0 (2024-10-25)": [[164, "version-6-0-2024-10-25"]], "Version 5.9 (2024-10-24)": [[164, "version-5-9-2024-10-24"]], "Version 5.8 (2024-10-21)": [[164, "version-5-8-2024-10-21"]], "Version 5.7 (2024-10-16)": [[164, "version-5-7-2024-10-16"]], "Version 5.6 (2024-10-16)": [[164, "version-5-6-2024-10-16"]], "Version 5.5 (2024-10-15)": [[164, "version-5-5-2024-10-15"]], "Version 5.4 (2024-10-15)": [[164, "version-5-4-2024-10-15"]], "Version 5.3 (2024-10-11)": [[164, "version-5-3-2024-10-11"]], "Version 5.2 (2024-10-11)": [[164, "version-5-2-2024-10-11"]], "Version 5.1 (2024-10-11)": [[164, "version-5-1-2024-10-11"]], "Version 5.0 (2024-10-08)": [[164, "version-5-0-2024-10-08"]], "Version 4.0 (2024-10-02)": [[164, "version-4-0-2024-10-02"]], "Version 3.5 (2024-09-25)": [[164, "version-3-5-2024-09-25"]], "Version 3.4 (2024-09-23)": [[164, "version-3-4-2024-09-23"]], "Version 3.3 (2024-09-19)": [[164, "version-3-3-2024-09-19"]], "Version 3.2 (2024-09-11)": [[164, "version-3-2-2024-09-11"]], "Version 3.1 (2024-09-11)": [[164, "version-3-1-2024-09-11"]], "Version 3.0 (2024-09-06)": [[164, "version-3-0-2024-09-06"]], "Version 2.13 (2024-09-04)": [[164, "version-2-13-2024-09-04"]], "Version 2.12 (2024-08-27)": [[164, "version-2-12-2024-08-27"]], "Version 2.11 (2024-08-26)": [[164, "version-2-11-2024-08-26"]], "Version 2.10 (2024-08-26)": [[164, "version-2-10-2024-08-26"]], "Version 2.9 (2024-08-23)": [[164, "version-2-9-2024-08-23"]], "Version 2.8 (2024-08-22)": [[164, "version-2-8-2024-08-22"]], "Version 2.7 (2024-08-16)": [[164, "version-2-7-2024-08-16"]], "Version 2.6 (2024-08-16)": [[164, "version-2-6-2024-08-16"]], "Version 2.5 (2024-08-15)": [[164, "version-2-5-2024-08-15"]], "Version 2.4 (2024-08-09)": [[164, "version-2-4-2024-08-09"]], "Version 2.3 (2024-08-05)": [[164, "version-2-3-2024-08-05"]], "Version 2.2 (2024-07-29)": [[164, "version-2-2-2024-07-29"]], "Version 2.1 (2024-07-23)": [[164, "version-2-1-2024-07-23"]], "Version 2.0 (2024-07-15)": [[164, "version-2-0-2024-07-15"]], "Version 1.6 (2024-07-12)": [[164, "version-1-6-2024-07-12"]], "Version 1.5 (2024-07-05)": [[164, "version-1-5-2024-07-05"]], "Version 1.4 (2024-07-04)": [[164, "version-1-4-2024-07-04"]], "Version 1.3 (2024-07-04)": [[164, "version-1-3-2024-07-04"]], "Version 1.2 (2024-07-03)": [[164, "version-1-2-2024-07-03"]], "Version 1.1 (2024-07-02)": [[164, "version-1-1-2024-07-02"]], "Version 1.0 (2024-07-01)": [[164, "version-1-0-2024-07-01"]], "Concepts and Classes": [[165, "concepts-and-classes"]], "Quick reference": [[165, "quick-reference"]], "Instructions": [[165, "instructions"]], "Schedules": [[165, "schedules"]], "TimeBoxes": [[165, "timeboxes"]], "QuantumOps": [[165, "quantumops"]], "GateImplementations": [[165, "gateimplementations"]], "Playlists": [[165, "playlists"]], "Custom gate implementations": [[166, "custom-gate-implementations"]], "IQM Pulse": [[167, "iqm-pulse"]], "Contents": [[167, "contents"]], "Indices and tables": [[167, "indices-and-tables"]], "License": [[168, "license"]], "Pulse timing": [[169, "pulse-timing"]], "Measure and ReadoutTrigger": [[169, "measure-and-readouttrigger"]], "Fast feedback timing": [[169, "fast-feedback-timing"]], "References": [[170, "references"]], "Using ScheduleBuilder": [[171, "using-schedulebuilder"]], "Creating TimeBoxes": [[171, "creating-timeboxes"]], "Composing TimeBoxes": [[171, "composing-timeboxes"]], "Resolving TimeBoxes into a Schedule": [[171, "resolving-timeboxes-into-a-schedule"]], "Miscellaneous features": [[171, "miscellaneous-features"]], "Common pitfalls": [[171, "common-pitfalls"]]}, "indexentries": {"iqm.pulse": [[1, "module-iqm.pulse"]], "module": [[1, "module-iqm.pulse"], [2, "module-iqm.pulse.builder"], [8, "module-iqm.pulse.circuit_operations"], [14, "module-iqm.pulse.gate_implementation"], [30, "module-iqm.pulse.gates"], [31, "module-iqm.pulse.gates.barrier"], [33, "module-iqm.pulse.gates.conditional"], [35, "module-iqm.pulse.gates.cz"], [47, "module-iqm.pulse.gates.enums"], [54, "module-iqm.pulse.gates.measure"], [58, "module-iqm.pulse.gates.move"], [65, "module-iqm.pulse.gates.prx"], [76, "module-iqm.pulse.gates.reset"], [81, "module-iqm.pulse.gates.rz"], [86, "module-iqm.pulse.gates.sx"], [88, "module-iqm.pulse.gates.u"], [91, "module-iqm.pulse.playlist"], [92, "module-iqm.pulse.playlist.channel"], [101, "module-iqm.pulse.playlist.instructions"], [115, "module-iqm.pulse.playlist.playlist"], [116, "module-iqm.pulse.playlist.schedule"], [121, "module-iqm.pulse.playlist.visualisation"], [122, "module-iqm.pulse.playlist.visualisation.base"], [124, "module-iqm.pulse.playlist.waveforms"], [131, "module-iqm.pulse.quantum_ops"], [136, "module-iqm.pulse.scheduler"], [144, "module-iqm.pulse.timebox"], [149, "module-iqm.pulse.utils"], [155, "module-iqm.pulse.validation"]], "iqm.pulse.builder": [[2, "module-iqm.pulse.builder"]], "circuitoperation (class in iqm.pulse.builder)": [[3, "iqm.pulse.builder.CircuitOperation"]], "args (iqm.pulse.builder.circuitoperation attribute)": [[3, "iqm.pulse.builder.CircuitOperation.args"]], "implementation (iqm.pulse.builder.circuitoperation attribute)": [[3, "iqm.pulse.builder.CircuitOperation.implementation"]], "locus (iqm.pulse.builder.circuitoperation attribute)": [[3, "iqm.pulse.builder.CircuitOperation.locus"]], "name (iqm.pulse.builder.circuitoperation attribute)": [[3, "iqm.pulse.builder.CircuitOperation.name"]], "validate() (iqm.pulse.builder.circuitoperation method)": [[3, "iqm.pulse.builder.CircuitOperation.validate"]], "schedulebuilder (class in iqm.pulse.builder)": [[4, "iqm.pulse.builder.ScheduleBuilder"]], "_block_neighborhood_tetris() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder._block_neighborhood_tetris"]], "_cache (iqm.pulse.builder.schedulebuilder attribute)": [[4, "iqm.pulse.builder.ScheduleBuilder._cache"]], "_channel_templates (iqm.pulse.builder.schedulebuilder attribute)": [[4, "iqm.pulse.builder.ScheduleBuilder._channel_templates"]], "_channel_to_component (iqm.pulse.builder.schedulebuilder attribute)": [[4, "iqm.pulse.builder.ScheduleBuilder._channel_to_component"]], "_channel_types (iqm.pulse.builder.schedulebuilder attribute)": [[4, "iqm.pulse.builder.ScheduleBuilder._channel_types"]], "_find_implementation_and_locus() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder._find_implementation_and_locus"]], "_finish_schedule() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder._finish_schedule"]], "_get_channel_for_component() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder._get_channel_for_component"]], "_get_implementation() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder._get_implementation"]], "_get_neighborhood_hard_boundary() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder._get_neighborhood_hard_boundary"]], "_require_scheduling_in_seconds (iqm.pulse.builder.schedulebuilder attribute)": [[4, "iqm.pulse.builder.ScheduleBuilder._require_scheduling_in_seconds"]], "_resolve_timebox_hard_boundary() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder._resolve_timebox_hard_boundary"]], "_resolve_timebox_tetris() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder._resolve_timebox_tetris"]], "_set_gate_implementation_shortcut() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder._set_gate_implementation_shortcut"]], "build_playlist() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.build_playlist"]], "circuit_to_timebox() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.circuit_to_timebox"]], "get_calibration() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.get_calibration"]], "get_control_channels() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.get_control_channels"]], "get_drive_channel() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.get_drive_channel"]], "get_flux_channel() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.get_flux_channel"]], "get_implementation() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.get_implementation"]], "get_implementation_class() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.get_implementation_class"]], "get_probe_channel() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.get_probe_channel"]], "get_virtual_feedback_channel_for() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.get_virtual_feedback_channel_for"]], "get_virtual_feedback_channels() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.get_virtual_feedback_channels"]], "has_calibration() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.has_calibration"]], "inject_calibration() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.inject_calibration"]], "resolve_timebox() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.resolve_timebox"]], "timebox_to_schedule() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.timebox_to_schedule"]], "timeboxes_to_front_padded_playlist() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.timeboxes_to_front_padded_playlist"]], "timeboxes_to_playlist() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.timeboxes_to_playlist"]], "validate_calibration() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.validate_calibration"]], "validate_quantum_circuit() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.validate_quantum_circuit"]], "wait() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.wait"]], "build_quantum_ops() (in module iqm.pulse.builder)": [[5, "iqm.pulse.builder.build_quantum_ops"]], "load_config() (in module iqm.pulse.builder)": [[6, "iqm.pulse.builder.load_config"]], "validate_quantum_circuit() (in module iqm.pulse.builder)": [[7, "iqm.pulse.builder.validate_quantum_circuit"]], "iqm.pulse.circuit_operations": [[8, "module-iqm.pulse.circuit_operations"]], "circuitoperationlist (class in iqm.pulse.circuit_operations)": [[9, "iqm.pulse.circuit_operations.CircuitOperationList"]], "_set_specific_operation_shortcut() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[9, "iqm.pulse.circuit_operations.CircuitOperationList._set_specific_operation_shortcut"]], "add_op() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[9, "iqm.pulse.circuit_operations.CircuitOperationList.add_op"]], "add_qubits() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[9, "iqm.pulse.circuit_operations.CircuitOperationList.add_qubits"]], "barrier() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[9, "iqm.pulse.circuit_operations.CircuitOperationList.barrier"]], "compose() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[9, "iqm.pulse.circuit_operations.CircuitOperationList.compose"]], "count_ops() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[9, "iqm.pulse.circuit_operations.CircuitOperationList.count_ops"]], "find_qubits() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[9, "iqm.pulse.circuit_operations.CircuitOperationList.find_qubits"]], "get_unitary() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[9, "iqm.pulse.circuit_operations.CircuitOperationList.get_unitary"]], "map_loci() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[9, "iqm.pulse.circuit_operations.CircuitOperationList.map_loci"]], "get_unitary_from_circuit() (in module iqm.pulse.circuit_operations)": [[10, "iqm.pulse.circuit_operations.get_unitary_from_circuit"]], "get_unitary_from_op() (in module iqm.pulse.circuit_operations)": [[11, "iqm.pulse.circuit_operations.get_unitary_from_op"]], "reorder() (in module iqm.pulse.circuit_operations)": [[12, "iqm.pulse.circuit_operations.reorder"]], "reshape_unitary() (in module iqm.pulse.circuit_operations)": [[13, "iqm.pulse.circuit_operations.reshape_unitary"]], "iqm.pulse.gate_implementation": [[14, "module-iqm.pulse.gate_implementation"]], "compositegate (class in iqm.pulse.gate_implementation)": [[15, "iqm.pulse.gate_implementation.CompositeGate"]], "build() (iqm.pulse.gate_implementation.compositegate method)": [[15, "iqm.pulse.gate_implementation.CompositeGate.build"]], "default_implementations (iqm.pulse.gate_implementation.compositegate attribute)": [[15, "iqm.pulse.gate_implementation.CompositeGate.default_implementations"]], "registered_gates (iqm.pulse.gate_implementation.compositegate attribute)": [[15, "iqm.pulse.gate_implementation.CompositeGate.registered_gates"]], "customiqwaveforms (class in iqm.pulse.gate_implementation)": [[16, "iqm.pulse.gate_implementation.CustomIQWaveforms"]], "dependent_waves (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[16, "iqm.pulse.gate_implementation.CustomIQWaveforms.dependent_waves"]], "excluded_parameters (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[16, "iqm.pulse.gate_implementation.CustomIQWaveforms.excluded_parameters"]], "root_parameters (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[16, "iqm.pulse.gate_implementation.CustomIQWaveforms.root_parameters"]], "wave_i (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[16, "iqm.pulse.gate_implementation.CustomIQWaveforms.wave_i"]], "wave_q (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[16, "iqm.pulse.gate_implementation.CustomIQWaveforms.wave_q"]], "gateimplementation (class in iqm.pulse.gate_implementation)": [[17, "iqm.pulse.gate_implementation.GateImplementation"]], "_call() (iqm.pulse.gate_implementation.gateimplementation method)": [[17, "iqm.pulse.gate_implementation.GateImplementation._call"]], "build() (iqm.pulse.gate_implementation.gateimplementation method)": [[17, "iqm.pulse.gate_implementation.GateImplementation.build"]], "convert_calibration_data() (iqm.pulse.gate_implementation.gateimplementation class method)": [[17, "iqm.pulse.gate_implementation.GateImplementation.convert_calibration_data"]], "duration_in_seconds() (iqm.pulse.gate_implementation.gateimplementation method)": [[17, "iqm.pulse.gate_implementation.GateImplementation.duration_in_seconds"]], "get_custom_locus_mapping() (iqm.pulse.gate_implementation.gateimplementation class method)": [[17, "iqm.pulse.gate_implementation.GateImplementation.get_custom_locus_mapping"]], "get_locus_mapping_name() (iqm.pulse.gate_implementation.gateimplementation class method)": [[17, "iqm.pulse.gate_implementation.GateImplementation.get_locus_mapping_name"]], "get_parameters() (iqm.pulse.gate_implementation.gateimplementation class method)": [[17, "iqm.pulse.gate_implementation.GateImplementation.get_parameters"]], "needs_calibration() (iqm.pulse.gate_implementation.gateimplementation class method)": [[17, "iqm.pulse.gate_implementation.GateImplementation.needs_calibration"]], "parameters (iqm.pulse.gate_implementation.gateimplementation attribute)": [[17, "iqm.pulse.gate_implementation.GateImplementation.parameters"]], "qualified_name (iqm.pulse.gate_implementation.gateimplementation property)": [[17, "iqm.pulse.gate_implementation.GateImplementation.qualified_name"]], "special_implementation (iqm.pulse.gate_implementation.gateimplementation attribute)": [[17, "iqm.pulse.gate_implementation.GateImplementation.special_implementation"]], "symmetric (iqm.pulse.gate_implementation.gateimplementation attribute)": [[17, "iqm.pulse.gate_implementation.GateImplementation.symmetric"]], "to_timebox() (iqm.pulse.gate_implementation.gateimplementation method)": [[17, "iqm.pulse.gate_implementation.GateImplementation.to_timebox"]], "locus (in module iqm.pulse.gate_implementation)": [[18, "iqm.pulse.gate_implementation.Locus"]], "nestedparams (in module iqm.pulse.gate_implementation)": [[19, "iqm.pulse.gate_implementation.NestedParams"]], "ocalibrationdata (in module iqm.pulse.gate_implementation)": [[20, "iqm.pulse.gate_implementation.OCalibrationData"]], "oicalibrationdata (in module iqm.pulse.gate_implementation)": [[21, "iqm.pulse.gate_implementation.OICalibrationData"]], "oilcalibrationdata (in module iqm.pulse.gate_implementation)": [[22, "iqm.pulse.gate_implementation.OILCalibrationData"]], "opcalibrationdatatree (in module iqm.pulse.gate_implementation)": [[23, "iqm.pulse.gate_implementation.OpCalibrationDataTree"]], "probe_lines_locus_mapping (in module iqm.pulse.gate_implementation)": [[24, "iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING"]], "single_components_with_drive_locus_mapping (in module iqm.pulse.gate_implementation)": [[25, "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING"]], "single_components_with_flux_awg_locus_mapping (in module iqm.pulse.gate_implementation)": [[26, "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING"]], "single_components_with_readout_locus_mapping (in module iqm.pulse.gate_implementation)": [[27, "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING"]], "singlepulsegate (class in iqm.pulse.gate_implementation)": [[28, "iqm.pulse.gate_implementation.SinglePulseGate"]], "_call() (iqm.pulse.gate_implementation.singlepulsegate method)": [[28, "iqm.pulse.gate_implementation.SinglePulseGate._call"]], "_get_pulse() (iqm.pulse.gate_implementation.singlepulsegate method)": [[28, "iqm.pulse.gate_implementation.SinglePulseGate._get_pulse"]], "_get_pulse_channel() (iqm.pulse.gate_implementation.singlepulsegate method)": [[28, "iqm.pulse.gate_implementation.SinglePulseGate._get_pulse_channel"]], "duration_in_seconds() (iqm.pulse.gate_implementation.singlepulsegate method)": [[28, "iqm.pulse.gate_implementation.SinglePulseGate.duration_in_seconds"]], "get_waveform_parameters() (in module iqm.pulse.gate_implementation)": [[29, "iqm.pulse.gate_implementation.get_waveform_parameters"]], "iqm.pulse.gates": [[30, "module-iqm.pulse.gates"]], "iqm.pulse.gates.barrier": [[31, "module-iqm.pulse.gates.barrier"]], "barrier (class in iqm.pulse.gates.barrier)": [[32, "iqm.pulse.gates.barrier.Barrier"]], "_call() (iqm.pulse.gates.barrier.barrier method)": [[32, "iqm.pulse.gates.barrier.Barrier._call"]], "duration_in_seconds() (iqm.pulse.gates.barrier.barrier method)": [[32, "iqm.pulse.gates.barrier.Barrier.duration_in_seconds"]], "symmetric (iqm.pulse.gates.barrier.barrier attribute)": [[32, "iqm.pulse.gates.barrier.Barrier.symmetric"]], "iqm.pulse.gates.conditional": [[33, "module-iqm.pulse.gates.conditional"]], "ccprx_composite (class in iqm.pulse.gates.conditional)": [[34, "iqm.pulse.gates.conditional.CCPRX_Composite"]], "_call() (iqm.pulse.gates.conditional.ccprx_composite method)": [[34, "iqm.pulse.gates.conditional.CCPRX_Composite._call"]], "parameters (iqm.pulse.gates.conditional.ccprx_composite attribute)": [[34, "iqm.pulse.gates.conditional.CCPRX_Composite.parameters"]], "iqm.pulse.gates.cz": [[35, "module-iqm.pulse.gates.cz"]], "cz_crf (class in iqm.pulse.gates.cz)": [[36, "iqm.pulse.gates.cz.CZ_CRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_crf attribute)": [[36, "iqm.pulse.gates.cz.CZ_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_crf attribute)": [[36, "iqm.pulse.gates.cz.CZ_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_crf attribute)": [[36, "iqm.pulse.gates.cz.CZ_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_crf attribute)": [[36, "iqm.pulse.gates.cz.CZ_CRF.symmetric"]], "cz_crf_acstarkcrf (class in iqm.pulse.gates.cz)": [[37, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[37, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[37, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.parameters"]], "qubit_drive_wave (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[37, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.qubit_drive_wave"]], "symmetric (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[37, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.symmetric"]], "cz_gaussiansmoothedsquare (class in iqm.pulse.gates.cz)": [[38, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare"]], "coupler_wave (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[38, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[38, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[38, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[38, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.symmetric"]], "cz_slepian (class in iqm.pulse.gates.cz)": [[39, "iqm.pulse.gates.cz.CZ_Slepian"]], "coupler_wave (iqm.pulse.gates.cz.cz_slepian attribute)": [[39, "iqm.pulse.gates.cz.CZ_Slepian.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_slepian attribute)": [[39, "iqm.pulse.gates.cz.CZ_Slepian.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_slepian attribute)": [[39, "iqm.pulse.gates.cz.CZ_Slepian.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_slepian attribute)": [[39, "iqm.pulse.gates.cz.CZ_Slepian.symmetric"]], "cz_slepian_acstarkcrf (class in iqm.pulse.gates.cz)": [[40, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[40, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[40, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.parameters"]], "qubit_drive_wave (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[40, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.qubit_drive_wave"]], "symmetric (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[40, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.symmetric"]], "cz_slepian_crf (class in iqm.pulse.gates.cz)": [[41, "iqm.pulse.gates.cz.CZ_Slepian_CRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[41, "iqm.pulse.gates.cz.CZ_Slepian_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[41, "iqm.pulse.gates.cz.CZ_Slepian_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[41, "iqm.pulse.gates.cz.CZ_Slepian_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[41, "iqm.pulse.gates.cz.CZ_Slepian_CRF.symmetric"]], "cz_truncatedgaussiansmoothedsquare (class in iqm.pulse.gates.cz)": [[42, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare"]], "coupler_wave (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[42, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[42, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[42, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[42, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.symmetric"]], "couplerfluxpulsequbitacstarkpulsegate (class in iqm.pulse.gates.cz)": [[43, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate"]], "_ac_stark_pulse() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate class method)": [[43, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate._ac_stark_pulse"]], "_call() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate method)": [[43, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate._call"]], "coupler_wave (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate attribute)": [[43, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.coupler_wave"]], "duration_in_seconds() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate method)": [[43, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.duration_in_seconds"]], "excluded_parameters (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate attribute)": [[43, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.excluded_parameters"]], "get_locus_mapping_name() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate class method)": [[43, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.get_locus_mapping_name"]], "qubit_drive_wave (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate attribute)": [[43, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.qubit_drive_wave"]], "fluxpulsegate (class in iqm.pulse.gates.cz)": [[44, "iqm.pulse.gates.cz.FluxPulseGate"]], "_call() (iqm.pulse.gates.cz.fluxpulsegate method)": [[44, "iqm.pulse.gates.cz.FluxPulseGate._call"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[44, "iqm.pulse.gates.cz.FluxPulseGate.coupler_wave"]], "duration_in_seconds() (iqm.pulse.gates.cz.fluxpulsegate method)": [[44, "iqm.pulse.gates.cz.FluxPulseGate.duration_in_seconds"]], "excluded_parameters (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[44, "iqm.pulse.gates.cz.FluxPulseGate.excluded_parameters"]], "get_locus_mapping_name() (iqm.pulse.gates.cz.fluxpulsegate class method)": [[44, "iqm.pulse.gates.cz.FluxPulseGate.get_locus_mapping_name"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[44, "iqm.pulse.gates.cz.FluxPulseGate.qubit_wave"]], "root_parameters (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[44, "iqm.pulse.gates.cz.FluxPulseGate.root_parameters"]], "fluxpulsegate_crf_crf (class in iqm.pulse.gates.cz)": [[45, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[45, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[45, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[45, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[45, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.symmetric"]], "fluxpulsegate_tgss_crf (class in iqm.pulse.gates.cz)": [[46, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[46, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[46, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[46, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[46, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.symmetric"]], "iqm.pulse.gates.enums": [[47, "module-iqm.pulse.gates.enums"]], "two_qubit_unitaries (in module iqm.pulse.gates.enums)": [[48, "iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES"]], "cz (iqm.pulse.gates.enums.twoqubitgate attribute)": [[49, "iqm.pulse.gates.enums.TwoQubitGate.CZ"]], "iswap (iqm.pulse.gates.enums.twoqubitgate attribute)": [[49, "iqm.pulse.gates.enums.TwoQubitGate.ISWAP"]], "sqrt_iswap (iqm.pulse.gates.enums.twoqubitgate attribute)": [[49, "iqm.pulse.gates.enums.TwoQubitGate.SQRT_ISWAP"]], "twoqubitgate (class in iqm.pulse.gates.enums)": [[49, "iqm.pulse.gates.enums.TwoQubitGate"]], "xygate_unitaries (in module iqm.pulse.gates.enums)": [[50, "iqm.pulse.gates.enums.XYGATE_UNITARIES"]], "xygate (class in iqm.pulse.gates.enums)": [[51, "iqm.pulse.gates.enums.XYGate"]], "expose_implementation() (in module iqm.pulse.gates)": [[52, "iqm.pulse.gates.expose_implementation"]], "get_implementation_class() (in module iqm.pulse.gates)": [[53, "iqm.pulse.gates.get_implementation_class"]], "iqm.pulse.gates.measure": [[54, "module-iqm.pulse.gates.measure"]], "measure_constant (class in iqm.pulse.gates.measure)": [[55, "iqm.pulse.gates.measure.Measure_Constant"]], "dependent_waves (iqm.pulse.gates.measure.measure_constant attribute)": [[55, "iqm.pulse.gates.measure.Measure_Constant.dependent_waves"]], "parameters (iqm.pulse.gates.measure.measure_constant attribute)": [[55, "iqm.pulse.gates.measure.Measure_Constant.parameters"]], "wave_i (iqm.pulse.gates.measure.measure_constant attribute)": [[55, "iqm.pulse.gates.measure.Measure_Constant.wave_i"]], "wave_q (iqm.pulse.gates.measure.measure_constant attribute)": [[55, "iqm.pulse.gates.measure.Measure_Constant.wave_q"]], "measure_customwaveforms (class in iqm.pulse.gates.measure)": [[56, "iqm.pulse.gates.measure.Measure_CustomWaveforms"]], "_build_instructions() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[56, "iqm.pulse.gates.measure.Measure_CustomWaveforms._build_instructions"]], "_call() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[56, "iqm.pulse.gates.measure.Measure_CustomWaveforms._call"]], "_multiplexed_timeboxes (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[56, "iqm.pulse.gates.measure.Measure_CustomWaveforms._multiplexed_timeboxes"]], "_time_traces (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[56, "iqm.pulse.gates.measure.Measure_CustomWaveforms._time_traces"]], "dependent_waves (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[56, "iqm.pulse.gates.measure.Measure_CustomWaveforms.dependent_waves"]], "duration_in_seconds() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[56, "iqm.pulse.gates.measure.Measure_CustomWaveforms.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.measure.measure_customwaveforms class method)": [[56, "iqm.pulse.gates.measure.Measure_CustomWaveforms.get_locus_mapping_name"]], "probe_timebox() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[56, "iqm.pulse.gates.measure.Measure_CustomWaveforms.probe_timebox"]], "root_parameters (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[56, "iqm.pulse.gates.measure.Measure_CustomWaveforms.root_parameters"]], "time_trace() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[56, "iqm.pulse.gates.measure.Measure_CustomWaveforms.time_trace"]], "probepulse_customwaveforms (class in iqm.pulse.gates.measure)": [[57, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms"]], "_build_instructions() (iqm.pulse.gates.measure.probepulse_customwaveforms method)": [[57, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms._build_instructions"]], "_call() (iqm.pulse.gates.measure.probepulse_customwaveforms method)": [[57, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms._call"]], "dependent_waves (iqm.pulse.gates.measure.probepulse_customwaveforms attribute)": [[57, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.dependent_waves"]], "duration_in_seconds() (iqm.pulse.gates.measure.probepulse_customwaveforms method)": [[57, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.measure.probepulse_customwaveforms class method)": [[57, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.get_locus_mapping_name"]], "root_parameters (iqm.pulse.gates.measure.probepulse_customwaveforms attribute)": [[57, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.root_parameters"]], "iqm.pulse.gates.move": [[58, "module-iqm.pulse.gates.move"]], "move_crf_crf (class in iqm.pulse.gates.move)": [[59, "iqm.pulse.gates.move.MOVE_CRF_CRF"]], "coupler_wave (iqm.pulse.gates.move.move_crf_crf attribute)": [[59, "iqm.pulse.gates.move.MOVE_CRF_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.move.move_crf_crf attribute)": [[59, "iqm.pulse.gates.move.MOVE_CRF_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.move.move_crf_crf attribute)": [[59, "iqm.pulse.gates.move.MOVE_CRF_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.move.move_crf_crf attribute)": [[59, "iqm.pulse.gates.move.MOVE_CRF_CRF.symmetric"]], "move_customwaveforms (class in iqm.pulse.gates.move)": [[60, "iqm.pulse.gates.move.MOVE_CustomWaveforms"]], "_call() (iqm.pulse.gates.move.move_customwaveforms method)": [[60, "iqm.pulse.gates.move.MOVE_CustomWaveforms._call"]], "coupler_wave (iqm.pulse.gates.move.move_customwaveforms attribute)": [[60, "iqm.pulse.gates.move.MOVE_CustomWaveforms.coupler_wave"]], "parameters (iqm.pulse.gates.move.move_customwaveforms attribute)": [[60, "iqm.pulse.gates.move.MOVE_CustomWaveforms.parameters"]], "qubit_wave (iqm.pulse.gates.move.move_customwaveforms attribute)": [[60, "iqm.pulse.gates.move.MOVE_CustomWaveforms.qubit_wave"]], "root_parameters (iqm.pulse.gates.move.move_customwaveforms attribute)": [[60, "iqm.pulse.gates.move.MOVE_CustomWaveforms.root_parameters"]], "symmetric (iqm.pulse.gates.move.move_customwaveforms attribute)": [[60, "iqm.pulse.gates.move.MOVE_CustomWaveforms.symmetric"]], "move_tgss_crf (class in iqm.pulse.gates.move)": [[61, "iqm.pulse.gates.move.MOVE_TGSS_CRF"]], "coupler_wave (iqm.pulse.gates.move.move_tgss_crf attribute)": [[61, "iqm.pulse.gates.move.MOVE_TGSS_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.move.move_tgss_crf attribute)": [[61, "iqm.pulse.gates.move.MOVE_TGSS_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.move.move_tgss_crf attribute)": [[61, "iqm.pulse.gates.move.MOVE_TGSS_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.move.move_tgss_crf attribute)": [[61, "iqm.pulse.gates.move.MOVE_TGSS_CRF.symmetric"]], "movemarker (class in iqm.pulse.gates.move)": [[62, "iqm.pulse.gates.move.MoveMarker"]], "duration (iqm.pulse.gates.move.movemarker attribute)": [[62, "iqm.pulse.gates.move.MoveMarker.duration"]], "apply_move_gate_phase_corrections() (in module iqm.pulse.gates.move)": [[63, "iqm.pulse.gates.move.apply_move_gate_phase_corrections"]], "validate_move_instructions() (in module iqm.pulse.gates.move)": [[64, "iqm.pulse.gates.move.validate_move_instructions"]], "iqm.pulse.gates.prx": [[65, "module-iqm.pulse.gates.prx"]], "prx_customwaveforms (class in iqm.pulse.gates.prx)": [[66, "iqm.pulse.gates.prx.PRX_CustomWaveforms"]], "_get_pulse() (iqm.pulse.gates.prx.prx_customwaveforms class method)": [[66, "iqm.pulse.gates.prx.PRX_CustomWaveforms._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_customwaveforms attribute)": [[66, "iqm.pulse.gates.prx.PRX_CustomWaveforms.dependent_waves"]], "root_parameters (iqm.pulse.gates.prx.prx_customwaveforms attribute)": [[66, "iqm.pulse.gates.prx.PRX_CustomWaveforms.root_parameters"]], "prx_customwaveformssx (class in iqm.pulse.gates.prx)": [[67, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX"]], "_call() (iqm.pulse.gates.prx.prx_customwaveformssx method)": [[67, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX._call"]], "_get_pulse() (iqm.pulse.gates.prx.prx_customwaveformssx class method)": [[67, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_customwaveformssx attribute)": [[67, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX.dependent_waves"]], "root_parameters (iqm.pulse.gates.prx.prx_customwaveformssx attribute)": [[67, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX.root_parameters"]], "prx_dragcosinerisefall (class in iqm.pulse.gates.prx)": [[68, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall"]], "_get_pulse() (iqm.pulse.gates.prx.prx_dragcosinerisefall class method)": [[68, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[68, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.dependent_waves"]], "excluded_parameters (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[68, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.excluded_parameters"]], "parameters (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[68, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[68, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[68, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.wave_q"]], "prx_dragcosinerisefallsx (class in iqm.pulse.gates.prx)": [[69, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX"]], "_get_pulse() (iqm.pulse.gates.prx.prx_dragcosinerisefallsx class method)": [[69, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[69, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.dependent_waves"]], "excluded_parameters (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[69, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.excluded_parameters"]], "parameters (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[69, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[69, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[69, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.wave_q"]], "prx_draggaussian (class in iqm.pulse.gates.prx)": [[70, "iqm.pulse.gates.prx.PRX_DRAGGaussian"]], "dependent_waves (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[70, "iqm.pulse.gates.prx.PRX_DRAGGaussian.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[70, "iqm.pulse.gates.prx.PRX_DRAGGaussian.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[70, "iqm.pulse.gates.prx.PRX_DRAGGaussian.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[70, "iqm.pulse.gates.prx.PRX_DRAGGaussian.wave_q"]], "prx_draggaussiansx (class in iqm.pulse.gates.prx)": [[71, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX"]], "dependent_waves (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[71, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[71, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[71, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[71, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.wave_q"]], "prx_gateimplementation (class in iqm.pulse.gates.prx)": [[72, "iqm.pulse.gates.prx.PRX_GateImplementation"]], "_call() (iqm.pulse.gates.prx.prx_gateimplementation method)": [[72, "iqm.pulse.gates.prx.PRX_GateImplementation._call"]], "clifford() (iqm.pulse.gates.prx.prx_gateimplementation method)": [[72, "iqm.pulse.gates.prx.PRX_GateImplementation.clifford"]], "get_locus_mapping_name() (iqm.pulse.gates.prx.prx_gateimplementation class method)": [[72, "iqm.pulse.gates.prx.PRX_GateImplementation.get_locus_mapping_name"]], "rx() (iqm.pulse.gates.prx.prx_gateimplementation method)": [[72, "iqm.pulse.gates.prx.PRX_GateImplementation.rx"]], "ry() (iqm.pulse.gates.prx.prx_gateimplementation method)": [[72, "iqm.pulse.gates.prx.PRX_GateImplementation.ry"]], "prx_singlepulse_gateimplementation (class in iqm.pulse.gates.prx)": [[73, "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation"]], "_call() (iqm.pulse.gates.prx.prx_singlepulse_gateimplementation method)": [[73, "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation._call"]], "iq_pulse (iqm.pulse.gates.prx.prx_singlepulse_gateimplementation property)": [[73, "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation.iq_pulse"]], "get_unitary_prx() (in module iqm.pulse.gates.prx)": [[74, "iqm.pulse.gates.prx.get_unitary_prx"]], "register_implementation() (in module iqm.pulse.gates)": [[75, "iqm.pulse.gates.register_implementation"]], "iqm.pulse.gates.reset": [[76, "module-iqm.pulse.gates.reset"]], "reset_feedback_key (in module iqm.pulse.gates.reset)": [[77, "iqm.pulse.gates.reset.RESET_FEEDBACK_KEY"]], "reset_measurement_key (in module iqm.pulse.gates.reset)": [[78, "iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY"]], "reset_conditional (class in iqm.pulse.gates.reset)": [[79, "iqm.pulse.gates.reset.Reset_Conditional"]], "_call() (iqm.pulse.gates.reset.reset_conditional method)": [[79, "iqm.pulse.gates.reset.Reset_Conditional._call"]], "get_locus_mapping_name() (iqm.pulse.gates.reset.reset_conditional class method)": [[79, "iqm.pulse.gates.reset.Reset_Conditional.get_locus_mapping_name"]], "registered_gates (iqm.pulse.gates.reset.reset_conditional attribute)": [[79, "iqm.pulse.gates.reset.Reset_Conditional.registered_gates"]], "reset_wait (class in iqm.pulse.gates.reset)": [[80, "iqm.pulse.gates.reset.Reset_Wait"]], "_call() (iqm.pulse.gates.reset.reset_wait method)": [[80, "iqm.pulse.gates.reset.Reset_Wait._call"]], "duration_in_seconds() (iqm.pulse.gates.reset.reset_wait method)": [[80, "iqm.pulse.gates.reset.Reset_Wait.duration_in_seconds"]], "get_custom_locus_mapping() (iqm.pulse.gates.reset.reset_wait class method)": [[80, "iqm.pulse.gates.reset.Reset_Wait.get_custom_locus_mapping"]], "parameters (iqm.pulse.gates.reset.reset_wait attribute)": [[80, "iqm.pulse.gates.reset.Reset_Wait.parameters"]], "wait_box() (iqm.pulse.gates.reset.reset_wait method)": [[80, "iqm.pulse.gates.reset.Reset_Wait.wait_box"]], "iqm.pulse.gates.rz": [[81, "module-iqm.pulse.gates.rz"]], "rz_acstarkshift (class in iqm.pulse.gates.rz)": [[82, "iqm.pulse.gates.rz.RZ_ACStarkShift"]], "_ac_stark_pulse() (iqm.pulse.gates.rz.rz_acstarkshift class method)": [[82, "iqm.pulse.gates.rz.RZ_ACStarkShift._ac_stark_pulse"]], "_call() (iqm.pulse.gates.rz.rz_acstarkshift method)": [[82, "iqm.pulse.gates.rz.RZ_ACStarkShift._call"]], "duration_in_seconds() (iqm.pulse.gates.rz.rz_acstarkshift method)": [[82, "iqm.pulse.gates.rz.RZ_ACStarkShift.duration_in_seconds"]], "rz_acstarkshift_cosinerisefall (class in iqm.pulse.gates.rz)": [[83, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall"]], "ac_stark_waveform (iqm.pulse.gates.rz.rz_acstarkshift_cosinerisefall attribute)": [[83, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.ac_stark_waveform"]], "parameters (iqm.pulse.gates.rz.rz_acstarkshift_cosinerisefall attribute)": [[83, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.parameters"]], "symmetric (iqm.pulse.gates.rz.rz_acstarkshift_cosinerisefall attribute)": [[83, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.symmetric"]], "rz_virtual (class in iqm.pulse.gates.rz)": [[84, "iqm.pulse.gates.rz.RZ_Virtual"]], "_call() (iqm.pulse.gates.rz.rz_virtual method)": [[84, "iqm.pulse.gates.rz.RZ_Virtual._call"]], "duration_in_seconds() (iqm.pulse.gates.rz.rz_virtual method)": [[84, "iqm.pulse.gates.rz.RZ_Virtual.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.rz.rz_virtual class method)": [[84, "iqm.pulse.gates.rz.RZ_Virtual.get_locus_mapping_name"]], "parameters (iqm.pulse.gates.rz.rz_virtual attribute)": [[84, "iqm.pulse.gates.rz.RZ_Virtual.parameters"]], "get_unitary_rz() (in module iqm.pulse.gates.rz)": [[85, "iqm.pulse.gates.rz.get_unitary_rz"]], "iqm.pulse.gates.sx": [[86, "module-iqm.pulse.gates.sx"]], "sxgate (class in iqm.pulse.gates.sx)": [[87, "iqm.pulse.gates.sx.SXGate"]], "_call() (iqm.pulse.gates.sx.sxgate method)": [[87, "iqm.pulse.gates.sx.SXGate._call"]], "registered_gates (iqm.pulse.gates.sx.sxgate attribute)": [[87, "iqm.pulse.gates.sx.SXGate.registered_gates"]], "iqm.pulse.gates.u": [[88, "module-iqm.pulse.gates.u"]], "ugate (class in iqm.pulse.gates.u)": [[89, "iqm.pulse.gates.u.UGate"]], "_call() (iqm.pulse.gates.u.ugate method)": [[89, "iqm.pulse.gates.u.UGate._call"]], "registered_gates (iqm.pulse.gates.u.ugate attribute)": [[89, "iqm.pulse.gates.u.UGate.registered_gates"]], "get_unitary_u() (in module iqm.pulse.gates.u)": [[90, "iqm.pulse.gates.u.get_unitary_u"]], "iqm.pulse.playlist": [[91, "module-iqm.pulse.playlist"]], "iqm.pulse.playlist.channel": [[92, "module-iqm.pulse.playlist.channel"]], "channelconfiguration (class in iqm.pulse.playlist.channel)": [[93, "iqm.pulse.playlist.channel.ChannelConfiguration"]], "channeldescription (class in iqm.pulse.playlist.channel)": [[94, "iqm.pulse.playlist.channel.ChannelDescription"]], "add_instruction() (iqm.pulse.playlist.channel.channeldescription method)": [[94, "iqm.pulse.playlist.channel.ChannelDescription.add_instruction"]], "channelproperties (class in iqm.pulse.playlist.channel)": [[95, "iqm.pulse.playlist.channel.ChannelProperties"]], "blocks_component (iqm.pulse.playlist.channel.channelproperties attribute)": [[95, "iqm.pulse.playlist.channel.ChannelProperties.blocks_component"]], "compatible_instructions (iqm.pulse.playlist.channel.channelproperties attribute)": [[95, "iqm.pulse.playlist.channel.ChannelProperties.compatible_instructions"]], "duration_to_int_samples() (iqm.pulse.playlist.channel.channelproperties method)": [[95, "iqm.pulse.playlist.channel.ChannelProperties.duration_to_int_samples"]], "duration_to_samples() (iqm.pulse.playlist.channel.channelproperties method)": [[95, "iqm.pulse.playlist.channel.ChannelProperties.duration_to_samples"]], "duration_to_seconds() (iqm.pulse.playlist.channel.channelproperties method)": [[95, "iqm.pulse.playlist.channel.ChannelProperties.duration_to_seconds"]], "instruction_duration_granularity (iqm.pulse.playlist.channel.channelproperties attribute)": [[95, "iqm.pulse.playlist.channel.ChannelProperties.instruction_duration_granularity"]], "instruction_duration_min (iqm.pulse.playlist.channel.channelproperties attribute)": [[95, "iqm.pulse.playlist.channel.ChannelProperties.instruction_duration_min"]], "is_iq (iqm.pulse.playlist.channel.channelproperties attribute)": [[95, "iqm.pulse.playlist.channel.ChannelProperties.is_iq"]], "is_virtual (iqm.pulse.playlist.channel.channelproperties attribute)": [[95, "iqm.pulse.playlist.channel.ChannelProperties.is_virtual"]], "round_duration_to_granularity() (iqm.pulse.playlist.channel.channelproperties method)": [[95, "iqm.pulse.playlist.channel.ChannelProperties.round_duration_to_granularity"]], "sample_rate (iqm.pulse.playlist.channel.channelproperties attribute)": [[95, "iqm.pulse.playlist.channel.ChannelProperties.sample_rate"]], "iqchannelconfig (class in iqm.pulse.playlist.channel)": [[96, "iqm.pulse.playlist.channel.IQChannelConfig"]], "frequency (iqm.pulse.playlist.channel.iqchannelconfig attribute)": [[96, "iqm.pulse.playlist.channel.IQChannelConfig.frequency"]], "probechannelproperties (class in iqm.pulse.playlist.channel)": [[97, "iqm.pulse.playlist.channel.ProbeChannelProperties"]], "center_frequency (iqm.pulse.playlist.channel.probechannelproperties attribute)": [[97, "iqm.pulse.playlist.channel.ProbeChannelProperties.center_frequency"]], "integration_start_dead_time (iqm.pulse.playlist.channel.probechannelproperties attribute)": [[97, "iqm.pulse.playlist.channel.ProbeChannelProperties.integration_start_dead_time"]], "integration_stop_dead_time (iqm.pulse.playlist.channel.probechannelproperties attribute)": [[97, "iqm.pulse.playlist.channel.ProbeChannelProperties.integration_stop_dead_time"]], "realchannelconfig (class in iqm.pulse.playlist.channel)": [[98, "iqm.pulse.playlist.channel.RealChannelConfig"]], "sample_rate (iqm.pulse.playlist.channel.realchannelconfig attribute)": [[98, "iqm.pulse.playlist.channel.RealChannelConfig.sample_rate"]], "get_channel_properties() (in module iqm.pulse.playlist.channel)": [[99, "iqm.pulse.playlist.channel.get_channel_properties"]], "get_channel_properties_from_station_settings() (in module iqm.pulse.playlist.channel)": [[100, "iqm.pulse.playlist.channel.get_channel_properties_from_station_settings"]], "iqm.pulse.playlist.instructions": [[101, "module-iqm.pulse.playlist.instructions"]], "acquisitionmethod (class in iqm.pulse.playlist.instructions)": [[102, "iqm.pulse.playlist.instructions.AcquisitionMethod"]], "delay_samples (iqm.pulse.playlist.instructions.acquisitionmethod attribute)": [[102, "iqm.pulse.playlist.instructions.AcquisitionMethod.delay_samples"]], "label (iqm.pulse.playlist.instructions.acquisitionmethod attribute)": [[102, "iqm.pulse.playlist.instructions.AcquisitionMethod.label"]], "block (class in iqm.pulse.playlist.instructions)": [[103, "iqm.pulse.playlist.instructions.Block"]], "complexintegration (class in iqm.pulse.playlist.instructions)": [[104, "iqm.pulse.playlist.instructions.ComplexIntegration"]], "weights (iqm.pulse.playlist.instructions.complexintegration attribute)": [[104, "iqm.pulse.playlist.instructions.ComplexIntegration.weights"]], "conditionalinstruction (class in iqm.pulse.playlist.instructions)": [[105, "iqm.pulse.playlist.instructions.ConditionalInstruction"]], "condition (iqm.pulse.playlist.instructions.conditionalinstruction attribute)": [[105, "iqm.pulse.playlist.instructions.ConditionalInstruction.condition"]], "get_child_instructions() (iqm.pulse.playlist.instructions.conditionalinstruction method)": [[105, "iqm.pulse.playlist.instructions.ConditionalInstruction.get_child_instructions"]], "outcomes (iqm.pulse.playlist.instructions.conditionalinstruction attribute)": [[105, "iqm.pulse.playlist.instructions.ConditionalInstruction.outcomes"]], "validate() (iqm.pulse.playlist.instructions.conditionalinstruction method)": [[105, "iqm.pulse.playlist.instructions.ConditionalInstruction.validate"]], "iqpulse (class in iqm.pulse.playlist.instructions)": [[106, "iqm.pulse.playlist.instructions.IQPulse"]], "get_waveforms() (iqm.pulse.playlist.instructions.iqpulse method)": [[106, "iqm.pulse.playlist.instructions.IQPulse.get_waveforms"]], "modulation_frequency (iqm.pulse.playlist.instructions.iqpulse attribute)": [[106, "iqm.pulse.playlist.instructions.IQPulse.modulation_frequency"]], "phase (iqm.pulse.playlist.instructions.iqpulse attribute)": [[106, "iqm.pulse.playlist.instructions.IQPulse.phase"]], "phase_increment (iqm.pulse.playlist.instructions.iqpulse attribute)": [[106, "iqm.pulse.playlist.instructions.IQPulse.phase_increment"]], "scale_i (iqm.pulse.playlist.instructions.iqpulse attribute)": [[106, "iqm.pulse.playlist.instructions.IQPulse.scale_i"]], "scale_q (iqm.pulse.playlist.instructions.iqpulse attribute)": [[106, "iqm.pulse.playlist.instructions.IQPulse.scale_q"]], "validate() (iqm.pulse.playlist.instructions.iqpulse method)": [[106, "iqm.pulse.playlist.instructions.IQPulse.validate"]], "wave_i (iqm.pulse.playlist.instructions.iqpulse attribute)": [[106, "iqm.pulse.playlist.instructions.IQPulse.wave_i"]], "wave_q (iqm.pulse.playlist.instructions.iqpulse attribute)": [[106, "iqm.pulse.playlist.instructions.IQPulse.wave_q"]], "instruction (class in iqm.pulse.playlist.instructions)": [[107, "iqm.pulse.playlist.instructions.Instruction"]], "copy() (iqm.pulse.playlist.instructions.instruction method)": [[107, "iqm.pulse.playlist.instructions.Instruction.copy"]], "duration (iqm.pulse.playlist.instructions.instruction attribute)": [[107, "iqm.pulse.playlist.instructions.Instruction.duration"]], "get_child_instructions() (iqm.pulse.playlist.instructions.instruction method)": [[107, "iqm.pulse.playlist.instructions.Instruction.get_child_instructions"]], "get_waveforms() (iqm.pulse.playlist.instructions.instruction method)": [[107, "iqm.pulse.playlist.instructions.Instruction.get_waveforms"]], "validate() (iqm.pulse.playlist.instructions.instruction method)": [[107, "iqm.pulse.playlist.instructions.Instruction.validate"]], "multiplexediqpulse (class in iqm.pulse.playlist.instructions)": [[108, "iqm.pulse.playlist.instructions.MultiplexedIQPulse"]], "entries (iqm.pulse.playlist.instructions.multiplexediqpulse attribute)": [[108, "iqm.pulse.playlist.instructions.MultiplexedIQPulse.entries"]], "readouttrigger (class in iqm.pulse.playlist.instructions)": [[109, "iqm.pulse.playlist.instructions.ReadoutTrigger"]], "acquisitions (iqm.pulse.playlist.instructions.readouttrigger attribute)": [[109, "iqm.pulse.playlist.instructions.ReadoutTrigger.acquisitions"]], "probe_pulse (iqm.pulse.playlist.instructions.readouttrigger attribute)": [[109, "iqm.pulse.playlist.instructions.ReadoutTrigger.probe_pulse"]], "realpulse (class in iqm.pulse.playlist.instructions)": [[110, "iqm.pulse.playlist.instructions.RealPulse"]], "get_waveforms() (iqm.pulse.playlist.instructions.realpulse method)": [[110, "iqm.pulse.playlist.instructions.RealPulse.get_waveforms"]], "scale (iqm.pulse.playlist.instructions.realpulse attribute)": [[110, "iqm.pulse.playlist.instructions.RealPulse.scale"]], "validate() (iqm.pulse.playlist.instructions.realpulse method)": [[110, "iqm.pulse.playlist.instructions.RealPulse.validate"]], "wave (iqm.pulse.playlist.instructions.realpulse attribute)": [[110, "iqm.pulse.playlist.instructions.RealPulse.wave"]], "thresholdstatediscrimination (class in iqm.pulse.playlist.instructions)": [[111, "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination"]], "feedback_signal_label (iqm.pulse.playlist.instructions.thresholdstatediscrimination attribute)": [[111, "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination.feedback_signal_label"]], "threshold (iqm.pulse.playlist.instructions.thresholdstatediscrimination attribute)": [[111, "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination.threshold"]], "timetrace (class in iqm.pulse.playlist.instructions)": [[112, "iqm.pulse.playlist.instructions.TimeTrace"]], "duration_samples (iqm.pulse.playlist.instructions.timetrace attribute)": [[112, "iqm.pulse.playlist.instructions.TimeTrace.duration_samples"]], "virtualrz (class in iqm.pulse.playlist.instructions)": [[113, "iqm.pulse.playlist.instructions.VirtualRZ"]], "phase_increment (iqm.pulse.playlist.instructions.virtualrz attribute)": [[113, "iqm.pulse.playlist.instructions.VirtualRZ.phase_increment"]], "wait (class in iqm.pulse.playlist.instructions)": [[114, "iqm.pulse.playlist.instructions.Wait"]], "iqm.pulse.playlist.playlist": [[115, "module-iqm.pulse.playlist.playlist"]], "iqm.pulse.playlist.schedule": [[116, "module-iqm.pulse.playlist.schedule"]], "nothing (class in iqm.pulse.playlist.schedule)": [[117, "iqm.pulse.playlist.schedule.Nothing"]], "schedule (class in iqm.pulse.playlist.schedule)": [[118, "iqm.pulse.playlist.schedule.Schedule"]], "add_channels() (iqm.pulse.playlist.schedule.schedule method)": [[118, "iqm.pulse.playlist.schedule.Schedule.add_channels"]], "append() (iqm.pulse.playlist.schedule.schedule method)": [[118, "iqm.pulse.playlist.schedule.Schedule.append"]], "channels() (iqm.pulse.playlist.schedule.schedule method)": [[118, "iqm.pulse.playlist.schedule.Schedule.channels"]], "cleanup() (iqm.pulse.playlist.schedule.schedule method)": [[118, "iqm.pulse.playlist.schedule.Schedule.cleanup"]], "copy() (iqm.pulse.playlist.schedule.schedule method)": [[118, "iqm.pulse.playlist.schedule.Schedule.copy"]], "duration (iqm.pulse.playlist.schedule.schedule property)": [[118, "iqm.pulse.playlist.schedule.Schedule.duration"]], "duration_in_seconds() (iqm.pulse.playlist.schedule.schedule method)": [[118, "iqm.pulse.playlist.schedule.Schedule.duration_in_seconds"]], "extend() (iqm.pulse.playlist.schedule.schedule method)": [[118, "iqm.pulse.playlist.schedule.Schedule.extend"]], "front_pad() (iqm.pulse.playlist.schedule.schedule method)": [[118, "iqm.pulse.playlist.schedule.Schedule.front_pad"]], "front_pad_in_seconds() (iqm.pulse.playlist.schedule.schedule method)": [[118, "iqm.pulse.playlist.schedule.Schedule.front_pad_in_seconds"]], "has_content_in() (iqm.pulse.playlist.schedule.schedule method)": [[118, "iqm.pulse.playlist.schedule.Schedule.has_content_in"]], "items() (iqm.pulse.playlist.schedule.schedule method)": [[118, "iqm.pulse.playlist.schedule.Schedule.items"]], "pad_to_hard_box() (iqm.pulse.playlist.schedule.schedule method)": [[118, "iqm.pulse.playlist.schedule.Schedule.pad_to_hard_box"]], "pad_to_hard_box_in_seconds() (iqm.pulse.playlist.schedule.schedule method)": [[118, "iqm.pulse.playlist.schedule.Schedule.pad_to_hard_box_in_seconds"]], "pprint() (iqm.pulse.playlist.schedule.schedule method)": [[118, "iqm.pulse.playlist.schedule.Schedule.pprint"]], "reverse() (iqm.pulse.playlist.schedule.schedule method)": [[118, "iqm.pulse.playlist.schedule.Schedule.reverse"]], "reverse_hard_box() (iqm.pulse.playlist.schedule.schedule method)": [[118, "iqm.pulse.playlist.schedule.Schedule.reverse_hard_box"]], "validate() (iqm.pulse.playlist.schedule.schedule method)": [[118, "iqm.pulse.playlist.schedule.Schedule.validate"]], "segment (class in iqm.pulse.playlist.schedule)": [[119, "iqm.pulse.playlist.schedule.Segment"]], "_duration (iqm.pulse.playlist.schedule.segment attribute)": [[119, "iqm.pulse.playlist.schedule.Segment._duration"]], "_instructions (iqm.pulse.playlist.schedule.segment attribute)": [[119, "iqm.pulse.playlist.schedule.Segment._instructions"]], "append() (iqm.pulse.playlist.schedule.segment method)": [[119, "iqm.pulse.playlist.schedule.Segment.append"]], "copy() (iqm.pulse.playlist.schedule.segment method)": [[119, "iqm.pulse.playlist.schedule.Segment.copy"]], "duration (iqm.pulse.playlist.schedule.segment property)": [[119, "iqm.pulse.playlist.schedule.Segment.duration"]], "extend() (iqm.pulse.playlist.schedule.segment method)": [[119, "iqm.pulse.playlist.schedule.Segment.extend"]], "pop() (iqm.pulse.playlist.schedule.segment method)": [[119, "iqm.pulse.playlist.schedule.Segment.pop"]], "prepend() (iqm.pulse.playlist.schedule.segment method)": [[119, "iqm.pulse.playlist.schedule.Segment.prepend"]], "tolerance (in module iqm.pulse.playlist.schedule)": [[120, "iqm.pulse.playlist.schedule.TOLERANCE"]], "iqm.pulse.playlist.visualisation": [[121, "module-iqm.pulse.playlist.visualisation"]], "iqm.pulse.playlist.visualisation.base": [[122, "module-iqm.pulse.playlist.visualisation.base"]], "inspect_playlist() (in module iqm.pulse.playlist.visualisation.base)": [[123, "iqm.pulse.playlist.visualisation.base.inspect_playlist"]], "iqm.pulse.playlist.waveforms": [[124, "module-iqm.pulse.playlist.waveforms"]], "chirp (class in iqm.pulse.playlist.waveforms)": [[125, "iqm.pulse.playlist.waveforms.Chirp"]], "_sample() (iqm.pulse.playlist.waveforms.chirp method)": [[125, "iqm.pulse.playlist.waveforms.Chirp._sample"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.chirp static method)": [[125, "iqm.pulse.playlist.waveforms.Chirp.non_timelike_attributes"]], "chirpimag (class in iqm.pulse.playlist.waveforms)": [[126, "iqm.pulse.playlist.waveforms.ChirpImag"]], "phase (iqm.pulse.playlist.waveforms.chirpimag attribute)": [[126, "iqm.pulse.playlist.waveforms.ChirpImag.phase"]], "cosine (class in iqm.pulse.playlist.waveforms)": [[127, "iqm.pulse.playlist.waveforms.Cosine"]], "_sample() (iqm.pulse.playlist.waveforms.cosine method)": [[127, "iqm.pulse.playlist.waveforms.Cosine._sample"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.cosine static method)": [[127, "iqm.pulse.playlist.waveforms.Cosine.non_timelike_attributes"]], "cosinerisefallderivative (class in iqm.pulse.playlist.waveforms)": [[128, "iqm.pulse.playlist.waveforms.CosineRiseFallDerivative"]], "_sample() (iqm.pulse.playlist.waveforms.cosinerisefallderivative method)": [[128, "iqm.pulse.playlist.waveforms.CosineRiseFallDerivative._sample"]], "modulatedcosinerisefall (class in iqm.pulse.playlist.waveforms)": [[129, "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall"]], "_sample() (iqm.pulse.playlist.waveforms.modulatedcosinerisefall method)": [[129, "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall._sample"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.modulatedcosinerisefall static method)": [[129, "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall.non_timelike_attributes"]], "slepian (class in iqm.pulse.playlist.waveforms)": [[130, "iqm.pulse.playlist.waveforms.Slepian"]], "_sample() (iqm.pulse.playlist.waveforms.slepian method)": [[130, "iqm.pulse.playlist.waveforms.Slepian._sample"]], "_sample_normalized_slepian() (iqm.pulse.playlist.waveforms.slepian method)": [[130, "iqm.pulse.playlist.waveforms.Slepian._sample_normalized_slepian"]], "_t_tau() (iqm.pulse.playlist.waveforms.slepian method)": [[130, "iqm.pulse.playlist.waveforms.Slepian._t_tau"]], "_theta_tau() (iqm.pulse.playlist.waveforms.slepian method)": [[130, "iqm.pulse.playlist.waveforms.Slepian._theta_tau"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.slepian static method)": [[130, "iqm.pulse.playlist.waveforms.Slepian.non_timelike_attributes"]], "iqm.pulse.quantum_ops": [[131, "module-iqm.pulse.quantum_ops"]], "quantumop (class in iqm.pulse.quantum_ops)": [[132, "iqm.pulse.quantum_ops.QuantumOp"]], "arity (iqm.pulse.quantum_ops.quantumop attribute)": [[132, "iqm.pulse.quantum_ops.QuantumOp.arity"]], "copy() (iqm.pulse.quantum_ops.quantumop method)": [[132, "iqm.pulse.quantum_ops.QuantumOp.copy"]], "default_implementation (iqm.pulse.quantum_ops.quantumop property)": [[132, "iqm.pulse.quantum_ops.QuantumOp.default_implementation"]], "defaults_for_locus (iqm.pulse.quantum_ops.quantumop attribute)": [[132, "iqm.pulse.quantum_ops.QuantumOp.defaults_for_locus"]], "factorizable (iqm.pulse.quantum_ops.quantumop attribute)": [[132, "iqm.pulse.quantum_ops.QuantumOp.factorizable"]], "get_default_implementation_for_locus() (iqm.pulse.quantum_ops.quantumop method)": [[132, "iqm.pulse.quantum_ops.QuantumOp.get_default_implementation_for_locus"]], "implementations (iqm.pulse.quantum_ops.quantumop attribute)": [[132, "iqm.pulse.quantum_ops.QuantumOp.implementations"]], "name (iqm.pulse.quantum_ops.quantumop attribute)": [[132, "iqm.pulse.quantum_ops.QuantumOp.name"]], "params (iqm.pulse.quantum_ops.quantumop attribute)": [[132, "iqm.pulse.quantum_ops.QuantumOp.params"]], "set_default_implementation() (iqm.pulse.quantum_ops.quantumop method)": [[132, "iqm.pulse.quantum_ops.QuantumOp.set_default_implementation"]], "set_default_implementation_for_locus() (iqm.pulse.quantum_ops.quantumop method)": [[132, "iqm.pulse.quantum_ops.QuantumOp.set_default_implementation_for_locus"]], "symmetric (iqm.pulse.quantum_ops.quantumop attribute)": [[132, "iqm.pulse.quantum_ops.QuantumOp.symmetric"]], "unitary (iqm.pulse.quantum_ops.quantumop attribute)": [[132, "iqm.pulse.quantum_ops.QuantumOp.unitary"]], "quantumoptable (in module iqm.pulse.quantum_ops)": [[133, "iqm.pulse.quantum_ops.QuantumOpTable"]], "validate_locus_calibration() (in module iqm.pulse.quantum_ops)": [[134, "iqm.pulse.quantum_ops.validate_locus_calibration"]], "validate_op_calibration() (in module iqm.pulse.quantum_ops)": [[135, "iqm.pulse.quantum_ops.validate_op_calibration"]], "iqm.pulse.scheduler": [[136, "module-iqm.pulse.scheduler"]], "blocking (in module iqm.pulse.scheduler)": [[137, "iqm.pulse.scheduler.BLOCKING"]], "nonsolid (in module iqm.pulse.scheduler)": [[138, "iqm.pulse.scheduler.NONSOLID"]], "segmentpointer (class in iqm.pulse.scheduler)": [[139, "iqm.pulse.scheduler.SegmentPointer"]], "tol (iqm.pulse.scheduler.segmentpointer attribute)": [[139, "iqm.pulse.scheduler.SegmentPointer.TOL"]], "cut_tail() (iqm.pulse.scheduler.segmentpointer method)": [[139, "iqm.pulse.scheduler.SegmentPointer.cut_tail"]], "fastforward() (iqm.pulse.scheduler.segmentpointer method)": [[139, "iqm.pulse.scheduler.SegmentPointer.fastforward"]], "frac (iqm.pulse.scheduler.segmentpointer attribute)": [[139, "iqm.pulse.scheduler.SegmentPointer.frac"]], "get() (iqm.pulse.scheduler.segmentpointer method)": [[139, "iqm.pulse.scheduler.SegmentPointer.get"]], "idx (iqm.pulse.scheduler.segmentpointer attribute)": [[139, "iqm.pulse.scheduler.SegmentPointer.idx"]], "next() (iqm.pulse.scheduler.segmentpointer method)": [[139, "iqm.pulse.scheduler.SegmentPointer.next"]], "remainder (iqm.pulse.scheduler.segmentpointer property)": [[139, "iqm.pulse.scheduler.SegmentPointer.remainder"]], "rewind() (iqm.pulse.scheduler.segmentpointer method)": [[139, "iqm.pulse.scheduler.SegmentPointer.rewind"]], "source (iqm.pulse.scheduler.segmentpointer attribute)": [[139, "iqm.pulse.scheduler.SegmentPointer.source"]], "tail() (iqm.pulse.scheduler.segmentpointer method)": [[139, "iqm.pulse.scheduler.SegmentPointer.tail"]], "extend_hard_boundary() (in module iqm.pulse.scheduler)": [[140, "iqm.pulse.scheduler.extend_hard_boundary"]], "extend_hard_boundary_in_seconds() (in module iqm.pulse.scheduler)": [[141, "iqm.pulse.scheduler.extend_hard_boundary_in_seconds"]], "extend_schedule() (in module iqm.pulse.scheduler)": [[142, "iqm.pulse.scheduler.extend_schedule"]], "extend_schedule_new() (in module iqm.pulse.scheduler)": [[143, "iqm.pulse.scheduler.extend_schedule_new"]], "iqm.pulse.timebox": [[144, "module-iqm.pulse.timebox"]], "multiplexedprobetimebox (class in iqm.pulse.timebox)": [[145, "iqm.pulse.timebox.MultiplexedProbeTimeBox"]], "from_readout_trigger() (iqm.pulse.timebox.multiplexedprobetimebox static method)": [[145, "iqm.pulse.timebox.MultiplexedProbeTimeBox.from_readout_trigger"]], "hard_boundary (iqm.pulse.timebox.schedulingalgorithm attribute)": [[146, "iqm.pulse.timebox.SchedulingAlgorithm.HARD_BOUNDARY"]], "schedulingalgorithm (class in iqm.pulse.timebox)": [[146, "iqm.pulse.timebox.SchedulingAlgorithm"]], "tetris (iqm.pulse.timebox.schedulingalgorithm attribute)": [[146, "iqm.pulse.timebox.SchedulingAlgorithm.TETRIS"]], "alap (iqm.pulse.timebox.schedulingstrategy attribute)": [[147, "iqm.pulse.timebox.SchedulingStrategy.ALAP"]], "asap (iqm.pulse.timebox.schedulingstrategy attribute)": [[147, "iqm.pulse.timebox.SchedulingStrategy.ASAP"]], "schedulingstrategy (class in iqm.pulse.timebox)": [[147, "iqm.pulse.timebox.SchedulingStrategy"]], "timebox (class in iqm.pulse.timebox)": [[148, "iqm.pulse.timebox.TimeBox"]], "atom (iqm.pulse.timebox.timebox attribute)": [[148, "iqm.pulse.timebox.TimeBox.atom"]], "atomic() (iqm.pulse.timebox.timebox static method)": [[148, "iqm.pulse.timebox.TimeBox.atomic"]], "children (iqm.pulse.timebox.timebox attribute)": [[148, "iqm.pulse.timebox.TimeBox.children"]], "composite() (iqm.pulse.timebox.timebox static method)": [[148, "iqm.pulse.timebox.TimeBox.composite"]], "label (iqm.pulse.timebox.timebox attribute)": [[148, "iqm.pulse.timebox.TimeBox.label"]], "locus_components (iqm.pulse.timebox.timebox attribute)": [[148, "iqm.pulse.timebox.TimeBox.locus_components"]], "neighborhood_components (iqm.pulse.timebox.timebox attribute)": [[148, "iqm.pulse.timebox.TimeBox.neighborhood_components"]], "print() (iqm.pulse.timebox.timebox method)": [[148, "iqm.pulse.timebox.TimeBox.print"]], "scheduling (iqm.pulse.timebox.timebox attribute)": [[148, "iqm.pulse.timebox.TimeBox.scheduling"]], "scheduling_algorithm (iqm.pulse.timebox.timebox attribute)": [[148, "iqm.pulse.timebox.TimeBox.scheduling_algorithm"]], "set_alap() (iqm.pulse.timebox.timebox method)": [[148, "iqm.pulse.timebox.TimeBox.set_alap"]], "set_asap() (iqm.pulse.timebox.timebox method)": [[148, "iqm.pulse.timebox.TimeBox.set_asap"]], "validate() (iqm.pulse.timebox.timebox method)": [[148, "iqm.pulse.timebox.TimeBox.validate"]], "iqm.pulse.utils": [[149, "module-iqm.pulse.utils"]], "load_yaml() (in module iqm.pulse.utils)": [[150, "iqm.pulse.utils.load_yaml"]], "map_waveform_param_types() (in module iqm.pulse.utils)": [[151, "iqm.pulse.utils.map_waveform_param_types"]], "merge_dicts() (in module iqm.pulse.utils)": [[152, "iqm.pulse.utils.merge_dicts"]], "normalize_angle() (in module iqm.pulse.utils)": [[153, "iqm.pulse.utils.normalize_angle"]], "phase_transformation() (in module iqm.pulse.utils)": [[154, "iqm.pulse.utils.phase_transformation"]], "iqm.pulse.validation": [[155, "module-iqm.pulse.validation"]], "awgschedulevalidationdata (class in iqm.pulse.validation)": [[156, "iqm.pulse.validation.AWGScheduleValidationData"]], "awgschedulevalidationerror": [[157, "iqm.pulse.validation.AWGScheduleValidationError"]], "invalidinstructionerror": [[158, "iqm.pulse.validation.InvalidInstructionError"]], "playlistvalidationerror": [[159, "iqm.pulse.validation.PlaylistValidationError"]], "validate_awg_and_schedule_compatibility() (in module iqm.pulse.validation)": [[160, "iqm.pulse.validation.validate_awg_and_schedule_compatibility"]], "validate_channel() (in module iqm.pulse.validation)": [[161, "iqm.pulse.validation.validate_channel"]], "validate_instruction_and_wf_length() (in module iqm.pulse.validation)": [[162, "iqm.pulse.validation.validate_instruction_and_wf_length"]], "validate_playlist_compatibility() (in module iqm.pulse.validation)": [[163, "iqm.pulse.validation.validate_playlist_compatibility"]]}})