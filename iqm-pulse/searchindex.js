Search.setIndex({"docnames": ["API", "api/iqm.pulse", "api/iqm.pulse.builder", "api/iqm.pulse.builder.CircuitOperation", "api/iqm.pulse.builder.ScheduleBuilder", "api/iqm.pulse.builder.build_quantum_ops", "api/iqm.pulse.builder.load_config", "api/iqm.pulse.builder.validate_quantum_circuit", "api/iqm.pulse.circuit_operations", "api/iqm.pulse.circuit_operations.CircuitOperationList", "api/iqm.pulse.circuit_operations.get_unitary_from_circuit", "api/iqm.pulse.circuit_operations.get_unitary_from_op", "api/iqm.pulse.circuit_operations.reorder", "api/iqm.pulse.circuit_operations.reshape_unitary", "api/iqm.pulse.gate_implementation", "api/iqm.pulse.gate_implementation.CompositeCache", "api/iqm.pulse.gate_implementation.CompositeGate", "api/iqm.pulse.gate_implementation.CustomIQWaveforms", "api/iqm.pulse.gate_implementation.GateImplementation", "api/iqm.pulse.gate_implementation.Locus", "api/iqm.pulse.gate_implementation.NestedParams", "api/iqm.pulse.gate_implementation.OCalibrationData", "api/iqm.pulse.gate_implementation.OICalibrationData", "api/iqm.pulse.gate_implementation.OILCalibrationData", "api/iqm.pulse.gate_implementation.OpCalibrationDataTree", "api/iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SinglePulseGate", "api/iqm.pulse.gate_implementation.get_waveform_parameters", "api/iqm.pulse.gates", "api/iqm.pulse.gates.barrier", "api/iqm.pulse.gates.barrier.Barrier", "api/iqm.pulse.gates.conditional", "api/iqm.pulse.gates.conditional.CCPRX_Composite", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian", "api/iqm.pulse.gates.cz", "api/iqm.pulse.gates.cz.CZ_CRF", "api/iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF", "api/iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare", "api/iqm.pulse.gates.cz.CZ_Slepian", "api/iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF", "api/iqm.pulse.gates.cz.CZ_Slepian_CRF", "api/iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare", "api/iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate", "api/iqm.pulse.gates.cz.FluxPulseGate", "api/iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF", "api/iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF", "api/iqm.pulse.gates.enums", "api/iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES", "api/iqm.pulse.gates.enums.TwoQubitGate", "api/iqm.pulse.gates.enums.XYGATE_UNITARIES", "api/iqm.pulse.gates.enums.XYGate", "api/iqm.pulse.gates.expose_implementation", "api/iqm.pulse.gates.get_implementation_class", "api/iqm.pulse.gates.measure", "api/iqm.pulse.gates.measure.Measure_Constant", "api/iqm.pulse.gates.measure.Measure_CustomWaveforms", "api/iqm.pulse.gates.measure.ProbePulse_CustomWaveforms", "api/iqm.pulse.gates.move", "api/iqm.pulse.gates.move.MOVE_CRF_CRF", "api/iqm.pulse.gates.move.MOVE_CustomWaveforms", "api/iqm.pulse.gates.move.MOVE_TGSS_CRF", "api/iqm.pulse.gates.move.MoveMarker", "api/iqm.pulse.gates.move.apply_move_gate_phase_corrections", "api/iqm.pulse.gates.move.validate_move_instructions", "api/iqm.pulse.gates.prx", "api/iqm.pulse.gates.prx.PRX_CustomWaveforms", "api/iqm.pulse.gates.prx.PRX_CustomWaveformsSX", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX", "api/iqm.pulse.gates.prx.PRX_DRAGGaussian", "api/iqm.pulse.gates.prx.PRX_DRAGGaussianSX", "api/iqm.pulse.gates.prx.PRX_GateImplementation", "api/iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation", "api/iqm.pulse.gates.prx.get_unitary_prx", "api/iqm.pulse.gates.register_implementation", "api/iqm.pulse.gates.reset", "api/iqm.pulse.gates.reset.RESET_FEEDBACK_KEY", "api/iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY", "api/iqm.pulse.gates.reset.Reset_Conditional", "api/iqm.pulse.gates.reset.Reset_Wait", "api/iqm.pulse.gates.rz", "api/iqm.pulse.gates.rz.RZ_ACStarkShift", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall", "api/iqm.pulse.gates.rz.RZ_Virtual", "api/iqm.pulse.gates.rz.get_unitary_rz", "api/iqm.pulse.gates.sx", "api/iqm.pulse.gates.sx.SXGate", "api/iqm.pulse.gates.u", "api/iqm.pulse.gates.u.UGate", "api/iqm.pulse.gates.u.get_unitary_u", "api/iqm.pulse.playlist", "api/iqm.pulse.playlist.channel", "api/iqm.pulse.playlist.channel.ChannelConfiguration", "api/iqm.pulse.playlist.channel.ChannelDescription", "api/iqm.pulse.playlist.channel.ChannelProperties", "api/iqm.pulse.playlist.channel.IQChannelConfig", "api/iqm.pulse.playlist.channel.ProbeChannelProperties", "api/iqm.pulse.playlist.channel.RealChannelConfig", "api/iqm.pulse.playlist.channel.get_channel_properties", "api/iqm.pulse.playlist.channel.get_channel_properties_from_station_settings", "api/iqm.pulse.playlist.instructions", "api/iqm.pulse.playlist.instructions.AcquisitionMethod", "api/iqm.pulse.playlist.instructions.Block", "api/iqm.pulse.playlist.instructions.ComplexIntegration", "api/iqm.pulse.playlist.instructions.ConditionalInstruction", "api/iqm.pulse.playlist.instructions.IQPulse", "api/iqm.pulse.playlist.instructions.Instruction", "api/iqm.pulse.playlist.instructions.MultiplexedIQPulse", "api/iqm.pulse.playlist.instructions.ReadoutTrigger", "api/iqm.pulse.playlist.instructions.RealPulse", "api/iqm.pulse.playlist.instructions.ThresholdStateDiscrimination", "api/iqm.pulse.playlist.instructions.TimeTrace", "api/iqm.pulse.playlist.instructions.VirtualRZ", "api/iqm.pulse.playlist.instructions.Wait", "api/iqm.pulse.playlist.playlist", "api/iqm.pulse.playlist.schedule", "api/iqm.pulse.playlist.schedule.Nothing", "api/iqm.pulse.playlist.schedule.Schedule", "api/iqm.pulse.playlist.schedule.Segment", "api/iqm.pulse.playlist.schedule.TOLERANCE", "api/iqm.pulse.playlist.visualisation", "api/iqm.pulse.playlist.visualisation.base", "api/iqm.pulse.playlist.visualisation.base.inspect_playlist", "api/iqm.pulse.playlist.waveforms", "api/iqm.pulse.playlist.waveforms.Chirp", "api/iqm.pulse.playlist.waveforms.ChirpImag", "api/iqm.pulse.playlist.waveforms.Cosine", "api/iqm.pulse.playlist.waveforms.CosineRiseFallDerivative", "api/iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall", "api/iqm.pulse.playlist.waveforms.Slepian", "api/iqm.pulse.quantum_ops", "api/iqm.pulse.quantum_ops.QuantumOp", "api/iqm.pulse.quantum_ops.QuantumOpTable", "api/iqm.pulse.quantum_ops.validate_locus_calibration", "api/iqm.pulse.quantum_ops.validate_op_calibration", "api/iqm.pulse.scheduler", "api/iqm.pulse.scheduler.BLOCKING", "api/iqm.pulse.scheduler.NONSOLID", "api/iqm.pulse.scheduler.SegmentPointer", "api/iqm.pulse.scheduler.extend_hard_boundary", "api/iqm.pulse.scheduler.extend_hard_boundary_in_seconds", "api/iqm.pulse.scheduler.extend_schedule", "api/iqm.pulse.scheduler.extend_schedule_new", "api/iqm.pulse.timebox", "api/iqm.pulse.timebox.MultiplexedProbeTimeBox", "api/iqm.pulse.timebox.SchedulingAlgorithm", "api/iqm.pulse.timebox.SchedulingStrategy", "api/iqm.pulse.timebox.TimeBox", "api/iqm.pulse.utils", "api/iqm.pulse.utils.load_yaml", "api/iqm.pulse.utils.map_waveform_param_types", "api/iqm.pulse.utils.merge_dicts", "api/iqm.pulse.utils.normalize_angle", "api/iqm.pulse.utils.phase_transformation", "api/iqm.pulse.validation", "api/iqm.pulse.validation.AWGScheduleValidationData", "api/iqm.pulse.validation.AWGScheduleValidationError", "api/iqm.pulse.validation.InvalidInstructionError", "api/iqm.pulse.validation.PlaylistValidationError", "api/iqm.pulse.validation.validate_awg_and_schedule_compatibility", "api/iqm.pulse.validation.validate_channel", "api/iqm.pulse.validation.validate_instruction_and_wf_length", "api/iqm.pulse.validation.validate_playlist_compatibility", "changelog", "concepts", "custom_gates", "index", "license", "pulse_timing", "references", "using_builder"], "filenames": ["API.rst", "api/iqm.pulse.rst", "api/iqm.pulse.builder.rst", "api/iqm.pulse.builder.CircuitOperation.rst", "api/iqm.pulse.builder.ScheduleBuilder.rst", "api/iqm.pulse.builder.build_quantum_ops.rst", "api/iqm.pulse.builder.load_config.rst", "api/iqm.pulse.builder.validate_quantum_circuit.rst", "api/iqm.pulse.circuit_operations.rst", "api/iqm.pulse.circuit_operations.CircuitOperationList.rst", "api/iqm.pulse.circuit_operations.get_unitary_from_circuit.rst", "api/iqm.pulse.circuit_operations.get_unitary_from_op.rst", "api/iqm.pulse.circuit_operations.reorder.rst", "api/iqm.pulse.circuit_operations.reshape_unitary.rst", "api/iqm.pulse.gate_implementation.rst", "api/iqm.pulse.gate_implementation.CompositeCache.rst", "api/iqm.pulse.gate_implementation.CompositeGate.rst", "api/iqm.pulse.gate_implementation.CustomIQWaveforms.rst", "api/iqm.pulse.gate_implementation.GateImplementation.rst", "api/iqm.pulse.gate_implementation.Locus.rst", "api/iqm.pulse.gate_implementation.NestedParams.rst", "api/iqm.pulse.gate_implementation.OCalibrationData.rst", "api/iqm.pulse.gate_implementation.OICalibrationData.rst", "api/iqm.pulse.gate_implementation.OILCalibrationData.rst", "api/iqm.pulse.gate_implementation.OpCalibrationDataTree.rst", "api/iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SinglePulseGate.rst", "api/iqm.pulse.gate_implementation.get_waveform_parameters.rst", "api/iqm.pulse.gates.rst", "api/iqm.pulse.gates.barrier.rst", "api/iqm.pulse.gates.barrier.Barrier.rst", "api/iqm.pulse.gates.conditional.rst", "api/iqm.pulse.gates.conditional.CCPRX_Composite.rst", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall.rst", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian.rst", "api/iqm.pulse.gates.cz.rst", "api/iqm.pulse.gates.cz.CZ_CRF.rst", "api/iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.rst", "api/iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.rst", "api/iqm.pulse.gates.cz.CZ_Slepian.rst", "api/iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.rst", "api/iqm.pulse.gates.cz.CZ_Slepian_CRF.rst", "api/iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.rst", "api/iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.rst", "api/iqm.pulse.gates.cz.FluxPulseGate.rst", "api/iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.rst", "api/iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.rst", "api/iqm.pulse.gates.enums.rst", "api/iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES.rst", "api/iqm.pulse.gates.enums.TwoQubitGate.rst", "api/iqm.pulse.gates.enums.XYGATE_UNITARIES.rst", "api/iqm.pulse.gates.enums.XYGate.rst", "api/iqm.pulse.gates.expose_implementation.rst", "api/iqm.pulse.gates.get_implementation_class.rst", "api/iqm.pulse.gates.measure.rst", "api/iqm.pulse.gates.measure.Measure_Constant.rst", "api/iqm.pulse.gates.measure.Measure_CustomWaveforms.rst", "api/iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.rst", "api/iqm.pulse.gates.move.rst", "api/iqm.pulse.gates.move.MOVE_CRF_CRF.rst", "api/iqm.pulse.gates.move.MOVE_CustomWaveforms.rst", "api/iqm.pulse.gates.move.MOVE_TGSS_CRF.rst", "api/iqm.pulse.gates.move.MoveMarker.rst", "api/iqm.pulse.gates.move.apply_move_gate_phase_corrections.rst", "api/iqm.pulse.gates.move.validate_move_instructions.rst", "api/iqm.pulse.gates.prx.rst", "api/iqm.pulse.gates.prx.PRX_CustomWaveforms.rst", "api/iqm.pulse.gates.prx.PRX_CustomWaveformsSX.rst", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.rst", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.rst", "api/iqm.pulse.gates.prx.PRX_DRAGGaussian.rst", "api/iqm.pulse.gates.prx.PRX_DRAGGaussianSX.rst", "api/iqm.pulse.gates.prx.PRX_GateImplementation.rst", "api/iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation.rst", "api/iqm.pulse.gates.prx.get_unitary_prx.rst", "api/iqm.pulse.gates.register_implementation.rst", "api/iqm.pulse.gates.reset.rst", "api/iqm.pulse.gates.reset.RESET_FEEDBACK_KEY.rst", "api/iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY.rst", "api/iqm.pulse.gates.reset.Reset_Conditional.rst", "api/iqm.pulse.gates.reset.Reset_Wait.rst", "api/iqm.pulse.gates.rz.rst", "api/iqm.pulse.gates.rz.RZ_ACStarkShift.rst", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.rst", "api/iqm.pulse.gates.rz.RZ_Virtual.rst", "api/iqm.pulse.gates.rz.get_unitary_rz.rst", "api/iqm.pulse.gates.sx.rst", "api/iqm.pulse.gates.sx.SXGate.rst", "api/iqm.pulse.gates.u.rst", "api/iqm.pulse.gates.u.UGate.rst", "api/iqm.pulse.gates.u.get_unitary_u.rst", "api/iqm.pulse.playlist.rst", "api/iqm.pulse.playlist.channel.rst", "api/iqm.pulse.playlist.channel.ChannelConfiguration.rst", "api/iqm.pulse.playlist.channel.ChannelDescription.rst", "api/iqm.pulse.playlist.channel.ChannelProperties.rst", "api/iqm.pulse.playlist.channel.IQChannelConfig.rst", "api/iqm.pulse.playlist.channel.ProbeChannelProperties.rst", "api/iqm.pulse.playlist.channel.RealChannelConfig.rst", "api/iqm.pulse.playlist.channel.get_channel_properties.rst", "api/iqm.pulse.playlist.channel.get_channel_properties_from_station_settings.rst", "api/iqm.pulse.playlist.instructions.rst", "api/iqm.pulse.playlist.instructions.AcquisitionMethod.rst", "api/iqm.pulse.playlist.instructions.Block.rst", "api/iqm.pulse.playlist.instructions.ComplexIntegration.rst", "api/iqm.pulse.playlist.instructions.ConditionalInstruction.rst", "api/iqm.pulse.playlist.instructions.IQPulse.rst", "api/iqm.pulse.playlist.instructions.Instruction.rst", "api/iqm.pulse.playlist.instructions.MultiplexedIQPulse.rst", "api/iqm.pulse.playlist.instructions.ReadoutTrigger.rst", "api/iqm.pulse.playlist.instructions.RealPulse.rst", "api/iqm.pulse.playlist.instructions.ThresholdStateDiscrimination.rst", "api/iqm.pulse.playlist.instructions.TimeTrace.rst", "api/iqm.pulse.playlist.instructions.VirtualRZ.rst", "api/iqm.pulse.playlist.instructions.Wait.rst", "api/iqm.pulse.playlist.playlist.rst", "api/iqm.pulse.playlist.schedule.rst", "api/iqm.pulse.playlist.schedule.Nothing.rst", "api/iqm.pulse.playlist.schedule.Schedule.rst", "api/iqm.pulse.playlist.schedule.Segment.rst", "api/iqm.pulse.playlist.schedule.TOLERANCE.rst", "api/iqm.pulse.playlist.visualisation.rst", "api/iqm.pulse.playlist.visualisation.base.rst", "api/iqm.pulse.playlist.visualisation.base.inspect_playlist.rst", "api/iqm.pulse.playlist.waveforms.rst", "api/iqm.pulse.playlist.waveforms.Chirp.rst", "api/iqm.pulse.playlist.waveforms.ChirpImag.rst", "api/iqm.pulse.playlist.waveforms.Cosine.rst", "api/iqm.pulse.playlist.waveforms.CosineRiseFallDerivative.rst", "api/iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall.rst", "api/iqm.pulse.playlist.waveforms.Slepian.rst", "api/iqm.pulse.quantum_ops.rst", "api/iqm.pulse.quantum_ops.QuantumOp.rst", "api/iqm.pulse.quantum_ops.QuantumOpTable.rst", "api/iqm.pulse.quantum_ops.validate_locus_calibration.rst", "api/iqm.pulse.quantum_ops.validate_op_calibration.rst", "api/iqm.pulse.scheduler.rst", "api/iqm.pulse.scheduler.BLOCKING.rst", "api/iqm.pulse.scheduler.NONSOLID.rst", "api/iqm.pulse.scheduler.SegmentPointer.rst", "api/iqm.pulse.scheduler.extend_hard_boundary.rst", "api/iqm.pulse.scheduler.extend_hard_boundary_in_seconds.rst", "api/iqm.pulse.scheduler.extend_schedule.rst", "api/iqm.pulse.scheduler.extend_schedule_new.rst", "api/iqm.pulse.timebox.rst", "api/iqm.pulse.timebox.MultiplexedProbeTimeBox.rst", "api/iqm.pulse.timebox.SchedulingAlgorithm.rst", "api/iqm.pulse.timebox.SchedulingStrategy.rst", "api/iqm.pulse.timebox.TimeBox.rst", "api/iqm.pulse.utils.rst", "api/iqm.pulse.utils.load_yaml.rst", "api/iqm.pulse.utils.map_waveform_param_types.rst", "api/iqm.pulse.utils.merge_dicts.rst", "api/iqm.pulse.utils.normalize_angle.rst", "api/iqm.pulse.utils.phase_transformation.rst", "api/iqm.pulse.validation.rst", "api/iqm.pulse.validation.AWGScheduleValidationData.rst", "api/iqm.pulse.validation.AWGScheduleValidationError.rst", "api/iqm.pulse.validation.InvalidInstructionError.rst", "api/iqm.pulse.validation.PlaylistValidationError.rst", "api/iqm.pulse.validation.validate_awg_and_schedule_compatibility.rst", "api/iqm.pulse.validation.validate_channel.rst", "api/iqm.pulse.validation.validate_instruction_and_wf_length.rst", "api/iqm.pulse.validation.validate_playlist_compatibility.rst", "changelog.rst", "concepts.rst", "custom_gates.rst", "index.rst", "license.rst", "pulse_timing.rst", "references.rst", "using_builder.rst"], "titles": ["API Reference", "pulse", "builder", "CircuitOperation", "ScheduleBuilder", "iqm.pulse.builder.build_quantum_ops", "iqm.pulse.builder.load_config", "iqm.pulse.builder.validate_quantum_circuit", "circuit_operations", "CircuitOperationList", "iqm.pulse.circuit_operations.get_unitary_from_circuit", "iqm.pulse.circuit_operations.get_unitary_from_op", "iqm.pulse.circuit_operations.reorder", "iqm.pulse.circuit_operations.reshape_unitary", "gate_implementation", "CompositeCache", "CompositeGate", "CustomIQWaveforms", "GateImplementation", "iqm.pulse.gate_implementation.Locus", "iqm.pulse.gate_implementation.NestedParams", "iqm.pulse.gate_implementation.OCalibrationData", "iqm.pulse.gate_implementation.OICalibrationData", "iqm.pulse.gate_implementation.OILCalibrationData", "iqm.pulse.gate_implementation.OpCalibrationDataTree", "iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING", "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING", "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING", "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING", "SinglePulseGate", "iqm.pulse.gate_implementation.get_waveform_parameters", "gates", "barrier", "Barrier", "conditional", "CCPRX_Composite", "CCPRX_Composite_DRAGCosineRiseFall", "CCPRX_Composite_DRAGGaussian", "cz", "CZ_CRF", "CZ_CRF_ACStarkCRF", "CZ_GaussianSmoothedSquare", "CZ_Slepian", "CZ_Slepian_ACStarkCRF", "CZ_Slepian_CRF", "CZ_TruncatedGaussianSmoothedSquare", "CouplerFluxPulseQubitACStarkPulseGate", "FluxPulseGate", "FluxPulseGate_CRF_CRF", "FluxPulseGate_TGSS_CRF", "enums", "iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES", "TwoQubitGate", "iqm.pulse.gates.enums.XYGATE_UNITARIES", "XYGate", "iqm.pulse.gates.expose_implementation", "iqm.pulse.gates.get_implementation_class", "measure", "Measure_Constant", "Measure_CustomWaveforms", "ProbePulse_CustomWaveforms", "move", "MOVE_CRF_CRF", "MOVE_CustomWaveforms", "MOVE_TGSS_CRF", "MoveMarker", "iqm.pulse.gates.move.apply_move_gate_phase_corrections", "iqm.pulse.gates.move.validate_move_instructions", "prx", "PRX_CustomWaveforms", "PRX_CustomWaveformsSX", "PRX_DRAGCosineRiseFall", "PRX_DRAGCosineRiseFallSX", "PRX_DRAGGaussian", "PRX_DRAGGaussianSX", "PRX_GateImplementation", "PRX_SinglePulse_GateImplementation", "iqm.pulse.gates.prx.get_unitary_prx", "iqm.pulse.gates.register_implementation", "reset", "iqm.pulse.gates.reset.RESET_FEEDBACK_KEY", "iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY", "Reset_Conditional", "Reset_Wait", "rz", "RZ_ACStarkShift", "RZ_ACStarkShift_CosineRiseFall", "RZ_Virtual", "iqm.pulse.gates.rz.get_unitary_rz", "sx", "SXGate", "u", "UGate", "iqm.pulse.gates.u.get_unitary_u", "playlist", "channel", "ChannelConfiguration", "ChannelDescription", "ChannelProperties", "IQChannelConfig", "ProbeChannelProperties", "RealChannelConfig", "iqm.pulse.playlist.channel.get_channel_properties", "iqm.pulse.playlist.channel.get_channel_properties_from_station_settings", "instructions", "AcquisitionMethod", "Block", "ComplexIntegration", "ConditionalInstruction", "IQPulse", "Instruction", "MultiplexedIQPulse", "ReadoutTrigger", "RealPulse", "ThresholdStateDiscrimination", "TimeTrace", "VirtualRZ", "Wait", "playlist", "schedule", "Nothing", "Schedule", "Segment", "iqm.pulse.playlist.schedule.TOLERANCE", "visualisation", "base", "iqm.pulse.playlist.visualisation.base.inspect_playlist", "waveforms", "Chirp", "ChirpImag", "Cosine", "CosineRiseFallDerivative", "ModulatedCosineRiseFall", "Slepian", "quantum_ops", "QuantumOp", "iqm.pulse.quantum_ops.QuantumOpTable", "iqm.pulse.quantum_ops.validate_locus_calibration", "iqm.pulse.quantum_ops.validate_op_calibration", "scheduler", "iqm.pulse.scheduler.BLOCKING", "iqm.pulse.scheduler.NONSOLID", "SegmentPointer", "iqm.pulse.scheduler.extend_hard_boundary", "iqm.pulse.scheduler.extend_hard_boundary_in_seconds", "iqm.pulse.scheduler.extend_schedule", "iqm.pulse.scheduler.extend_schedule_new", "timebox", "MultiplexedProbeTimeBox", "SchedulingAlgorithm", "SchedulingStrategy", "TimeBox", "utils", "iqm.pulse.utils.load_yaml", "iqm.pulse.utils.map_waveform_param_types", "iqm.pulse.utils.merge_dicts", "iqm.pulse.utils.normalize_angle", "iqm.pulse.utils.phase_transformation", "validation", "AWGScheduleValidationData", "iqm.pulse.validation.AWGScheduleValidationError", "iqm.pulse.validation.InvalidInstructionError", "iqm.pulse.validation.PlaylistValidationError", "iqm.pulse.validation.validate_awg_and_schedule_compatibility", "iqm.pulse.validation.validate_channel", "iqm.pulse.validation.validate_instruction_and_wf_length", "iqm.pulse.validation.validate_playlist_compatibility", "Changelog", "Concepts and Classes", "Custom gate implementations", "IQM Pulse", "License", "Pulse timing", "References", "Using ScheduleBuilder"], "terms": {"control": [1, 4, 14, 27, 34, 35, 38, 40, 43, 52, 59, 94, 95, 97, 98, 103, 104, 106, 110, 119, 120, 121, 145, 146, 151, 159, 163, 166, 167, 168, 169, 171, 172, 173, 174], "sequenc": [1, 4, 7, 9, 10, 14, 19, 63, 94, 106, 117, 118, 122, 126, 135, 142, 151, 157, 168, 170, 172, 174], "quantum": [1, 3, 4, 5, 6, 7, 9, 10, 11, 14, 18, 19, 21, 22, 23, 24, 29, 31, 32, 33, 46, 47, 59, 60, 63, 67, 75, 78, 79, 82, 83, 85, 87, 94, 110, 134, 135, 136, 138, 157, 167, 168, 169, 170, 174], "processor": [1, 94], "full": [1, 2, 8, 14, 31, 32, 34, 38, 50, 57, 61, 68, 79, 84, 89, 91, 94, 95, 104, 118, 119, 124, 125, 127, 132, 134, 139, 147, 152, 158, 167, 169], "path": [1, 2, 6, 8, 14, 18, 31, 32, 34, 38, 50, 57, 61, 68, 79, 84, 89, 91, 94, 95, 104, 118, 119, 121, 124, 125, 127, 134, 139, 147, 151, 152, 153, 155, 158, 167], "iqm": [1, 2, 3, 4, 8, 9, 14, 15, 16, 17, 18, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 142, 147, 148, 149, 150, 151, 152, 158, 159, 167, 168, 171, 172, 174], "subpackag": [1, 31, 94, 124], "modul": [1, 3, 4, 9, 14, 15, 16, 17, 18, 29, 31, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 58, 59, 60, 62, 63, 64, 65, 69, 70, 71, 72, 73, 74, 75, 76, 79, 82, 83, 85, 86, 87, 90, 92, 94, 96, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 142, 148, 149, 150, 151, 159, 168, 169, 170], "tool": [2, 139, 142, 170], "build": [2, 4, 5, 16, 18, 59, 60, 66, 69, 70, 71, 72, 148, 151, 169], "instruct": [2, 4, 14, 18, 29, 30, 33, 47, 59, 60, 61, 63, 65, 66, 67, 75, 76, 83, 87, 97, 98, 100, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 135, 139, 140, 141, 142, 144, 145, 146, 147, 148, 151, 157, 161, 163, 165, 166, 167, 170, 172, 174], "schedul": [2, 4, 14, 18, 29, 33, 46, 47, 59, 60, 65, 66, 67, 70, 75, 76, 83, 85, 87, 98, 106, 117, 118, 120, 122, 135, 142, 147, 148, 149, 150, 151, 158, 160, 167, 169, 170, 172], "puls": [2, 3, 4, 8, 9, 14, 15, 16, 17, 18, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 142, 147, 148, 149, 150, 151, 152, 158, 159, 167, 168, 169, 174], "function": [2, 4, 5, 8, 11, 14, 18, 29, 31, 33, 46, 47, 61, 63, 68, 76, 82, 83, 84, 85, 91, 95, 102, 103, 125, 133, 134, 135, 139, 151, 152, 158, 167, 169], "class": [2, 3, 4, 8, 9, 14, 15, 16, 17, 18, 20, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 147, 148, 149, 150, 151, 158, 159, 167, 170, 171], "inherit": [2, 8, 14, 16, 17, 18, 29, 32, 33, 34, 38, 46, 47, 50, 57, 59, 60, 61, 63, 68, 69, 70, 71, 72, 75, 79, 82, 83, 84, 85, 87, 89, 91, 95, 104, 119, 127, 134, 139, 147, 158, 167, 169], "circuitoper": [2, 4, 7, 8, 9, 10, 11, 67, 167], "schedulebuild": [2, 9, 16, 17, 18, 29, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 58, 59, 60, 62, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 82, 83, 85, 86, 87, 90, 92, 151, 167, 168, 169, 170], "builder": [3, 4, 9, 16, 17, 18, 29, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 58, 59, 60, 62, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 82, 83, 85, 86, 87, 90, 92, 167, 168, 169, 172, 174], "name": [3, 4, 5, 9, 15, 16, 17, 18, 19, 21, 24, 25, 26, 27, 28, 29, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 54, 56, 58, 59, 60, 62, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 78, 82, 83, 85, 86, 87, 90, 92, 97, 103, 121, 135, 136, 137, 144, 148, 149, 150, 151, 167, 168, 169, 171, 174], "locu": [3, 4, 9, 16, 17, 18, 23, 25, 26, 27, 28, 29, 31, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 58, 59, 60, 62, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 82, 83, 85, 86, 87, 90, 92, 135, 137, 148, 151, 167, 168, 169, 172, 174], "arg": [3, 4, 9, 18, 29, 33, 46, 47, 63, 82, 83, 85, 169], "factori": [3, 4, 14, 98, 100, 135, 148, 151], "implement": [3, 4, 9, 10, 14, 15, 16, 17, 18, 21, 22, 23, 29, 31, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 55, 56, 58, 59, 60, 62, 63, 64, 66, 69, 70, 71, 72, 73, 74, 75, 76, 78, 82, 83, 85, 86, 87, 90, 92, 121, 135, 137, 138, 157, 167, 168, 170, 172, 173, 174], "none": [3, 4, 6, 7, 9, 10, 15, 16, 18, 21, 22, 24, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 54, 55, 56, 58, 59, 60, 62, 63, 64, 69, 70, 71, 72, 73, 74, 78, 83, 86, 110, 121, 122, 135, 137, 138, 142, 143, 144, 145, 146, 148, 149, 150, 151, 155, 164, 166, 167, 169], "base": [3, 4, 9, 15, 16, 17, 18, 29, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 54, 58, 59, 60, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 82, 83, 85, 86, 87, 90, 92, 96, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 128, 129, 130, 131, 132, 133, 135, 142, 148, 149, 150, 151, 159, 167, 171, 172], "object": [3, 4, 8, 9, 15, 30, 96, 97, 98, 105, 110, 121, 122, 135, 142, 151, 159, 167, 169, 171], "specif": [3, 4, 16, 18, 29, 31, 32, 33, 46, 47, 63, 76, 82, 83, 85, 87, 97, 121, 133, 135, 159, 163, 167, 168, 169, 171, 174], "oper": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 32, 33, 35, 36, 37, 46, 47, 59, 60, 61, 63, 75, 78, 79, 81, 82, 83, 85, 87, 134, 135, 136, 137, 138, 151, 159, 167, 168, 169, 170, 172, 174], "appli": [3, 4, 35, 47, 61, 63, 65, 66, 76, 83, 110, 135, 169, 171, 172, 174], "part": [3, 4, 18, 114, 129, 131, 132, 135, 142, 151, 167, 168, 169, 171, 172, 174], "qpu": [3, 4, 18, 19, 33, 117, 135, 143, 147, 151, 168, 169, 174], "e": [3, 4, 16, 17, 18, 29, 33, 46, 47, 58, 59, 60, 63, 68, 69, 70, 71, 72, 73, 74, 76, 78, 83, 84, 85, 87, 89, 91, 128, 130, 132, 133, 135, 139, 143, 144, 145, 146, 151, 167, 169, 173], "g": [3, 4, 16, 17, 18, 29, 33, 46, 47, 58, 59, 60, 69, 70, 71, 72, 73, 74, 78, 83, 85, 87, 128, 130, 132, 133, 143, 144, 151, 167, 169, 173], "circuit": [3, 4, 7, 9, 10, 11, 59, 67, 83, 87, 135, 167, 168, 169, 170, 172, 174], "attribut": [3, 4, 9, 14, 16, 17, 18, 29, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 58, 59, 60, 62, 63, 64, 65, 69, 70, 71, 72, 73, 74, 75, 76, 79, 82, 83, 85, 86, 87, 90, 92, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 128, 129, 130, 131, 132, 133, 134, 135, 139, 142, 148, 149, 150, 151, 159, 167, 169, 171, 172], "method": [3, 4, 8, 9, 15, 16, 17, 18, 29, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 54, 58, 59, 60, 62, 63, 64, 65, 69, 70, 71, 72, 73, 74, 75, 76, 78, 82, 83, 85, 86, 87, 90, 92, 96, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 128, 129, 130, 131, 132, 133, 135, 142, 148, 149, 150, 151, 159, 167, 169, 174], "paramet": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 29, 30, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 55, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 82, 83, 85, 86, 87, 88, 90, 92, 93, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 126, 128, 129, 130, 131, 132, 133, 135, 137, 138, 142, 143, 144, 145, 146, 148, 151, 153, 154, 155, 156, 157, 159, 163, 164, 165, 166, 167, 168, 169, 174], "str": [3, 4, 5, 6, 7, 9, 10, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 56, 58, 59, 60, 62, 63, 64, 65, 69, 70, 71, 72, 73, 74, 75, 76, 78, 82, 83, 85, 86, 87, 90, 92, 97, 98, 102, 105, 107, 108, 114, 115, 121, 126, 128, 130, 132, 133, 135, 136, 137, 143, 144, 145, 146, 148, 151, 153, 166, 169], "tupl": [3, 4, 6, 13, 15, 16, 18, 19, 21, 22, 24, 59, 60, 83, 98, 100, 102, 108, 109, 110, 111, 112, 113, 121, 135, 137, 148, 151, 154, 157, 159, 169], "dict": [3, 4, 5, 6, 7, 10, 11, 16, 17, 18, 20, 21, 22, 23, 24, 30, 36, 37, 47, 59, 60, 63, 69, 70, 78, 83, 87, 102, 121, 128, 130, 132, 133, 135, 136, 143, 144, 145, 146, 148, 151, 153, 155, 166, 167, 169], "ani": [3, 4, 5, 6, 9, 15, 16, 18, 21, 22, 23, 24, 29, 33, 46, 47, 59, 60, 63, 78, 82, 83, 85, 111, 120, 121, 133, 135, 143, 144, 148, 151, 153, 167, 168, 169, 171, 174], "inform": [3, 4, 30, 67, 135, 168, 169, 171, 172, 174], "bear": 3, "compon": [3, 4, 18, 19, 26, 27, 28, 33, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 59, 62, 63, 64, 82, 83, 86, 98, 103, 111, 117, 133, 135, 143, 144, 148, 151, 167, 168, 169, 174], "qubit": [3, 4, 9, 10, 11, 12, 13, 29, 32, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 58, 59, 61, 62, 63, 64, 65, 66, 68, 70, 75, 76, 79, 83, 84, 85, 87, 89, 91, 133, 135, 143, 144, 167, 168, 169, 172, 173, 174], "comput": [3, 4, 14, 29, 59, 63, 82, 91, 98, 110, 121, 122, 135, 139, 143, 144, 151, 157, 167, 168, 169, 170, 171, 174], "reson": [3, 61, 62, 63, 64, 65, 66, 85, 92, 98, 143, 144, 157, 167, 168, 173, 174], "act": [3, 4, 11, 13, 16, 18, 19, 31, 60, 63, 82, 83, 87, 135, 143, 144, 167, 168, 169, 171, 172, 174], "argument": [3, 9, 10, 15, 18, 29, 33, 35, 46, 47, 59, 60, 70, 83, 85, 87, 135, 167, 169, 174], "valid": [3, 4, 7, 61, 67, 108, 109, 110, 113, 121, 137, 138, 151, 159, 167, 174], "op_tabl": [3, 4, 7, 9, 16, 36, 37, 82, 90, 92, 169], "against": [3, 4, 114, 138, 171, 174], "tabl": [3, 5, 7, 9, 10, 11, 97, 136, 167], "definit": [3, 4, 5, 6, 10, 17, 33, 60, 63, 93, 127, 135, 136, 167, 168, 169, 171], "quantumop": [3, 4, 5, 6, 7, 9, 10, 11, 16, 17, 18, 29, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 58, 59, 60, 62, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 78, 82, 83, 85, 86, 87, 90, 92, 134, 136, 137, 167, 170, 174], "contain": [3, 4, 7, 9, 17, 18, 35, 59, 60, 67, 83, 97, 108, 109, 110, 113, 121, 135, 148, 151, 163, 167, 168, 169, 171, 174], "allow": [3, 4, 7, 9, 16, 18, 36, 37, 78, 87, 98, 111, 121, 143, 167, 168, 169, 172, 174], "rais": [3, 4, 7, 55, 67, 98, 108, 109, 110, 113, 128, 135, 137, 138, 153, 154, 160, 161, 162, 168], "valueerror": [3, 4, 7, 67, 98, 108, 109, 110, 113, 135, 137, 138, 154], "i": [3, 4, 5, 9, 11, 15, 16, 17, 18, 19, 29, 30, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 82, 83, 84, 85, 86, 87, 89, 91, 98, 108, 109, 110, 111, 113, 114, 121, 122, 123, 128, 130, 131, 132, 133, 135, 137, 138, 139, 142, 143, 144, 145, 146, 151, 157, 163, 166, 167, 168, 169, 170, 171, 172, 174], "return": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 18, 29, 30, 33, 35, 46, 47, 52, 55, 56, 59, 60, 63, 66, 67, 69, 70, 71, 72, 75, 76, 77, 78, 82, 83, 85, 87, 88, 90, 92, 93, 97, 98, 102, 103, 105, 108, 109, 110, 113, 121, 122, 126, 128, 130, 131, 132, 133, 135, 137, 138, 142, 143, 144, 145, 146, 148, 151, 153, 154, 155, 156, 157, 164, 166, 167, 169], "type": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 29, 30, 33, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 54, 55, 56, 58, 59, 60, 62, 63, 64, 66, 67, 69, 70, 71, 72, 75, 76, 77, 78, 82, 83, 85, 86, 87, 88, 90, 92, 93, 97, 98, 100, 102, 103, 108, 109, 110, 113, 121, 122, 123, 126, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 164, 166, 169, 171], "calibr": [4, 6, 7, 15, 16, 17, 18, 21, 22, 23, 24, 29, 31, 35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 58, 59, 60, 62, 63, 64, 69, 70, 71, 72, 73, 74, 76, 82, 83, 86, 87, 90, 92, 128, 130, 132, 133, 135, 137, 138, 167, 168, 174], "chip_topologi": [4, 18, 83, 102, 103, 169, 174], "channel": [4, 17, 18, 29, 30, 33, 35, 47, 58, 59, 60, 65, 66, 69, 70, 71, 72, 73, 74, 76, 79, 82, 83, 85, 87, 96, 97, 98, 99, 100, 101, 106, 109, 110, 116, 120, 121, 122, 139, 143, 144, 145, 146, 148, 149, 151, 163, 164, 166, 167, 168, 169, 172, 174], "component_channel": 4, "out": [4, 69, 71, 168, 169, 171, 172], "individu": [4, 135, 168, 171], "encapsul": [4, 18, 31, 67, 174], "known": [4, 5, 55, 78, 121, 133, 135, 136, 138, 169], "op": [4, 5, 10, 11, 14, 16, 18, 135, 136, 137, 138], "them": [4, 9, 10, 60, 83, 87, 98, 135, 151, 167, 169, 170, 174], "topologi": [4, 103, 174], "properti": [4, 9, 18, 61, 76, 78, 95, 97, 98, 102, 103, 121, 122, 135, 142, 144, 145, 146, 167, 174], "quantumopt": [4, 9, 10, 11, 138, 167, 169], "opcalibrationdatatre": [4, 138], "data": [4, 6, 15, 16, 18, 21, 22, 23, 24, 29, 31, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 58, 59, 60, 62, 63, 64, 69, 70, 71, 72, 73, 74, 76, 83, 86, 87, 97, 105, 128, 130, 132, 133, 135, 137, 138, 158, 159, 163, 166, 167, 168], "tree": [4, 6, 18, 103, 137, 138], "chiptopologi": [4, 18, 46, 47, 59, 60, 75, 82, 83, 87, 102, 103, 169], "chip": [4, 9, 103], "deriv": [4, 76, 131, 133, 169, 171], "from": [4, 5, 6, 9, 11, 15, 16, 17, 18, 35, 36, 37, 46, 47, 59, 63, 66, 70, 71, 72, 76, 82, 90, 92, 98, 103, 105, 111, 114, 121, 122, 126, 127, 128, 130, 131, 132, 133, 142, 144, 148, 151, 153, 155, 163, 167, 168, 169, 171, 172, 174], "chad": [4, 135], "channelproperti": [4, 18, 95, 100, 102, 121, 144, 145, 146, 164, 166], "map": [4, 5, 9, 16, 18, 21, 22, 24, 25, 26, 27, 28, 36, 37, 46, 47, 51, 52, 53, 54, 59, 60, 75, 78, 82, 87, 97, 103, 108, 121, 128, 130, 132, 133, 135, 136, 144, 151, 154, 167, 169], "configur": [4, 5, 96, 99, 101, 163, 166, 171], "drive": [4, 18, 26, 29, 33, 35, 46, 47, 59, 65, 66, 76, 82, 85, 87, 92, 98, 116, 157, 167, 168, 169, 172], "flux": [4, 18, 27, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 62, 63, 64, 135, 167, 169], "readout": [4, 18, 28, 35, 58, 59, 60, 82, 105, 112, 121, 148, 167, 172], "respons": [4, 98, 101, 169, 171, 172], "_cach": 4, "gateimplement": [4, 14, 15, 16, 17, 20, 29, 30, 31, 32, 33, 34, 38, 46, 47, 55, 56, 57, 61, 63, 68, 75, 78, 79, 82, 83, 84, 85, 87, 89, 91, 135, 137, 151, 167, 170, 172, 174], "cach": [4, 13, 15, 18, 29, 33, 46, 47, 59, 63, 82, 83, 85, 121, 151, 167, 169], "The": [4, 9, 10, 15, 16, 17, 18, 19, 29, 31, 32, 33, 35, 38, 46, 47, 59, 60, 61, 63, 65, 68, 70, 76, 78, 79, 80, 82, 83, 84, 85, 87, 89, 90, 91, 92, 109, 114, 116, 121, 126, 128, 130, 131, 132, 133, 135, 139, 143, 144, 145, 146, 151, 163, 165, 166, 167, 168, 169, 171, 172, 174], "ha": [4, 9, 15, 18, 27, 31, 35, 46, 59, 61, 63, 78, 83, 85, 87, 97, 110, 111, 114, 121, 128, 130, 131, 132, 133, 135, 143, 144, 145, 146, 151, 163, 166, 167, 168, 169, 171, 172, 174], "same": [4, 9, 18, 33, 35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 59, 62, 63, 64, 65, 76, 78, 86, 109, 114, 128, 130, 131, 132, 133, 144, 151, 163, 166, 167, 168, 169, 171, 172, 174], "structur": [4, 167], "composite_cach": 4, "compositeg": [4, 14, 15, 34, 35, 36, 37, 79, 82, 89, 90, 91, 92, 167, 169], "timebox": [4, 9, 15, 18, 29, 31, 33, 35, 46, 47, 59, 60, 63, 70, 75, 76, 82, 83, 85, 87, 90, 92, 143, 148, 149, 150, 167, 169, 170, 172], "flush": [4, 15, 167], "whenev": [4, 15, 59, 167], "inject": 4, "_channel_to_compon": 4, "self": [4, 9, 16, 17, 18, 36, 37, 46, 47, 59, 60, 71, 72, 76, 82, 83, 90, 92, 98, 121, 135, 142, 151, 168, 169], "invert": 4, "algorithm": [4, 139, 143, 145, 149, 151, 167, 169, 174], "perform": [4, 47, 107, 114, 121, 171], "thi": [4, 9, 15, 16, 17, 18, 29, 31, 33, 35, 36, 37, 46, 47, 52, 54, 59, 60, 61, 63, 65, 69, 70, 71, 72, 75, 76, 78, 80, 81, 82, 83, 85, 87, 97, 98, 109, 111, 112, 114, 117, 121, 127, 128, 130, 131, 132, 133, 135, 139, 142, 143, 145, 146, 149, 151, 167, 168, 169, 171, 172, 174], "us": [4, 9, 14, 16, 17, 18, 31, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 52, 54, 58, 59, 60, 62, 63, 64, 66, 69, 70, 76, 78, 80, 81, 82, 83, 85, 87, 90, 91, 92, 97, 98, 106, 114, 116, 117, 120, 121, 126, 128, 130, 132, 133, 135, 143, 144, 149, 151, 157, 163, 166, 167, 168, 169, 170, 171, 172, 173], "determin": [4, 30, 143, 151, 168, 171, 174], "block": [4, 33, 35, 47, 59, 60, 76, 82, 83, 98, 104, 117, 120, 141, 143, 144, 148, 151, 167, 168, 172, 174], "associ": [4, 9, 59, 83, 97, 98, 112, 114, 169, 171, 172], "onli": [4, 9, 16, 18, 33, 35, 39, 40, 41, 42, 43, 44, 45, 48, 49, 54, 59, 60, 61, 62, 63, 64, 76, 82, 86, 98, 121, 133, 135, 142, 151, 167, 168, 171, 172, 173, 174], "ar": [4, 9, 16, 17, 18, 30, 32, 33, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 59, 62, 63, 64, 68, 70, 71, 72, 78, 86, 87, 91, 97, 98, 109, 111, 114, 121, 122, 128, 130, 131, 132, 133, 135, 138, 142, 143, 144, 145, 146, 149, 150, 151, 163, 166, 167, 168, 169, 170, 171, 172, 174], "includ": [4, 7, 9, 15, 17, 59, 60, 63, 69, 70, 97, 135, 151, 167, 168, 169, 171], "non": [4, 9, 16, 18, 59, 79, 83, 128, 130, 132, 133, 154, 169, 171, 174], "certain": [4, 17, 46, 47, 71, 72, 98, 169, 174], "virtual": [4, 35, 47, 63, 65, 66, 83, 87, 92, 98, 167, 172, 174], "do": [4, 7, 9, 30, 87, 89, 98, 121, 127, 130, 143, 157, 167, 168, 169, 171, 174], "just": [4, 9, 15, 16, 29, 59, 70, 82, 135, 151, 167, 169], "themselv": [4, 60, 168, 169], "_channel_typ": 4, "probe": [4, 25, 33, 35, 58, 59, 60, 83, 100, 105, 112, 144, 148, 167, 169], "_require_scheduling_in_second": 4, "bool": [4, 7, 9, 16, 17, 18, 33, 39, 40, 41, 42, 43, 44, 45, 48, 49, 55, 58, 59, 60, 62, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 78, 86, 98, 100, 121, 135, 142, 143, 144, 155, 167], "whether": [4, 11, 18, 67, 78, 98, 143, 144, 155, 169, 171, 174], "requir": [4, 18, 20, 30, 39, 40, 41, 42, 43, 44, 45, 48, 49, 58, 59, 62, 63, 64, 71, 72, 73, 74, 76, 81, 83, 86, 87, 98, 128, 130, 132, 133, 135, 137, 138, 148, 157, 163, 166, 167, 168, 169, 171], "second": [4, 9, 10, 18, 29, 33, 35, 46, 47, 59, 60, 61, 83, 85, 87, 98, 121, 128, 130, 132, 133, 142, 144, 145, 146, 167, 169, 172, 174], "instead": [4, 18, 65, 117, 143, 167, 168, 169, 172, 174], "sampl": [4, 18, 30, 65, 98, 100, 101, 105, 106, 109, 110, 111, 115, 117, 121, 122, 128, 130, 131, 132, 133, 143, 144, 148, 163, 166, 168, 169, 170], "can": [4, 9, 14, 15, 16, 17, 18, 29, 31, 33, 35, 38, 46, 47, 52, 54, 55, 59, 60, 63, 70, 71, 72, 76, 82, 83, 85, 87, 90, 92, 97, 98, 106, 108, 110, 111, 114, 116, 120, 121, 126, 128, 130, 132, 133, 135, 139, 141, 145, 146, 151, 153, 157, 167, 168, 169, 172, 174], "happen": [4, 61, 65, 87, 117, 139, 151, 168, 169], "two": [4, 9, 35, 38, 40, 43, 47, 50, 52, 59, 61, 63, 70, 135, 143, 151, 155, 167, 168, 169, 172, 174], "reason": [4, 15, 70, 133, 151, 161, 168, 169, 171], "1": [4, 9, 18, 33, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 64, 69, 70, 71, 72, 73, 74, 78, 83, 86, 98, 109, 122, 128, 129, 131, 133, 135, 143, 149, 150, 151, 169, 171, 172, 173, 174], "differ": [4, 9, 14, 16, 18, 31, 32, 33, 36, 37, 46, 47, 59, 60, 61, 63, 66, 70, 75, 82, 87, 114, 121, 135, 144, 150, 151, 167, 169, 171, 172], "rate": [4, 30, 65, 98, 101, 109, 110, 121, 143, 144, 163, 166, 169, 170], "other": [4, 9, 13, 15, 16, 18, 59, 63, 76, 82, 83, 90, 92, 120, 130, 135, 143, 144, 149, 151, 163, 166, 167, 168, 169, 171, 172, 174], "uhfqa": [4, 98], "2": [4, 9, 35, 46, 52, 53, 58, 59, 61, 68, 70, 84, 85, 89, 90, 91, 92, 93, 98, 128, 129, 130, 131, 132, 133, 143, 151, 169, 171, 172, 173, 174], "have": [4, 9, 15, 18, 26, 27, 28, 30, 47, 59, 63, 76, 82, 83, 111, 121, 127, 135, 138, 143, 144, 151, 157, 167, 168, 169, 171, 172, 174], "granular": [4, 98, 111, 121, 144, 159, 163, 166, 167, 168, 172], "some": [4, 15, 16, 78, 91, 98, 127, 128, 130, 132, 133, 145, 146, 151, 167, 168, 169, 174], "mix": 4, "station": [4, 35, 67, 98, 103, 135, 167, 168], "ro": 4, "devic": [4, 172], "vendor": 4, "than": [4, 9, 83, 121, 135, 142, 145, 146, 163, 166, 167], "awg": [4, 27, 35, 39, 41, 42, 45, 46, 47, 63, 76, 121, 160, 163, 166, 167, 172], "_channel_templ": 4, "repres": [4, 11, 14, 18, 31, 38, 50, 77, 78, 88, 93, 121, 135, 136, 168, 169, 171, 172], "inject_calibr": [4, 167], "partial_calibr": 4, "new": [4, 9, 15, 78, 121, 135, 143, 144, 145, 146, 148, 151, 167, 168, 169], "chang": [4, 15, 16, 18, 87, 110, 116, 135, 142, 157, 169, 171, 172], "after": [4, 70, 72, 74, 87, 100, 109, 117, 141, 142, 143, 157, 167, 172, 174], "initialis": [4, 17, 58, 59, 60, 69, 70, 71, 72, 73, 74, 83], "invalid": [4, 161], "gate_implement": [4, 15, 16, 17, 18, 29, 32, 34, 38, 57, 61, 68, 79, 84, 89, 91], "affect": [4, 9, 33, 59, 87, 121, 122, 135, 151, 167, 172], "loci": [4, 9, 22, 59, 83, 135, 169, 174], "also": [4, 9, 15, 16, 17, 18, 29, 33, 46, 47, 63, 66, 71, 72, 76, 82, 83, 85, 90, 92, 97, 121, 135, 139, 143, 144, 146, 151, 155, 157, 167, 169, 171, 172], "factoriz": [4, 59, 82, 83, 135, 167], "gate": [4, 9, 15, 16, 17, 18, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 133, 135, 137, 157, 167, 168, 170, 172, 173, 174], "its": [4, 5, 15, 16, 18, 31, 33, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 59, 60, 62, 63, 64, 86, 103, 110, 111, 121, 122, 135, 144, 145, 146, 149, 151, 167, 168, 169, 171, 174], "wa": [4, 35, 63, 66, 133, 167, 171, 172, 174], "must": [4, 7, 9, 10, 18, 35, 47, 98, 121, 122, 133, 135, 151, 167, 169, 171], "doe": [4, 9, 35, 47, 55, 59, 67, 83, 109, 111, 117, 135, 167, 168, 169, 171, 172, 174], "all": [4, 9, 10, 13, 17, 18, 25, 26, 27, 28, 29, 30, 33, 47, 54, 59, 60, 61, 66, 69, 70, 76, 83, 87, 98, 103, 108, 109, 110, 113, 116, 121, 122, 128, 130, 132, 133, 139, 143, 149, 163, 166, 167, 168, 169, 170, 171, 172, 174], "valu": [4, 9, 11, 16, 18, 39, 40, 41, 42, 43, 44, 45, 48, 49, 52, 54, 58, 59, 62, 64, 71, 72, 73, 74, 78, 86, 106, 109, 111, 113, 114, 117, 128, 131, 138, 149, 150, 155, 167, 168, 169, 174], "found": [4, 9, 16, 36, 37, 55, 78, 121, 135], "merg": [4, 16, 139, 143, 155], "actual": [4, 35, 59, 128, 130, 131, 132, 133, 143, 163, 166, 169, 172, 174], "previou": [4, 172], "validate_calibr": 4, "check": [4, 11, 98, 163, 166], "match": [4, 121, 122, 163, 165, 166, 167, 174], "someth": [4, 17, 59, 60, 98, 108, 109, 110, 113, 137, 138, 157], "wrong": [4, 137, 138, 167], "get_drive_channel": [4, 174], "given": [4, 9, 10, 13, 16, 17, 18, 30, 31, 47, 55, 59, 60, 78, 82, 85, 86, 90, 92, 98, 110, 121, 122, 126, 135, 144, 151, 153, 156, 163, 166, 168, 169, 174], "exist": [4, 16, 55, 78, 82, 90, 92, 121, 167, 168, 169, 174], "keyerror": 4, "get_flux_channel": 4, "see": [4, 17, 59, 71, 72, 73, 74, 93, 127, 132, 151, 167, 168, 169, 171, 172], "get_probe_channel": 4, "line": [4, 25, 35, 59, 60, 100, 167, 169], "belong": [4, 59, 167], "get_virtual_feedback_channel": 4, "feedback": [4, 35, 59, 80, 81, 82, 114, 167, 170, 174], "signal": [4, 14, 35, 59, 107, 114, 115, 132, 167, 170, 172, 173], "A": [4, 9, 12, 35, 59, 78, 106, 128, 135, 139, 145, 146, 148, 151, 154, 155, 167, 168, 169, 170, 171, 172, 173, 174], "between": [4, 14, 59, 61, 63, 65, 67, 83, 108, 121, 131, 133, 139, 168, 172], "sourc": [4, 63, 142, 167, 171, 172], "destin": [4, 172], "either": [4, 33, 87, 116, 151, 168, 171], "list": [4, 8, 9, 10, 11, 12, 16, 17, 18, 35, 46, 47, 55, 71, 72, 82, 90, 92, 121, 122, 142, 167, 168, 169, 171], "get_virtual_feedback_channel_for": 4, "awg_nam": 4, "feedback_qubit": [4, 35, 167, 172], "get": [4, 11, 15, 18, 46, 47, 56, 59, 60, 75, 82, 87, 97, 102, 103, 135, 142, 167, 169, 172, 174], "node": [4, 18], "receiv": [4, 114, 171, 172], "bit": [4, 35, 167, 172], "which": [4, 9, 13, 18, 33, 46, 59, 63, 78, 85, 87, 121, 122, 129, 130, 132, 133, 135, 143, 151, 157, 167, 168, 169, 170, 171, 172, 174], "": [4, 9, 15, 17, 29, 35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 58, 59, 60, 61, 62, 63, 64, 69, 70, 71, 72, 73, 74, 76, 83, 86, 87, 91, 97, 98, 121, 128, 130, 132, 133, 148, 154, 167, 168, 169, 170, 171, 174], "measur": [4, 7, 18, 35, 58, 59, 60, 81, 82, 87, 98, 135, 144, 167, 168, 169, 170, 174], "result": [4, 9, 15, 35, 59, 60, 66, 82, 87, 107, 112, 114, 121, 167, 168, 171, 174], "support": [4, 31, 35, 59, 83, 131, 133, 154, 163, 166, 167, 168, 169, 171, 172], "fast": [4, 46, 59, 80, 81, 114, 167, 170, 173, 174], "_get_channel_for_compon": 4, "has_calibr": 4, "op_nam": [4, 16, 18], "impl_nam": [4, 9, 16, 18, 78, 137, 167, 169], "true": [4, 7, 9, 17, 18, 33, 39, 40, 41, 42, 43, 44, 45, 48, 49, 55, 58, 59, 60, 62, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 78, 86, 98, 100, 121, 135, 155, 167, 174], "iff": [4, 7, 16, 18, 33, 39, 40, 41, 42, 43, 44, 45, 48, 49, 62, 63, 64, 86, 98, 135], "request": [4, 9, 16, 18, 75, 99, 101, 167, 168, 174], "get_calibr": 4, "get_control_channel": 4, "directli": [4, 9, 60, 116, 167], "neighbor": [4, 143, 144, 151], "coupler": [4, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 61, 62, 63, 64, 83, 133, 135, 143, 144, 151, 167, 168, 169, 173, 174], "ad": [4, 9, 15, 59, 66, 78, 97, 121, 139, 143, 144, 167, 169, 174], "separ": [4, 16, 18, 30, 82, 90, 92, 167, 168, 171, 174], "resolut": [4, 151, 174], "phase": [4, 9, 35, 38, 40, 43, 46, 58, 59, 60, 61, 63, 66, 68, 70, 75, 76, 77, 85, 86, 87, 89, 109, 116, 128, 129, 130, 132, 135, 157, 167, 168, 169, 174], "Will": [4, 149], "iter": [4, 7, 10, 18, 67, 83, 121, 122, 135, 148, 151, 174], "wait": [4, 33, 35, 61, 65, 82, 83, 98, 104, 106, 120, 121, 141, 143, 167, 168, 172, 174], "durat": [4, 18, 29, 30, 33, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 58, 59, 60, 62, 63, 64, 65, 69, 70, 71, 72, 73, 74, 76, 83, 85, 86, 87, 98, 106, 108, 109, 110, 111, 112, 113, 116, 117, 120, 121, 122, 128, 130, 131, 132, 133, 139, 142, 143, 144, 145, 146, 148, 151, 163, 166, 167, 168, 169, 172, 174], "round": [4, 98, 172, 174], "fals": [4, 7, 9, 16, 18, 44, 48, 49, 55, 59, 62, 64, 78, 86, 98, 100, 121, 135, 167, 169], "util": [4, 16, 18, 167, 169], "everi": [4, 18, 109, 163, 166, 167, 169, 174], "guarante": [4, 168], "idl": [4, 83, 117, 121, 167], "cannot": [4, 15, 106, 121, 151, 167, 169, 171, 172], "replac": [4, 9, 18, 78, 106, 117, 167, 171], "dynam": [4, 117, 167], "decoupl": [4, 117, 167], "thei": [4, 9, 16, 17, 58, 59, 60, 69, 70, 71, 72, 73, 74, 87, 91, 97, 98, 121, 122, 135, 151, 163, 166, 167, 168, 169, 172, 174], "treat": [4, 143, 151, 174], "content": [4, 5, 9, 98, 110, 121, 122, 135, 142, 150, 151, 153, 155, 167, 168, 169, 171, 174], "remain": [4, 139, 142, 157, 171], "align": [4, 168, 172, 174], "time": [4, 9, 18, 35, 59, 60, 61, 63, 65, 76, 83, 87, 98, 100, 106, 110, 114, 120, 121, 122, 133, 139, 142, 143, 145, 146, 151, 167, 168, 169, 170, 174], "dure": [4, 63, 98, 106, 120, 133, 151, 168, 174], "particular": [4, 9, 18, 21, 22, 23, 137, 171, 172, 174], "mai": [4, 16, 17, 18, 19, 29, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 58, 59, 60, 61, 62, 63, 64, 69, 70, 71, 72, 73, 74, 75, 82, 83, 85, 86, 87, 114, 117, 135, 151, 168, 169, 171, 172], "thu": [4, 30, 61, 87, 168, 172], "less": [4, 9, 139, 167], "space": [4, 11, 13, 133, 172], "side": [4, 32, 33, 98, 145, 146, 168], "todo": [4, 35, 59, 78, 98, 123], "For": [4, 9, 15, 21, 22, 59, 78, 98, 121, 128, 135, 167, 168, 169, 171, 172, 174], "now": [4, 87, 167], "nearest": 4, "each": [4, 9, 10, 18, 31, 35, 59, 63, 66, 83, 97, 111, 121, 135, 143, 144, 148, 151, 166, 168, 169, 171, 172, 174], "benefit": 4, "exa": [4, 18, 154, 167, 169, 170, 174], "sweep": 4, "over": [4, 5, 10, 59, 121, 167], "In": [4, 5, 9, 16, 35, 59, 60, 61, 65, 76, 83, 106, 110, 114, 121, 135, 143, 167, 168, 169, 171, 172, 174], "futur": 4, "gener": [4, 9, 18, 59, 60, 76, 87, 126, 151, 167, 169, 171], "should": [4, 9, 16, 18, 35, 47, 59, 60, 80, 81, 82, 90, 92, 97, 98, 133, 135, 139, 143, 144, 167, 169, 171, 172], "experi": [4, 9, 54, 135, 167], "float": [4, 13, 18, 29, 33, 35, 46, 47, 59, 60, 65, 69, 70, 75, 76, 77, 83, 85, 87, 88, 92, 93, 98, 99, 100, 101, 109, 113, 114, 116, 121, 123, 128, 129, 130, 131, 132, 133, 135, 142, 144, 145, 146, 156, 157, 159, 167, 169], "how": [4, 135, 151, 168, 169, 171, 172, 174], "long": [4, 61, 98, 167, 168, 169], "start": [4, 52, 54, 121, 139, 142, 143, 144, 149, 150, 167, 168, 169, 172], "simultan": [4, 59, 111, 139, 151, 168, 174], "box": [4, 35, 75, 76, 143, 149, 150, 151, 167, 174], "get_implement": [4, 16, 18, 59, 167, 169, 174], "use_priority_ord": 4, "strict_locu": [4, 16, 18], "priority_calibr": [4, 174], "provid": [4, 9, 16, 17, 18, 29, 30, 58, 59, 60, 69, 70, 71, 72, 73, 74, 76, 135, 163, 166, 168, 169, 170, 171, 174], "an": [4, 9, 11, 14, 16, 17, 18, 27, 32, 36, 37, 46, 55, 59, 61, 68, 69, 71, 76, 85, 86, 87, 88, 91, 93, 97, 98, 99, 108, 109, 111, 121, 122, 126, 133, 135, 143, 145, 148, 151, 157, 160, 161, 167, 168, 169, 170, 171, 172, 174], "mean": [4, 9, 59, 61, 114, 135, 151, 167, 169, 171, 172, 174], "chosen": [4, 92, 168], "automat": [4, 9, 17, 60, 167, 169], "logic": [4, 17, 18, 29, 33, 46, 47, 63, 82, 83, 85, 121, 167, 169, 174], "describ": [4, 9, 10, 18, 105, 135, 151, 168, 171, 174], "below": [4, 18, 168, 171, 172, 174], "symmetr": [4, 16, 18, 33, 39, 40, 41, 42, 43, 44, 45, 48, 49, 62, 63, 64, 86, 135, 167, 169], "order": [4, 9, 10, 11, 16, 18, 19, 32, 33, 35, 63, 121, 133, 135, 151, 168, 169, 170, 172, 174], "avail": [4, 16, 18, 168, 169, 171, 172, 174], "effect": [4, 18, 35, 61, 76, 85, 135, 139, 151, 168, 169, 170, 172, 174], "get_default_implementation_for_locu": [4, 135, 167, 169], "otherwis": [4, 16, 18, 47, 59, 65, 78, 82, 98, 121, 122, 131, 167, 169, 171], "first": [4, 9, 11, 32, 33, 35, 47, 59, 121, 133, 135, 169, 172, 174], "prioriti": [4, 5, 135, 167], "follow": [4, 9, 59, 60, 61, 82, 87, 103, 116, 133, 139, 143, 151, 163, 166, 167, 168, 171, 172, 174], "defin": [4, 5, 9, 16, 17, 20, 26, 27, 28, 30, 36, 37, 46, 47, 59, 60, 61, 68, 71, 72, 83, 84, 98, 127, 128, 133, 135, 137, 138, 149, 151, 167, 168, 169, 170, 171, 174], "defaults_for_locu": [4, 135, 167], "global": [4, 135, 167], "load": [4, 6, 153], "common": [4, 16, 17, 36, 37, 59, 60, 69, 70, 82, 90, 91, 92, 143, 167, 170, 171], "If": [4, 9, 11, 16, 17, 18, 36, 37, 55, 58, 59, 60, 69, 70, 71, 72, 73, 74, 78, 87, 97, 98, 117, 121, 122, 128, 130, 132, 133, 135, 145, 151, 167, 168, 169, 171, 174], "empti": [4, 9, 16, 59, 60, 114, 121, 135, 155, 167, 169], "note": [4, 14, 47, 59, 109, 121, 138, 142, 151, 169, 172], "prevent": [4, 168, 169], "save": 4, "via": [4, 16, 18, 70, 82, 83, 90, 92, 131, 133, 167, 169], "could": [4, 15, 135, 169, 172], "_find_implementation_and_locu": 4, "find": [4, 133, 174], "instanc": [4, 9, 11, 16, 18, 31, 59, 65, 76, 85, 86, 109, 112, 135, 157, 174], "compat": [4, 59, 76, 163, 166, 167], "highest": [4, 135], "we": [4, 15, 63, 87, 98, 133, 135, 157, 169, 171, 172, 174], "equival": [4, 87, 139, 151, 157, 168, 174], "one": [4, 7, 9, 16, 36, 37, 40, 43, 47, 50, 59, 60, 121, 135, 143, 144, 148, 151, 167, 168, 169, 171, 172, 174], "had": [4, 167], "_get_implement": 4, "built": [4, 9, 91, 167], "when": [4, 9, 15, 33, 35, 59, 61, 83, 121, 123, 128, 130, 132, 133, 143, 144, 151, 160, 161, 162, 167, 168, 169, 172, 174], "later": [4, 9], "oilcalibrationdata": [4, 16, 17, 18, 29, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 58, 59, 60, 62, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 82, 83, 85, 86, 87, 90, 92, 137, 169], "impli": [4, 171], "get_implementation_class": [4, 55], "default": [4, 5, 9, 16, 18, 29, 30, 33, 35, 36, 37, 46, 47, 59, 60, 63, 75, 78, 82, 83, 85, 87, 109, 114, 128, 129, 130, 132, 133, 135, 138, 167, 168, 169, 174], "validate_quantum_circuit": [4, 167], "require_measur": [4, 7], "constitut": [4, 7, 171], "least": [4, 7, 98, 143, 144, 163, 166, 168, 169, 171], "circuit_to_timebox": [4, 167], "scheduling_algorithm": [4, 148, 151], "schedulingalgorithm": [4, 147, 148, 151], "hard_boundari": [4, 148, 149, 151], "locus_map": [4, 167], "convert": [4, 9, 18, 70, 92, 98, 106, 120, 128, 130, 132, 133, 141, 151, 167, 168, 169, 170], "resolv": [4, 18, 149, 151, 168, 170], "option": [4, 9, 10, 11, 30, 59, 121, 135, 167, 169, 172], "placehold": [4, 9, 167], "physic": [4, 9, 19, 98, 143, 167, 168, 169], "while": [4, 18, 70, 149, 168, 169, 171, 174], "unresolv": 4, "timeboxes_to_front_padded_playlist": 4, "neighborhood": [4, 149, 151, 167], "0": [4, 9, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 52, 53, 58, 59, 60, 62, 63, 64, 65, 69, 70, 71, 72, 73, 74, 75, 76, 79, 83, 86, 91, 92, 98, 100, 108, 109, 126, 128, 129, 130, 131, 132, 133, 142, 148, 151, 157, 169, 171, 174], "temporari": 4, "helper": [4, 18], "playlist": [4, 61, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125, 127, 128, 129, 130, 131, 132, 133, 140, 141, 162, 163, 166, 167, 170, 172, 174], "front": [4, 121], "pad": [4, 33, 121, 143, 149, 174], "equal": [4, 9, 35, 61, 87, 90, 142, 145, 146, 168, 174], "sinc": [4, 30, 47, 63, 87, 133, 135, 167, 169], "delai": [4, 35, 58, 59, 60, 82, 105, 111, 167, 168, 172], "befor": [4, 65, 70, 72, 74, 78, 98, 100, 157, 167, 174], "final": [4, 128, 168, 169, 174], "wish": 4, "lose": 4, "coher": [4, 109], "done": [4, 70, 116, 123, 133, 139, 144, 167, 169], "onc": [4, 167, 168, 169], "handl": [4, 17, 30, 60, 82, 97, 98, 143, 146, 157, 167, 169], "better": [4, 98, 151], "remov": [4, 9, 18, 87, 98, 121, 122, 123, 167, 174], "timeboxes_to_playlist": 4, "int": [4, 9, 12, 13, 65, 69, 70, 85, 97, 98, 100, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 126, 128, 129, 130, 131, 132, 133, 135, 142, 143, 148, 151, 159], "far": 4, "By": [4, 18, 46, 47, 59, 60, 63, 75, 82, 87, 128, 130, 132, 133, 157], "occupi": [4, 121, 143, 144, 151, 168], "unnecessari": [4, 35, 143], "pack": [4, 149], "assum": [4, 33, 47, 66, 76, 82, 87, 92, 121, 133, 168, 169, 171, 174], "refer": [4, 70, 91, 97, 116, 167, 169, 170, 174], "ensur": [4, 168, 172, 174], "work": [4, 9, 63, 83, 121, 142, 167, 168, 169, 171, 174], "intend": [4, 63, 83, 135, 168, 169], "properli": 4, "higher": [4, 168, 172], "help": [4, 9, 168, 169, 172], "defend": [4, 171], "crosstalk": [4, 139, 169], "expens": 4, "longer": [4, 83, 167], "more": [4, 17, 98, 106, 135, 151, 167, 168, 171, 172], "decoher": 4, "timebox_to_schedul": 4, "finish": [4, 83, 167], "readi": [4, 170], "execut": [4, 32, 33, 97, 110, 118, 121, 135, 139, 168, 169, 170, 171, 172, 174], "sample_r": [4, 98, 99, 100, 101], "_finish_schedul": 4, "filter": 4, "zero": [4, 9, 33, 47, 63, 76, 79, 106, 111, 117, 132, 133, 135, 142, 145, 146, 168], "spacer": [4, 139], "consequ": 4, "step": [4, 117, 133, 167], "process": [4, 66, 106, 168, 173], "consist": [4, 15, 46, 47, 70, 76, 85, 121, 128, 130, 132, 133, 135, 167, 169, 171], "extend": [4, 5, 11, 13, 120, 121, 122, 143, 144, 145, 146, 151], "anoth": [4, 33, 47, 63, 65, 93, 135, 145, 146, 155, 167, 169], "gone": 4, "copi": [4, 9, 66, 110, 121, 122, 135, 155, 171], "resolve_timebox": [4, 151, 167, 174], "compute_neighborhood_hard_boundari": 4, "recurs": [4, 151, 155, 168, 174], "children": [4, 148, 151, 168, 174], "concaten": [4, 151, 168, 174], "strategi": [4, 143, 144, 150, 151], "composit": [4, 15, 16, 36, 37, 149, 150, 151, 167, 168, 169, 174], "solid": 4, "rectangl": [4, 174], "longest": [4, 143, 149], "within": [4, 11, 114, 121, 150, 168, 171], "tetri": [4, 106, 149], "tightli": [4, 149], "possibl": [4, 9, 87, 108, 121, 133, 143, 144, 149, 150, 151, 167, 168, 171, 172, 174], "still": [4, 9, 122], "overlap": [4, 106, 111, 120, 143, 168, 174], "regardless": [4, 169, 172], "boundari": [4, 52, 54, 143, 149, 150], "modifi": [4, 5, 9, 121, 122, 142, 143, 144, 145, 146, 157, 169, 171, 174], "so": [4, 9, 17, 35, 55, 58, 59, 60, 69, 70, 71, 72, 73, 74, 83, 87, 121, 122, 139, 151, 167, 168, 169, 170, 174], "becom": [4, 9, 35, 128, 174], "atom": [4, 18, 148, 149, 151, 168, 169, 174], "isn": 4, "t": [4, 91, 127, 128, 130, 131, 133, 153, 167, 171], "alreadi": [4, 9, 55, 121, 151, 169], "precomput": [4, 121, 151, 169], "typic": [4, 47, 59, 98, 135, 139, 168, 169, 172, 174], "want": [4, 9, 17, 46, 47, 59, 71, 72, 117, 169], "top": [4, 169], "layer": 4, "would": [4, 9, 15, 47, 65, 167, 169, 172, 174], "unus": 4, "set": [4, 9, 15, 17, 18, 20, 30, 35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 58, 59, 60, 62, 63, 64, 69, 70, 71, 72, 73, 74, 78, 79, 82, 86, 103, 121, 129, 135, 143, 144, 148, 151, 167, 168, 169, 170, 172, 174], "lower": [4, 170, 172], "where": [4, 46, 47, 59, 60, 61, 68, 84, 85, 91, 98, 111, 121, 128, 130, 131, 133, 135, 143, 146, 167, 168, 169, 171], "improv": [4, 35, 59, 167, 171], "need": [4, 9, 15, 16, 18, 29, 33, 35, 46, 47, 59, 60, 63, 78, 82, 83, 85, 121, 122, 128, 130, 132, 133, 135, 167, 168, 169, 170, 174], "_resolve_timebox_hard_boundari": 4, "compute_neighborhood": 4, "_get_neighborhood_hard_boundari": 4, "whose": [4, 54, 114, 169], "plu": 4, "mayb": 4, "_resolve_timebox_tetri": 4, "_block_neighborhood_tetri": 4, "add": [4, 9, 18, 55, 78, 83, 97, 121, 145, 146, 167, 168, 169, 171, 174], "addit": [4, 9, 18, 29, 30, 33, 46, 47, 59, 61, 63, 82, 83, 85, 89, 109, 121, 132, 135, 151, 169, 171, 174], "ideal": [4, 14, 135, 139], "model": [4, 127, 139, 168], "correctli": [4, 15, 167, 169], "interact": [4, 47], "frame": [4, 63, 133, 157, 167, 169], "subspac": [4, 61, 135, 139, 168, 169], "connect": [4, 9, 83, 135, 151, 168, 169, 174], "those": [4, 30, 59, 82, 135, 151, 167, 169, 171, 174], "henc": [4, 157], "evolut": 4, "Of": 4, "cours": [4, 169], "realiti": 4, "possibli": [4, 47, 172], "applic": [4, 169, 171], "essenti": [4, 169], "precis": [4, 168], "interest": 4, "howev": [4, 16, 82, 117, 128, 130, 132, 133, 168, 169, 171], "well": [4, 67, 83, 110, 121, 135, 163, 166, 169, 170, 172, 174], "local": [4, 63, 87, 116, 157], "shut": 4, "down": 4, "unwant": 4, "like": [4, 9, 17, 18, 59, 83, 105, 128, 130, 132, 133, 168, 169, 174], "end": [4, 9, 38, 63, 65, 66, 87, 91, 106, 120, 121, 122, 131, 167, 168, 171, 172], "carri": [4, 168, 171], "meant": [4, 9], "etc": 4, "build_playlist": 4, "finish_schedul": 4, "number": [4, 9, 13, 14, 35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 58, 59, 60, 62, 63, 64, 69, 70, 71, 72, 73, 74, 83, 86, 98, 107, 111, 121, 133, 135, 148, 151, 163, 166, 168, 169, 172, 174], "involv": [4, 18, 33, 168, 170, 174], "compress": [4, 168], "duplic": 4, "transfer": [4, 76, 171], "drop": 4, "point": [4, 87, 142, 143, 144, 169], "finalis": 4, "unless": [4, 18, 128, 130, 132, 133, 151, 167, 169, 171, 174], "call": [4, 9, 11, 15, 16, 18, 63, 83, 90, 167, 169, 174], "uniform": 4, "_set_gate_implementation_shortcut": 4, "creat": [4, 9, 15, 16, 18, 29, 35, 47, 126, 167, 168, 169, 170], "shortcut": [4, 9, 167, 174], "collis": [4, 5], "won": 4, "warn": 4, "hardcod": [5, 169], "nativ": [5, 31, 135, 174], "ones": [5, 16, 32, 33, 82, 90, 92, 149, 151, 169], "case": [5, 9, 18, 29, 33, 46, 47, 59, 60, 76, 83, 85, 87, 121, 130, 131, 135, 143, 146, 157, 167, 168, 169], "take": [5, 9, 18, 35, 47, 121, 132, 133, 135, 155, 167, 169, 172, 174], "gate_definit": 5, "section": [5, 168, 169, 171, 172, 174], "yaml": [5, 6, 153], "file": [5, 6, 153, 171], "config": [6, 97, 167], "circuitoperationlist": [8, 167], "circuit_oper": 9, "num_qubit": [9, 13], "transform": [9, 167, 168, 170, 171], "It": [9, 38, 68, 76, 82, 83, 87, 89, 91, 111, 133, 151, 167, 169], "mostli": [9, 168], "conveni": [9, 18, 59, 151, 167, 170], "enabl": [9, 63, 167], "easi": [9, 174], "creation": [9, 169], "calcul": [9, 10, 13, 63, 131, 133, 167], "onto": 9, "import": [9, 50, 169, 171, 174], "former": [9, 167], "present": [9, 10, 61, 121, 143, 174], "think": 9, "about": [9, 67, 108, 109, 110, 113, 168, 172, 174], "qiskit": [9, 167], "regist": [9, 10, 11, 16, 78, 135, 167, 168, 170, 174], "latter": [9, 169], "quantum_op": [9, 135], "most": [9, 169, 170], "simpli": [9, 35, 87, 135, 168], "taken": [9, 167], "context": [9, 11, 16, 18, 29, 33, 36, 37, 46, 47, 59, 60, 83, 85, 87, 168, 169, 174], "good": 9, "practic": [9, 169, 172, 174], "mutabl": [9, 121], "fundament": 9, "popul": [9, 61], "qb1": [9, 59, 135, 169, 174], "qbn": 9, "qb2": [9, 59, 135, 169, 172, 174], "altern": [9, 168, 172], "you": [9, 59, 60, 63, 117, 135, 167, 170, 171, 174], "To": [9, 35, 121, 169, 170, 171, 172, 174], "your": [9, 169, 171], "own": [9, 15, 18, 31, 135, 167, 168, 169, 171], "initi": [9, 30, 31, 128, 133, 168, 169], "my_tabl": 9, "rememb": 9, "circuit_op": 9, "find_qubit": 9, "origin": [9, 13, 18, 121, 122, 155, 171], "what": [9, 16, 135, 167, 168, 169], "multipli": 9, "get_item": 9, "redefin": [9, 128, 130, 132, 133], "3": [9, 35, 58, 59, 143, 173, 174], "circuit1": [9, 174], "circuit2": [9, 174], "4": [9, 51, 89, 91, 98, 173], "produc": [9, 145, 167, 168, 172, 174], "prx": [9, 16, 17, 35, 36, 37, 58, 59, 60, 67, 69, 70, 71, 72, 73, 74, 75, 76, 82, 87, 90, 92, 135, 157, 167, 168, 169, 172, 174], "add_op": 9, "angl": [9, 18, 35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 62, 63, 64, 68, 70, 75, 76, 77, 82, 84, 87, 88, 90, 91, 93, 135, 156, 157, 167, 169, 174], "drag_crf": [9, 36, 167], "abov": [9, 168, 169, 170, 171, 174], "shorten": 9, "exactli": [9, 18, 135, 148], "syntax": [9, 167, 168, 169, 171, 174], "usual": [9, 15, 112, 133, 168, 169, 172, 174], "attach": [9, 171], "init": [9, 167, 169], "ariti": [9, 18, 33, 39, 40, 41, 42, 43, 44, 45, 48, 49, 59, 62, 63, 64, 86, 135, 169], "unitari": [9, 10, 11, 13, 38, 52, 54, 61, 77, 79, 88, 93, 135, 167, 168, 169], "quickli": 9, "entir": [9, 11, 98, 167], "u": [9, 51, 92, 167], "get_unitari": 9, "dimens": 9, "alwai": [9, 16, 32, 33, 35, 63, 82, 90, 92, 135, 139, 143, 145, 169], "qb3": [9, 59, 135, 172, 174], "8x8": 9, "matrix": [9, 10, 11, 12, 13, 38, 91, 135, 167, 169], "correspond": [9, 11, 16, 51, 52, 53, 54, 82, 90, 92, 108, 135, 143, 151, 168, 172], "three": 9, "big": [9, 10, 11, 135], "endian": [9, 10, 11, 135], "convent": [9, 10, 63, 103], "With": [9, 17, 59, 60, 172], "expect": [9, 18, 30], "action": [9, 10, 135, 168], "ident": [9, 13, 53, 76, 167], "physical_circuit": 9, "map_loci": [9, 167], "physical_qubit": 9, "exampl": [9, 15, 16, 63, 98, 135, 168, 169, 171, 174], "qb5": [9, 135], "qb10": 9, "occurr": 9, "mani": [9, 167, 169, 174], "run": [9, 167, 172], "parallel": [9, 135, 167], "larg": [9, 168], "ignor": [9, 35], "add_qubit": 9, "n": [9, 12, 13, 32, 33, 98, 128, 133], "qubit_nam": [9, 10], "overal": [9, 10], "arrai": [9, 10, 51, 53, 58, 59, 128, 130, 131, 132, 133, 167, 169], "ndarrai": [9, 10, 11, 12, 13, 35, 58, 59, 77, 88, 93, 130, 131, 132, 133, 135, 169], "locus_indic": 9, "append": [9, 33, 59, 121, 122, 167], "store": [9, 11, 15, 18, 46, 47, 59, 60, 75, 82, 87, 135, 169], "select": [9, 13, 172, 174], "indic": [9, 13, 65, 126, 168, 171], "qb4": [9, 172], "param": [9, 11, 18, 135, 167, 169], "barrier": [9, 10, 135, 169], "compos": [9, 170], "safer": 9, "wai": [9, 16, 105, 151, 167, 168, 169, 174], "togeth": [9, 35, 46, 59, 65, 143, 151, 167, 168, 169, 174], "probabl": 9, "wire": 9, "k": [9, 133], "achiev": [9, 169], "count_op": 9, "count": 9, "counter": 9, "occur": [9, 151], "make_circuit": [9, 167], "fresh": 9, "length": [9, 33, 58, 59, 60, 115, 121, 133, 143, 149, 163, 165, 166, 167], "total": [9, 66, 122, 139, 174], "across": 9, "deepcopi": 9, "_set_specific_operation_shortcut": 9, "through": [10, 31, 59, 167, 169, 171], "skip": [10, 121], "product": [10, 168, 171], "fetch": 11, "correct": [11, 63, 66, 89, 167, 169, 174], "size": [11, 155, 169], "Then": [11, 151, 169], "hilbert": [11, 13], "whole": [11, 168, 171], "mat": 12, "perm": 12, "accord": [12, 151, 174], "permut": [12, 167], "vector": [12, 167], "n_qubit": 13, "propag": [13, 52, 54, 82, 167, 172], "larger": [13, 121, 168], "system": [13, 167, 171, 172, 174], "nest": [13, 18, 20, 39, 40, 41, 42, 43, 44, 45, 48, 49, 58, 62, 63, 64, 71, 72, 73, 74, 83, 86, 87], "hash": 13, "purpos": [13, 18, 59, 167, 169, 171], "rang": [13, 128, 151, 167], "term": [14, 16, 128, 130, 132, 133, 135, 168, 169, 170, 171], "conceptu": [14, 168], "abstract": [14, 135, 168, 169, 170], "wherea": [14, 59, 106, 135, 168, 169], "concret": [14, 135, 169, 170, 174], "One": [14, 18, 75, 168, 174], "approxim": 14, "abc": [14, 16, 18, 32, 34, 38, 57, 61, 68, 69, 70, 75, 76, 79, 84, 89, 91], "customiqwaveform": [14, 57, 59, 60, 68, 69, 70, 169], "singlepulseg": [14, 68, 76, 167], "compositecach": 14, "__call__": [15, 16, 18, 29, 33, 46, 47, 59, 63, 82, 83, 85, 167, 169], "normal": [15, 35, 133, 135, 156, 167, 169, 171], "_timebox_cach": 15, "trust": 15, "itself": [15, 63, 83, 167, 169, 172], "member": [15, 16, 52, 54, 169], "deduc": 15, "cache_kei": 15, "extra_id": 15, "hashabl": [15, 169], "kei": [15, 16, 18, 35, 36, 37, 59, 60, 80, 81, 82, 90, 92, 167, 168, 169], "identifi": [15, 35, 98, 105, 121, 169, 171], "cast": 15, "extra": [15, 35, 63, 70, 169], "string": [15, 58, 59, 114, 126], "id": 15, "further": [15, 132, 133, 151, 169], "did": [15, 167], "come": [15, 169, 174], "fund": 15, "parent": [16, 17, 18, 29, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 58, 59, 60, 62, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 82, 83, 85, 86, 87, 90, 92, 167, 169], "calibration_data": [16, 17, 18, 29, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 58, 59, 60, 62, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 82, 83, 85, 86, 87, 90, 92, 169], "pre": [16, 133], "abl": [16, 167], "know": [16, 18, 169], "consid": [16, 17, 58, 59, 60, 69, 70, 71, 72, 73, 74, 142, 145, 146, 169, 174], "registered_g": [16, 82, 90, 92, 167, 169], "cz": [16, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 61, 63, 87, 135, 167, 168, 169, 173, 174], "insid": [16, 18, 29, 33, 35, 46, 47, 63, 70, 82, 83, 85, 128, 142, 151, 167, 168, 169], "besid": [16, 82, 83, 90, 92], "here": [16, 70, 78, 82, 90, 92, 127, 133, 169, 172, 174], "construct": [16, 18, 31, 59, 76, 82, 85, 86, 90, 92, 128, 130, 132, 133, 167, 168, 170], "default_implement": [16, 36, 37, 135], "design": [16, 36, 37, 171], "fill": [16, 36, 37, 168], "he": [16, 36, 37], "sought": 16, "custom": [17, 18, 59, 60, 167, 168, 170], "waveform": [17, 30, 39, 41, 42, 45, 46, 47, 58, 59, 60, 62, 63, 64, 69, 70, 71, 72, 73, 74, 85, 97, 109, 110, 113, 128, 129, 130, 131, 132, 133, 163, 165, 166, 167, 168, 170], "iqpuls": [17, 46, 59, 60, 69, 70, 71, 72, 76, 85, 87, 104, 107, 111, 114, 116, 157, 165, 168, 169], "info": [17, 18, 167, 169], "somethingels": [17, 59, 60], "q": [17, 46, 58, 59, 60, 69, 70, 71, 72, 73, 74, 85, 109, 169, 173, 174], "mygat": [17, 59, 60], "i_wav": [17, 59, 60], "q_wave": [17, 59, 60], "wave_i": [17, 58, 71, 72, 73, 74, 109, 169], "wave_q": [17, 58, 71, 72, 73, 74, 109, 169], "dependent_wav": [17, 58, 59, 60, 69, 70, 71, 72, 73, 74], "depend": [17, 18, 29, 33, 46, 47, 58, 59, 60, 69, 70, 71, 72, 73, 74, 83, 85, 87, 108, 167, 169], "share": [17, 30, 47, 58, 59, 60, 65, 69, 70, 71, 72, 73, 74, 171], "drag": [17, 58, 59, 60, 69, 70, 71, 72, 73, 74, 169], "root_paramet": [17, 47, 59, 60, 63, 69, 70], "independ": [17, 59, 60, 69, 70, 121, 122, 135, 168, 172], "overrid": [17, 18, 29, 33, 46, 47, 59, 60, 63, 69, 70, 71, 72, 75, 82, 83, 85, 87, 167, 169, 174], "excluded_paramet": [17, 46, 47, 71, 72], "exclud": [17, 46, 47, 71, 72, 171], "There": [18, 70, 169, 172, 174], "subclass": [18, 29, 31, 33, 46, 47, 59, 60, 83, 85, 87, 128, 130, 132, 133, 135, 167, 169], "__init__": [18, 167, 169], "usabl": [18, 35, 167], "rotat": [18, 35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 54, 62, 63, 64, 68, 70, 75, 76, 77, 84, 87, 88, 89, 91, 93, 157, 169, 174], "input": [18, 35, 59, 168, 169], "raw": [18, 107, 114, 115, 126, 172], "meaning": [18, 33, 39, 40, 41, 42, 43, 44, 45, 48, 49, 62, 63, 64, 86, 135], "special_implement": [18, 167], "special": [18, 47, 65, 76, 127, 135, 167, 169, 171, 174], "never": [18, 167, 169], "explicitli": [18, 59, 167, 169, 171, 174], "qualified_nam": 18, "qualifi": 18, "classmethod": [18, 46, 47, 59, 60, 69, 70, 71, 72, 75, 82, 83, 85, 87, 167], "needs_calibr": 18, "appropri": [18, 168, 171], "_call": [18, 29, 33, 35, 46, 47, 59, 60, 63, 70, 75, 76, 82, 83, 85, 87, 90, 92, 167, 169], "kwarg": [18, 29, 33, 46, 47, 63, 71, 72, 82, 83, 85], "signatur": [18, 29, 33, 46, 47, 63, 82, 83, 85, 135, 167, 169], "suffici": [18, 29, 33, 46, 47, 63, 82, 83, 85, 98, 133], "assign": [18, 47, 59, 60, 97, 167], "specifi": [18, 29, 35, 110, 149, 169, 172, 174], "to_timebox": 18, "wrap": [18, 174], "duration_in_second": [18, 29, 33, 46, 47, 59, 60, 83, 85, 87, 121], "left": [18, 29, 33, 46, 47, 59, 60, 83, 85, 87, 145, 146, 168, 169, 172], "unimpl": [18, 29, 33, 46, 47, 59, 60, 83, 85, 87], "reimplement": [18, 29, 33, 46, 47, 59, 60, 83, 85, 87, 169], "make": [18, 29, 33, 46, 47, 59, 60, 63, 83, 85, 87, 110, 117, 121, 122, 135, 139, 142, 167, 169, 171, 174], "sens": [18, 29, 33, 46, 47, 59, 60, 83, 85, 87], "convert_calibration_data": 18, "channel_prop": 18, "item": [18, 121], "fraction": 18, "hz": [18, 40, 43, 58, 59, 62, 63, 64, 86, 98, 99, 101, 128, 130, 132, 133, 169], "addition": [18, 143, 144, 172], "under": [18, 139, 151, 171], "n_sampl": [18, 30, 69, 70, 85, 128, 129, 130, 131, 132, 133], "subset": [18, 52], "nestedparam": [18, 35, 39, 40, 41, 42, 43, 44, 45, 48, 49, 58, 62, 63, 64, 71, 72, 73, 74, 83, 86], "cl": 18, "get_paramet": 18, "wildcard": 18, "charact": [18, 121, 171], "dot": 18, "root": [18, 52], "settingnod": [18, 102, 103], "get_locus_mapping_nam": [18, 46, 47, 59, 60, 75, 82, 87, 169], "operation_nam": [18, 46, 47, 59, 60, 75, 82, 87, 169], "implementation_nam": [18, 46, 47, 59, 60, 75, 82, 87, 169], "behaviour": [18, 46, 47, 59, 60, 75, 82, 87, 167, 169], "get_custom_locus_map": [18, 83, 167, 169], "component_to_channel": [18, 83, 103], "wrt": 18, "often": [18, 167, 169], "set_locus_map": 18, "frozenset": [18, 83, 169], "matter": [19, 63, 169], "alia": [19, 20, 21, 22, 23, 24, 39, 40, 41, 42, 43, 44, 45, 48, 49, 58, 62, 64, 71, 72, 73, 74, 76, 86, 136], "probe_lin": [25, 59, 60], "single_components_with_dr": 26, "single_components_with_flux_awg": 27, "single_components_with_readout": 28, "plai": [29, 39, 41, 42, 45, 46, 47, 59, 63, 85, 109, 111, 112, 113, 148, 168, 169, 174], "singl": [29, 31, 54, 58, 59, 60, 68, 69, 70, 72, 76, 84, 87, 89, 91, 121, 122, 135, 148, 151, 164, 167, 168, 169, 172, 174], "_get_puls": [29, 69, 70, 71, 72, 167], "_get_pulse_channel": 29, "basic": [29, 122, 167, 169], "insert": [29, 65, 78, 167], "overridden": [29, 135, 169], "wave": [30, 113, 130], "label_prefix": 30, "prefix": [30, 59], "label": [30, 35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 58, 59, 60, 62, 63, 64, 69, 70, 71, 72, 73, 74, 80, 81, 83, 86, 105, 107, 114, 115, 148, 151, 167, 168, 169], "format": [30, 171], "been": [31, 35, 78, 83, 151, 168, 171, 172], "sever": [31, 106, 135, 167, 169, 172, 174], "scheme": [31, 168], "likewis": 31, "sometim": [31, 168], "metaoper": [32, 33, 135, 169], "forc": [32, 98], "tempor": [32, 33], "preced": [32, 33, 87, 155, 157], "qudit": [33, 135], "metainstruct": 33, "caus": [33, 35, 167, 171, 172], "turn": [33, 167], "impos": 33, "relat": [33, 66, 158, 167, 172, 174], "classic": [34, 35, 167, 172], "ccprx_composit": [34, 36, 37, 167, 172], "ccprx_composite_dragcosinerisefal": [34, 167], "ccprx_composite_draggaussian": [34, 167], "condit": [35, 36, 37, 82, 108, 114, 163, 166, 167, 169, 171, 172], "discrimin": 35, "obtain": [35, 76, 168, 171, 173], "segment": [35, 83, 114, 116, 119, 121, 126, 142, 143, 144, 167, 168, 172], "activ": [35, 112, 168], "underneath": 35, "Not": [35, 171, 174], "legaci": 35, "program": [35, 121], "mode": [35, 59], "control_delai": [35, 172], "unit": [35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 58, 59, 60, 62, 63, 64, 69, 70, 71, 72, 73, 74, 83, 86, 109, 121, 128, 130, 132, 133, 168, 169, 172], "data_typ": [35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 58, 59, 60, 62, 63, 64, 69, 70, 71, 72, 73, 74, 83, 86], "datatyp": [35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 58, 59, 60, 62, 63, 64, 69, 70, 71, 72, 73, 74, 83, 86, 154], "collection_typ": [35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 58, 59, 60, 62, 63, 64, 69, 70, 71, 72, 73, 74, 83, 86], "collectiontyp": [35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 58, 59, 60, 62, 63, 64, 69, 70, 71, 72, 73, 74, 83, 86, 154], "element_indic": [35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 58, 59, 60, 62, 63, 64, 69, 70, 71, 72, 73, 74, 83, 86], "_parent_nam": [35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 58, 59, 60, 62, 63, 64, 69, 70, 71, 72, 73, 74, 83, 86], "_parent_label": [35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 58, 59, 60, 62, 63, 64, 69, 70, 71, 72, 73, 74, 83, 86], "instrument": [35, 87, 98, 101, 104, 119, 172], "drive_control": [35, 102], "feedback_sourc": 35, "141592653589793": 35, "feedback_kei": [35, 59, 167], "conditionalinstruct": [35, 59, 104, 114, 172], "until": [35, 87, 168], "enough": [35, 172], "arriv": [35, 172], "place": [35, 121, 132, 143, 144, 171], "sequenti": 35, "without": [35, 115, 120, 151, 167, 168, 169, 171, 174], "care": [35, 174], "yourself": [35, 170], "rad": [35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 58, 59, 60, 62, 63, 64, 70, 72, 74, 77, 86, 88, 109, 157], "multipl": [35, 59, 83, 98, 108, 111, 114, 128, 130, 132, 133, 167, 168], "f": [35, 59, 60, 128, 130, 131, 133, 135, 169], "__": [35, 59, 60, 167], "current": [35, 59, 63, 142], "hw": [35, 59, 167], "per": [35, 59, 135, 167, 169], "listen": [35, 167], "user": [35, 59, 133, 151, 167, 168, 169, 172, 174], "drag_gaussian": [37, 167, 174], "z": [38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 52, 57, 58, 62, 63, 64, 70, 84, 87, 89, 91, 93, 157, 167, 169], "flip": [38, 167], "rel": [38, 63, 109, 128, 130, 132, 133, 167, 168, 169, 174], "11": [38, 173], "state": [38, 61, 63, 68, 70, 79, 82, 83, 87, 89, 91, 135, 157, 168, 169, 171, 172], "text": [38, 61, 70, 131, 133, 171], "begin": [38, 63, 65, 91, 105, 111, 122, 131, 142, 145, 146, 167, 172, 174], "pmatrix": [38, 91], "fluxpulseg": [38, 39, 41, 42, 44, 45, 48, 49, 61, 63, 169], "cz_gaussiansmoothedsquar": 38, "cz_slepian": 38, "cz_truncatedgaussiansmoothedsquar": 38, "cz_slepian_crf": 38, "cz_crf": 38, "fluxpulsegate_tgss_crf": 38, "fluxpulsegate_crf_crf": [38, 167], "couplerfluxpulsequbitacstarkpulseg": [38, 40, 43, 167], "cz_slepian_acstarkcrf": 38, "cz_crf_acstarkcrf": 38, "cosinerisefal": [39, 40, 44, 48, 49, 62, 64, 71, 72, 132], "coupler_wav": [39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 62, 63, 64, 169], "amplitud": [39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 58, 59, 60, 62, 64, 69, 70, 71, 72, 73, 74, 76, 85, 86, 128, 130, 132, 133, 169], "scalar": [39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 58, 59, 60, 62, 63, 64, 69, 70, 71, 72, 73, 74, 83, 86], "center_offset": [39, 40, 41, 42, 43, 44, 45, 48, 49, 62, 64, 71, 72, 73, 74, 86, 131, 132, 133, 169], "crf": [39, 40, 43, 44, 48, 49, 62, 64, 71, 72], "full_width": [39, 40, 42, 43, 44, 45, 48, 49, 62, 64, 71, 72, 73, 74, 86, 131, 132, 133], "rise_tim": [39, 40, 43, 44, 45, 48, 49, 62, 64, 71, 72, 86, 131, 132], "rz": [39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 62, 63, 64, 70, 72, 74, 85, 86, 87, 92, 157, 167], "qubit_wav": [39, 41, 42, 44, 45, 47, 48, 49, 62, 63, 64, 169], "cosin": [40, 43, 86, 127, 128, 132, 133, 167], "rise": [40, 43, 86, 131, 132, 167], "fall": [40, 43, 86, 131, 132, 135, 167], "ac": [40, 43, 46, 85, 86, 167], "stark": [40, 43, 46, 85, 86, 167], "first_qubit": [40, 43], "mcrf": [40, 43, 86], "modulation_frequ": [40, 43, 86, 109, 132], "second_qubit": [40, 43], "qubit_drive_wav": [40, 43, 46], "modulatedcosinerisefal": [40, 43, 86, 127], "gaussiansmoothedsquar": 41, "gss": 41, "gaussian_sigma": 41, "square_width": 41, "slepian": [42, 43, 44, 127, 167], "coupling_strength_norm": [42, 43, 44, 133], "frequency_initial_norm": [42, 43, 44, 133], "frequency_to_minimize_norm": [42, 43, 44, 133], "lambda_1": [42, 43, 44, 133], "lambda_2": [42, 43, 44, 133], "squid_asymmetri": [42, 43, 44, 133], "truncatedgaussiansmoothedsquar": [45, 49, 64, 132], "tgss": [45, 49, 64], "analog": 46, "tune": 46, "frequenc": [46, 58, 59, 60, 63, 85, 99, 100, 109, 128, 130, 132, 133, 167, 169], "_ac_stark_puls": [46, 85], "phase_incr": [46, 85, 86, 87, 109, 116], "quadratur": [46, 85, 109], "pi": [46, 69, 70, 71, 72, 73, 74, 76, 82, 85, 89, 90, 91, 128, 129, 130, 131, 156, 167, 169, 172, 174], "discret": 47, "mediat": [47, 61], "coupl": [47, 133], "tunabl": [47, 173], "both": [47, 63, 145, 167, 169, 172, 174], "arbitrari": [47, 87, 91, 111, 157, 172, 174], "slot": 47, "move": [47, 62, 63, 64, 65, 142, 167, 174], "being": [47, 76, 135, 169, 172], "flux_puls": 47, "radian": [47, 68, 75, 76, 84, 87, 91, 109, 116, 130, 156], "enumer": [50, 52, 54], "xygat": [50, 53, 75], "intenum": [50, 54], "reprenum": 50, "twoqubitg": [50, 51], "iswap": [51, 52, 173], "j": [51, 53], "sqrt_iswap": [51, 52], "70710678": [51, 53], "70710678j": [51, 53], "matric": [51, 53, 169], "enum": [52, 54, 147, 149, 150], "qualnam": [52, 54, 149, 150], "dictionari": [52, 155, 169], "two_qubit_unitari": 52, "squar": 52, "x_90": 53, "x_180": 53, "x_m90": 53, "y_90": 53, "y_180": 53, "y_m90": 53, "su": [53, 91, 92, 93], "clifford": [54, 75], "axi": [54, 68, 89, 91, 157, 167, 169], "xy": [54, 68, 75], "plane": [54, 68, 89], "xygate_unitari": 54, "tomographi": 54, "overwrit": [55, 78], "error": [55, 133, 137, 151, 153, 160, 161, 162, 167, 168, 174], "class_nam": 56, "project": [57, 58, 82, 87], "basi": [57, 58, 82, 87, 91, 135, 171], "measure_customwaveform": [57, 58, 60, 169], "measure_const": [57, 167], "probepulse_customwaveform": [57, 167], "dispers": [58, 59], "constant": [58, 59, 81, 131, 167, 172], "acquisition_delai": [58, 59, 60], "acquisit": [58, 59, 60, 105, 112, 167, 172], "acquisition_typ": [58, 59], "threshold": [58, 59, 114], "amplitude_i": [58, 59, 60, 69, 70, 71, 72, 73, 74, 169], "amplitude_q": [58, 59, 60, 69, 70, 71, 72, 73, 74, 169], "integration_length": [58, 59, 60, 167], "integr": [58, 59, 60, 100, 107, 114, 115, 133, 167, 172], "integration_threshold": [58, 59], "integration_weights_i": [58, 59], "weight": [58, 59, 107, 114, 167], "dtype": [58, 59, 128, 130, 131, 132, 133, 169], "float64": [58, 59], "integration_weights_q": [58, 59], "dimension": 59, "len": 59, "intermedi": [59, 169], "IF": 59, "center": [59, 100, 131, 132, 133], "offset": [59, 111, 131, 133], "readouttrigg": [59, 60, 104, 114, 148, 168, 170], "_multiplexed_timebox": 59, "multiplexedprobetimebox": [59, 147, 167], "probe_timebox": 59, "_time_trac": 59, "time_trac": [59, 60, 105], "_build_instruct": [59, 60], "waveform_param": [59, 60], "root_param": [59, 60], "if_freq": 59, "acquisitionmethod": [59, 60, 104, 107, 112, 115], "do_acquisit": 59, "nake": 59, "multiplex": [59, 82, 148, 167], "__add__": [59, 167], "b": [59, 139, 145, 146, 151, 155], "trigger": [59, 60, 112, 121, 148, 167, 172], "goe": 59, "maintain": 59, "backward": [59, 76], "rout": [59, 114], "probelin": [59, 168, 172], "behav": [59, 106, 117], "featur": [59, 169, 170], "pick": 59, "up": [59, 63, 66, 98, 121, 133, 143, 167, 169], "anywher": [59, 114, 167], "pass": [59, 65, 66, 67, 167, 172], "acquisition_dur": 59, "trace": [59, 60], "except": [59, 70, 158, 160, 161, 162, 168, 169, 171], "record": 59, "acqusit": 59, "contrari": 60, "probl": 60, "exchang": 61, "invari": 61, "span": 61, "00": 61, "rangl": [61, 79], "01": 61, "10": [61, 173], "swap": 61, "anyth": [61, 169], "orthogon": [61, 169], "involut": 61, "_": 61, "i_": 61, "langl": 61, "undefin": [61, 168], "complex": [61, 107, 169, 172, 174], "degre": [61, 89], "freedom": [61, 172], "continuum": 61, "cancel": 61, "due": [61, 63, 85, 168], "movemark": [61, 63, 167], "move_customwaveform": [61, 62, 64, 66, 167], "move_crf_crf": [61, 167], "move_tgss_crf": 61, "detun": [62, 63, 64, 65, 66, 167], "bookkeep": 63, "unknown": [63, 135, 161], "pair": [63, 111, 135, 169], "back": [63, 135, 142], "came": 63, "sandwich": [63, 66, 67, 167], "At": [63, 169], "annot": [63, 65, 171], "mark": [63, 171], "counteract": 63, "accumul": 63, "proport": 63, "sum": [63, 66, 111, 122, 128, 130, 132, 133, 151, 174], "virtualrz": [63, 65, 66, 87, 104, 168], "complet": [63, 168], "apply_move_gate_phase_correct": [63, 167], "track": [63, 122, 143, 167, 171, 174], "right": [65, 168, 171, 172, 174], "link": [65, 127, 167, 171], "noth": [65, 119, 121, 139, 141, 145, 146, 169, 171], "explicit": [65, 167, 168], "aforement": [65, 122, 143, 169], "marker": 65, "post": 65, "compil": [65, 67, 98, 106, 170, 171, 174], "apply_detuning_correct": 66, "level": [66, 67, 135, 168, 169, 170, 172, 174], "validate_prx": 67, "prepar": [67, 171], "conform": 67, "constraint": [67, 111, 168, 172], "unmodifi": 67, "x": [68, 70, 72, 75, 76, 89, 91, 167, 169, 173], "r_": [68, 70, 87], "phi": [68, 70, 84, 87, 91, 92, 93, 130, 157, 167], "theta": [68, 70, 87, 91, 92, 93, 133, 157, 167], "co": [68, 91, 128, 130], "y": [68, 75, 89, 91, 93, 167], "sin": [68, 91, 131], "r_z": [68, 70, 84, 87, 91, 92], "r_x": 68, "dagger": 68, "around": [68, 89, 91, 132, 157], "li": 68, "bloch": [68, 91, 169], "sphere": [68, 91, 169], "prx_gateimplement": [68, 76], "prx_singlepulse_gateimplement": [68, 69, 70], "prx_customwaveform": [68, 71, 73, 167, 169], "prx_draggaussian": 68, "prx_dragcosinerisefal": 68, "prx_customwaveformssx": [68, 72, 74, 167], "prx_draggaussiansx": [68, 167], "prx_dragcosinerisefallsx": [68, 167], "iq": [69, 70, 71, 72, 73, 74, 76, 98, 99, 107, 111, 114, 115, 157, 163, 166], "hot": [69, 70], "swappabl": [69, 70], "rest_of_calibration_data": [69, 70], "x_pi": [69, 71, 167], "sx": [70, 90, 167], "manipul": [70, 169], "formula": 70, "fuse": 70, "rz_after": [70, 72, 74], "rz_befor": [70, 72, 74, 167], "sqrt": [70, 72, 89, 167], "cosinerisefallderiv": [71, 72, 127], "vz": [72, 74], "prx_customwaveformsvz": [72, 74], "truncatedgaussian": [73, 74, 169], "tg": [73, 74], "truncatedgaussianderiv": [73, 74, 169], "gaussian": [74, 169], "rx": [75, 172, 174], "ry": [75, 167, 174], "xy_gat": 75, "static": [76, 128, 130, 132, 133, 148, 151, 167], "_single_iq_puls": [76, 167], "resonantli": 76, "x_": 76, "linear": [76, 128, 129], "linearli": [76, 169], "scale": [76, 109, 113, 168, 169], "adjust": [76, 157, 167, 168, 172], "iq_puls": [76, 167], "2x2": [77, 88, 93], "gate_nam": 78, "impl_class": 78, "set_as_default": 78, "quantum_op_spec": [78, 169], "split": [78, 168], "human": [78, 151, 168, 169], "readabl": [78, 151, 168, 171], "python": [78, 153, 154, 169], "previous": [78, 167], "constructor": [78, 121], "miss": 78, "suitabl": 78, "qb": 78, "reset_condit": [79, 172], "reset_wait": [79, 167], "__default_feedback": 80, "doubl": [80, 81], "underscor": [80, 81], "emphas": [80, 81], "fact": [80, 81], "manual": [80, 81, 130, 169], "__reset": 81, "reset": [82, 83, 109, 135, 167, 168, 169, 172], "necessari": [82, 139, 168, 169, 174], "accommod": 82, "upon": 82, "relax": [83, 167], "compar": [83, 114, 121, 167], "maximum": [83, 121, 133, 143], "shot": [83, 168], "destroi": 83, "wait_box": 83, "rz_virtual": 84, "rz_acstarkshift": [84, 86], "rz_acstarkshift_cosinerisefal": 84, "strong": 85, "off": [85, 167], "lead": [85, 167], "shift": 85, "ac_stark_puls": 85, "ac_stark_waveform": 86, "increment": [86, 87, 109, 116, 157, 167], "techniqu": [87, 92], "oscil": [87, 116, 157], "shortest": 87, "algebra": [87, 116], "commut": [87, 157], "toward": 87, "hit": 87, "elimin": 87, "multi": 87, "hold": [87, 171], "diagon": 87, "immedi": [87, 139, 167], "conjug": 87, "alpha": [87, 128, 129], "accomplish": 87, "assumpt": [87, 133], "negat": 87, "r": [89, 131, 173], "sigma": [89, 169, 173], "_x": 89, "xz": 89, "90": [89, 173], "sxgate": [89, 167], "limit": [90, 163, 166, 167, 171, 174], "parametr": [91, 133, 169, 173], "euler": [91, 92], "lambda": [91, 92, 167, 169], "subsequ": [91, 171], "r_y": [91, 92], "express": [91, 133, 171], "h": 91, "8": 91, "http": [91, 167, 171], "openqasm": 91, "com": 91, "languag": [91, 168, 171], "html": [91, 126, 167], "ugat": [91, 167], "lam": [92, 93], "decomposit": 92, "cdot": 92, "probechannelproperti": 95, "channelconfigur": [95, 101], "realchannelconfig": [95, 97, 99], "iqchannelconfig": 95, "channeldescript": [95, 163, 164], "instruction_t": 97, "uniqu": [97, 135, 168, 169], "waveform_t": 97, "add_instruct": 97, "integ": [97, 98, 108, 151, 174], "index": [97, 122, 142, 168, 170], "similar": [97, 167, 169], "manner": 97, "instruction_duration_granular": [98, 100], "instruction_duration_min": [98, 100], "compatible_instruct": [98, 100, 159], "is_iq": [98, 100], "is_virtu": [98, 100], "blocks_compon": [98, 100], "zi": 98, "hdawg": 98, "shfsg": 98, "shfqa": 98, "32": [98, 168], "16": [98, 121, 168, 173], "might": [98, 168, 169, 172, 174], "capabl": [98, 174], "command": [98, 110, 168, 172], "hack": 98, "frontend": 98, "sent": [98, 167, 168, 171], "duration_to_sampl": 98, "duration_to_second": 98, "duration_to_int_sampl": 98, "messag": [98, 137, 151], "check_min_sampl": 98, "close": [98, 174], "test": 98, "output": [98, 106, 117, 126, 135, 167, 168, 172, 174], "unaccept": 98, "round_duration_to_granular": 98, "round_up": 98, "force_min_dur": 98, "closest": 98, "upconvers": [99, 116], "center_frequ": 100, "integration_start_dead_tim": 100, "integration_stop_dead_tim": 100, "dead": 100, "real": [101, 109, 113, 114, 133, 168], "flux_control": 102, "readout_control": 102, "intern": [102, 167, 168, 174], "standard": [103, 174], "flat": 103, "channel_properti": [103, 121, 144], "realpuls": [104, 163, 165, 166, 169], "multiplexediqpuls": [104, 112], "timetrac": 104, "complexintegr": [104, 114], "thresholdstatediscrimin": 104, "delay_sampl": [105, 107, 114, 115], "acquir": [105, 112, 168], "qb1__readout": 105, "window": [105, 115, 128, 130, 131, 132, 133], "strictli": [106, 168, 169], "strict": [106, 167, 168], "version": [106, 170, 171], "dd": 106, "outcom": 108, "choic": 108, "evalu": 108, "ok": [108, 109, 110, 113], "get_child_instruct": [108, 110], "child": [108, 110, 143, 144, 163, 166], "scale_i": [109, 169], "scale_q": [109, 169], "upconvert": 109, "envelop": [109, 173], "factor": [109, 113, 133, 169], "success": 109, "carrier": 109, "get_waveform": [109, 110, 113], "entri": [111, 169], "outsid": [111, 168, 169], "interv": [111, 168, 169], "truncat": [111, 142, 167], "neg": 111, "probe_puls": 112, "shape": [113, 128, 130, 131, 132, 133, 170], "feedback_signal_label": [114, 167], "boolean": 114, "transmit": 114, "field": [114, 169, 171], "duration_sampl": 115, "captur": [115, 170], "updat": [116, 167, 172], "hardwar": [116, 135, 163, 166, 168, 169, 170, 172], "sure": 117, "synchron": 121, "critic": 121, "account": [121, 133, 167], "pprint": 121, "time_unit": 121, "fix": [121, 168], "width": [121, 131, 132], "graphic": 121, "represent": [121, 151, 168], "symbol": 121, "keysview": 121, "mutat": [121, 122], "vice": [121, 122], "versa": [121, 122], "immut": [121, 122], "add_channel": 121, "channel_nam": [121, 174], "unchang": [121, 155], "front_pad": 121, "to_dur": 121, "variabl": [121, 143, 167], "front_pad_in_second": 121, "pad_to_hard_box": 121, "pad_to_hard_box_in_second": 121, "smallest": 121, "revers": 121, "preserv": [121, 139, 168, 174], "rear": 121, "reverse_hard_box": 121, "No": [121, 167], "synchronis": 121, "break": 121, "cleanup": [121, 167], "clean": [121, 167], "thing": 121, "has_content_in": 121, "keep": [122, 143], "_instruct": 122, "_durat": 122, "prepend": 122, "pop": 122, "idx": [122, 142], "1e": [123, 145, 146], "12": [123, 145, 146], "comp": [123, 167], "1281": 123, "visualis": [125, 167], "view": [126, 167], "browser": 126, "jupyt": 126, "notebook": 126, "ipython": 126, "core": [126, 167], "displai": [126, 171], "inspect": 126, "don": [127, 171], "serial": 127, "reimport": 127, "document": [127, 167, 171], "appear": [127, 168, 171], "chirp": [127, 129, 167], "chirpimag": [127, 167], "freq_start": [128, 129], "freq_stop": [128, 129], "05": [128, 129, 170], "omega": 128, "f_": 128, "mathrm": 128, "d": [128, 151, 173], "taper": 128, "rectangular": [128, 143], "hann": 128, "nyquist": 128, "zone": 128, "constrain": 128, "5": [128, 169, 173, 174], "_sampl": [128, 130, 131, 132, 133, 169], "sample_coord": [128, 130, 131, 132, 133, 169], "coordin": [128, 130, 131, 132, 133], "non_timelike_attribut": [128, 130, 132, 133, 169], "timelik": [128, 130, 132, 133], "dimensionless": [128, 130, 132, 133], "invers": [128, 130, 132, 133], "5707963267948966": 129, "imaginari": 129, "period": 130, "sinusoid": [130, 131, 132], "c": [131, 151], "p": [131, 173], "plateau": 131, "Its": [131, 168], "midpoint": [131, 133], "descript": [132, 151, 171], "detail": [132, 133, 135, 168, 170, 172], "middl": 132, "minim": [133, 139], "adiabat": [133, 173], "prior": 133, "optim": [133, 145, 167], "lambda_n": 133, "tau_": 133, "acceler": 133, "reconstruct": 133, "tau": 133, "lab": 133, "interpol": 133, "v": [133, 163, 166, 167], "voltag": 133, "go": [133, 169], "advis": [133, 171], "look": [133, 169], "mathemat": [133, 170], "heavi": 133, "coeffici": 133, "leakag": 133, "strength": 133, "squid": [133, 167], "asymmetri": [133, 167], "_sample_normalized_slepian": 133, "coord": 133, "_t_tau": 133, "num_sampl": 133, "129": 133, "convers": [133, 169, 171], "analyt": 133, "solut": 133, "therefor": [133, 168], "numer": 133, "scipi": [133, 167], "romb": 133, "form": [133, 167, 168, 169, 171], "_theta_tau": 133, "fourier": 133, "shown": [133, 167, 172], "th": 133, "tau_puls": 133, "short": [135, 145], "simpl": [135, 151, 168, 169, 173], "unambigu": [135, 168, 169], "subsystem": 135, "qumod": 135, "pictur": [135, 172], "famili": [135, 168], "plural": 135, "intent": 135, "target": [135, 167, 174], "callabl": [135, 169], "np": [135, 169, 172, 174], "lowest": [135, 168], "docstr": 135, "exact": [135, 169], "kron": 135, "first_qubit_basis_ket": 135, "second_qubit_basis_ket": 135, "set_default_implement": [135, 169], "set_default_implementation_for_locu": [135, 169], "cal_data": 137, "impl": [137, 169], "noiseless": 139, "sync": 139, "try": 139, "segmentpoint": 139, "nonsolid": 140, "nevertheless": 140, "tol": [142, 145, 146], "frac": 142, "serv": 142, "pointer": 142, "smaller": [142, 145, 146], "toler": 142, "remaind": 142, "next": [142, 168, 169, 172], "cut_tail": 142, "cut": 142, "tail": 142, "onward": 142, "rewind": 142, "fastforward": 142, "forward": 142, "child_schedul": [143, 144], "child_compon": [143, 144], "neighborhood_compon": [143, 144, 148, 151], "component_dur": [143, 144], "is_alap": [143, 144], "respect": [143, 149, 163, 166, 168, 169], "hard": [143, 167], "rag": [143, 145, 146], "edg": [143, 167], "earliest": [143, 144], "max": 143, "combin": [143, 171], "extend_hard_boundary_in_second": 143, "computational_reson": [143, 144], "These": [143, 144, 151, 168, 169, 174], "even": [143, 144, 169, 171], "yet": [143, 144, 167], "ever": [143, 144], "alap": [143, 144, 150, 151, 168, 174], "As": [143, 144, 151, 169, 172], "late": [143, 144, 150, 151], "extend_hard_boundari": 144, "incom": 144, "extens": [145, 146, 167], "reserv": 147, "resourc": 147, "schedulingstrategi": [147, 148, 149, 151, 174], "locus_compon": [148, 151, 169], "asap": [148, 150, 151, 168, 172, 174], "from_readout_trigg": 148, "readout_trigg": 148, "probe_channel": 148, "block_channel": 148, "block_dur": 148, "soon": [150, 151, 167, 172], "fragment": 151, "union": [151, 171, 174], "made": [151, 169, 170, 171, 174], "rule": [151, 157, 167, 168, 169, 174], "operand": [151, 174], "pipe": [151, 174], "group": [151, 169, 174], "element": [151, 167, 168, 174], "let": [151, 169], "a_then_b": 151, "c_then_d": 151, "set_alap": [151, 174], "abcd": 151, "abb": 151, "ccd": 151, "all_togeth": 151, "dictat": 151, "flatten": 151, "ancestor": 151, "set_asap": 151, "print": [151, 167, 171, 174], "_idx": 151, "type_hint": 154, "typehint": 154, "merge_non": 155, "leav": 155, "psi_1": 157, "psi_2": 157, "decrement": 157, "beforehand": 157, "opposit": 157, "direct": [157, 171], "playlistvalidationerror": 158, "awgschedulevalidationdata": [158, 163], "awgschedulevalidationerror": 158, "invalidinstructionerror": 158, "sampling_r": 159, "min_number_of_sampl": 159, "fail": [160, 162], "issue_str": 161, "encount": 161, "channel_descript": [163, 164], "device_constraint": [163, 164, 166], "minimum": [163, 166, 168], "refactor": 167, "codebas": 167, "lint": 167, "issu": [167, 171], "sw": 167, "467": 167, "speed": 167, "reshap": 167, "faster": 167, "neither": [167, 169], "__mul__": 167, "__getitem__": 167, "assing": 167, "signific": 167, "speedup": 167, "anywai": 167, "diffrenet": 167, "broader": 167, "numpi": [167, 174], "verifi": 167, "compatibili": 167, "ruff": 167, "migrat": 167, "guid": 167, "org": [167, 171], "doc": [167, 169], "stabl": 167, "numpy_2_0_migration_guid": 167, "builtin": 167, "easili": [167, 170, 174], "quantumcircuit": 167, "extract": 167, "crf_acstarkcrf": 167, "slepian_acstarkcrf": 167, "bump": 167, "repo": 167, "organ": [167, 174], "1042": 167, "disabl": 167, "horizont": 167, "scroll": 167, "toggl": 167, "cover": 167, "concept": [167, 169, 170], "usag": [167, 169], "531": 167, "gitlab": 167, "public": 167, "page": [167, 170, 171], "776": 167, "didn": 167, "mr": 167, "514": 167, "client": [167, 168, 169, 170], "licens": [167, 170], "apach": [167, 171], "extlink": 167, "sphinx": 167, "916": 167, "intersphinx": 167, "665": 167, "becaus": [167, 169], "proper": 167, "realiz": [167, 173], "semant": [167, 168], "disturb": 167, "774": 167, "leak": 167, "web": 167, "artifact": 167, "resetwait": 167, "comfort": [167, 169], "timelin": [167, 168], "broken": 167, "redisplai": 167, "upcom": 167, "releas": 167, "prefer": [167, 169, 171], "font": 167, "viewer": 167, "358": 167, "typo": 167, "api": [167, 169, 170, 174], "workflow": [167, 174], "meth": 167, "pulla": [167, 170, 174], "potenti": 167, "crash": 167, "discoveri": 167, "throw": 167, "sc": 167, "nonsens": 167, "mcm": 167, "cc_prx": [167, 172], "merge_dict": 167, "crf_crf": 167, "interfac": [167, 169, 171], "feedback_label": 167, "renam": 167, "similarli": [167, 169], "conditional_prx": 167, "hopefulli": 167, "yml": 167, "conditionalreset": 167, "mid": 167, "constant_qnd": 167, "qndness": 167, "phase_increment_befor": 167, "sign": 167, "phase_transform": 167, "fulfil": 167, "satisfi": [167, 172], "conditionalprx": 167, "accept": [167, 171], "signifi": 167, "weigth": 167, "canon": 167, "whitelist": 167, "2112": 167, "write": [167, 169, 171], "1831": 167, "drag_crf_sx": 167, "drag_gaussian_sx": 167, "prx_u": 167, "prx_sx": 167, "_x_pi_puls": 167, "register_implement": [167, 168, 169], "547": 167, "prioritis": 167, "1929": 167, "1468": 167, "programm": 167, "1925": 167, "crude": 167, "visual": [167, 168, 172], "measure_nop": 167, "small": [167, 168], "validate_move_instruct": 167, "2056": 167, "pipelin": [167, 172], "packag": 167, "give": [168, 169, 171, 174], "overview": 168, "main": [168, 169], "terminologi": 168, "deliv": 168, "send": [168, 172], "assembli": 168, "batch": 168, "summar": 168, "imag": [168, 172], "illustr": [168, 172], "visibl": 168, "microwav": [168, 170], "ambigu": 168, "machin": 168, "though": [168, 169], "subject": [168, 171], "violat": 168, "concern": 168, "philosophi": 168, "inaccess": 168, "attempt": 168, "smart": 168, "magic": 168, "inconsist": 168, "transpar": 168, "technic": 168, "apart": 168, "few": 168, "instant": 168, "thought": [168, 172], "desir": [168, 174], "read": [168, 172, 174], "importantli": 168, "disjoint": [168, 174], "partli": 168, "figur": [168, 172], "demonstr": 168, "explain": 168, "necessarili": [168, 169, 171], "variou": [168, 169], "runtim": [168, 172, 174], "build_quantum_op": 168, "bridg": 168, "gap": 168, "collect": [168, 169], "repeat": [168, 174], "repetit": 168, "encod": 168, "aim": 168, "memori": 168, "fit": [168, 171], "chunk": 168, "much": 168, "inspect_playlist": 168, "neat": 168, "metadata": 169, "question": [169, 174], "cnot": 169, "NOT": 169, "On": [169, 172], "hand": 169, "frozen": 169, "programmat": 169, "procedur": 169, "invok": 169, "random": 169, "benchmark": 169, "getter": 169, "qc": 169, "introduc": 169, "emphasi": 169, "def": 169, "code": [169, 171, 172], "_default": 169, "implementation_": 169, "default_prx_qb1": 169, "special_prx_qb1": 169, "my_special_prx": 169, "default_box": 169, "chain": [169, 172], "default_cz_box": 169, "pure": 169, "develop": 169, "choos": [169, 171], "thumb": 169, "rest": 169, "simplifi": [169, 172], "educ": 169, "__class__": 169, "__name__": 169, "low": 169, "subsect": 169, "relai": 169, "live": 169, "denot": 169, "asymmetr": 169, "tri": 169, "replic": 169, "mandatori": 169, "alter": 169, "electron": [169, 171], "physcial": 169, "averag": 169, "mu": 169, "spread": 169, "recip": 169, "offset_coord": 169, "exp": 169, "resampl": 169, "understand": [169, 172, 173], "unitless": 169, "scalar_coeffieci": 169, "quick": [169, 170, 174], "simplest": 169, "composteg": 169, "compositehadamard": 169, "hadamard": 169, "_this_": 169, "member_prx": 169, "onelin": 169, "prx_mycoolwaveform": 169, "coolwaveformi": 169, "coolwaveformq": 169, "my": 169, "cool": 169, "cz_mycoolwaveform": 169, "coolcouplerwaveform": 169, "coolqubitwaveform": 169, "measure_mycoolwaveform": 169, "preload": 169, "altogeth": 169, "snippet": 169, "cnot_matrix": 169, "why": 169, "cnot_op": 169, "my_build": 169, "my_cnot_impl": 169, "implementation_class": 169, "mycnotclass": 169, "access": [169, 174], "7": 170, "20": 170, "date": [170, 171], "2025": 170, "02": 170, "high": [170, 173], "unifi": 170, "hide": 170, "But": 170, "framework": [170, 174], "machineri": 170, "standalon": 170, "librari": [170, 172], "encourag": [170, 174], "familiar": 170, "especi": [170, 174], "miscellan": 170, "pitfal": 170, "changelog": 170, "search": 170, "januari": 171, "2004": [171, 173], "www": 171, "AND": 171, "FOR": 171, "reproduct": 171, "distribut": 171, "shall": 171, "9": [171, 172, 174], "licensor": 171, "copyright": 171, "owner": 171, "entiti": 171, "author": 171, "grant": 171, "legal": 171, "power": 171, "indirect": 171, "manag": 171, "contract": 171, "ii": 171, "ownership": 171, "fifti": 171, "percent": 171, "50": 171, "outstand": 171, "iii": 171, "benefici": 171, "exercis": 171, "permiss": 171, "modif": 171, "softwar": [171, 173], "mechan": 171, "translat": 171, "media": 171, "authorship": 171, "notic": [171, 174], "appendix": 171, "editori": 171, "revis": 171, "elabor": 171, "mere": 171, "bind": 171, "thereof": 171, "contribut": 171, "intention": 171, "submit": 171, "inclus": 171, "behalf": 171, "verbal": 171, "written": 171, "commun": 171, "mail": 171, "discuss": 171, "conspicu": 171, "contributor": 171, "whom": 171, "incorpor": 171, "herebi": 171, "perpetu": 171, "worldwid": 171, "exclus": 171, "charg": 171, "royalti": 171, "free": [171, 173], "irrevoc": 171, "reproduc": 171, "publicli": 171, "sublicens": 171, "patent": 171, "offer": 171, "sell": 171, "claim": 171, "infring": 171, "alon": 171, "institut": 171, "litig": 171, "cross": [171, 174], "counterclaim": 171, "lawsuit": 171, "alleg": 171, "contributori": 171, "termin": 171, "redistribut": 171, "medium": 171, "meet": 171, "recipi": 171, "promin": 171, "retain": 171, "trademark": 171, "pertain": 171, "along": 171, "wherev": 171, "third": 171, "parti": 171, "alongsid": 171, "addendum": 171, "constru": 171, "statement": [171, 172], "compli": 171, "submiss": 171, "notwithstand": 171, "herein": 171, "supersed": 171, "agreement": 171, "regard": 171, "trade": 171, "servic": 171, "customari": 171, "disclaim": 171, "warranti": 171, "law": 171, "agre": 171, "AS": 171, "OR": 171, "OF": 171, "kind": 171, "titl": 171, "merchant": 171, "sole": 171, "risk": 171, "liabil": 171, "event": 171, "theori": 171, "tort": 171, "neglig": 171, "deliber": 171, "grossli": 171, "liabl": 171, "damag": 171, "incident": 171, "consequenti": 171, "aris": 171, "inabl": 171, "loss": 171, "goodwil": 171, "stoppag": 171, "failur": 171, "malfunct": 171, "commerci": 171, "fee": 171, "indemn": 171, "oblig": 171, "indemnifi": 171, "harmless": 171, "incur": 171, "assert": 171, "boilerpl": 171, "enclos": 171, "bracket": 171, "comment": 171, "recommend": 171, "easier": 171, "identif": 171, "archiv": 171, "2024": 171, "complianc": 171, "govern": 171, "show": 172, "flexibl": 172, "goal": 172, "finit": 172, "condition": 172, "qccsw": 172, "excut": 172, "last": [172, 174], "too": 172, "earli": 172, "facilit": 172, "effici": 172, "travel": 172, "conditionalinstrucion": 172, "equaival": 172, "feedaback_kei": 172, "reset_qb2": 172, "set_qb3_to_1": 172, "cc_prx_qb4": 172, "2nd": [172, 173], "prx_qb3": 172, "prx_qb4": 172, "80e": [172, 174], "clariti": 172, "bottom": 172, "master": 172, "slave": 172, "compens": 172, "trigger_delai": 172, "explan": 172, "end_delai": 172, "spcecifi": 172, "trigger_mast": 172, "emit": 172, "daisi": 172, "central": 172, "cabl": 172, "john": 173, "m": 173, "martini": 173, "michael": 173, "geller": 173, "_z": 173, "phy": 173, "rev": 173, "022307": 173, "aug": 173, "2014": 173, "arxiv": 173, "1402": 173, "5467": 173, "doi": 173, "1103": 173, "physreva": 173, "lyon": 173, "digit": 173, "prentic": 173, "hall": 173, "edit": 173, "isbn": 173, "978": 173, "0131089891": 173, "cecilia": 173, "gisel": 173, "jarn": 173, "heurist": 173, "approach": 173, "anal": 173, "afa": 173, "29": 173, "51": 173, "57": 173, "2018": 173, "1703": 173, "06812": 173, "31527": 173, "analesafa": 173, "eyob": 173, "sete": 173, "nicola": 173, "didier": 173, "angela": 173, "chen": 173, "shobhan": 173, "kulshreshtha": 173, "riccardo": 173, "manenti": 173, "stefano": 173, "poletto": 173, "entangl": 173, "appl": 173, "024050": 173, "2021": 173, "2104": 173, "03511": 173, "physrevappli": 173, "youngkyu": 173, "sung": 173, "leon": 173, "ding": 173, "jochen": 173, "braum\u00fcller": 173, "antti": 173, "veps\u00e4l\u00e4inen": 173, "bharath": 173, "kannan": 173, "morten": 173, "kjaergaard": 173, "ami": 173, "green": 173, "gabriel": 173, "o": 173, "samach": 173, "chri": 173, "mcnalli": 173, "david": 173, "kim": 173, "alexand": 173, "melvil": 173, "bethani": 173, "niedzielski": 173, "molli": 173, "schwartz": 173, "jonilyn": 173, "l": 173, "yoder": 173, "terri": 173, "orlando": 173, "simon": 173, "gustavsson": 173, "william": 173, "oliv": 173, "fidel": 173, "zz": 173, "021058": 173, "jun": 173, "2011": 173, "01261": 173, "physrevx": 173, "ask": 174, "recogn": 174, "cz_gate_impl": 174, "prx_gate_impl": 174, "measure_gate_impl": 174, "keyword": 174, "instanti": 174, "x180": 174, "y90": 174, "100e": 174, "decid": 174, "p1": 174, "p2": 174, "handi": 174, "everyth": 174, "circuit3": 174, "sub": 174, "word": 174, "slide": 174, "past": 174, "neighbour": 174, "talk": 174, "neighbourhood": 174, "worri": 174, "advers": 174, "ruin": 174, "best": 174, "arrang": 174, "aid": 174, "discov": 174, "all_qubit": 174, "get_neighbor_locus_compon": 174, "160e": 174, "cz_schedul": 174, "forget": 174}, "objects": {"iqm": [[1, 0, 0, "-", "pulse"]], "iqm.pulse": [[2, 0, 0, "-", "builder"], [8, 0, 0, "-", "circuit_operations"], [14, 0, 0, "-", "gate_implementation"], [31, 0, 0, "-", "gates"], [94, 0, 0, "-", "playlist"], [134, 0, 0, "-", "quantum_ops"], [139, 0, 0, "-", "scheduler"], [147, 0, 0, "-", "timebox"], [152, 0, 0, "-", "utils"], [158, 0, 0, "-", "validation"]], "iqm.pulse.builder": [[3, 1, 1, "", "CircuitOperation"], [4, 1, 1, "", "ScheduleBuilder"], [5, 4, 1, "", "build_quantum_ops"], [6, 4, 1, "", "load_config"], [7, 4, 1, "", "validate_quantum_circuit"]], "iqm.pulse.builder.CircuitOperation": [[3, 2, 1, "", "args"], [3, 2, 1, "", "implementation"], [3, 2, 1, "", "locus"], [3, 2, 1, "", "name"], [3, 3, 1, "", "validate"]], "iqm.pulse.builder.ScheduleBuilder": [[4, 3, 1, "", "_block_neighborhood_tetris"], [4, 2, 1, "", "_cache"], [4, 2, 1, "", "_channel_templates"], [4, 2, 1, "", "_channel_to_component"], [4, 2, 1, "", "_channel_types"], [4, 3, 1, "", "_find_implementation_and_locus"], [4, 3, 1, "", "_finish_schedule"], [4, 3, 1, "", "_get_channel_for_component"], [4, 3, 1, "", "_get_implementation"], [4, 3, 1, "", "_get_neighborhood_hard_boundary"], [4, 2, 1, "", "_require_scheduling_in_seconds"], [4, 3, 1, "", "_resolve_timebox_hard_boundary"], [4, 3, 1, "", "_resolve_timebox_tetris"], [4, 3, 1, "", "_set_gate_implementation_shortcut"], [4, 3, 1, "", "build_playlist"], [4, 3, 1, "", "circuit_to_timebox"], [4, 2, 1, "", "composite_cache"], [4, 3, 1, "", "get_calibration"], [4, 3, 1, "", "get_control_channels"], [4, 3, 1, "", "get_drive_channel"], [4, 3, 1, "", "get_flux_channel"], [4, 3, 1, "", "get_implementation"], [4, 3, 1, "", "get_implementation_class"], [4, 3, 1, "", "get_probe_channel"], [4, 3, 1, "", "get_virtual_feedback_channel_for"], [4, 3, 1, "", "get_virtual_feedback_channels"], [4, 3, 1, "", "has_calibration"], [4, 3, 1, "", "inject_calibration"], [4, 3, 1, "", "resolve_timebox"], [4, 3, 1, "", "timebox_to_schedule"], [4, 3, 1, "", "timeboxes_to_front_padded_playlist"], [4, 3, 1, "", "timeboxes_to_playlist"], [4, 3, 1, "", "validate_calibration"], [4, 3, 1, "", "validate_quantum_circuit"], [4, 3, 1, "", "wait"]], "iqm.pulse.circuit_operations": [[9, 1, 1, "", "CircuitOperationList"], [10, 4, 1, "", "get_unitary_from_circuit"], [11, 4, 1, "", "get_unitary_from_op"], [12, 4, 1, "", "reorder"], [13, 4, 1, "", "reshape_unitary"]], "iqm.pulse.circuit_operations.CircuitOperationList": [[9, 3, 1, "", "_set_specific_operation_shortcut"], [9, 3, 1, "", "add_op"], [9, 3, 1, "", "add_qubits"], [9, 3, 1, "", "barrier"], [9, 3, 1, "", "compose"], [9, 3, 1, "", "count_ops"], [9, 3, 1, "", "find_qubits"], [9, 3, 1, "", "get_unitary"], [9, 3, 1, "", "map_loci"]], "iqm.pulse.gate_implementation": [[15, 1, 1, "", "CompositeCache"], [16, 1, 1, "", "CompositeGate"], [17, 1, 1, "", "CustomIQWaveforms"], [18, 1, 1, "", "GateImplementation"], [19, 6, 1, "", "Locus"], [20, 6, 1, "", "NestedParams"], [21, 6, 1, "", "OCalibrationData"], [22, 6, 1, "", "OICalibrationData"], [23, 6, 1, "", "OILCalibrationData"], [24, 6, 1, "", "OpCalibrationDataTree"], [25, 6, 1, "", "PROBE_LINES_LOCUS_MAPPING"], [26, 6, 1, "", "SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING"], [27, 6, 1, "", "SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING"], [28, 6, 1, "", "SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING"], [29, 1, 1, "", "SinglePulseGate"], [30, 4, 1, "", "get_waveform_parameters"]], "iqm.pulse.gate_implementation.CompositeCache": [[15, 3, 1, "", "flush"], [15, 3, 1, "", "get"], [15, 3, 1, "", "set"]], "iqm.pulse.gate_implementation.CompositeGate": [[16, 3, 1, "", "build"], [16, 2, 1, "", "default_implementations"], [16, 2, 1, "", "registered_gates"]], "iqm.pulse.gate_implementation.CustomIQWaveforms": [[17, 2, 1, "", "dependent_waves"], [17, 2, 1, "", "excluded_parameters"], [17, 2, 1, "", "root_parameters"], [17, 2, 1, "", "wave_i"], [17, 2, 1, "", "wave_q"]], "iqm.pulse.gate_implementation.GateImplementation": [[18, 3, 1, "", "_call"], [18, 3, 1, "", "build"], [18, 3, 1, "", "convert_calibration_data"], [18, 3, 1, "", "duration_in_seconds"], [18, 3, 1, "", "get_custom_locus_mapping"], [18, 3, 1, "", "get_locus_mapping_name"], [18, 3, 1, "", "get_parameters"], [18, 3, 1, "", "needs_calibration"], [18, 2, 1, "", "parameters"], [18, 5, 1, "", "qualified_name"], [18, 2, 1, "", "special_implementation"], [18, 2, 1, "", "symmetric"], [18, 3, 1, "", "to_timebox"]], "iqm.pulse.gate_implementation.SinglePulseGate": [[29, 3, 1, "", "_call"], [29, 3, 1, "", "_get_pulse"], [29, 3, 1, "", "_get_pulse_channel"], [29, 3, 1, "", "duration_in_seconds"]], "iqm.pulse.gates": [[32, 0, 0, "-", "barrier"], [34, 0, 0, "-", "conditional"], [38, 0, 0, "-", "cz"], [50, 0, 0, "-", "enums"], [55, 4, 1, "", "expose_implementation"], [56, 4, 1, "", "get_implementation_class"], [57, 0, 0, "-", "measure"], [61, 0, 0, "-", "move"], [68, 0, 0, "-", "prx"], [78, 4, 1, "", "register_implementation"], [79, 0, 0, "-", "reset"], [84, 0, 0, "-", "rz"], [89, 0, 0, "-", "sx"], [91, 0, 0, "-", "u"]], "iqm.pulse.gates.barrier": [[33, 1, 1, "", "Barrier"]], "iqm.pulse.gates.barrier.Barrier": [[33, 3, 1, "", "_call"], [33, 3, 1, "", "duration_in_seconds"], [33, 2, 1, "", "symmetric"]], "iqm.pulse.gates.conditional": [[35, 1, 1, "", "CCPRX_Composite"], [36, 1, 1, "", "CCPRX_Composite_DRAGCosineRiseFall"], [37, 1, 1, "", "CCPRX_Composite_DRAGGaussian"]], "iqm.pulse.gates.conditional.CCPRX_Composite": [[35, 3, 1, "", "_call"], [35, 2, 1, "", "parameters"]], "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall": [[36, 2, 1, "", "default_implementations"]], "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian": [[37, 2, 1, "", "default_implementations"]], "iqm.pulse.gates.cz": [[39, 1, 1, "", "CZ_CRF"], [40, 1, 1, "", "CZ_CRF_ACStarkCRF"], [41, 1, 1, "", "CZ_GaussianSmoothedSquare"], [42, 1, 1, "", "CZ_Slepian"], [43, 1, 1, "", "CZ_Slepian_ACStarkCRF"], [44, 1, 1, "", "CZ_Slepian_CRF"], [45, 1, 1, "", "CZ_TruncatedGaussianSmoothedSquare"], [46, 1, 1, "", "CouplerFluxPulseQubitACStarkPulseGate"], [47, 1, 1, "", "FluxPulseGate"], [48, 1, 1, "", "FluxPulseGate_CRF_CRF"], [49, 1, 1, "", "FluxPulseGate_TGSS_CRF"]], "iqm.pulse.gates.cz.CZ_CRF": [[39, 2, 1, "", "coupler_wave"], [39, 2, 1, "", "parameters"], [39, 2, 1, "", "qubit_wave"], [39, 2, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF": [[40, 2, 1, "", "coupler_wave"], [40, 2, 1, "", "parameters"], [40, 2, 1, "", "qubit_drive_wave"], [40, 2, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare": [[41, 2, 1, "", "coupler_wave"], [41, 2, 1, "", "parameters"], [41, 2, 1, "", "qubit_wave"], [41, 2, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_Slepian": [[42, 2, 1, "", "coupler_wave"], [42, 2, 1, "", "parameters"], [42, 2, 1, "", "qubit_wave"], [42, 2, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF": [[43, 2, 1, "", "coupler_wave"], [43, 2, 1, "", "parameters"], [43, 2, 1, "", "qubit_drive_wave"], [43, 2, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_Slepian_CRF": [[44, 2, 1, "", "coupler_wave"], [44, 2, 1, "", "parameters"], [44, 2, 1, "", "qubit_wave"], [44, 2, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare": [[45, 2, 1, "", "coupler_wave"], [45, 2, 1, "", "parameters"], [45, 2, 1, "", "qubit_wave"], [45, 2, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate": [[46, 3, 1, "", "_ac_stark_pulse"], [46, 3, 1, "", "_call"], [46, 2, 1, "", "coupler_wave"], [46, 3, 1, "", "duration_in_seconds"], [46, 2, 1, "", "excluded_parameters"], [46, 3, 1, "", "get_locus_mapping_name"], [46, 2, 1, "", "qubit_drive_wave"]], "iqm.pulse.gates.cz.FluxPulseGate": [[47, 3, 1, "", "_call"], [47, 2, 1, "", "coupler_wave"], [47, 3, 1, "", "duration_in_seconds"], [47, 2, 1, "", "excluded_parameters"], [47, 3, 1, "", "get_locus_mapping_name"], [47, 2, 1, "", "qubit_wave"], [47, 2, 1, "", "root_parameters"]], "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF": [[48, 2, 1, "", "coupler_wave"], [48, 2, 1, "", "parameters"], [48, 2, 1, "", "qubit_wave"], [48, 2, 1, "", "symmetric"]], "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF": [[49, 2, 1, "", "coupler_wave"], [49, 2, 1, "", "parameters"], [49, 2, 1, "", "qubit_wave"], [49, 2, 1, "", "symmetric"]], "iqm.pulse.gates.enums": [[51, 6, 1, "", "TWO_QUBIT_UNITARIES"], [52, 1, 1, "", "TwoQubitGate"], [53, 6, 1, "", "XYGATE_UNITARIES"], [54, 1, 1, "", "XYGate"]], "iqm.pulse.gates.enums.TwoQubitGate": [[52, 2, 1, "", "CZ"], [52, 2, 1, "", "ISWAP"], [52, 2, 1, "", "SQRT_ISWAP"]], "iqm.pulse.gates.measure": [[58, 1, 1, "", "Measure_Constant"], [59, 1, 1, "", "Measure_CustomWaveforms"], [60, 1, 1, "", "ProbePulse_CustomWaveforms"]], "iqm.pulse.gates.measure.Measure_Constant": [[58, 2, 1, "", "dependent_waves"], [58, 2, 1, "", "parameters"], [58, 2, 1, "", "wave_i"], [58, 2, 1, "", "wave_q"]], "iqm.pulse.gates.measure.Measure_CustomWaveforms": [[59, 3, 1, "", "_build_instructions"], [59, 3, 1, "", "_call"], [59, 2, 1, "", "_multiplexed_timeboxes"], [59, 2, 1, "", "_time_traces"], [59, 2, 1, "", "dependent_waves"], [59, 3, 1, "", "duration_in_seconds"], [59, 3, 1, "", "get_locus_mapping_name"], [59, 3, 1, "", "probe_timebox"], [59, 2, 1, "", "root_parameters"], [59, 3, 1, "", "time_trace"]], "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms": [[60, 3, 1, "", "_build_instructions"], [60, 3, 1, "", "_call"], [60, 2, 1, "", "dependent_waves"], [60, 3, 1, "", "duration_in_seconds"], [60, 3, 1, "", "get_locus_mapping_name"], [60, 2, 1, "", "root_parameters"]], "iqm.pulse.gates.move": [[62, 1, 1, "", "MOVE_CRF_CRF"], [63, 1, 1, "", "MOVE_CustomWaveforms"], [64, 1, 1, "", "MOVE_TGSS_CRF"], [65, 1, 1, "", "MoveMarker"], [66, 4, 1, "", "apply_move_gate_phase_corrections"], [67, 4, 1, "", "validate_move_instructions"]], "iqm.pulse.gates.move.MOVE_CRF_CRF": [[62, 2, 1, "", "coupler_wave"], [62, 2, 1, "", "parameters"], [62, 2, 1, "", "qubit_wave"], [62, 2, 1, "", "symmetric"]], "iqm.pulse.gates.move.MOVE_CustomWaveforms": [[63, 3, 1, "", "_call"], [63, 2, 1, "", "coupler_wave"], [63, 2, 1, "", "parameters"], [63, 2, 1, "", "qubit_wave"], [63, 2, 1, "", "root_parameters"], [63, 2, 1, "", "symmetric"]], "iqm.pulse.gates.move.MOVE_TGSS_CRF": [[64, 2, 1, "", "coupler_wave"], [64, 2, 1, "", "parameters"], [64, 2, 1, "", "qubit_wave"], [64, 2, 1, "", "symmetric"]], "iqm.pulse.gates.move.MoveMarker": [[65, 2, 1, "", "duration"]], "iqm.pulse.gates.prx": [[69, 1, 1, "", "PRX_CustomWaveforms"], [70, 1, 1, "", "PRX_CustomWaveformsSX"], [71, 1, 1, "", "PRX_DRAGCosineRiseFall"], [72, 1, 1, "", "PRX_DRAGCosineRiseFallSX"], [73, 1, 1, "", "PRX_DRAGGaussian"], [74, 1, 1, "", "PRX_DRAGGaussianSX"], [75, 1, 1, "", "PRX_GateImplementation"], [76, 1, 1, "", "PRX_SinglePulse_GateImplementation"], [77, 4, 1, "", "get_unitary_prx"]], "iqm.pulse.gates.prx.PRX_CustomWaveforms": [[69, 3, 1, "", "_get_pulse"], [69, 2, 1, "", "dependent_waves"], [69, 2, 1, "", "root_parameters"]], "iqm.pulse.gates.prx.PRX_CustomWaveformsSX": [[70, 3, 1, "", "_call"], [70, 3, 1, "", "_get_pulse"], [70, 2, 1, "", "dependent_waves"], [70, 2, 1, "", "root_parameters"]], "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall": [[71, 3, 1, "", "_get_pulse"], [71, 2, 1, "", "dependent_waves"], [71, 2, 1, "", "excluded_parameters"], [71, 2, 1, "", "parameters"], [71, 2, 1, "", "wave_i"], [71, 2, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX": [[72, 3, 1, "", "_get_pulse"], [72, 2, 1, "", "dependent_waves"], [72, 2, 1, "", "excluded_parameters"], [72, 2, 1, "", "parameters"], [72, 2, 1, "", "wave_i"], [72, 2, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_DRAGGaussian": [[73, 2, 1, "", "dependent_waves"], [73, 2, 1, "", "parameters"], [73, 2, 1, "", "wave_i"], [73, 2, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_DRAGGaussianSX": [[74, 2, 1, "", "dependent_waves"], [74, 2, 1, "", "parameters"], [74, 2, 1, "", "wave_i"], [74, 2, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_GateImplementation": [[75, 3, 1, "", "_call"], [75, 3, 1, "", "clifford"], [75, 3, 1, "", "get_locus_mapping_name"], [75, 3, 1, "", "rx"], [75, 3, 1, "", "ry"]], "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation": [[76, 3, 1, "", "_call"], [76, 5, 1, "", "iq_pulse"]], "iqm.pulse.gates.reset": [[80, 6, 1, "", "RESET_FEEDBACK_KEY"], [81, 6, 1, "", "RESET_MEASUREMENT_KEY"], [82, 1, 1, "", "Reset_Conditional"], [83, 1, 1, "", "Reset_Wait"]], "iqm.pulse.gates.reset.Reset_Conditional": [[82, 3, 1, "", "_call"], [82, 3, 1, "", "get_locus_mapping_name"], [82, 2, 1, "", "registered_gates"]], "iqm.pulse.gates.reset.Reset_Wait": [[83, 3, 1, "", "_call"], [83, 3, 1, "", "duration_in_seconds"], [83, 3, 1, "", "get_custom_locus_mapping"], [83, 2, 1, "", "parameters"], [83, 3, 1, "", "wait_box"]], "iqm.pulse.gates.rz": [[85, 1, 1, "", "RZ_ACStarkShift"], [86, 1, 1, "", "RZ_ACStarkShift_CosineRiseFall"], [87, 1, 1, "", "RZ_Virtual"], [88, 4, 1, "", "get_unitary_rz"]], "iqm.pulse.gates.rz.RZ_ACStarkShift": [[85, 3, 1, "", "_ac_stark_pulse"], [85, 3, 1, "", "_call"], [85, 3, 1, "", "duration_in_seconds"]], "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall": [[86, 2, 1, "", "ac_stark_waveform"], [86, 2, 1, "", "parameters"], [86, 2, 1, "", "symmetric"]], "iqm.pulse.gates.rz.RZ_Virtual": [[87, 3, 1, "", "_call"], [87, 3, 1, "", "duration_in_seconds"], [87, 3, 1, "", "get_locus_mapping_name"], [87, 2, 1, "", "parameters"]], "iqm.pulse.gates.sx": [[90, 1, 1, "", "SXGate"]], "iqm.pulse.gates.sx.SXGate": [[90, 3, 1, "", "_call"], [90, 2, 1, "", "registered_gates"]], "iqm.pulse.gates.u": [[92, 1, 1, "", "UGate"], [93, 4, 1, "", "get_unitary_u"]], "iqm.pulse.gates.u.UGate": [[92, 3, 1, "", "_call"], [92, 2, 1, "", "registered_gates"]], "iqm.pulse.playlist": [[95, 0, 0, "-", "channel"], [104, 0, 0, "-", "instructions"], [118, 0, 0, "-", "playlist"], [119, 0, 0, "-", "schedule"], [124, 0, 0, "-", "visualisation"], [127, 0, 0, "-", "waveforms"]], "iqm.pulse.playlist.channel": [[96, 1, 1, "", "ChannelConfiguration"], [97, 1, 1, "", "ChannelDescription"], [98, 1, 1, "", "ChannelProperties"], [99, 1, 1, "", "IQChannelConfig"], [100, 1, 1, "", "ProbeChannelProperties"], [101, 1, 1, "", "RealChannelConfig"], [102, 4, 1, "", "get_channel_properties"], [103, 4, 1, "", "get_channel_properties_from_station_settings"]], "iqm.pulse.playlist.channel.ChannelDescription": [[97, 3, 1, "", "add_instruction"]], "iqm.pulse.playlist.channel.ChannelProperties": [[98, 2, 1, "", "blocks_component"], [98, 2, 1, "", "compatible_instructions"], [98, 3, 1, "", "duration_to_int_samples"], [98, 3, 1, "", "duration_to_samples"], [98, 3, 1, "", "duration_to_seconds"], [98, 2, 1, "", "instruction_duration_granularity"], [98, 2, 1, "", "instruction_duration_min"], [98, 2, 1, "", "is_iq"], [98, 2, 1, "", "is_virtual"], [98, 3, 1, "", "round_duration_to_granularity"], [98, 2, 1, "", "sample_rate"]], "iqm.pulse.playlist.channel.IQChannelConfig": [[99, 2, 1, "", "frequency"]], "iqm.pulse.playlist.channel.ProbeChannelProperties": [[100, 2, 1, "", "center_frequency"], [100, 2, 1, "", "integration_start_dead_time"], [100, 2, 1, "", "integration_stop_dead_time"]], "iqm.pulse.playlist.channel.RealChannelConfig": [[101, 2, 1, "", "sample_rate"]], "iqm.pulse.playlist.instructions": [[105, 1, 1, "", "AcquisitionMethod"], [106, 1, 1, "", "Block"], [107, 1, 1, "", "ComplexIntegration"], [108, 1, 1, "", "ConditionalInstruction"], [109, 1, 1, "", "IQPulse"], [110, 1, 1, "", "Instruction"], [111, 1, 1, "", "MultiplexedIQPulse"], [112, 1, 1, "", "ReadoutTrigger"], [113, 1, 1, "", "RealPulse"], [114, 1, 1, "", "ThresholdStateDiscrimination"], [115, 1, 1, "", "TimeTrace"], [116, 1, 1, "", "VirtualRZ"], [117, 1, 1, "", "Wait"]], "iqm.pulse.playlist.instructions.AcquisitionMethod": [[105, 2, 1, "", "delay_samples"], [105, 2, 1, "", "label"]], "iqm.pulse.playlist.instructions.ComplexIntegration": [[107, 2, 1, "", "weights"]], "iqm.pulse.playlist.instructions.ConditionalInstruction": [[108, 2, 1, "", "condition"], [108, 3, 1, "", "get_child_instructions"], [108, 2, 1, "", "outcomes"], [108, 3, 1, "", "validate"]], "iqm.pulse.playlist.instructions.IQPulse": [[109, 3, 1, "", "get_waveforms"], [109, 2, 1, "", "modulation_frequency"], [109, 2, 1, "", "phase"], [109, 2, 1, "", "phase_increment"], [109, 2, 1, "", "scale_i"], [109, 2, 1, "", "scale_q"], [109, 3, 1, "", "validate"], [109, 2, 1, "", "wave_i"], [109, 2, 1, "", "wave_q"]], "iqm.pulse.playlist.instructions.Instruction": [[110, 3, 1, "", "copy"], [110, 2, 1, "", "duration"], [110, 3, 1, "", "get_child_instructions"], [110, 3, 1, "", "get_waveforms"], [110, 3, 1, "", "validate"]], "iqm.pulse.playlist.instructions.MultiplexedIQPulse": [[111, 2, 1, "", "entries"]], "iqm.pulse.playlist.instructions.ReadoutTrigger": [[112, 2, 1, "", "acquisitions"], [112, 2, 1, "", "probe_pulse"]], "iqm.pulse.playlist.instructions.RealPulse": [[113, 3, 1, "", "get_waveforms"], [113, 2, 1, "", "scale"], [113, 3, 1, "", "validate"], [113, 2, 1, "", "wave"]], "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination": [[114, 2, 1, "", "feedback_signal_label"], [114, 2, 1, "", "threshold"]], "iqm.pulse.playlist.instructions.TimeTrace": [[115, 2, 1, "", "duration_samples"]], "iqm.pulse.playlist.instructions.VirtualRZ": [[116, 2, 1, "", "phase_increment"]], "iqm.pulse.playlist.schedule": [[120, 1, 1, "", "Nothing"], [121, 1, 1, "", "Schedule"], [122, 1, 1, "", "Segment"], [123, 6, 1, "", "TOLERANCE"]], "iqm.pulse.playlist.schedule.Schedule": [[121, 3, 1, "", "add_channels"], [121, 3, 1, "", "append"], [121, 3, 1, "", "channels"], [121, 3, 1, "", "cleanup"], [121, 3, 1, "", "copy"], [121, 5, 1, "", "duration"], [121, 3, 1, "", "duration_in_seconds"], [121, 3, 1, "", "extend"], [121, 3, 1, "", "front_pad"], [121, 3, 1, "", "front_pad_in_seconds"], [121, 3, 1, "", "has_content_in"], [121, 3, 1, "", "items"], [121, 3, 1, "", "pad_to_hard_box"], [121, 3, 1, "", "pad_to_hard_box_in_seconds"], [121, 3, 1, "", "pprint"], [121, 3, 1, "", "reverse"], [121, 3, 1, "", "reverse_hard_box"], [121, 3, 1, "", "validate"]], "iqm.pulse.playlist.schedule.Segment": [[122, 2, 1, "", "_duration"], [122, 2, 1, "", "_instructions"], [122, 3, 1, "", "append"], [122, 3, 1, "", "copy"], [122, 5, 1, "", "duration"], [122, 3, 1, "", "extend"], [122, 3, 1, "", "pop"], [122, 3, 1, "", "prepend"]], "iqm.pulse.playlist.visualisation": [[125, 0, 0, "-", "base"]], "iqm.pulse.playlist.visualisation.base": [[126, 4, 1, "", "inspect_playlist"]], "iqm.pulse.playlist.waveforms": [[128, 1, 1, "", "Chirp"], [129, 1, 1, "", "ChirpImag"], [130, 1, 1, "", "Cosine"], [131, 1, 1, "", "CosineRiseFallDerivative"], [132, 1, 1, "", "ModulatedCosineRiseFall"], [133, 1, 1, "", "Slepian"]], "iqm.pulse.playlist.waveforms.Chirp": [[128, 3, 1, "", "_sample"], [128, 3, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.waveforms.ChirpImag": [[129, 2, 1, "", "phase"]], "iqm.pulse.playlist.waveforms.Cosine": [[130, 3, 1, "", "_sample"], [130, 3, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.waveforms.CosineRiseFallDerivative": [[131, 3, 1, "", "_sample"]], "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall": [[132, 3, 1, "", "_sample"], [132, 3, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.waveforms.Slepian": [[133, 3, 1, "", "_sample"], [133, 3, 1, "", "_sample_normalized_slepian"], [133, 3, 1, "", "_t_tau"], [133, 3, 1, "", "_theta_tau"], [133, 3, 1, "", "non_timelike_attributes"]], "iqm.pulse.quantum_ops": [[135, 1, 1, "", "QuantumOp"], [136, 6, 1, "", "QuantumOpTable"], [137, 4, 1, "", "validate_locus_calibration"], [138, 4, 1, "", "validate_op_calibration"]], "iqm.pulse.quantum_ops.QuantumOp": [[135, 2, 1, "", "arity"], [135, 3, 1, "", "copy"], [135, 5, 1, "", "default_implementation"], [135, 2, 1, "", "defaults_for_locus"], [135, 2, 1, "", "factorizable"], [135, 3, 1, "", "get_default_implementation_for_locus"], [135, 2, 1, "", "implementations"], [135, 2, 1, "", "name"], [135, 2, 1, "", "params"], [135, 3, 1, "", "set_default_implementation"], [135, 3, 1, "", "set_default_implementation_for_locus"], [135, 2, 1, "", "symmetric"], [135, 2, 1, "", "unitary"]], "iqm.pulse.scheduler": [[140, 6, 1, "", "BLOCKING"], [141, 6, 1, "", "NONSOLID"], [142, 1, 1, "", "SegmentPointer"], [143, 4, 1, "", "extend_hard_boundary"], [144, 4, 1, "", "extend_hard_boundary_in_seconds"], [145, 4, 1, "", "extend_schedule"], [146, 4, 1, "", "extend_schedule_new"]], "iqm.pulse.scheduler.SegmentPointer": [[142, 2, 1, "", "TOL"], [142, 3, 1, "", "cut_tail"], [142, 3, 1, "", "fastforward"], [142, 2, 1, "", "frac"], [142, 3, 1, "", "get"], [142, 2, 1, "", "idx"], [142, 3, 1, "", "next"], [142, 5, 1, "", "remainder"], [142, 3, 1, "", "rewind"], [142, 2, 1, "", "source"], [142, 3, 1, "", "tail"]], "iqm.pulse.timebox": [[148, 1, 1, "", "MultiplexedProbeTimeBox"], [149, 1, 1, "", "SchedulingAlgorithm"], [150, 1, 1, "", "SchedulingStrategy"], [151, 1, 1, "", "TimeBox"]], "iqm.pulse.timebox.MultiplexedProbeTimeBox": [[148, 3, 1, "", "from_readout_trigger"]], "iqm.pulse.timebox.SchedulingAlgorithm": [[149, 2, 1, "", "HARD_BOUNDARY"], [149, 2, 1, "", "TETRIS"]], "iqm.pulse.timebox.SchedulingStrategy": [[150, 2, 1, "", "ALAP"], [150, 2, 1, "", "ASAP"]], "iqm.pulse.timebox.TimeBox": [[151, 2, 1, "", "atom"], [151, 3, 1, "", "atomic"], [151, 2, 1, "", "children"], [151, 3, 1, "", "composite"], [151, 2, 1, "", "label"], [151, 2, 1, "", "locus_components"], [151, 2, 1, "", "neighborhood_components"], [151, 3, 1, "", "print"], [151, 2, 1, "", "scheduling"], [151, 2, 1, "", "scheduling_algorithm"], [151, 3, 1, "", "set_alap"], [151, 3, 1, "", "set_asap"], [151, 3, 1, "", "validate"]], "iqm.pulse.utils": [[153, 4, 1, "", "load_yaml"], [154, 4, 1, "", "map_waveform_param_types"], [155, 4, 1, "", "merge_dicts"], [156, 4, 1, "", "normalize_angle"], [157, 4, 1, "", "phase_transformation"]], "iqm.pulse.validation": [[159, 1, 1, "", "AWGScheduleValidationData"], [160, 7, 1, "", "AWGScheduleValidationError"], [161, 7, 1, "", "InvalidInstructionError"], [162, 7, 1, "", "PlaylistValidationError"], [163, 4, 1, "", "validate_awg_and_schedule_compatibility"], [164, 4, 1, "", "validate_channel"], [165, 4, 1, "", "validate_instruction_and_wf_length"], [166, 4, 1, "", "validate_playlist_compatibility"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:property", "6": "py:data", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"api": 0, "refer": [0, 168, 173], "puls": [1, 5, 6, 7, 10, 11, 12, 13, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 51, 53, 55, 56, 66, 67, 77, 78, 80, 81, 88, 93, 102, 103, 123, 126, 136, 137, 138, 140, 141, 143, 144, 145, 146, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 170, 172], "builder": [2, 5, 6, 7], "circuitoper": 3, "schedulebuild": [4, 174], "iqm": [5, 6, 7, 10, 11, 12, 13, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 51, 53, 55, 56, 66, 67, 77, 78, 80, 81, 88, 93, 102, 103, 123, 126, 136, 137, 138, 140, 141, 143, 144, 145, 146, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 170], "build_quantum_op": 5, "load_config": 6, "validate_quantum_circuit": 7, "circuit_oper": [8, 10, 11, 12, 13], "circuitoperationlist": 9, "get_unitary_from_circuit": 10, "get_unitary_from_op": 11, "reorder": 12, "reshape_unitari": 13, "gate_implement": [14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30], "compositecach": 15, "compositeg": 16, "customiqwaveform": 17, "gateimplement": [18, 168, 169], "locu": 19, "nestedparam": 20, "ocalibrationdata": 21, "oicalibrationdata": 22, "oilcalibrationdata": 23, "opcalibrationdatatre": 24, "probe_lines_locus_map": 25, "single_components_with_drive_locus_map": 26, "single_components_with_flux_awg_locus_map": 27, "single_components_with_readout_locus_map": 28, "singlepulseg": 29, "get_waveform_paramet": 30, "gate": [31, 51, 53, 55, 56, 66, 67, 77, 78, 80, 81, 88, 93, 169], "barrier": [32, 33], "condit": 34, "ccprx_composit": 35, "ccprx_composite_dragcosinerisefal": 36, "ccprx_composite_draggaussian": 37, "cz": 38, "cz_crf": 39, "cz_crf_acstarkcrf": 40, "cz_gaussiansmoothedsquar": 41, "cz_slepian": 42, "cz_slepian_acstarkcrf": 43, "cz_slepian_crf": 44, "cz_truncatedgaussiansmoothedsquar": 45, "couplerfluxpulsequbitacstarkpulseg": 46, "fluxpulseg": 47, "fluxpulsegate_crf_crf": 48, "fluxpulsegate_tgss_crf": 49, "enum": [50, 51, 53], "two_qubit_unitari": 51, "twoqubitg": 52, "xygate_unitari": 53, "xygat": 54, "expose_implement": 55, "get_implementation_class": 56, "measur": [57, 172], "measure_const": 58, "measure_customwaveform": 59, "probepulse_customwaveform": 60, "move": [61, 66, 67], "move_crf_crf": 62, "move_customwaveform": 63, "move_tgss_crf": 64, "movemark": 65, "apply_move_gate_phase_correct": 66, "validate_move_instruct": 67, "prx": [68, 77], "prx_customwaveform": 69, "prx_customwaveformssx": 70, "prx_dragcosinerisefal": 71, "prx_dragcosinerisefallsx": 72, "prx_draggaussian": 73, "prx_draggaussiansx": 74, "prx_gateimplement": 75, "prx_singlepulse_gateimplement": 76, "get_unitary_prx": 77, "register_implement": 78, "reset": [79, 80, 81], "reset_feedback_kei": 80, "reset_measurement_kei": 81, "reset_condit": 82, "reset_wait": 83, "rz": [84, 88], "rz_acstarkshift": 85, "rz_acstarkshift_cosinerisefal": 86, "rz_virtual": 87, "get_unitary_rz": 88, "sx": 89, "sxgate": 90, "u": [91, 93], "ugat": 92, "get_unitary_u": 93, "playlist": [94, 102, 103, 118, 123, 126, 168], "channel": [95, 102, 103], "channelconfigur": 96, "channeldescript": 97, "channelproperti": 98, "iqchannelconfig": 99, "probechannelproperti": 100, "realchannelconfig": 101, "get_channel_properti": 102, "get_channel_properties_from_station_set": 103, "instruct": [104, 110, 168, 169], "acquisitionmethod": 105, "block": [106, 140], "complexintegr": 107, "conditionalinstruct": 108, "iqpuls": 109, "multiplexediqpuls": 111, "readouttrigg": [112, 172], "realpuls": 113, "thresholdstatediscrimin": 114, "timetrac": 115, "virtualrz": 116, "wait": 117, "schedul": [119, 121, 123, 139, 140, 141, 143, 144, 145, 146, 168, 174], "noth": 120, "segment": 122, "toler": 123, "visualis": [124, 126], "base": [125, 126, 169], "inspect_playlist": 126, "waveform": [127, 169], "chirp": 128, "chirpimag": 129, "cosin": 130, "cosinerisefallderiv": 131, "modulatedcosinerisefal": 132, "slepian": 133, "quantum_op": [134, 136, 137, 138], "quantumop": [135, 168, 169], "quantumopt": 136, "validate_locus_calibr": 137, "validate_op_calibr": 138, "nonsolid": 141, "segmentpoint": 142, "extend_hard_boundari": 143, "extend_hard_boundary_in_second": 144, "extend_schedul": 145, "extend_schedule_new": 146, "timebox": [147, 151, 168, 174], "multiplexedprobetimebox": 148, "schedulingalgorithm": 149, "schedulingstrategi": 150, "util": [152, 153, 154, 155, 156, 157], "load_yaml": 153, "map_waveform_param_typ": 154, "merge_dict": 155, "normalize_angl": 156, "phase_transform": 157, "valid": [158, 160, 161, 162, 163, 164, 165, 166], "awgschedulevalidationdata": 159, "awgschedulevalidationerror": 160, "invalidinstructionerror": 161, "playlistvalidationerror": 162, "validate_awg_and_schedule_compat": 163, "validate_channel": 164, "validate_instruction_and_wf_length": 165, "validate_playlist_compat": 166, "changelog": 167, "version": 167, "7": 167, "20": 167, "2025": 167, "02": 167, "04": 167, "featur": [167, 174], "19": 167, "bug": 167, "fix": 167, "18": 167, "17": 167, "03": 167, "16": 167, "15": 167, "01": 167, "28": 167, "14": 167, "13": 167, "12": 167, "27": 167, "11": 167, "24": 167, "10": 167, "9": 167, "08": 167, "8": 167, "2024": 167, "30": 167, "6": 167, "5": 167, "4": 167, "3": 167, "09": 167, "2": 167, "05": 167, "1": 167, "0": 167, "29": 167, "break": 167, "chang": 167, "31": 167, "25": 167, "21": 167, "23": 167, "06": 167, "26": 167, "22": 167, "07": 167, "concept": 168, "class": [168, 169], "quick": 168, "custom": 169, "implement": 169, "calibr": 169, "data": 169, "more": 169, "regist": 169, "content": 170, "indic": 170, "tabl": 170, "licens": 171, "time": 172, "fast": 172, "feedback": 172, "us": 174, "creat": 174, "compos": 174, "resolv": 174, "miscellan": 174, "common": 174, "pitfal": 174}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinxcontrib.bibtex": 9, "sphinx": 60}, "alltitles": {"API Reference": [[0, "api-reference"]], "pulse": [[1, "module-iqm.pulse"]], "builder": [[2, "module-iqm.pulse.builder"]], "CircuitOperation": [[3, "circuitoperation"]], "ScheduleBuilder": [[4, "schedulebuilder"]], "iqm.pulse.builder.build_quantum_ops": [[5, "iqm-pulse-builder-build-quantum-ops"]], "iqm.pulse.builder.load_config": [[6, "iqm-pulse-builder-load-config"]], "iqm.pulse.builder.validate_quantum_circuit": [[7, "iqm-pulse-builder-validate-quantum-circuit"]], "circuit_operations": [[8, "module-iqm.pulse.circuit_operations"]], "CircuitOperationList": [[9, "circuitoperationlist"]], "iqm.pulse.circuit_operations.get_unitary_from_circuit": [[10, "iqm-pulse-circuit-operations-get-unitary-from-circuit"]], "iqm.pulse.circuit_operations.get_unitary_from_op": [[11, "iqm-pulse-circuit-operations-get-unitary-from-op"]], "iqm.pulse.circuit_operations.reorder": [[12, "iqm-pulse-circuit-operations-reorder"]], "iqm.pulse.circuit_operations.reshape_unitary": [[13, "iqm-pulse-circuit-operations-reshape-unitary"]], "gate_implementation": [[14, "module-iqm.pulse.gate_implementation"]], "CompositeCache": [[15, "compositecache"]], "CompositeGate": [[16, "compositegate"]], "CustomIQWaveforms": [[17, "customiqwaveforms"]], "GateImplementation": [[18, "gateimplementation"]], "iqm.pulse.gate_implementation.Locus": [[19, "iqm-pulse-gate-implementation-locus"]], "iqm.pulse.gate_implementation.NestedParams": [[20, "iqm-pulse-gate-implementation-nestedparams"]], "iqm.pulse.gate_implementation.OCalibrationData": [[21, "iqm-pulse-gate-implementation-ocalibrationdata"]], "iqm.pulse.gate_implementation.OICalibrationData": [[22, "iqm-pulse-gate-implementation-oicalibrationdata"]], "iqm.pulse.gate_implementation.OILCalibrationData": [[23, "iqm-pulse-gate-implementation-oilcalibrationdata"]], "iqm.pulse.gate_implementation.OpCalibrationDataTree": [[24, "iqm-pulse-gate-implementation-opcalibrationdatatree"]], "iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING": [[25, "iqm-pulse-gate-implementation-probe-lines-locus-mapping"]], "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING": [[26, "iqm-pulse-gate-implementation-single-components-with-drive-locus-mapping"]], "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING": [[27, "iqm-pulse-gate-implementation-single-components-with-flux-awg-locus-mapping"]], "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING": [[28, "iqm-pulse-gate-implementation-single-components-with-readout-locus-mapping"]], "SinglePulseGate": [[29, "singlepulsegate"]], "iqm.pulse.gate_implementation.get_waveform_parameters": [[30, "iqm-pulse-gate-implementation-get-waveform-parameters"]], "gates": [[31, "module-iqm.pulse.gates"]], "barrier": [[32, "module-iqm.pulse.gates.barrier"]], "Barrier": [[33, "barrier"]], "conditional": [[34, "module-iqm.pulse.gates.conditional"]], "CCPRX_Composite": [[35, "ccprx-composite"]], "CCPRX_Composite_DRAGCosineRiseFall": [[36, "ccprx-composite-dragcosinerisefall"]], "CCPRX_Composite_DRAGGaussian": [[37, "ccprx-composite-draggaussian"]], "cz": [[38, "module-iqm.pulse.gates.cz"]], "CZ_CRF": [[39, "cz-crf"]], "CZ_CRF_ACStarkCRF": [[40, "cz-crf-acstarkcrf"]], "CZ_GaussianSmoothedSquare": [[41, "cz-gaussiansmoothedsquare"]], "CZ_Slepian": [[42, "cz-slepian"]], "CZ_Slepian_ACStarkCRF": [[43, "cz-slepian-acstarkcrf"]], "CZ_Slepian_CRF": [[44, "cz-slepian-crf"]], "CZ_TruncatedGaussianSmoothedSquare": [[45, "cz-truncatedgaussiansmoothedsquare"]], "CouplerFluxPulseQubitACStarkPulseGate": [[46, "couplerfluxpulsequbitacstarkpulsegate"]], "FluxPulseGate": [[47, "fluxpulsegate"]], "FluxPulseGate_CRF_CRF": [[48, "fluxpulsegate-crf-crf"]], "FluxPulseGate_TGSS_CRF": [[49, "fluxpulsegate-tgss-crf"]], "enums": [[50, "module-iqm.pulse.gates.enums"]], "iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES": [[51, "iqm-pulse-gates-enums-two-qubit-unitaries"]], "TwoQubitGate": [[52, "twoqubitgate"]], "iqm.pulse.gates.enums.XYGATE_UNITARIES": [[53, "iqm-pulse-gates-enums-xygate-unitaries"]], "XYGate": [[54, "xygate"]], "iqm.pulse.gates.expose_implementation": [[55, "iqm-pulse-gates-expose-implementation"]], "iqm.pulse.gates.get_implementation_class": [[56, "iqm-pulse-gates-get-implementation-class"]], "measure": [[57, "module-iqm.pulse.gates.measure"]], "Measure_Constant": [[58, "measure-constant"]], "Measure_CustomWaveforms": [[59, "measure-customwaveforms"]], "ProbePulse_CustomWaveforms": [[60, "probepulse-customwaveforms"]], "move": [[61, "module-iqm.pulse.gates.move"]], "MOVE_CRF_CRF": [[62, "move-crf-crf"]], "MOVE_CustomWaveforms": [[63, "move-customwaveforms"]], "MOVE_TGSS_CRF": [[64, "move-tgss-crf"]], "MoveMarker": [[65, "movemarker"]], "iqm.pulse.gates.move.apply_move_gate_phase_corrections": [[66, "iqm-pulse-gates-move-apply-move-gate-phase-corrections"]], "iqm.pulse.gates.move.validate_move_instructions": [[67, "iqm-pulse-gates-move-validate-move-instructions"]], "prx": [[68, "module-iqm.pulse.gates.prx"]], "PRX_CustomWaveforms": [[69, "prx-customwaveforms"]], "PRX_CustomWaveformsSX": [[70, "prx-customwaveformssx"]], "PRX_DRAGCosineRiseFall": [[71, "prx-dragcosinerisefall"]], "PRX_DRAGCosineRiseFallSX": [[72, "prx-dragcosinerisefallsx"]], "PRX_DRAGGaussian": [[73, "prx-draggaussian"]], "PRX_DRAGGaussianSX": [[74, "prx-draggaussiansx"]], "PRX_GateImplementation": [[75, "prx-gateimplementation"]], "PRX_SinglePulse_GateImplementation": [[76, "prx-singlepulse-gateimplementation"]], "iqm.pulse.gates.prx.get_unitary_prx": [[77, "iqm-pulse-gates-prx-get-unitary-prx"]], "iqm.pulse.gates.register_implementation": [[78, "iqm-pulse-gates-register-implementation"]], "reset": [[79, "module-iqm.pulse.gates.reset"]], "iqm.pulse.gates.reset.RESET_FEEDBACK_KEY": [[80, "iqm-pulse-gates-reset-reset-feedback-key"]], "iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY": [[81, "iqm-pulse-gates-reset-reset-measurement-key"]], "Reset_Conditional": [[82, "reset-conditional"]], "Reset_Wait": [[83, "reset-wait"]], "rz": [[84, "module-iqm.pulse.gates.rz"]], "RZ_ACStarkShift": [[85, "rz-acstarkshift"]], "RZ_ACStarkShift_CosineRiseFall": [[86, "rz-acstarkshift-cosinerisefall"]], "RZ_Virtual": [[87, "rz-virtual"]], "iqm.pulse.gates.rz.get_unitary_rz": [[88, "iqm-pulse-gates-rz-get-unitary-rz"]], "sx": [[89, "module-iqm.pulse.gates.sx"]], "SXGate": [[90, "sxgate"]], "u": [[91, "module-iqm.pulse.gates.u"]], "UGate": [[92, "ugate"]], "iqm.pulse.gates.u.get_unitary_u": [[93, "iqm-pulse-gates-u-get-unitary-u"]], "playlist": [[94, "module-iqm.pulse.playlist"], [118, "module-iqm.pulse.playlist.playlist"]], "channel": [[95, "module-iqm.pulse.playlist.channel"]], "ChannelConfiguration": [[96, "channelconfiguration"]], "ChannelDescription": [[97, "channeldescription"]], "ChannelProperties": [[98, "channelproperties"]], "IQChannelConfig": [[99, "iqchannelconfig"]], "ProbeChannelProperties": [[100, "probechannelproperties"]], "RealChannelConfig": [[101, "realchannelconfig"]], "iqm.pulse.playlist.channel.get_channel_properties": [[102, "iqm-pulse-playlist-channel-get-channel-properties"]], "iqm.pulse.playlist.channel.get_channel_properties_from_station_settings": [[103, "iqm-pulse-playlist-channel-get-channel-properties-from-station-settings"]], "instructions": [[104, "module-iqm.pulse.playlist.instructions"]], "AcquisitionMethod": [[105, "acquisitionmethod"]], "Block": [[106, "block"]], "ComplexIntegration": [[107, "complexintegration"]], "ConditionalInstruction": [[108, "conditionalinstruction"]], "IQPulse": [[109, "iqpulse"]], "Instruction": [[110, "instruction"]], "MultiplexedIQPulse": [[111, "multiplexediqpulse"]], "ReadoutTrigger": [[112, "readouttrigger"]], "RealPulse": [[113, "realpulse"]], "ThresholdStateDiscrimination": [[114, "thresholdstatediscrimination"]], "TimeTrace": [[115, "timetrace"]], "VirtualRZ": [[116, "virtualrz"]], "Wait": [[117, "wait"]], "schedule": [[119, "module-iqm.pulse.playlist.schedule"]], "Nothing": [[120, "nothing"]], "Schedule": [[121, "schedule"]], "Segment": [[122, "segment"]], "iqm.pulse.playlist.schedule.TOLERANCE": [[123, "iqm-pulse-playlist-schedule-tolerance"]], "visualisation": [[124, "module-iqm.pulse.playlist.visualisation"]], "base": [[125, "module-iqm.pulse.playlist.visualisation.base"]], "iqm.pulse.playlist.visualisation.base.inspect_playlist": [[126, "iqm-pulse-playlist-visualisation-base-inspect-playlist"]], "waveforms": [[127, "module-iqm.pulse.playlist.waveforms"]], "Chirp": [[128, "chirp"]], "ChirpImag": [[129, "chirpimag"]], "Cosine": [[130, "cosine"]], "CosineRiseFallDerivative": [[131, "cosinerisefallderivative"]], "ModulatedCosineRiseFall": [[132, "modulatedcosinerisefall"]], "Slepian": [[133, "slepian"]], "quantum_ops": [[134, "module-iqm.pulse.quantum_ops"]], "QuantumOp": [[135, "quantumop"], [169, "quantumop"]], "iqm.pulse.quantum_ops.QuantumOpTable": [[136, "iqm-pulse-quantum-ops-quantumoptable"]], "iqm.pulse.quantum_ops.validate_locus_calibration": [[137, "iqm-pulse-quantum-ops-validate-locus-calibration"]], "iqm.pulse.quantum_ops.validate_op_calibration": [[138, "iqm-pulse-quantum-ops-validate-op-calibration"]], "scheduler": [[139, "module-iqm.pulse.scheduler"]], "iqm.pulse.scheduler.BLOCKING": [[140, "iqm-pulse-scheduler-blocking"]], "iqm.pulse.scheduler.NONSOLID": [[141, "iqm-pulse-scheduler-nonsolid"]], "SegmentPointer": [[142, "segmentpointer"]], "iqm.pulse.scheduler.extend_hard_boundary": [[143, "iqm-pulse-scheduler-extend-hard-boundary"]], "iqm.pulse.scheduler.extend_hard_boundary_in_seconds": [[144, "iqm-pulse-scheduler-extend-hard-boundary-in-seconds"]], "iqm.pulse.scheduler.extend_schedule": [[145, "iqm-pulse-scheduler-extend-schedule"]], "iqm.pulse.scheduler.extend_schedule_new": [[146, "iqm-pulse-scheduler-extend-schedule-new"]], "timebox": [[147, "module-iqm.pulse.timebox"]], "MultiplexedProbeTimeBox": [[148, "multiplexedprobetimebox"]], "SchedulingAlgorithm": [[149, "schedulingalgorithm"]], "SchedulingStrategy": [[150, "schedulingstrategy"]], "TimeBox": [[151, "timebox"]], "utils": [[152, "module-iqm.pulse.utils"]], "iqm.pulse.utils.load_yaml": [[153, "iqm-pulse-utils-load-yaml"]], "iqm.pulse.utils.map_waveform_param_types": [[154, "iqm-pulse-utils-map-waveform-param-types"]], "iqm.pulse.utils.merge_dicts": [[155, "iqm-pulse-utils-merge-dicts"]], "iqm.pulse.utils.normalize_angle": [[156, "iqm-pulse-utils-normalize-angle"]], "iqm.pulse.utils.phase_transformation": [[157, "iqm-pulse-utils-phase-transformation"]], "validation": [[158, "module-iqm.pulse.validation"]], "AWGScheduleValidationData": [[159, "awgschedulevalidationdata"]], "iqm.pulse.validation.AWGScheduleValidationError": [[160, "iqm-pulse-validation-awgschedulevalidationerror"]], "iqm.pulse.validation.InvalidInstructionError": [[161, "iqm-pulse-validation-invalidinstructionerror"]], "iqm.pulse.validation.PlaylistValidationError": [[162, "iqm-pulse-validation-playlistvalidationerror"]], "iqm.pulse.validation.validate_awg_and_schedule_compatibility": [[163, "iqm-pulse-validation-validate-awg-and-schedule-compatibility"]], "iqm.pulse.validation.validate_channel": [[164, "iqm-pulse-validation-validate-channel"]], "iqm.pulse.validation.validate_instruction_and_wf_length": [[165, "iqm-pulse-validation-validate-instruction-and-wf-length"]], "iqm.pulse.validation.validate_playlist_compatibility": [[166, "iqm-pulse-validation-validate-playlist-compatibility"]], "Changelog": [[167, "changelog"]], "Version 7.20 (2025-02-04)": [[167, "version-7-20-2025-02-04"]], "Features": [[167, "features"], [167, "id1"], [167, "id2"], [167, "id3"], [167, "id4"], [167, "id6"], [167, "id7"], [167, "id8"], [167, "id9"], [167, "id10"], [167, "id11"], [167, "id12"], [167, "id13"], [167, "id14"], [167, "id15"], [167, "id17"], [167, "id18"], [167, "id19"], [167, "id20"], [167, "id22"], [167, "id23"], [167, "id24"], [167, "id28"], [167, "id30"], [167, "id33"], [167, "id35"], [167, "id36"], [167, "id38"], [167, "id41"], [167, "id44"], [167, "id46"], [167, "id47"], [167, "id48"], [167, "id49"], [167, "id50"], [167, "id51"], [167, "id52"], [167, "id54"], [167, "id55"], [167, "id56"], [167, "id57"], [167, "id58"], [167, "id59"], [167, "id60"], [167, "id61"], [167, "id62"], [167, "id63"], [167, "id65"], [167, "id66"], [167, "id68"], [167, "id69"], [167, "id70"]], "Version 7.19 (2025-02-04)": [[167, "version-7-19-2025-02-04"]], "Bug Fixes": [[167, "bug-fixes"]], "Version 7.18 (2025-02-04)": [[167, "version-7-18-2025-02-04"]], "Version 7.17 (2025-02-03)": [[167, "version-7-17-2025-02-03"]], "Version 7.16 (2025-02-03)": [[167, "version-7-16-2025-02-03"]], "Bug fixes": [[167, "id5"], [167, "id21"], [167, "id25"], [167, "id26"], [167, "id27"], [167, "id29"], [167, "id31"], [167, "id32"], [167, "id37"], [167, "id39"], [167, "id40"], [167, "id42"], [167, "id64"]], "Version 7.15 (2025-01-28)": [[167, "version-7-15-2025-01-28"]], "Bug fix": [[167, "bug-fix"], [167, "id16"]], "Version 7.14 (2025-01-28)": [[167, "version-7-14-2025-01-28"]], "Version 7.13 (2025-01-28)": [[167, "version-7-13-2025-01-28"]], "Version 7.12 (2025-01-27)": [[167, "version-7-12-2025-01-27"]], "Version 7.11 (2025-01-24)": [[167, "version-7-11-2025-01-24"]], "Version 7.10 (2025-01-17)": [[167, "version-7-10-2025-01-17"]], "Version 7.9 (2025-01-08)": [[167, "version-7-9-2025-01-08"]], "Version 7.8 (2025-01-02)": [[167, "version-7-8-2025-01-02"]], "Version 7.7 (2024-12-30)": [[167, "version-7-7-2024-12-30"]], "Version 7.6 (2024-12-30)": [[167, "version-7-6-2024-12-30"]], "Version 7.5 (2024-12-12)": [[167, "version-7-5-2024-12-12"]], "Version 7.4 (2024-12-10)": [[167, "version-7-4-2024-12-10"]], "Version 7.3 (2024-12-09)": [[167, "version-7-3-2024-12-09"]], "Version 7.2 (2024-12-05)": [[167, "version-7-2-2024-12-05"]], "Version 7.1 (2024-12-04)": [[167, "version-7-1-2024-12-04"]], "Version 7.0 (2024-11-29)": [[167, "version-7-0-2024-11-29"]], "Breaking changes": [[167, "breaking-changes"], [167, "id34"], [167, "id43"], [167, "id45"], [167, "id53"], [167, "id67"]], "Version 6.14 (2024-11-27)": [[167, "version-6-14-2024-11-27"]], "Version 6.13 (2024-11-20)": [[167, "version-6-13-2024-11-20"]], "Version 6.12 (2024-11-19)": [[167, "version-6-12-2024-11-19"]], "Version 6.11 (2024-11-18)": [[167, "version-6-11-2024-11-18"]], "Version 6.10 (2024-11-15)": [[167, "version-6-10-2024-11-15"]], "Version 6.9 (2024-11-13)": [[167, "version-6-9-2024-11-13"]], "Version 6.8 (2024-11-12)": [[167, "version-6-8-2024-11-12"]], "Version 6.7 (2024-11-12)": [[167, "version-6-7-2024-11-12"]], "Version 6.6 (2024-11-08)": [[167, "version-6-6-2024-11-08"]], "Version 6.5 (2024-10-31)": [[167, "version-6-5-2024-10-31"]], "Version 6.4 (2024-10-30)": [[167, "version-6-4-2024-10-30"]], "Version 6.3 (2024-10-30)": [[167, "version-6-3-2024-10-30"]], "Version 6.2 (2024-10-28)": [[167, "version-6-2-2024-10-28"]], "Version 6.1 (2024-10-28)": [[167, "version-6-1-2024-10-28"]], "Version 6.0 (2024-10-25)": [[167, "version-6-0-2024-10-25"]], "Version 5.9 (2024-10-24)": [[167, "version-5-9-2024-10-24"]], "Version 5.8 (2024-10-21)": [[167, "version-5-8-2024-10-21"]], "Version 5.7 (2024-10-16)": [[167, "version-5-7-2024-10-16"]], "Version 5.6 (2024-10-16)": [[167, "version-5-6-2024-10-16"]], "Version 5.5 (2024-10-15)": [[167, "version-5-5-2024-10-15"]], "Version 5.4 (2024-10-15)": [[167, "version-5-4-2024-10-15"]], "Version 5.3 (2024-10-11)": [[167, "version-5-3-2024-10-11"]], "Version 5.2 (2024-10-11)": [[167, "version-5-2-2024-10-11"]], "Version 5.1 (2024-10-11)": [[167, "version-5-1-2024-10-11"]], "Version 5.0 (2024-10-08)": [[167, "version-5-0-2024-10-08"]], "Version 4.0 (2024-10-02)": [[167, "version-4-0-2024-10-02"]], "Version 3.5 (2024-09-25)": [[167, "version-3-5-2024-09-25"]], "Version 3.4 (2024-09-23)": [[167, "version-3-4-2024-09-23"]], "Version 3.3 (2024-09-19)": [[167, "version-3-3-2024-09-19"]], "Version 3.2 (2024-09-11)": [[167, "version-3-2-2024-09-11"]], "Version 3.1 (2024-09-11)": [[167, "version-3-1-2024-09-11"]], "Version 3.0 (2024-09-06)": [[167, "version-3-0-2024-09-06"]], "Version 2.13 (2024-09-04)": [[167, "version-2-13-2024-09-04"]], "Version 2.12 (2024-08-27)": [[167, "version-2-12-2024-08-27"]], "Version 2.11 (2024-08-26)": [[167, "version-2-11-2024-08-26"]], "Version 2.10 (2024-08-26)": [[167, "version-2-10-2024-08-26"]], "Version 2.9 (2024-08-23)": [[167, "version-2-9-2024-08-23"]], "Version 2.8 (2024-08-22)": [[167, "version-2-8-2024-08-22"]], "Version 2.7 (2024-08-16)": [[167, "version-2-7-2024-08-16"]], "Version 2.6 (2024-08-16)": [[167, "version-2-6-2024-08-16"]], "Version 2.5 (2024-08-15)": [[167, "version-2-5-2024-08-15"]], "Version 2.4 (2024-08-09)": [[167, "version-2-4-2024-08-09"]], "Version 2.3 (2024-08-05)": [[167, "version-2-3-2024-08-05"]], "Version 2.2 (2024-07-29)": [[167, "version-2-2-2024-07-29"]], "Version 2.1 (2024-07-23)": [[167, "version-2-1-2024-07-23"]], "Version 2.0 (2024-07-15)": [[167, "version-2-0-2024-07-15"]], "Version 1.6 (2024-07-12)": [[167, "version-1-6-2024-07-12"]], "Version 1.5 (2024-07-05)": [[167, "version-1-5-2024-07-05"]], "Version 1.4 (2024-07-04)": [[167, "version-1-4-2024-07-04"]], "Version 1.3 (2024-07-04)": [[167, "version-1-3-2024-07-04"]], "Version 1.2 (2024-07-03)": [[167, "version-1-2-2024-07-03"]], "Version 1.1 (2024-07-02)": [[167, "version-1-1-2024-07-02"]], "Version 1.0 (2024-07-01)": [[167, "version-1-0-2024-07-01"]], "Concepts and Classes": [[168, "concepts-and-classes"]], "Quick reference": [[168, "quick-reference"]], "Instructions": [[168, "instructions"]], "Schedules": [[168, "schedules"]], "TimeBoxes": [[168, "timeboxes"]], "QuantumOps": [[168, "quantumops"]], "GateImplementations": [[168, "gateimplementations"]], "Playlists": [[168, "playlists"]], "Custom gate implementations": [[169, "custom-gate-implementations"], [169, "id1"]], "GateImplementation class": [[169, "gateimplementation-class"]], "Instructions, Waveforms and calibration data": [[169, "instructions-waveforms-and-calibration-data"]], "More base classes": [[169, "more-base-classes"]], "Registering gates and implementations": [[169, "registering-gates-and-implementations"]], "IQM Pulse": [[170, "iqm-pulse"]], "Contents": [[170, "contents"]], "Indices and tables": [[170, "indices-and-tables"]], "License": [[171, "license"]], "Pulse timing": [[172, "pulse-timing"]], "Measure and ReadoutTrigger": [[172, "measure-and-readouttrigger"]], "Fast feedback timing": [[172, "fast-feedback-timing"]], "References": [[173, "references"]], "Using ScheduleBuilder": [[174, "using-schedulebuilder"]], "Creating TimeBoxes": [[174, "creating-timeboxes"]], "Composing TimeBoxes": [[174, "composing-timeboxes"]], "Resolving TimeBoxes into a Schedule": [[174, "resolving-timeboxes-into-a-schedule"]], "Miscellaneous features": [[174, "miscellaneous-features"]], "Common pitfalls": [[174, "common-pitfalls"]]}, "indexentries": {"iqm.pulse": [[1, "module-iqm.pulse"]], "module": [[1, "module-iqm.pulse"], [2, "module-iqm.pulse.builder"], [8, "module-iqm.pulse.circuit_operations"], [14, "module-iqm.pulse.gate_implementation"], [31, "module-iqm.pulse.gates"], [32, "module-iqm.pulse.gates.barrier"], [34, "module-iqm.pulse.gates.conditional"], [38, "module-iqm.pulse.gates.cz"], [50, "module-iqm.pulse.gates.enums"], [57, "module-iqm.pulse.gates.measure"], [61, "module-iqm.pulse.gates.move"], [68, "module-iqm.pulse.gates.prx"], [79, "module-iqm.pulse.gates.reset"], [84, "module-iqm.pulse.gates.rz"], [89, "module-iqm.pulse.gates.sx"], [91, "module-iqm.pulse.gates.u"], [94, "module-iqm.pulse.playlist"], [95, "module-iqm.pulse.playlist.channel"], [104, "module-iqm.pulse.playlist.instructions"], [118, "module-iqm.pulse.playlist.playlist"], [119, "module-iqm.pulse.playlist.schedule"], [124, "module-iqm.pulse.playlist.visualisation"], [125, "module-iqm.pulse.playlist.visualisation.base"], [127, "module-iqm.pulse.playlist.waveforms"], [134, "module-iqm.pulse.quantum_ops"], [139, "module-iqm.pulse.scheduler"], [147, "module-iqm.pulse.timebox"], [152, "module-iqm.pulse.utils"], [158, "module-iqm.pulse.validation"]], "iqm.pulse.builder": [[2, "module-iqm.pulse.builder"]], "circuitoperation (class in iqm.pulse.builder)": [[3, "iqm.pulse.builder.CircuitOperation"]], "args (iqm.pulse.builder.circuitoperation attribute)": [[3, "iqm.pulse.builder.CircuitOperation.args"]], "implementation (iqm.pulse.builder.circuitoperation attribute)": [[3, "iqm.pulse.builder.CircuitOperation.implementation"]], "locus (iqm.pulse.builder.circuitoperation attribute)": [[3, "iqm.pulse.builder.CircuitOperation.locus"]], "name (iqm.pulse.builder.circuitoperation attribute)": [[3, "iqm.pulse.builder.CircuitOperation.name"]], "validate() (iqm.pulse.builder.circuitoperation method)": [[3, "iqm.pulse.builder.CircuitOperation.validate"]], "schedulebuilder (class in iqm.pulse.builder)": [[4, "iqm.pulse.builder.ScheduleBuilder"]], "_block_neighborhood_tetris() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder._block_neighborhood_tetris"]], "_cache (iqm.pulse.builder.schedulebuilder attribute)": [[4, "iqm.pulse.builder.ScheduleBuilder._cache"]], "_channel_templates (iqm.pulse.builder.schedulebuilder attribute)": [[4, "iqm.pulse.builder.ScheduleBuilder._channel_templates"]], "_channel_to_component (iqm.pulse.builder.schedulebuilder attribute)": [[4, "iqm.pulse.builder.ScheduleBuilder._channel_to_component"]], "_channel_types (iqm.pulse.builder.schedulebuilder attribute)": [[4, "iqm.pulse.builder.ScheduleBuilder._channel_types"]], "_find_implementation_and_locus() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder._find_implementation_and_locus"]], "_finish_schedule() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder._finish_schedule"]], "_get_channel_for_component() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder._get_channel_for_component"]], "_get_implementation() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder._get_implementation"]], "_get_neighborhood_hard_boundary() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder._get_neighborhood_hard_boundary"]], "_require_scheduling_in_seconds (iqm.pulse.builder.schedulebuilder attribute)": [[4, "iqm.pulse.builder.ScheduleBuilder._require_scheduling_in_seconds"]], "_resolve_timebox_hard_boundary() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder._resolve_timebox_hard_boundary"]], "_resolve_timebox_tetris() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder._resolve_timebox_tetris"]], "_set_gate_implementation_shortcut() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder._set_gate_implementation_shortcut"]], "build_playlist() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.build_playlist"]], "circuit_to_timebox() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.circuit_to_timebox"]], "composite_cache (iqm.pulse.builder.schedulebuilder attribute)": [[4, "iqm.pulse.builder.ScheduleBuilder.composite_cache"]], "get_calibration() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.get_calibration"]], "get_control_channels() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.get_control_channels"]], "get_drive_channel() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.get_drive_channel"]], "get_flux_channel() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.get_flux_channel"]], "get_implementation() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.get_implementation"]], "get_implementation_class() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.get_implementation_class"]], "get_probe_channel() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.get_probe_channel"]], "get_virtual_feedback_channel_for() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.get_virtual_feedback_channel_for"]], "get_virtual_feedback_channels() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.get_virtual_feedback_channels"]], "has_calibration() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.has_calibration"]], "inject_calibration() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.inject_calibration"]], "resolve_timebox() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.resolve_timebox"]], "timebox_to_schedule() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.timebox_to_schedule"]], "timeboxes_to_front_padded_playlist() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.timeboxes_to_front_padded_playlist"]], "timeboxes_to_playlist() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.timeboxes_to_playlist"]], "validate_calibration() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.validate_calibration"]], "validate_quantum_circuit() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.validate_quantum_circuit"]], "wait() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.wait"]], "build_quantum_ops() (in module iqm.pulse.builder)": [[5, "iqm.pulse.builder.build_quantum_ops"]], "load_config() (in module iqm.pulse.builder)": [[6, "iqm.pulse.builder.load_config"]], "validate_quantum_circuit() (in module iqm.pulse.builder)": [[7, "iqm.pulse.builder.validate_quantum_circuit"]], "iqm.pulse.circuit_operations": [[8, "module-iqm.pulse.circuit_operations"]], "circuitoperationlist (class in iqm.pulse.circuit_operations)": [[9, "iqm.pulse.circuit_operations.CircuitOperationList"]], "_set_specific_operation_shortcut() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[9, "iqm.pulse.circuit_operations.CircuitOperationList._set_specific_operation_shortcut"]], "add_op() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[9, "iqm.pulse.circuit_operations.CircuitOperationList.add_op"]], "add_qubits() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[9, "iqm.pulse.circuit_operations.CircuitOperationList.add_qubits"]], "barrier() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[9, "iqm.pulse.circuit_operations.CircuitOperationList.barrier"]], "compose() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[9, "iqm.pulse.circuit_operations.CircuitOperationList.compose"]], "count_ops() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[9, "iqm.pulse.circuit_operations.CircuitOperationList.count_ops"]], "find_qubits() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[9, "iqm.pulse.circuit_operations.CircuitOperationList.find_qubits"]], "get_unitary() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[9, "iqm.pulse.circuit_operations.CircuitOperationList.get_unitary"]], "map_loci() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[9, "iqm.pulse.circuit_operations.CircuitOperationList.map_loci"]], "get_unitary_from_circuit() (in module iqm.pulse.circuit_operations)": [[10, "iqm.pulse.circuit_operations.get_unitary_from_circuit"]], "get_unitary_from_op() (in module iqm.pulse.circuit_operations)": [[11, "iqm.pulse.circuit_operations.get_unitary_from_op"]], "reorder() (in module iqm.pulse.circuit_operations)": [[12, "iqm.pulse.circuit_operations.reorder"]], "reshape_unitary() (in module iqm.pulse.circuit_operations)": [[13, "iqm.pulse.circuit_operations.reshape_unitary"]], "iqm.pulse.gate_implementation": [[14, "module-iqm.pulse.gate_implementation"]], "compositecache (class in iqm.pulse.gate_implementation)": [[15, "iqm.pulse.gate_implementation.CompositeCache"]], "flush() (iqm.pulse.gate_implementation.compositecache method)": [[15, "iqm.pulse.gate_implementation.CompositeCache.flush"]], "get() (iqm.pulse.gate_implementation.compositecache method)": [[15, "iqm.pulse.gate_implementation.CompositeCache.get"]], "set() (iqm.pulse.gate_implementation.compositecache method)": [[15, "iqm.pulse.gate_implementation.CompositeCache.set"]], "compositegate (class in iqm.pulse.gate_implementation)": [[16, "iqm.pulse.gate_implementation.CompositeGate"]], "build() (iqm.pulse.gate_implementation.compositegate method)": [[16, "iqm.pulse.gate_implementation.CompositeGate.build"]], "default_implementations (iqm.pulse.gate_implementation.compositegate attribute)": [[16, "iqm.pulse.gate_implementation.CompositeGate.default_implementations"]], "registered_gates (iqm.pulse.gate_implementation.compositegate attribute)": [[16, "iqm.pulse.gate_implementation.CompositeGate.registered_gates"]], "customiqwaveforms (class in iqm.pulse.gate_implementation)": [[17, "iqm.pulse.gate_implementation.CustomIQWaveforms"]], "dependent_waves (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[17, "iqm.pulse.gate_implementation.CustomIQWaveforms.dependent_waves"]], "excluded_parameters (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[17, "iqm.pulse.gate_implementation.CustomIQWaveforms.excluded_parameters"]], "root_parameters (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[17, "iqm.pulse.gate_implementation.CustomIQWaveforms.root_parameters"]], "wave_i (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[17, "iqm.pulse.gate_implementation.CustomIQWaveforms.wave_i"]], "wave_q (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[17, "iqm.pulse.gate_implementation.CustomIQWaveforms.wave_q"]], "gateimplementation (class in iqm.pulse.gate_implementation)": [[18, "iqm.pulse.gate_implementation.GateImplementation"]], "_call() (iqm.pulse.gate_implementation.gateimplementation method)": [[18, "iqm.pulse.gate_implementation.GateImplementation._call"]], "build() (iqm.pulse.gate_implementation.gateimplementation method)": [[18, "iqm.pulse.gate_implementation.GateImplementation.build"]], "convert_calibration_data() (iqm.pulse.gate_implementation.gateimplementation class method)": [[18, "iqm.pulse.gate_implementation.GateImplementation.convert_calibration_data"]], "duration_in_seconds() (iqm.pulse.gate_implementation.gateimplementation method)": [[18, "iqm.pulse.gate_implementation.GateImplementation.duration_in_seconds"]], "get_custom_locus_mapping() (iqm.pulse.gate_implementation.gateimplementation class method)": [[18, "iqm.pulse.gate_implementation.GateImplementation.get_custom_locus_mapping"]], "get_locus_mapping_name() (iqm.pulse.gate_implementation.gateimplementation class method)": [[18, "iqm.pulse.gate_implementation.GateImplementation.get_locus_mapping_name"]], "get_parameters() (iqm.pulse.gate_implementation.gateimplementation class method)": [[18, "iqm.pulse.gate_implementation.GateImplementation.get_parameters"]], "needs_calibration() (iqm.pulse.gate_implementation.gateimplementation class method)": [[18, "iqm.pulse.gate_implementation.GateImplementation.needs_calibration"]], "parameters (iqm.pulse.gate_implementation.gateimplementation attribute)": [[18, "iqm.pulse.gate_implementation.GateImplementation.parameters"]], "qualified_name (iqm.pulse.gate_implementation.gateimplementation property)": [[18, "iqm.pulse.gate_implementation.GateImplementation.qualified_name"]], "special_implementation (iqm.pulse.gate_implementation.gateimplementation attribute)": [[18, "iqm.pulse.gate_implementation.GateImplementation.special_implementation"]], "symmetric (iqm.pulse.gate_implementation.gateimplementation attribute)": [[18, "iqm.pulse.gate_implementation.GateImplementation.symmetric"]], "to_timebox() (iqm.pulse.gate_implementation.gateimplementation method)": [[18, "iqm.pulse.gate_implementation.GateImplementation.to_timebox"]], "locus (in module iqm.pulse.gate_implementation)": [[19, "iqm.pulse.gate_implementation.Locus"]], "nestedparams (in module iqm.pulse.gate_implementation)": [[20, "iqm.pulse.gate_implementation.NestedParams"]], "ocalibrationdata (in module iqm.pulse.gate_implementation)": [[21, "iqm.pulse.gate_implementation.OCalibrationData"]], "oicalibrationdata (in module iqm.pulse.gate_implementation)": [[22, "iqm.pulse.gate_implementation.OICalibrationData"]], "oilcalibrationdata (in module iqm.pulse.gate_implementation)": [[23, "iqm.pulse.gate_implementation.OILCalibrationData"]], "opcalibrationdatatree (in module iqm.pulse.gate_implementation)": [[24, "iqm.pulse.gate_implementation.OpCalibrationDataTree"]], "probe_lines_locus_mapping (in module iqm.pulse.gate_implementation)": [[25, "iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING"]], "single_components_with_drive_locus_mapping (in module iqm.pulse.gate_implementation)": [[26, "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING"]], "single_components_with_flux_awg_locus_mapping (in module iqm.pulse.gate_implementation)": [[27, "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING"]], "single_components_with_readout_locus_mapping (in module iqm.pulse.gate_implementation)": [[28, "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING"]], "singlepulsegate (class in iqm.pulse.gate_implementation)": [[29, "iqm.pulse.gate_implementation.SinglePulseGate"]], "_call() (iqm.pulse.gate_implementation.singlepulsegate method)": [[29, "iqm.pulse.gate_implementation.SinglePulseGate._call"]], "_get_pulse() (iqm.pulse.gate_implementation.singlepulsegate method)": [[29, "iqm.pulse.gate_implementation.SinglePulseGate._get_pulse"]], "_get_pulse_channel() (iqm.pulse.gate_implementation.singlepulsegate method)": [[29, "iqm.pulse.gate_implementation.SinglePulseGate._get_pulse_channel"]], "duration_in_seconds() (iqm.pulse.gate_implementation.singlepulsegate method)": [[29, "iqm.pulse.gate_implementation.SinglePulseGate.duration_in_seconds"]], "get_waveform_parameters() (in module iqm.pulse.gate_implementation)": [[30, "iqm.pulse.gate_implementation.get_waveform_parameters"]], "iqm.pulse.gates": [[31, "module-iqm.pulse.gates"]], "iqm.pulse.gates.barrier": [[32, "module-iqm.pulse.gates.barrier"]], "barrier (class in iqm.pulse.gates.barrier)": [[33, "iqm.pulse.gates.barrier.Barrier"]], "_call() (iqm.pulse.gates.barrier.barrier method)": [[33, "iqm.pulse.gates.barrier.Barrier._call"]], "duration_in_seconds() (iqm.pulse.gates.barrier.barrier method)": [[33, "iqm.pulse.gates.barrier.Barrier.duration_in_seconds"]], "symmetric (iqm.pulse.gates.barrier.barrier attribute)": [[33, "iqm.pulse.gates.barrier.Barrier.symmetric"]], "iqm.pulse.gates.conditional": [[34, "module-iqm.pulse.gates.conditional"]], "ccprx_composite (class in iqm.pulse.gates.conditional)": [[35, "iqm.pulse.gates.conditional.CCPRX_Composite"]], "_call() (iqm.pulse.gates.conditional.ccprx_composite method)": [[35, "iqm.pulse.gates.conditional.CCPRX_Composite._call"]], "parameters (iqm.pulse.gates.conditional.ccprx_composite attribute)": [[35, "iqm.pulse.gates.conditional.CCPRX_Composite.parameters"]], "ccprx_composite_dragcosinerisefall (class in iqm.pulse.gates.conditional)": [[36, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall"]], "default_implementations (iqm.pulse.gates.conditional.ccprx_composite_dragcosinerisefall attribute)": [[36, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall.default_implementations"]], "ccprx_composite_draggaussian (class in iqm.pulse.gates.conditional)": [[37, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian"]], "default_implementations (iqm.pulse.gates.conditional.ccprx_composite_draggaussian attribute)": [[37, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian.default_implementations"]], "iqm.pulse.gates.cz": [[38, "module-iqm.pulse.gates.cz"]], "cz_crf (class in iqm.pulse.gates.cz)": [[39, "iqm.pulse.gates.cz.CZ_CRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_crf attribute)": [[39, "iqm.pulse.gates.cz.CZ_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_crf attribute)": [[39, "iqm.pulse.gates.cz.CZ_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_crf attribute)": [[39, "iqm.pulse.gates.cz.CZ_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_crf attribute)": [[39, "iqm.pulse.gates.cz.CZ_CRF.symmetric"]], "cz_crf_acstarkcrf (class in iqm.pulse.gates.cz)": [[40, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[40, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[40, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.parameters"]], "qubit_drive_wave (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[40, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.qubit_drive_wave"]], "symmetric (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[40, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.symmetric"]], "cz_gaussiansmoothedsquare (class in iqm.pulse.gates.cz)": [[41, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare"]], "coupler_wave (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[41, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[41, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[41, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[41, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.symmetric"]], "cz_slepian (class in iqm.pulse.gates.cz)": [[42, "iqm.pulse.gates.cz.CZ_Slepian"]], "coupler_wave (iqm.pulse.gates.cz.cz_slepian attribute)": [[42, "iqm.pulse.gates.cz.CZ_Slepian.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_slepian attribute)": [[42, "iqm.pulse.gates.cz.CZ_Slepian.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_slepian attribute)": [[42, "iqm.pulse.gates.cz.CZ_Slepian.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_slepian attribute)": [[42, "iqm.pulse.gates.cz.CZ_Slepian.symmetric"]], "cz_slepian_acstarkcrf (class in iqm.pulse.gates.cz)": [[43, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[43, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[43, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.parameters"]], "qubit_drive_wave (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[43, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.qubit_drive_wave"]], "symmetric (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[43, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.symmetric"]], "cz_slepian_crf (class in iqm.pulse.gates.cz)": [[44, "iqm.pulse.gates.cz.CZ_Slepian_CRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[44, "iqm.pulse.gates.cz.CZ_Slepian_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[44, "iqm.pulse.gates.cz.CZ_Slepian_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[44, "iqm.pulse.gates.cz.CZ_Slepian_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[44, "iqm.pulse.gates.cz.CZ_Slepian_CRF.symmetric"]], "cz_truncatedgaussiansmoothedsquare (class in iqm.pulse.gates.cz)": [[45, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare"]], "coupler_wave (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[45, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[45, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[45, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[45, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.symmetric"]], "couplerfluxpulsequbitacstarkpulsegate (class in iqm.pulse.gates.cz)": [[46, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate"]], "_ac_stark_pulse() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate class method)": [[46, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate._ac_stark_pulse"]], "_call() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate method)": [[46, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate._call"]], "coupler_wave (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate attribute)": [[46, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.coupler_wave"]], "duration_in_seconds() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate method)": [[46, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.duration_in_seconds"]], "excluded_parameters (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate attribute)": [[46, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.excluded_parameters"]], "get_locus_mapping_name() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate class method)": [[46, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.get_locus_mapping_name"]], "qubit_drive_wave (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate attribute)": [[46, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.qubit_drive_wave"]], "fluxpulsegate (class in iqm.pulse.gates.cz)": [[47, "iqm.pulse.gates.cz.FluxPulseGate"]], "_call() (iqm.pulse.gates.cz.fluxpulsegate method)": [[47, "iqm.pulse.gates.cz.FluxPulseGate._call"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[47, "iqm.pulse.gates.cz.FluxPulseGate.coupler_wave"]], "duration_in_seconds() (iqm.pulse.gates.cz.fluxpulsegate method)": [[47, "iqm.pulse.gates.cz.FluxPulseGate.duration_in_seconds"]], "excluded_parameters (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[47, "iqm.pulse.gates.cz.FluxPulseGate.excluded_parameters"]], "get_locus_mapping_name() (iqm.pulse.gates.cz.fluxpulsegate class method)": [[47, "iqm.pulse.gates.cz.FluxPulseGate.get_locus_mapping_name"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[47, "iqm.pulse.gates.cz.FluxPulseGate.qubit_wave"]], "root_parameters (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[47, "iqm.pulse.gates.cz.FluxPulseGate.root_parameters"]], "fluxpulsegate_crf_crf (class in iqm.pulse.gates.cz)": [[48, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[48, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[48, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[48, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[48, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.symmetric"]], "fluxpulsegate_tgss_crf (class in iqm.pulse.gates.cz)": [[49, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[49, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[49, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[49, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[49, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.symmetric"]], "iqm.pulse.gates.enums": [[50, "module-iqm.pulse.gates.enums"]], "two_qubit_unitaries (in module iqm.pulse.gates.enums)": [[51, "iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES"]], "cz (iqm.pulse.gates.enums.twoqubitgate attribute)": [[52, "iqm.pulse.gates.enums.TwoQubitGate.CZ"]], "iswap (iqm.pulse.gates.enums.twoqubitgate attribute)": [[52, "iqm.pulse.gates.enums.TwoQubitGate.ISWAP"]], "sqrt_iswap (iqm.pulse.gates.enums.twoqubitgate attribute)": [[52, "iqm.pulse.gates.enums.TwoQubitGate.SQRT_ISWAP"]], "twoqubitgate (class in iqm.pulse.gates.enums)": [[52, "iqm.pulse.gates.enums.TwoQubitGate"]], "xygate_unitaries (in module iqm.pulse.gates.enums)": [[53, "iqm.pulse.gates.enums.XYGATE_UNITARIES"]], "xygate (class in iqm.pulse.gates.enums)": [[54, "iqm.pulse.gates.enums.XYGate"]], "expose_implementation() (in module iqm.pulse.gates)": [[55, "iqm.pulse.gates.expose_implementation"]], "get_implementation_class() (in module iqm.pulse.gates)": [[56, "iqm.pulse.gates.get_implementation_class"]], "iqm.pulse.gates.measure": [[57, "module-iqm.pulse.gates.measure"]], "measure_constant (class in iqm.pulse.gates.measure)": [[58, "iqm.pulse.gates.measure.Measure_Constant"]], "dependent_waves (iqm.pulse.gates.measure.measure_constant attribute)": [[58, "iqm.pulse.gates.measure.Measure_Constant.dependent_waves"]], "parameters (iqm.pulse.gates.measure.measure_constant attribute)": [[58, "iqm.pulse.gates.measure.Measure_Constant.parameters"]], "wave_i (iqm.pulse.gates.measure.measure_constant attribute)": [[58, "iqm.pulse.gates.measure.Measure_Constant.wave_i"]], "wave_q (iqm.pulse.gates.measure.measure_constant attribute)": [[58, "iqm.pulse.gates.measure.Measure_Constant.wave_q"]], "measure_customwaveforms (class in iqm.pulse.gates.measure)": [[59, "iqm.pulse.gates.measure.Measure_CustomWaveforms"]], "_build_instructions() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[59, "iqm.pulse.gates.measure.Measure_CustomWaveforms._build_instructions"]], "_call() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[59, "iqm.pulse.gates.measure.Measure_CustomWaveforms._call"]], "_multiplexed_timeboxes (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[59, "iqm.pulse.gates.measure.Measure_CustomWaveforms._multiplexed_timeboxes"]], "_time_traces (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[59, "iqm.pulse.gates.measure.Measure_CustomWaveforms._time_traces"]], "dependent_waves (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[59, "iqm.pulse.gates.measure.Measure_CustomWaveforms.dependent_waves"]], "duration_in_seconds() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[59, "iqm.pulse.gates.measure.Measure_CustomWaveforms.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.measure.measure_customwaveforms class method)": [[59, "iqm.pulse.gates.measure.Measure_CustomWaveforms.get_locus_mapping_name"]], "probe_timebox() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[59, "iqm.pulse.gates.measure.Measure_CustomWaveforms.probe_timebox"]], "root_parameters (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[59, "iqm.pulse.gates.measure.Measure_CustomWaveforms.root_parameters"]], "time_trace() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[59, "iqm.pulse.gates.measure.Measure_CustomWaveforms.time_trace"]], "probepulse_customwaveforms (class in iqm.pulse.gates.measure)": [[60, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms"]], "_build_instructions() (iqm.pulse.gates.measure.probepulse_customwaveforms method)": [[60, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms._build_instructions"]], "_call() (iqm.pulse.gates.measure.probepulse_customwaveforms method)": [[60, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms._call"]], "dependent_waves (iqm.pulse.gates.measure.probepulse_customwaveforms attribute)": [[60, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.dependent_waves"]], "duration_in_seconds() (iqm.pulse.gates.measure.probepulse_customwaveforms method)": [[60, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.measure.probepulse_customwaveforms class method)": [[60, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.get_locus_mapping_name"]], "root_parameters (iqm.pulse.gates.measure.probepulse_customwaveforms attribute)": [[60, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.root_parameters"]], "iqm.pulse.gates.move": [[61, "module-iqm.pulse.gates.move"]], "move_crf_crf (class in iqm.pulse.gates.move)": [[62, "iqm.pulse.gates.move.MOVE_CRF_CRF"]], "coupler_wave (iqm.pulse.gates.move.move_crf_crf attribute)": [[62, "iqm.pulse.gates.move.MOVE_CRF_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.move.move_crf_crf attribute)": [[62, "iqm.pulse.gates.move.MOVE_CRF_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.move.move_crf_crf attribute)": [[62, "iqm.pulse.gates.move.MOVE_CRF_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.move.move_crf_crf attribute)": [[62, "iqm.pulse.gates.move.MOVE_CRF_CRF.symmetric"]], "move_customwaveforms (class in iqm.pulse.gates.move)": [[63, "iqm.pulse.gates.move.MOVE_CustomWaveforms"]], "_call() (iqm.pulse.gates.move.move_customwaveforms method)": [[63, "iqm.pulse.gates.move.MOVE_CustomWaveforms._call"]], "coupler_wave (iqm.pulse.gates.move.move_customwaveforms attribute)": [[63, "iqm.pulse.gates.move.MOVE_CustomWaveforms.coupler_wave"]], "parameters (iqm.pulse.gates.move.move_customwaveforms attribute)": [[63, "iqm.pulse.gates.move.MOVE_CustomWaveforms.parameters"]], "qubit_wave (iqm.pulse.gates.move.move_customwaveforms attribute)": [[63, "iqm.pulse.gates.move.MOVE_CustomWaveforms.qubit_wave"]], "root_parameters (iqm.pulse.gates.move.move_customwaveforms attribute)": [[63, "iqm.pulse.gates.move.MOVE_CustomWaveforms.root_parameters"]], "symmetric (iqm.pulse.gates.move.move_customwaveforms attribute)": [[63, "iqm.pulse.gates.move.MOVE_CustomWaveforms.symmetric"]], "move_tgss_crf (class in iqm.pulse.gates.move)": [[64, "iqm.pulse.gates.move.MOVE_TGSS_CRF"]], "coupler_wave (iqm.pulse.gates.move.move_tgss_crf attribute)": [[64, "iqm.pulse.gates.move.MOVE_TGSS_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.move.move_tgss_crf attribute)": [[64, "iqm.pulse.gates.move.MOVE_TGSS_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.move.move_tgss_crf attribute)": [[64, "iqm.pulse.gates.move.MOVE_TGSS_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.move.move_tgss_crf attribute)": [[64, "iqm.pulse.gates.move.MOVE_TGSS_CRF.symmetric"]], "movemarker (class in iqm.pulse.gates.move)": [[65, "iqm.pulse.gates.move.MoveMarker"]], "duration (iqm.pulse.gates.move.movemarker attribute)": [[65, "iqm.pulse.gates.move.MoveMarker.duration"]], "apply_move_gate_phase_corrections() (in module iqm.pulse.gates.move)": [[66, "iqm.pulse.gates.move.apply_move_gate_phase_corrections"]], "validate_move_instructions() (in module iqm.pulse.gates.move)": [[67, "iqm.pulse.gates.move.validate_move_instructions"]], "iqm.pulse.gates.prx": [[68, "module-iqm.pulse.gates.prx"]], "prx_customwaveforms (class in iqm.pulse.gates.prx)": [[69, "iqm.pulse.gates.prx.PRX_CustomWaveforms"]], "_get_pulse() (iqm.pulse.gates.prx.prx_customwaveforms class method)": [[69, "iqm.pulse.gates.prx.PRX_CustomWaveforms._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_customwaveforms attribute)": [[69, "iqm.pulse.gates.prx.PRX_CustomWaveforms.dependent_waves"]], "root_parameters (iqm.pulse.gates.prx.prx_customwaveforms attribute)": [[69, "iqm.pulse.gates.prx.PRX_CustomWaveforms.root_parameters"]], "prx_customwaveformssx (class in iqm.pulse.gates.prx)": [[70, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX"]], "_call() (iqm.pulse.gates.prx.prx_customwaveformssx method)": [[70, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX._call"]], "_get_pulse() (iqm.pulse.gates.prx.prx_customwaveformssx class method)": [[70, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_customwaveformssx attribute)": [[70, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX.dependent_waves"]], "root_parameters (iqm.pulse.gates.prx.prx_customwaveformssx attribute)": [[70, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX.root_parameters"]], "prx_dragcosinerisefall (class in iqm.pulse.gates.prx)": [[71, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall"]], "_get_pulse() (iqm.pulse.gates.prx.prx_dragcosinerisefall class method)": [[71, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[71, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.dependent_waves"]], "excluded_parameters (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[71, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.excluded_parameters"]], "parameters (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[71, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[71, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[71, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.wave_q"]], "prx_dragcosinerisefallsx (class in iqm.pulse.gates.prx)": [[72, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX"]], "_get_pulse() (iqm.pulse.gates.prx.prx_dragcosinerisefallsx class method)": [[72, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[72, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.dependent_waves"]], "excluded_parameters (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[72, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.excluded_parameters"]], "parameters (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[72, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[72, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[72, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.wave_q"]], "prx_draggaussian (class in iqm.pulse.gates.prx)": [[73, "iqm.pulse.gates.prx.PRX_DRAGGaussian"]], "dependent_waves (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[73, "iqm.pulse.gates.prx.PRX_DRAGGaussian.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[73, "iqm.pulse.gates.prx.PRX_DRAGGaussian.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[73, "iqm.pulse.gates.prx.PRX_DRAGGaussian.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[73, "iqm.pulse.gates.prx.PRX_DRAGGaussian.wave_q"]], "prx_draggaussiansx (class in iqm.pulse.gates.prx)": [[74, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX"]], "dependent_waves (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[74, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[74, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[74, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[74, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.wave_q"]], "prx_gateimplementation (class in iqm.pulse.gates.prx)": [[75, "iqm.pulse.gates.prx.PRX_GateImplementation"]], "_call() (iqm.pulse.gates.prx.prx_gateimplementation method)": [[75, "iqm.pulse.gates.prx.PRX_GateImplementation._call"]], "clifford() (iqm.pulse.gates.prx.prx_gateimplementation method)": [[75, "iqm.pulse.gates.prx.PRX_GateImplementation.clifford"]], "get_locus_mapping_name() (iqm.pulse.gates.prx.prx_gateimplementation class method)": [[75, "iqm.pulse.gates.prx.PRX_GateImplementation.get_locus_mapping_name"]], "rx() (iqm.pulse.gates.prx.prx_gateimplementation method)": [[75, "iqm.pulse.gates.prx.PRX_GateImplementation.rx"]], "ry() (iqm.pulse.gates.prx.prx_gateimplementation method)": [[75, "iqm.pulse.gates.prx.PRX_GateImplementation.ry"]], "prx_singlepulse_gateimplementation (class in iqm.pulse.gates.prx)": [[76, "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation"]], "_call() (iqm.pulse.gates.prx.prx_singlepulse_gateimplementation method)": [[76, "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation._call"]], "iq_pulse (iqm.pulse.gates.prx.prx_singlepulse_gateimplementation property)": [[76, "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation.iq_pulse"]], "get_unitary_prx() (in module iqm.pulse.gates.prx)": [[77, "iqm.pulse.gates.prx.get_unitary_prx"]], "register_implementation() (in module iqm.pulse.gates)": [[78, "iqm.pulse.gates.register_implementation"]], "iqm.pulse.gates.reset": [[79, "module-iqm.pulse.gates.reset"]], "reset_feedback_key (in module iqm.pulse.gates.reset)": [[80, "iqm.pulse.gates.reset.RESET_FEEDBACK_KEY"]], "reset_measurement_key (in module iqm.pulse.gates.reset)": [[81, "iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY"]], "reset_conditional (class in iqm.pulse.gates.reset)": [[82, "iqm.pulse.gates.reset.Reset_Conditional"]], "_call() (iqm.pulse.gates.reset.reset_conditional method)": [[82, "iqm.pulse.gates.reset.Reset_Conditional._call"]], "get_locus_mapping_name() (iqm.pulse.gates.reset.reset_conditional class method)": [[82, "iqm.pulse.gates.reset.Reset_Conditional.get_locus_mapping_name"]], "registered_gates (iqm.pulse.gates.reset.reset_conditional attribute)": [[82, "iqm.pulse.gates.reset.Reset_Conditional.registered_gates"]], "reset_wait (class in iqm.pulse.gates.reset)": [[83, "iqm.pulse.gates.reset.Reset_Wait"]], "_call() (iqm.pulse.gates.reset.reset_wait method)": [[83, "iqm.pulse.gates.reset.Reset_Wait._call"]], "duration_in_seconds() (iqm.pulse.gates.reset.reset_wait method)": [[83, "iqm.pulse.gates.reset.Reset_Wait.duration_in_seconds"]], "get_custom_locus_mapping() (iqm.pulse.gates.reset.reset_wait class method)": [[83, "iqm.pulse.gates.reset.Reset_Wait.get_custom_locus_mapping"]], "parameters (iqm.pulse.gates.reset.reset_wait attribute)": [[83, "iqm.pulse.gates.reset.Reset_Wait.parameters"]], "wait_box() (iqm.pulse.gates.reset.reset_wait method)": [[83, "iqm.pulse.gates.reset.Reset_Wait.wait_box"]], "iqm.pulse.gates.rz": [[84, "module-iqm.pulse.gates.rz"]], "rz_acstarkshift (class in iqm.pulse.gates.rz)": [[85, "iqm.pulse.gates.rz.RZ_ACStarkShift"]], "_ac_stark_pulse() (iqm.pulse.gates.rz.rz_acstarkshift class method)": [[85, "iqm.pulse.gates.rz.RZ_ACStarkShift._ac_stark_pulse"]], "_call() (iqm.pulse.gates.rz.rz_acstarkshift method)": [[85, "iqm.pulse.gates.rz.RZ_ACStarkShift._call"]], "duration_in_seconds() (iqm.pulse.gates.rz.rz_acstarkshift method)": [[85, "iqm.pulse.gates.rz.RZ_ACStarkShift.duration_in_seconds"]], "rz_acstarkshift_cosinerisefall (class in iqm.pulse.gates.rz)": [[86, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall"]], "ac_stark_waveform (iqm.pulse.gates.rz.rz_acstarkshift_cosinerisefall attribute)": [[86, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.ac_stark_waveform"]], "parameters (iqm.pulse.gates.rz.rz_acstarkshift_cosinerisefall attribute)": [[86, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.parameters"]], "symmetric (iqm.pulse.gates.rz.rz_acstarkshift_cosinerisefall attribute)": [[86, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.symmetric"]], "rz_virtual (class in iqm.pulse.gates.rz)": [[87, "iqm.pulse.gates.rz.RZ_Virtual"]], "_call() (iqm.pulse.gates.rz.rz_virtual method)": [[87, "iqm.pulse.gates.rz.RZ_Virtual._call"]], "duration_in_seconds() (iqm.pulse.gates.rz.rz_virtual method)": [[87, "iqm.pulse.gates.rz.RZ_Virtual.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.rz.rz_virtual class method)": [[87, "iqm.pulse.gates.rz.RZ_Virtual.get_locus_mapping_name"]], "parameters (iqm.pulse.gates.rz.rz_virtual attribute)": [[87, "iqm.pulse.gates.rz.RZ_Virtual.parameters"]], "get_unitary_rz() (in module iqm.pulse.gates.rz)": [[88, "iqm.pulse.gates.rz.get_unitary_rz"]], "iqm.pulse.gates.sx": [[89, "module-iqm.pulse.gates.sx"]], "sxgate (class in iqm.pulse.gates.sx)": [[90, "iqm.pulse.gates.sx.SXGate"]], "_call() (iqm.pulse.gates.sx.sxgate method)": [[90, "iqm.pulse.gates.sx.SXGate._call"]], "registered_gates (iqm.pulse.gates.sx.sxgate attribute)": [[90, "iqm.pulse.gates.sx.SXGate.registered_gates"]], "iqm.pulse.gates.u": [[91, "module-iqm.pulse.gates.u"]], "ugate (class in iqm.pulse.gates.u)": [[92, "iqm.pulse.gates.u.UGate"]], "_call() (iqm.pulse.gates.u.ugate method)": [[92, "iqm.pulse.gates.u.UGate._call"]], "registered_gates (iqm.pulse.gates.u.ugate attribute)": [[92, "iqm.pulse.gates.u.UGate.registered_gates"]], "get_unitary_u() (in module iqm.pulse.gates.u)": [[93, "iqm.pulse.gates.u.get_unitary_u"]], "iqm.pulse.playlist": [[94, "module-iqm.pulse.playlist"]], "iqm.pulse.playlist.channel": [[95, "module-iqm.pulse.playlist.channel"]], "channelconfiguration (class in iqm.pulse.playlist.channel)": [[96, "iqm.pulse.playlist.channel.ChannelConfiguration"]], "channeldescription (class in iqm.pulse.playlist.channel)": [[97, "iqm.pulse.playlist.channel.ChannelDescription"]], "add_instruction() (iqm.pulse.playlist.channel.channeldescription method)": [[97, "iqm.pulse.playlist.channel.ChannelDescription.add_instruction"]], "channelproperties (class in iqm.pulse.playlist.channel)": [[98, "iqm.pulse.playlist.channel.ChannelProperties"]], "blocks_component (iqm.pulse.playlist.channel.channelproperties attribute)": [[98, "iqm.pulse.playlist.channel.ChannelProperties.blocks_component"]], "compatible_instructions (iqm.pulse.playlist.channel.channelproperties attribute)": [[98, "iqm.pulse.playlist.channel.ChannelProperties.compatible_instructions"]], "duration_to_int_samples() (iqm.pulse.playlist.channel.channelproperties method)": [[98, "iqm.pulse.playlist.channel.ChannelProperties.duration_to_int_samples"]], "duration_to_samples() (iqm.pulse.playlist.channel.channelproperties method)": [[98, "iqm.pulse.playlist.channel.ChannelProperties.duration_to_samples"]], "duration_to_seconds() (iqm.pulse.playlist.channel.channelproperties method)": [[98, "iqm.pulse.playlist.channel.ChannelProperties.duration_to_seconds"]], "instruction_duration_granularity (iqm.pulse.playlist.channel.channelproperties attribute)": [[98, "iqm.pulse.playlist.channel.ChannelProperties.instruction_duration_granularity"]], "instruction_duration_min (iqm.pulse.playlist.channel.channelproperties attribute)": [[98, "iqm.pulse.playlist.channel.ChannelProperties.instruction_duration_min"]], "is_iq (iqm.pulse.playlist.channel.channelproperties attribute)": [[98, "iqm.pulse.playlist.channel.ChannelProperties.is_iq"]], "is_virtual (iqm.pulse.playlist.channel.channelproperties attribute)": [[98, "iqm.pulse.playlist.channel.ChannelProperties.is_virtual"]], "round_duration_to_granularity() (iqm.pulse.playlist.channel.channelproperties method)": [[98, "iqm.pulse.playlist.channel.ChannelProperties.round_duration_to_granularity"]], "sample_rate (iqm.pulse.playlist.channel.channelproperties attribute)": [[98, "iqm.pulse.playlist.channel.ChannelProperties.sample_rate"]], "iqchannelconfig (class in iqm.pulse.playlist.channel)": [[99, "iqm.pulse.playlist.channel.IQChannelConfig"]], "frequency (iqm.pulse.playlist.channel.iqchannelconfig attribute)": [[99, "iqm.pulse.playlist.channel.IQChannelConfig.frequency"]], "probechannelproperties (class in iqm.pulse.playlist.channel)": [[100, "iqm.pulse.playlist.channel.ProbeChannelProperties"]], "center_frequency (iqm.pulse.playlist.channel.probechannelproperties attribute)": [[100, "iqm.pulse.playlist.channel.ProbeChannelProperties.center_frequency"]], "integration_start_dead_time (iqm.pulse.playlist.channel.probechannelproperties attribute)": [[100, "iqm.pulse.playlist.channel.ProbeChannelProperties.integration_start_dead_time"]], "integration_stop_dead_time (iqm.pulse.playlist.channel.probechannelproperties attribute)": [[100, "iqm.pulse.playlist.channel.ProbeChannelProperties.integration_stop_dead_time"]], "realchannelconfig (class in iqm.pulse.playlist.channel)": [[101, "iqm.pulse.playlist.channel.RealChannelConfig"]], "sample_rate (iqm.pulse.playlist.channel.realchannelconfig attribute)": [[101, "iqm.pulse.playlist.channel.RealChannelConfig.sample_rate"]], "get_channel_properties() (in module iqm.pulse.playlist.channel)": [[102, "iqm.pulse.playlist.channel.get_channel_properties"]], "get_channel_properties_from_station_settings() (in module iqm.pulse.playlist.channel)": [[103, "iqm.pulse.playlist.channel.get_channel_properties_from_station_settings"]], "iqm.pulse.playlist.instructions": [[104, "module-iqm.pulse.playlist.instructions"]], "acquisitionmethod (class in iqm.pulse.playlist.instructions)": [[105, "iqm.pulse.playlist.instructions.AcquisitionMethod"]], "delay_samples (iqm.pulse.playlist.instructions.acquisitionmethod attribute)": [[105, "iqm.pulse.playlist.instructions.AcquisitionMethod.delay_samples"]], "label (iqm.pulse.playlist.instructions.acquisitionmethod attribute)": [[105, "iqm.pulse.playlist.instructions.AcquisitionMethod.label"]], "block (class in iqm.pulse.playlist.instructions)": [[106, "iqm.pulse.playlist.instructions.Block"]], "complexintegration (class in iqm.pulse.playlist.instructions)": [[107, "iqm.pulse.playlist.instructions.ComplexIntegration"]], "weights (iqm.pulse.playlist.instructions.complexintegration attribute)": [[107, "iqm.pulse.playlist.instructions.ComplexIntegration.weights"]], "conditionalinstruction (class in iqm.pulse.playlist.instructions)": [[108, "iqm.pulse.playlist.instructions.ConditionalInstruction"]], "condition (iqm.pulse.playlist.instructions.conditionalinstruction attribute)": [[108, "iqm.pulse.playlist.instructions.ConditionalInstruction.condition"]], "get_child_instructions() (iqm.pulse.playlist.instructions.conditionalinstruction method)": [[108, "iqm.pulse.playlist.instructions.ConditionalInstruction.get_child_instructions"]], "outcomes (iqm.pulse.playlist.instructions.conditionalinstruction attribute)": [[108, "iqm.pulse.playlist.instructions.ConditionalInstruction.outcomes"]], "validate() (iqm.pulse.playlist.instructions.conditionalinstruction method)": [[108, "iqm.pulse.playlist.instructions.ConditionalInstruction.validate"]], "iqpulse (class in iqm.pulse.playlist.instructions)": [[109, "iqm.pulse.playlist.instructions.IQPulse"]], "get_waveforms() (iqm.pulse.playlist.instructions.iqpulse method)": [[109, "iqm.pulse.playlist.instructions.IQPulse.get_waveforms"]], "modulation_frequency (iqm.pulse.playlist.instructions.iqpulse attribute)": [[109, "iqm.pulse.playlist.instructions.IQPulse.modulation_frequency"]], "phase (iqm.pulse.playlist.instructions.iqpulse attribute)": [[109, "iqm.pulse.playlist.instructions.IQPulse.phase"]], "phase_increment (iqm.pulse.playlist.instructions.iqpulse attribute)": [[109, "iqm.pulse.playlist.instructions.IQPulse.phase_increment"]], "scale_i (iqm.pulse.playlist.instructions.iqpulse attribute)": [[109, "iqm.pulse.playlist.instructions.IQPulse.scale_i"]], "scale_q (iqm.pulse.playlist.instructions.iqpulse attribute)": [[109, "iqm.pulse.playlist.instructions.IQPulse.scale_q"]], "validate() (iqm.pulse.playlist.instructions.iqpulse method)": [[109, "iqm.pulse.playlist.instructions.IQPulse.validate"]], "wave_i (iqm.pulse.playlist.instructions.iqpulse attribute)": [[109, "iqm.pulse.playlist.instructions.IQPulse.wave_i"]], "wave_q (iqm.pulse.playlist.instructions.iqpulse attribute)": [[109, "iqm.pulse.playlist.instructions.IQPulse.wave_q"]], "instruction (class in iqm.pulse.playlist.instructions)": [[110, "iqm.pulse.playlist.instructions.Instruction"]], "copy() (iqm.pulse.playlist.instructions.instruction method)": [[110, "iqm.pulse.playlist.instructions.Instruction.copy"]], "duration (iqm.pulse.playlist.instructions.instruction attribute)": [[110, "iqm.pulse.playlist.instructions.Instruction.duration"]], "get_child_instructions() (iqm.pulse.playlist.instructions.instruction method)": [[110, "iqm.pulse.playlist.instructions.Instruction.get_child_instructions"]], "get_waveforms() (iqm.pulse.playlist.instructions.instruction method)": [[110, "iqm.pulse.playlist.instructions.Instruction.get_waveforms"]], "validate() (iqm.pulse.playlist.instructions.instruction method)": [[110, "iqm.pulse.playlist.instructions.Instruction.validate"]], "multiplexediqpulse (class in iqm.pulse.playlist.instructions)": [[111, "iqm.pulse.playlist.instructions.MultiplexedIQPulse"]], "entries (iqm.pulse.playlist.instructions.multiplexediqpulse attribute)": [[111, "iqm.pulse.playlist.instructions.MultiplexedIQPulse.entries"]], "readouttrigger (class in iqm.pulse.playlist.instructions)": [[112, "iqm.pulse.playlist.instructions.ReadoutTrigger"]], "acquisitions (iqm.pulse.playlist.instructions.readouttrigger attribute)": [[112, "iqm.pulse.playlist.instructions.ReadoutTrigger.acquisitions"]], "probe_pulse (iqm.pulse.playlist.instructions.readouttrigger attribute)": [[112, "iqm.pulse.playlist.instructions.ReadoutTrigger.probe_pulse"]], "realpulse (class in iqm.pulse.playlist.instructions)": [[113, "iqm.pulse.playlist.instructions.RealPulse"]], "get_waveforms() (iqm.pulse.playlist.instructions.realpulse method)": [[113, "iqm.pulse.playlist.instructions.RealPulse.get_waveforms"]], "scale (iqm.pulse.playlist.instructions.realpulse attribute)": [[113, "iqm.pulse.playlist.instructions.RealPulse.scale"]], "validate() (iqm.pulse.playlist.instructions.realpulse method)": [[113, "iqm.pulse.playlist.instructions.RealPulse.validate"]], "wave (iqm.pulse.playlist.instructions.realpulse attribute)": [[113, "iqm.pulse.playlist.instructions.RealPulse.wave"]], "thresholdstatediscrimination (class in iqm.pulse.playlist.instructions)": [[114, "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination"]], "feedback_signal_label (iqm.pulse.playlist.instructions.thresholdstatediscrimination attribute)": [[114, "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination.feedback_signal_label"]], "threshold (iqm.pulse.playlist.instructions.thresholdstatediscrimination attribute)": [[114, "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination.threshold"]], "timetrace (class in iqm.pulse.playlist.instructions)": [[115, "iqm.pulse.playlist.instructions.TimeTrace"]], "duration_samples (iqm.pulse.playlist.instructions.timetrace attribute)": [[115, "iqm.pulse.playlist.instructions.TimeTrace.duration_samples"]], "virtualrz (class in iqm.pulse.playlist.instructions)": [[116, "iqm.pulse.playlist.instructions.VirtualRZ"]], "phase_increment (iqm.pulse.playlist.instructions.virtualrz attribute)": [[116, "iqm.pulse.playlist.instructions.VirtualRZ.phase_increment"]], "wait (class in iqm.pulse.playlist.instructions)": [[117, "iqm.pulse.playlist.instructions.Wait"]], "iqm.pulse.playlist.playlist": [[118, "module-iqm.pulse.playlist.playlist"]], "iqm.pulse.playlist.schedule": [[119, "module-iqm.pulse.playlist.schedule"]], "nothing (class in iqm.pulse.playlist.schedule)": [[120, "iqm.pulse.playlist.schedule.Nothing"]], "schedule (class in iqm.pulse.playlist.schedule)": [[121, "iqm.pulse.playlist.schedule.Schedule"]], "add_channels() (iqm.pulse.playlist.schedule.schedule method)": [[121, "iqm.pulse.playlist.schedule.Schedule.add_channels"]], "append() (iqm.pulse.playlist.schedule.schedule method)": [[121, "iqm.pulse.playlist.schedule.Schedule.append"]], "channels() (iqm.pulse.playlist.schedule.schedule method)": [[121, "iqm.pulse.playlist.schedule.Schedule.channels"]], "cleanup() (iqm.pulse.playlist.schedule.schedule method)": [[121, "iqm.pulse.playlist.schedule.Schedule.cleanup"]], "copy() (iqm.pulse.playlist.schedule.schedule method)": [[121, "iqm.pulse.playlist.schedule.Schedule.copy"]], "duration (iqm.pulse.playlist.schedule.schedule property)": [[121, "iqm.pulse.playlist.schedule.Schedule.duration"]], "duration_in_seconds() (iqm.pulse.playlist.schedule.schedule method)": [[121, "iqm.pulse.playlist.schedule.Schedule.duration_in_seconds"]], "extend() (iqm.pulse.playlist.schedule.schedule method)": [[121, "iqm.pulse.playlist.schedule.Schedule.extend"]], "front_pad() (iqm.pulse.playlist.schedule.schedule method)": [[121, "iqm.pulse.playlist.schedule.Schedule.front_pad"]], "front_pad_in_seconds() (iqm.pulse.playlist.schedule.schedule method)": [[121, "iqm.pulse.playlist.schedule.Schedule.front_pad_in_seconds"]], "has_content_in() (iqm.pulse.playlist.schedule.schedule method)": [[121, "iqm.pulse.playlist.schedule.Schedule.has_content_in"]], "items() (iqm.pulse.playlist.schedule.schedule method)": [[121, "iqm.pulse.playlist.schedule.Schedule.items"]], "pad_to_hard_box() (iqm.pulse.playlist.schedule.schedule method)": [[121, "iqm.pulse.playlist.schedule.Schedule.pad_to_hard_box"]], "pad_to_hard_box_in_seconds() (iqm.pulse.playlist.schedule.schedule method)": [[121, "iqm.pulse.playlist.schedule.Schedule.pad_to_hard_box_in_seconds"]], "pprint() (iqm.pulse.playlist.schedule.schedule method)": [[121, "iqm.pulse.playlist.schedule.Schedule.pprint"]], "reverse() (iqm.pulse.playlist.schedule.schedule method)": [[121, "iqm.pulse.playlist.schedule.Schedule.reverse"]], "reverse_hard_box() (iqm.pulse.playlist.schedule.schedule method)": [[121, "iqm.pulse.playlist.schedule.Schedule.reverse_hard_box"]], "validate() (iqm.pulse.playlist.schedule.schedule method)": [[121, "iqm.pulse.playlist.schedule.Schedule.validate"]], "segment (class in iqm.pulse.playlist.schedule)": [[122, "iqm.pulse.playlist.schedule.Segment"]], "_duration (iqm.pulse.playlist.schedule.segment attribute)": [[122, "iqm.pulse.playlist.schedule.Segment._duration"]], "_instructions (iqm.pulse.playlist.schedule.segment attribute)": [[122, "iqm.pulse.playlist.schedule.Segment._instructions"]], "append() (iqm.pulse.playlist.schedule.segment method)": [[122, "iqm.pulse.playlist.schedule.Segment.append"]], "copy() (iqm.pulse.playlist.schedule.segment method)": [[122, "iqm.pulse.playlist.schedule.Segment.copy"]], "duration (iqm.pulse.playlist.schedule.segment property)": [[122, "iqm.pulse.playlist.schedule.Segment.duration"]], "extend() (iqm.pulse.playlist.schedule.segment method)": [[122, "iqm.pulse.playlist.schedule.Segment.extend"]], "pop() (iqm.pulse.playlist.schedule.segment method)": [[122, "iqm.pulse.playlist.schedule.Segment.pop"]], "prepend() (iqm.pulse.playlist.schedule.segment method)": [[122, "iqm.pulse.playlist.schedule.Segment.prepend"]], "tolerance (in module iqm.pulse.playlist.schedule)": [[123, "iqm.pulse.playlist.schedule.TOLERANCE"]], "iqm.pulse.playlist.visualisation": [[124, "module-iqm.pulse.playlist.visualisation"]], "iqm.pulse.playlist.visualisation.base": [[125, "module-iqm.pulse.playlist.visualisation.base"]], "inspect_playlist() (in module iqm.pulse.playlist.visualisation.base)": [[126, "iqm.pulse.playlist.visualisation.base.inspect_playlist"]], "iqm.pulse.playlist.waveforms": [[127, "module-iqm.pulse.playlist.waveforms"]], "chirp (class in iqm.pulse.playlist.waveforms)": [[128, "iqm.pulse.playlist.waveforms.Chirp"]], "_sample() (iqm.pulse.playlist.waveforms.chirp method)": [[128, "iqm.pulse.playlist.waveforms.Chirp._sample"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.chirp static method)": [[128, "iqm.pulse.playlist.waveforms.Chirp.non_timelike_attributes"]], "chirpimag (class in iqm.pulse.playlist.waveforms)": [[129, "iqm.pulse.playlist.waveforms.ChirpImag"]], "phase (iqm.pulse.playlist.waveforms.chirpimag attribute)": [[129, "iqm.pulse.playlist.waveforms.ChirpImag.phase"]], "cosine (class in iqm.pulse.playlist.waveforms)": [[130, "iqm.pulse.playlist.waveforms.Cosine"]], "_sample() (iqm.pulse.playlist.waveforms.cosine method)": [[130, "iqm.pulse.playlist.waveforms.Cosine._sample"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.cosine static method)": [[130, "iqm.pulse.playlist.waveforms.Cosine.non_timelike_attributes"]], "cosinerisefallderivative (class in iqm.pulse.playlist.waveforms)": [[131, "iqm.pulse.playlist.waveforms.CosineRiseFallDerivative"]], "_sample() (iqm.pulse.playlist.waveforms.cosinerisefallderivative method)": [[131, "iqm.pulse.playlist.waveforms.CosineRiseFallDerivative._sample"]], "modulatedcosinerisefall (class in iqm.pulse.playlist.waveforms)": [[132, "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall"]], "_sample() (iqm.pulse.playlist.waveforms.modulatedcosinerisefall method)": [[132, "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall._sample"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.modulatedcosinerisefall static method)": [[132, "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall.non_timelike_attributes"]], "slepian (class in iqm.pulse.playlist.waveforms)": [[133, "iqm.pulse.playlist.waveforms.Slepian"]], "_sample() (iqm.pulse.playlist.waveforms.slepian method)": [[133, "iqm.pulse.playlist.waveforms.Slepian._sample"]], "_sample_normalized_slepian() (iqm.pulse.playlist.waveforms.slepian method)": [[133, "iqm.pulse.playlist.waveforms.Slepian._sample_normalized_slepian"]], "_t_tau() (iqm.pulse.playlist.waveforms.slepian method)": [[133, "iqm.pulse.playlist.waveforms.Slepian._t_tau"]], "_theta_tau() (iqm.pulse.playlist.waveforms.slepian method)": [[133, "iqm.pulse.playlist.waveforms.Slepian._theta_tau"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.slepian static method)": [[133, "iqm.pulse.playlist.waveforms.Slepian.non_timelike_attributes"]], "iqm.pulse.quantum_ops": [[134, "module-iqm.pulse.quantum_ops"]], "quantumop (class in iqm.pulse.quantum_ops)": [[135, "iqm.pulse.quantum_ops.QuantumOp"]], "arity (iqm.pulse.quantum_ops.quantumop attribute)": [[135, "iqm.pulse.quantum_ops.QuantumOp.arity"]], "copy() (iqm.pulse.quantum_ops.quantumop method)": [[135, "iqm.pulse.quantum_ops.QuantumOp.copy"]], "default_implementation (iqm.pulse.quantum_ops.quantumop property)": [[135, "iqm.pulse.quantum_ops.QuantumOp.default_implementation"]], "defaults_for_locus (iqm.pulse.quantum_ops.quantumop attribute)": [[135, "iqm.pulse.quantum_ops.QuantumOp.defaults_for_locus"]], "factorizable (iqm.pulse.quantum_ops.quantumop attribute)": [[135, "iqm.pulse.quantum_ops.QuantumOp.factorizable"]], "get_default_implementation_for_locus() (iqm.pulse.quantum_ops.quantumop method)": [[135, "iqm.pulse.quantum_ops.QuantumOp.get_default_implementation_for_locus"]], "implementations (iqm.pulse.quantum_ops.quantumop attribute)": [[135, "iqm.pulse.quantum_ops.QuantumOp.implementations"]], "name (iqm.pulse.quantum_ops.quantumop attribute)": [[135, "iqm.pulse.quantum_ops.QuantumOp.name"]], "params (iqm.pulse.quantum_ops.quantumop attribute)": [[135, "iqm.pulse.quantum_ops.QuantumOp.params"]], "set_default_implementation() (iqm.pulse.quantum_ops.quantumop method)": [[135, "iqm.pulse.quantum_ops.QuantumOp.set_default_implementation"]], "set_default_implementation_for_locus() (iqm.pulse.quantum_ops.quantumop method)": [[135, "iqm.pulse.quantum_ops.QuantumOp.set_default_implementation_for_locus"]], "symmetric (iqm.pulse.quantum_ops.quantumop attribute)": [[135, "iqm.pulse.quantum_ops.QuantumOp.symmetric"]], "unitary (iqm.pulse.quantum_ops.quantumop attribute)": [[135, "iqm.pulse.quantum_ops.QuantumOp.unitary"]], "quantumoptable (in module iqm.pulse.quantum_ops)": [[136, "iqm.pulse.quantum_ops.QuantumOpTable"]], "validate_locus_calibration() (in module iqm.pulse.quantum_ops)": [[137, "iqm.pulse.quantum_ops.validate_locus_calibration"]], "validate_op_calibration() (in module iqm.pulse.quantum_ops)": [[138, "iqm.pulse.quantum_ops.validate_op_calibration"]], "iqm.pulse.scheduler": [[139, "module-iqm.pulse.scheduler"]], "blocking (in module iqm.pulse.scheduler)": [[140, "iqm.pulse.scheduler.BLOCKING"]], "nonsolid (in module iqm.pulse.scheduler)": [[141, "iqm.pulse.scheduler.NONSOLID"]], "segmentpointer (class in iqm.pulse.scheduler)": [[142, "iqm.pulse.scheduler.SegmentPointer"]], "tol (iqm.pulse.scheduler.segmentpointer attribute)": [[142, "iqm.pulse.scheduler.SegmentPointer.TOL"]], "cut_tail() (iqm.pulse.scheduler.segmentpointer method)": [[142, "iqm.pulse.scheduler.SegmentPointer.cut_tail"]], "fastforward() (iqm.pulse.scheduler.segmentpointer method)": [[142, "iqm.pulse.scheduler.SegmentPointer.fastforward"]], "frac (iqm.pulse.scheduler.segmentpointer attribute)": [[142, "iqm.pulse.scheduler.SegmentPointer.frac"]], "get() (iqm.pulse.scheduler.segmentpointer method)": [[142, "iqm.pulse.scheduler.SegmentPointer.get"]], "idx (iqm.pulse.scheduler.segmentpointer attribute)": [[142, "iqm.pulse.scheduler.SegmentPointer.idx"]], "next() (iqm.pulse.scheduler.segmentpointer method)": [[142, "iqm.pulse.scheduler.SegmentPointer.next"]], "remainder (iqm.pulse.scheduler.segmentpointer property)": [[142, "iqm.pulse.scheduler.SegmentPointer.remainder"]], "rewind() (iqm.pulse.scheduler.segmentpointer method)": [[142, "iqm.pulse.scheduler.SegmentPointer.rewind"]], "source (iqm.pulse.scheduler.segmentpointer attribute)": [[142, "iqm.pulse.scheduler.SegmentPointer.source"]], "tail() (iqm.pulse.scheduler.segmentpointer method)": [[142, "iqm.pulse.scheduler.SegmentPointer.tail"]], "extend_hard_boundary() (in module iqm.pulse.scheduler)": [[143, "iqm.pulse.scheduler.extend_hard_boundary"]], "extend_hard_boundary_in_seconds() (in module iqm.pulse.scheduler)": [[144, "iqm.pulse.scheduler.extend_hard_boundary_in_seconds"]], "extend_schedule() (in module iqm.pulse.scheduler)": [[145, "iqm.pulse.scheduler.extend_schedule"]], "extend_schedule_new() (in module iqm.pulse.scheduler)": [[146, "iqm.pulse.scheduler.extend_schedule_new"]], "iqm.pulse.timebox": [[147, "module-iqm.pulse.timebox"]], "multiplexedprobetimebox (class in iqm.pulse.timebox)": [[148, "iqm.pulse.timebox.MultiplexedProbeTimeBox"]], "from_readout_trigger() (iqm.pulse.timebox.multiplexedprobetimebox static method)": [[148, "iqm.pulse.timebox.MultiplexedProbeTimeBox.from_readout_trigger"]], "hard_boundary (iqm.pulse.timebox.schedulingalgorithm attribute)": [[149, "iqm.pulse.timebox.SchedulingAlgorithm.HARD_BOUNDARY"]], "schedulingalgorithm (class in iqm.pulse.timebox)": [[149, "iqm.pulse.timebox.SchedulingAlgorithm"]], "tetris (iqm.pulse.timebox.schedulingalgorithm attribute)": [[149, "iqm.pulse.timebox.SchedulingAlgorithm.TETRIS"]], "alap (iqm.pulse.timebox.schedulingstrategy attribute)": [[150, "iqm.pulse.timebox.SchedulingStrategy.ALAP"]], "asap (iqm.pulse.timebox.schedulingstrategy attribute)": [[150, "iqm.pulse.timebox.SchedulingStrategy.ASAP"]], "schedulingstrategy (class in iqm.pulse.timebox)": [[150, "iqm.pulse.timebox.SchedulingStrategy"]], "timebox (class in iqm.pulse.timebox)": [[151, "iqm.pulse.timebox.TimeBox"]], "atom (iqm.pulse.timebox.timebox attribute)": [[151, "iqm.pulse.timebox.TimeBox.atom"]], "atomic() (iqm.pulse.timebox.timebox static method)": [[151, "iqm.pulse.timebox.TimeBox.atomic"]], "children (iqm.pulse.timebox.timebox attribute)": [[151, "iqm.pulse.timebox.TimeBox.children"]], "composite() (iqm.pulse.timebox.timebox static method)": [[151, "iqm.pulse.timebox.TimeBox.composite"]], "label (iqm.pulse.timebox.timebox attribute)": [[151, "iqm.pulse.timebox.TimeBox.label"]], "locus_components (iqm.pulse.timebox.timebox attribute)": [[151, "iqm.pulse.timebox.TimeBox.locus_components"]], "neighborhood_components (iqm.pulse.timebox.timebox attribute)": [[151, "iqm.pulse.timebox.TimeBox.neighborhood_components"]], "print() (iqm.pulse.timebox.timebox method)": [[151, "iqm.pulse.timebox.TimeBox.print"]], "scheduling (iqm.pulse.timebox.timebox attribute)": [[151, "iqm.pulse.timebox.TimeBox.scheduling"]], "scheduling_algorithm (iqm.pulse.timebox.timebox attribute)": [[151, "iqm.pulse.timebox.TimeBox.scheduling_algorithm"]], "set_alap() (iqm.pulse.timebox.timebox method)": [[151, "iqm.pulse.timebox.TimeBox.set_alap"]], "set_asap() (iqm.pulse.timebox.timebox method)": [[151, "iqm.pulse.timebox.TimeBox.set_asap"]], "validate() (iqm.pulse.timebox.timebox method)": [[151, "iqm.pulse.timebox.TimeBox.validate"]], "iqm.pulse.utils": [[152, "module-iqm.pulse.utils"]], "load_yaml() (in module iqm.pulse.utils)": [[153, "iqm.pulse.utils.load_yaml"]], "map_waveform_param_types() (in module iqm.pulse.utils)": [[154, "iqm.pulse.utils.map_waveform_param_types"]], "merge_dicts() (in module iqm.pulse.utils)": [[155, "iqm.pulse.utils.merge_dicts"]], "normalize_angle() (in module iqm.pulse.utils)": [[156, "iqm.pulse.utils.normalize_angle"]], "phase_transformation() (in module iqm.pulse.utils)": [[157, "iqm.pulse.utils.phase_transformation"]], "iqm.pulse.validation": [[158, "module-iqm.pulse.validation"]], "awgschedulevalidationdata (class in iqm.pulse.validation)": [[159, "iqm.pulse.validation.AWGScheduleValidationData"]], "awgschedulevalidationerror": [[160, "iqm.pulse.validation.AWGScheduleValidationError"]], "invalidinstructionerror": [[161, "iqm.pulse.validation.InvalidInstructionError"]], "playlistvalidationerror": [[162, "iqm.pulse.validation.PlaylistValidationError"]], "validate_awg_and_schedule_compatibility() (in module iqm.pulse.validation)": [[163, "iqm.pulse.validation.validate_awg_and_schedule_compatibility"]], "validate_channel() (in module iqm.pulse.validation)": [[164, "iqm.pulse.validation.validate_channel"]], "validate_instruction_and_wf_length() (in module iqm.pulse.validation)": [[165, "iqm.pulse.validation.validate_instruction_and_wf_length"]], "validate_playlist_compatibility() (in module iqm.pulse.validation)": [[166, "iqm.pulse.validation.validate_playlist_compatibility"]]}})