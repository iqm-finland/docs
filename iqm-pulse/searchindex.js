Search.setIndex({"docnames": ["API", "api/iqm.pulse", "api/iqm.pulse.builder", "api/iqm.pulse.builder.CircuitOperation", "api/iqm.pulse.builder.ScheduleBuilder", "api/iqm.pulse.builder.build_quantum_ops", "api/iqm.pulse.builder.load_config", "api/iqm.pulse.builder.validate_quantum_circuit", "api/iqm.pulse.circuit_operations", "api/iqm.pulse.circuit_operations.CircuitOperationList", "api/iqm.pulse.circuit_operations.get_unitary_from_circuit", "api/iqm.pulse.circuit_operations.get_unitary_from_op", "api/iqm.pulse.circuit_operations.reorder", "api/iqm.pulse.circuit_operations.reshape_unitary", "api/iqm.pulse.gate_implementation", "api/iqm.pulse.gate_implementation.CompositeCache", "api/iqm.pulse.gate_implementation.CompositeGate", "api/iqm.pulse.gate_implementation.CustomIQWaveforms", "api/iqm.pulse.gate_implementation.GateImplementation", "api/iqm.pulse.gate_implementation.Locus", "api/iqm.pulse.gate_implementation.NestedParams", "api/iqm.pulse.gate_implementation.OCalibrationData", "api/iqm.pulse.gate_implementation.OICalibrationData", "api/iqm.pulse.gate_implementation.OILCalibrationData", "api/iqm.pulse.gate_implementation.OpCalibrationDataTree", "api/iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SinglePulseGate", "api/iqm.pulse.gate_implementation.get_waveform_parameters", "api/iqm.pulse.gates", "api/iqm.pulse.gates.barrier", "api/iqm.pulse.gates.barrier.Barrier", "api/iqm.pulse.gates.conditional", "api/iqm.pulse.gates.conditional.CCPRX_Composite", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian", "api/iqm.pulse.gates.cz", "api/iqm.pulse.gates.cz.CZ_CRF", "api/iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF", "api/iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare", "api/iqm.pulse.gates.cz.CZ_Slepian", "api/iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF", "api/iqm.pulse.gates.cz.CZ_Slepian_CRF", "api/iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare", "api/iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate", "api/iqm.pulse.gates.cz.FluxPulseGate", "api/iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF", "api/iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF", "api/iqm.pulse.gates.delay", "api/iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS", "api/iqm.pulse.gates.delay.Delay", "api/iqm.pulse.gates.enums", "api/iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES", "api/iqm.pulse.gates.enums.TwoQubitGate", "api/iqm.pulse.gates.enums.XYGATE_UNITARIES", "api/iqm.pulse.gates.enums.XYGate", "api/iqm.pulse.gates.expose_implementation", "api/iqm.pulse.gates.get_implementation_class", "api/iqm.pulse.gates.measure", "api/iqm.pulse.gates.measure.Measure_Constant", "api/iqm.pulse.gates.measure.Measure_CustomWaveforms", "api/iqm.pulse.gates.measure.ProbePulse_CustomWaveforms", "api/iqm.pulse.gates.move", "api/iqm.pulse.gates.move.MOVE_CRF_CRF", "api/iqm.pulse.gates.move.MOVE_CustomWaveforms", "api/iqm.pulse.gates.move.MOVE_TGSS_CRF", "api/iqm.pulse.gates.move.MoveMarker", "api/iqm.pulse.gates.move.apply_move_gate_phase_corrections", "api/iqm.pulse.gates.move.validate_move_instructions", "api/iqm.pulse.gates.prx", "api/iqm.pulse.gates.prx.PRX_CustomWaveforms", "api/iqm.pulse.gates.prx.PRX_CustomWaveformsSX", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX", "api/iqm.pulse.gates.prx.PRX_DRAGGaussian", "api/iqm.pulse.gates.prx.PRX_DRAGGaussianSX", "api/iqm.pulse.gates.prx.PRX_GateImplementation", "api/iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation", "api/iqm.pulse.gates.prx.get_unitary_prx", "api/iqm.pulse.gates.register_implementation", "api/iqm.pulse.gates.reset", "api/iqm.pulse.gates.reset.RESET_FEEDBACK_KEY", "api/iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY", "api/iqm.pulse.gates.reset.Reset_Conditional", "api/iqm.pulse.gates.reset.Reset_Wait", "api/iqm.pulse.gates.rz", "api/iqm.pulse.gates.rz.RZ_ACStarkShift", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall", "api/iqm.pulse.gates.rz.RZ_Virtual", "api/iqm.pulse.gates.rz.get_unitary_rz", "api/iqm.pulse.gates.sx", "api/iqm.pulse.gates.sx.SXGate", "api/iqm.pulse.gates.u", "api/iqm.pulse.gates.u.UGate", "api/iqm.pulse.gates.u.get_unitary_u", "api/iqm.pulse.playlist", "api/iqm.pulse.playlist.channel", "api/iqm.pulse.playlist.channel.ChannelConfiguration", "api/iqm.pulse.playlist.channel.ChannelDescription", "api/iqm.pulse.playlist.channel.ChannelProperties", "api/iqm.pulse.playlist.channel.IQChannelConfig", "api/iqm.pulse.playlist.channel.ProbeChannelProperties", "api/iqm.pulse.playlist.channel.RealChannelConfig", "api/iqm.pulse.playlist.channel.get_channel_properties", "api/iqm.pulse.playlist.channel.get_channel_properties_from_station_settings", "api/iqm.pulse.playlist.channel.round_duration_to_granularity_samples", "api/iqm.pulse.playlist.instructions", "api/iqm.pulse.playlist.instructions.AcquisitionMethod", "api/iqm.pulse.playlist.instructions.Block", "api/iqm.pulse.playlist.instructions.ComplexIntegration", "api/iqm.pulse.playlist.instructions.ConditionalInstruction", "api/iqm.pulse.playlist.instructions.IQPulse", "api/iqm.pulse.playlist.instructions.Instruction", "api/iqm.pulse.playlist.instructions.MultiplexedIQPulse", "api/iqm.pulse.playlist.instructions.ReadoutTrigger", "api/iqm.pulse.playlist.instructions.RealPulse", "api/iqm.pulse.playlist.instructions.ThresholdStateDiscrimination", "api/iqm.pulse.playlist.instructions.TimeTrace", "api/iqm.pulse.playlist.instructions.VirtualRZ", "api/iqm.pulse.playlist.instructions.Wait", "api/iqm.pulse.playlist.playlist", "api/iqm.pulse.playlist.schedule", "api/iqm.pulse.playlist.schedule.Nothing", "api/iqm.pulse.playlist.schedule.Schedule", "api/iqm.pulse.playlist.schedule.Segment", "api/iqm.pulse.playlist.schedule.TOLERANCE", "api/iqm.pulse.playlist.visualisation", "api/iqm.pulse.playlist.visualisation.base", "api/iqm.pulse.playlist.visualisation.base.inspect_playlist", "api/iqm.pulse.playlist.waveforms", "api/iqm.pulse.playlist.waveforms.Chirp", "api/iqm.pulse.playlist.waveforms.ChirpImag", "api/iqm.pulse.playlist.waveforms.Cosine", "api/iqm.pulse.playlist.waveforms.CosineRiseFallDerivative", "api/iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall", "api/iqm.pulse.playlist.waveforms.Slepian", "api/iqm.pulse.quantum_ops", "api/iqm.pulse.quantum_ops.QuantumOp", "api/iqm.pulse.quantum_ops.QuantumOpTable", "api/iqm.pulse.quantum_ops.validate_locus_calibration", "api/iqm.pulse.quantum_ops.validate_op_calibration", "api/iqm.pulse.scheduler", "api/iqm.pulse.scheduler.BLOCKING", "api/iqm.pulse.scheduler.NONSOLID", "api/iqm.pulse.scheduler.SegmentPointer", "api/iqm.pulse.scheduler.extend_hard_boundary", "api/iqm.pulse.scheduler.extend_hard_boundary_in_seconds", "api/iqm.pulse.scheduler.extend_schedule", "api/iqm.pulse.scheduler.extend_schedule_new", "api/iqm.pulse.timebox", "api/iqm.pulse.timebox.MultiplexedProbeTimeBox", "api/iqm.pulse.timebox.SchedulingAlgorithm", "api/iqm.pulse.timebox.SchedulingStrategy", "api/iqm.pulse.timebox.TimeBox", "api/iqm.pulse.utils", "api/iqm.pulse.utils.load_yaml", "api/iqm.pulse.utils.map_waveform_param_types", "api/iqm.pulse.utils.merge_dicts", "api/iqm.pulse.utils.normalize_angle", "api/iqm.pulse.utils.phase_transformation", "api/iqm.pulse.validation", "api/iqm.pulse.validation.AWGScheduleValidationData", "api/iqm.pulse.validation.AWGScheduleValidationError", "api/iqm.pulse.validation.InvalidInstructionError", "api/iqm.pulse.validation.PlaylistValidationError", "api/iqm.pulse.validation.validate_awg_and_schedule_compatibility", "api/iqm.pulse.validation.validate_channel", "api/iqm.pulse.validation.validate_instruction_and_wf_length", "api/iqm.pulse.validation.validate_playlist_compatibility", "changelog", "concepts", "custom_gates", "index", "license", "pulse_timing", "references", "using_builder"], "filenames": ["API.rst", "api/iqm.pulse.rst", "api/iqm.pulse.builder.rst", "api/iqm.pulse.builder.CircuitOperation.rst", "api/iqm.pulse.builder.ScheduleBuilder.rst", "api/iqm.pulse.builder.build_quantum_ops.rst", "api/iqm.pulse.builder.load_config.rst", "api/iqm.pulse.builder.validate_quantum_circuit.rst", "api/iqm.pulse.circuit_operations.rst", "api/iqm.pulse.circuit_operations.CircuitOperationList.rst", "api/iqm.pulse.circuit_operations.get_unitary_from_circuit.rst", "api/iqm.pulse.circuit_operations.get_unitary_from_op.rst", "api/iqm.pulse.circuit_operations.reorder.rst", "api/iqm.pulse.circuit_operations.reshape_unitary.rst", "api/iqm.pulse.gate_implementation.rst", "api/iqm.pulse.gate_implementation.CompositeCache.rst", "api/iqm.pulse.gate_implementation.CompositeGate.rst", "api/iqm.pulse.gate_implementation.CustomIQWaveforms.rst", "api/iqm.pulse.gate_implementation.GateImplementation.rst", "api/iqm.pulse.gate_implementation.Locus.rst", "api/iqm.pulse.gate_implementation.NestedParams.rst", "api/iqm.pulse.gate_implementation.OCalibrationData.rst", "api/iqm.pulse.gate_implementation.OICalibrationData.rst", "api/iqm.pulse.gate_implementation.OILCalibrationData.rst", "api/iqm.pulse.gate_implementation.OpCalibrationDataTree.rst", "api/iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SinglePulseGate.rst", "api/iqm.pulse.gate_implementation.get_waveform_parameters.rst", "api/iqm.pulse.gates.rst", "api/iqm.pulse.gates.barrier.rst", "api/iqm.pulse.gates.barrier.Barrier.rst", "api/iqm.pulse.gates.conditional.rst", "api/iqm.pulse.gates.conditional.CCPRX_Composite.rst", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall.rst", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian.rst", "api/iqm.pulse.gates.cz.rst", "api/iqm.pulse.gates.cz.CZ_CRF.rst", "api/iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.rst", "api/iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.rst", "api/iqm.pulse.gates.cz.CZ_Slepian.rst", "api/iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.rst", "api/iqm.pulse.gates.cz.CZ_Slepian_CRF.rst", "api/iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.rst", "api/iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.rst", "api/iqm.pulse.gates.cz.FluxPulseGate.rst", "api/iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.rst", "api/iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.rst", "api/iqm.pulse.gates.delay.rst", "api/iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS.rst", "api/iqm.pulse.gates.delay.Delay.rst", "api/iqm.pulse.gates.enums.rst", "api/iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES.rst", "api/iqm.pulse.gates.enums.TwoQubitGate.rst", "api/iqm.pulse.gates.enums.XYGATE_UNITARIES.rst", "api/iqm.pulse.gates.enums.XYGate.rst", "api/iqm.pulse.gates.expose_implementation.rst", "api/iqm.pulse.gates.get_implementation_class.rst", "api/iqm.pulse.gates.measure.rst", "api/iqm.pulse.gates.measure.Measure_Constant.rst", "api/iqm.pulse.gates.measure.Measure_CustomWaveforms.rst", "api/iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.rst", "api/iqm.pulse.gates.move.rst", "api/iqm.pulse.gates.move.MOVE_CRF_CRF.rst", "api/iqm.pulse.gates.move.MOVE_CustomWaveforms.rst", "api/iqm.pulse.gates.move.MOVE_TGSS_CRF.rst", "api/iqm.pulse.gates.move.MoveMarker.rst", "api/iqm.pulse.gates.move.apply_move_gate_phase_corrections.rst", "api/iqm.pulse.gates.move.validate_move_instructions.rst", "api/iqm.pulse.gates.prx.rst", "api/iqm.pulse.gates.prx.PRX_CustomWaveforms.rst", "api/iqm.pulse.gates.prx.PRX_CustomWaveformsSX.rst", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.rst", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.rst", "api/iqm.pulse.gates.prx.PRX_DRAGGaussian.rst", "api/iqm.pulse.gates.prx.PRX_DRAGGaussianSX.rst", "api/iqm.pulse.gates.prx.PRX_GateImplementation.rst", "api/iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation.rst", "api/iqm.pulse.gates.prx.get_unitary_prx.rst", "api/iqm.pulse.gates.register_implementation.rst", "api/iqm.pulse.gates.reset.rst", "api/iqm.pulse.gates.reset.RESET_FEEDBACK_KEY.rst", "api/iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY.rst", "api/iqm.pulse.gates.reset.Reset_Conditional.rst", "api/iqm.pulse.gates.reset.Reset_Wait.rst", "api/iqm.pulse.gates.rz.rst", "api/iqm.pulse.gates.rz.RZ_ACStarkShift.rst", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.rst", "api/iqm.pulse.gates.rz.RZ_Virtual.rst", "api/iqm.pulse.gates.rz.get_unitary_rz.rst", "api/iqm.pulse.gates.sx.rst", "api/iqm.pulse.gates.sx.SXGate.rst", "api/iqm.pulse.gates.u.rst", "api/iqm.pulse.gates.u.UGate.rst", "api/iqm.pulse.gates.u.get_unitary_u.rst", "api/iqm.pulse.playlist.rst", "api/iqm.pulse.playlist.channel.rst", "api/iqm.pulse.playlist.channel.ChannelConfiguration.rst", "api/iqm.pulse.playlist.channel.ChannelDescription.rst", "api/iqm.pulse.playlist.channel.ChannelProperties.rst", "api/iqm.pulse.playlist.channel.IQChannelConfig.rst", "api/iqm.pulse.playlist.channel.ProbeChannelProperties.rst", "api/iqm.pulse.playlist.channel.RealChannelConfig.rst", "api/iqm.pulse.playlist.channel.get_channel_properties.rst", "api/iqm.pulse.playlist.channel.get_channel_properties_from_station_settings.rst", "api/iqm.pulse.playlist.channel.round_duration_to_granularity_samples.rst", "api/iqm.pulse.playlist.instructions.rst", "api/iqm.pulse.playlist.instructions.AcquisitionMethod.rst", "api/iqm.pulse.playlist.instructions.Block.rst", "api/iqm.pulse.playlist.instructions.ComplexIntegration.rst", "api/iqm.pulse.playlist.instructions.ConditionalInstruction.rst", "api/iqm.pulse.playlist.instructions.IQPulse.rst", "api/iqm.pulse.playlist.instructions.Instruction.rst", "api/iqm.pulse.playlist.instructions.MultiplexedIQPulse.rst", "api/iqm.pulse.playlist.instructions.ReadoutTrigger.rst", "api/iqm.pulse.playlist.instructions.RealPulse.rst", "api/iqm.pulse.playlist.instructions.ThresholdStateDiscrimination.rst", "api/iqm.pulse.playlist.instructions.TimeTrace.rst", "api/iqm.pulse.playlist.instructions.VirtualRZ.rst", "api/iqm.pulse.playlist.instructions.Wait.rst", "api/iqm.pulse.playlist.playlist.rst", "api/iqm.pulse.playlist.schedule.rst", "api/iqm.pulse.playlist.schedule.Nothing.rst", "api/iqm.pulse.playlist.schedule.Schedule.rst", "api/iqm.pulse.playlist.schedule.Segment.rst", "api/iqm.pulse.playlist.schedule.TOLERANCE.rst", "api/iqm.pulse.playlist.visualisation.rst", "api/iqm.pulse.playlist.visualisation.base.rst", "api/iqm.pulse.playlist.visualisation.base.inspect_playlist.rst", "api/iqm.pulse.playlist.waveforms.rst", "api/iqm.pulse.playlist.waveforms.Chirp.rst", "api/iqm.pulse.playlist.waveforms.ChirpImag.rst", "api/iqm.pulse.playlist.waveforms.Cosine.rst", "api/iqm.pulse.playlist.waveforms.CosineRiseFallDerivative.rst", "api/iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall.rst", "api/iqm.pulse.playlist.waveforms.Slepian.rst", "api/iqm.pulse.quantum_ops.rst", "api/iqm.pulse.quantum_ops.QuantumOp.rst", "api/iqm.pulse.quantum_ops.QuantumOpTable.rst", "api/iqm.pulse.quantum_ops.validate_locus_calibration.rst", "api/iqm.pulse.quantum_ops.validate_op_calibration.rst", "api/iqm.pulse.scheduler.rst", "api/iqm.pulse.scheduler.BLOCKING.rst", "api/iqm.pulse.scheduler.NONSOLID.rst", "api/iqm.pulse.scheduler.SegmentPointer.rst", "api/iqm.pulse.scheduler.extend_hard_boundary.rst", "api/iqm.pulse.scheduler.extend_hard_boundary_in_seconds.rst", "api/iqm.pulse.scheduler.extend_schedule.rst", "api/iqm.pulse.scheduler.extend_schedule_new.rst", "api/iqm.pulse.timebox.rst", "api/iqm.pulse.timebox.MultiplexedProbeTimeBox.rst", "api/iqm.pulse.timebox.SchedulingAlgorithm.rst", "api/iqm.pulse.timebox.SchedulingStrategy.rst", "api/iqm.pulse.timebox.TimeBox.rst", "api/iqm.pulse.utils.rst", "api/iqm.pulse.utils.load_yaml.rst", "api/iqm.pulse.utils.map_waveform_param_types.rst", "api/iqm.pulse.utils.merge_dicts.rst", "api/iqm.pulse.utils.normalize_angle.rst", "api/iqm.pulse.utils.phase_transformation.rst", "api/iqm.pulse.validation.rst", "api/iqm.pulse.validation.AWGScheduleValidationData.rst", "api/iqm.pulse.validation.AWGScheduleValidationError.rst", "api/iqm.pulse.validation.InvalidInstructionError.rst", "api/iqm.pulse.validation.PlaylistValidationError.rst", "api/iqm.pulse.validation.validate_awg_and_schedule_compatibility.rst", "api/iqm.pulse.validation.validate_channel.rst", "api/iqm.pulse.validation.validate_instruction_and_wf_length.rst", "api/iqm.pulse.validation.validate_playlist_compatibility.rst", "changelog.rst", "concepts.rst", "custom_gates.rst", "index.rst", "license.rst", "pulse_timing.rst", "references.rst", "using_builder.rst"], "titles": ["API Reference", "pulse", "builder", "CircuitOperation", "ScheduleBuilder", "iqm.pulse.builder.build_quantum_ops", "iqm.pulse.builder.load_config", "iqm.pulse.builder.validate_quantum_circuit", "circuit_operations", "CircuitOperationList", "iqm.pulse.circuit_operations.get_unitary_from_circuit", "iqm.pulse.circuit_operations.get_unitary_from_op", "iqm.pulse.circuit_operations.reorder", "iqm.pulse.circuit_operations.reshape_unitary", "gate_implementation", "CompositeCache", "CompositeGate", "CustomIQWaveforms", "GateImplementation", "iqm.pulse.gate_implementation.Locus", "iqm.pulse.gate_implementation.NestedParams", "iqm.pulse.gate_implementation.OCalibrationData", "iqm.pulse.gate_implementation.OICalibrationData", "iqm.pulse.gate_implementation.OILCalibrationData", "iqm.pulse.gate_implementation.OpCalibrationDataTree", "iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING", "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING", "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING", "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING", "SinglePulseGate", "iqm.pulse.gate_implementation.get_waveform_parameters", "gates", "barrier", "Barrier", "conditional", "CCPRX_Composite", "CCPRX_Composite_DRAGCosineRiseFall", "CCPRX_Composite_DRAGGaussian", "cz", "CZ_CRF", "CZ_CRF_ACStarkCRF", "CZ_GaussianSmoothedSquare", "CZ_Slepian", "CZ_Slepian_ACStarkCRF", "CZ_Slepian_CRF", "CZ_TruncatedGaussianSmoothedSquare", "CouplerFluxPulseQubitACStarkPulseGate", "FluxPulseGate", "FluxPulseGate_CRF_CRF", "FluxPulseGate_TGSS_CRF", "delay", "iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS", "Delay", "enums", "iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES", "TwoQubitGate", "iqm.pulse.gates.enums.XYGATE_UNITARIES", "XYGate", "iqm.pulse.gates.expose_implementation", "iqm.pulse.gates.get_implementation_class", "measure", "Measure_Constant", "Measure_CustomWaveforms", "ProbePulse_CustomWaveforms", "move", "MOVE_CRF_CRF", "MOVE_CustomWaveforms", "MOVE_TGSS_CRF", "MoveMarker", "iqm.pulse.gates.move.apply_move_gate_phase_corrections", "iqm.pulse.gates.move.validate_move_instructions", "prx", "PRX_CustomWaveforms", "PRX_CustomWaveformsSX", "PRX_DRAGCosineRiseFall", "PRX_DRAGCosineRiseFallSX", "PRX_DRAGGaussian", "PRX_DRAGGaussianSX", "PRX_GateImplementation", "PRX_SinglePulse_GateImplementation", "iqm.pulse.gates.prx.get_unitary_prx", "iqm.pulse.gates.register_implementation", "reset", "iqm.pulse.gates.reset.RESET_FEEDBACK_KEY", "iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY", "Reset_Conditional", "Reset_Wait", "rz", "RZ_ACStarkShift", "RZ_ACStarkShift_CosineRiseFall", "RZ_Virtual", "iqm.pulse.gates.rz.get_unitary_rz", "sx", "SXGate", "u", "UGate", "iqm.pulse.gates.u.get_unitary_u", "playlist", "channel", "ChannelConfiguration", "ChannelDescription", "ChannelProperties", "IQChannelConfig", "ProbeChannelProperties", "RealChannelConfig", "iqm.pulse.playlist.channel.get_channel_properties", "iqm.pulse.playlist.channel.get_channel_properties_from_station_settings", "iqm.pulse.playlist.channel.round_duration_to_granularity_samples", "instructions", "AcquisitionMethod", "Block", "ComplexIntegration", "ConditionalInstruction", "IQPulse", "Instruction", "MultiplexedIQPulse", "ReadoutTrigger", "RealPulse", "ThresholdStateDiscrimination", "TimeTrace", "VirtualRZ", "Wait", "playlist", "schedule", "Nothing", "Schedule", "Segment", "iqm.pulse.playlist.schedule.TOLERANCE", "visualisation", "base", "iqm.pulse.playlist.visualisation.base.inspect_playlist", "waveforms", "Chirp", "ChirpImag", "Cosine", "CosineRiseFallDerivative", "ModulatedCosineRiseFall", "Slepian", "quantum_ops", "QuantumOp", "iqm.pulse.quantum_ops.QuantumOpTable", "iqm.pulse.quantum_ops.validate_locus_calibration", "iqm.pulse.quantum_ops.validate_op_calibration", "scheduler", "iqm.pulse.scheduler.BLOCKING", "iqm.pulse.scheduler.NONSOLID", "SegmentPointer", "iqm.pulse.scheduler.extend_hard_boundary", "iqm.pulse.scheduler.extend_hard_boundary_in_seconds", "iqm.pulse.scheduler.extend_schedule", "iqm.pulse.scheduler.extend_schedule_new", "timebox", "MultiplexedProbeTimeBox", "SchedulingAlgorithm", "SchedulingStrategy", "TimeBox", "utils", "iqm.pulse.utils.load_yaml", "iqm.pulse.utils.map_waveform_param_types", "iqm.pulse.utils.merge_dicts", "iqm.pulse.utils.normalize_angle", "iqm.pulse.utils.phase_transformation", "validation", "AWGScheduleValidationData", "iqm.pulse.validation.AWGScheduleValidationError", "iqm.pulse.validation.InvalidInstructionError", "iqm.pulse.validation.PlaylistValidationError", "iqm.pulse.validation.validate_awg_and_schedule_compatibility", "iqm.pulse.validation.validate_channel", "iqm.pulse.validation.validate_instruction_and_wf_length", "iqm.pulse.validation.validate_playlist_compatibility", "Changelog", "Concepts and Classes", "Custom gate implementations", "IQM Pulse", "License", "Pulse timing", "References", "Using ScheduleBuilder"], "terms": {"control": [1, 4, 14, 27, 34, 35, 38, 40, 43, 50, 52, 55, 62, 97, 98, 100, 101, 106, 107, 108, 110, 114, 123, 124, 125, 149, 150, 155, 163, 167, 170, 171, 172, 173, 175, 176, 177, 178], "gate": [1, 4, 9, 15, 16, 17, 18, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 137, 139, 141, 161, 171, 172, 174, 176, 177, 178], "instruct": [1, 2, 4, 14, 18, 29, 30, 33, 47, 50, 52, 62, 63, 64, 66, 68, 69, 70, 78, 79, 86, 90, 97, 100, 101, 103, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 139, 143, 144, 145, 146, 148, 149, 150, 151, 152, 155, 161, 162, 165, 167, 169, 170, 171, 174, 176, 178], "schedul": [1, 2, 4, 14, 18, 29, 33, 46, 47, 52, 62, 63, 68, 69, 70, 73, 78, 79, 86, 88, 90, 97, 101, 110, 121, 122, 124, 126, 139, 146, 151, 152, 153, 154, 155, 162, 164, 171, 173, 174, 176], "quantum": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 18, 19, 21, 22, 23, 24, 29, 31, 32, 33, 46, 47, 50, 52, 62, 63, 66, 70, 78, 81, 82, 85, 86, 88, 90, 97, 114, 138, 139, 140, 142, 161, 171, 172, 173, 174, 178], "comput": [1, 3, 4, 14, 29, 62, 66, 85, 94, 97, 101, 114, 125, 126, 139, 143, 147, 148, 155, 161, 171, 172, 173, 174, 175, 178], "full": [1, 2, 8, 14, 31, 32, 34, 38, 50, 53, 60, 64, 71, 82, 87, 92, 94, 97, 98, 108, 122, 123, 128, 129, 131, 136, 138, 143, 151, 156, 162, 171, 173], "path": [1, 2, 6, 8, 14, 18, 31, 32, 34, 38, 50, 53, 60, 64, 71, 82, 87, 92, 94, 97, 98, 108, 122, 123, 125, 128, 129, 131, 138, 143, 151, 155, 156, 157, 159, 162, 171], "iqm": [1, 2, 3, 4, 8, 9, 14, 15, 16, 17, 18, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 146, 151, 152, 153, 154, 155, 156, 162, 163, 171, 172, 175, 176, 178], "subpackag": [1, 31, 97, 128], "modul": [1, 3, 4, 9, 14, 15, 16, 17, 18, 29, 31, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 57, 61, 62, 63, 65, 66, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 82, 85, 86, 88, 89, 90, 93, 95, 97, 99, 100, 101, 102, 103, 104, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 146, 152, 153, 154, 155, 163, 172, 173, 174], "tool": [2, 143, 146, 174], "build": [2, 4, 5, 16, 18, 62, 63, 69, 72, 73, 74, 75, 152, 155, 173], "puls": [2, 3, 4, 8, 9, 14, 15, 16, 17, 18, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 146, 151, 152, 153, 154, 155, 156, 162, 163, 171, 172, 173, 178], "function": [2, 4, 5, 8, 11, 14, 18, 29, 31, 33, 46, 47, 64, 66, 71, 79, 85, 86, 87, 88, 94, 98, 105, 106, 129, 137, 138, 139, 143, 155, 156, 162, 171, 173], "class": [2, 3, 4, 8, 9, 14, 15, 16, 17, 18, 20, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 151, 152, 153, 154, 155, 162, 163, 171, 174, 175], "inherit": [2, 8, 14, 16, 17, 18, 29, 32, 33, 34, 38, 46, 47, 50, 53, 60, 62, 63, 64, 66, 71, 72, 73, 74, 75, 78, 82, 85, 86, 87, 88, 90, 92, 94, 98, 108, 123, 131, 138, 143, 151, 162, 171, 173], "circuitoper": [2, 4, 7, 8, 9, 10, 11, 70, 171], "schedulebuild": [2, 9, 16, 17, 18, 29, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 61, 62, 63, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 88, 89, 90, 93, 95, 155, 171, 172, 173, 174], "builder": [3, 4, 9, 16, 17, 18, 29, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 61, 62, 63, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 88, 89, 90, 93, 95, 171, 172, 173, 176, 178], "name": [3, 4, 5, 9, 15, 16, 17, 18, 19, 21, 24, 25, 26, 27, 28, 29, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 55, 57, 59, 61, 62, 63, 65, 66, 67, 72, 73, 74, 75, 76, 77, 78, 79, 81, 85, 86, 88, 89, 90, 93, 95, 100, 106, 125, 139, 140, 141, 148, 152, 153, 154, 155, 171, 172, 173, 175, 178], "locu": [3, 4, 9, 16, 17, 18, 23, 25, 26, 27, 28, 29, 31, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 61, 62, 63, 65, 66, 67, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 88, 89, 90, 93, 95, 139, 141, 152, 155, 171, 172, 173, 176, 178], "arg": [3, 4, 9, 18, 29, 33, 46, 47, 66, 85, 86, 88, 173], "factori": [3, 4, 101, 103, 139, 152, 155], "implement": [3, 4, 9, 10, 14, 15, 16, 17, 18, 21, 22, 23, 29, 31, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 58, 59, 61, 62, 63, 65, 66, 67, 69, 72, 73, 74, 75, 76, 77, 78, 79, 81, 85, 86, 88, 89, 90, 93, 95, 125, 139, 141, 142, 161, 171, 172, 174, 176, 177, 178], "none": [3, 4, 6, 7, 9, 10, 15, 16, 18, 21, 22, 24, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 55, 57, 58, 59, 61, 62, 63, 65, 66, 67, 72, 73, 74, 75, 76, 77, 81, 86, 89, 114, 125, 126, 139, 141, 142, 146, 147, 148, 149, 150, 152, 153, 154, 155, 159, 168, 170, 171, 173], "base": [3, 4, 9, 15, 16, 17, 18, 29, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 55, 57, 61, 62, 63, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 88, 89, 90, 93, 95, 99, 100, 101, 102, 103, 104, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 132, 133, 134, 135, 136, 137, 139, 146, 152, 153, 154, 155, 163, 171, 175, 176], "object": [3, 4, 9, 15, 30, 99, 100, 101, 109, 114, 125, 126, 139, 146, 155, 163, 171, 173, 175], "specif": [3, 4, 16, 18, 29, 31, 32, 33, 46, 47, 50, 66, 79, 85, 86, 88, 90, 100, 125, 137, 139, 163, 167, 171, 172, 173, 175, 178], "oper": [3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 16, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 32, 33, 35, 36, 37, 46, 47, 51, 52, 62, 63, 64, 66, 78, 81, 82, 84, 85, 86, 88, 90, 138, 139, 140, 141, 142, 155, 163, 171, 172, 173, 174, 176, 178], "appli": [3, 4, 35, 47, 52, 64, 66, 68, 69, 79, 86, 114, 139, 173, 175, 176, 178], "part": [3, 4, 18, 118, 133, 135, 136, 139, 146, 155, 171, 172, 173, 175, 176, 178], "qpu": [3, 4, 18, 19, 33, 121, 139, 147, 151, 155, 172, 173, 178], "e": [3, 4, 16, 17, 18, 29, 33, 46, 47, 52, 61, 62, 63, 66, 71, 72, 73, 74, 75, 76, 77, 79, 81, 86, 87, 88, 90, 92, 94, 132, 134, 136, 137, 139, 143, 147, 148, 149, 150, 155, 171, 173, 177], "g": [3, 4, 16, 17, 18, 29, 33, 46, 47, 52, 61, 62, 63, 72, 73, 74, 75, 76, 77, 81, 86, 88, 90, 132, 134, 136, 137, 147, 148, 155, 171, 173, 177], "circuit": [3, 4, 7, 8, 9, 10, 11, 52, 62, 70, 86, 90, 139, 171, 172, 173, 174, 176, 178], "attribut": [3, 4, 9, 14, 16, 17, 18, 29, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 57, 61, 62, 63, 65, 66, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 82, 85, 86, 88, 89, 90, 93, 95, 100, 101, 102, 103, 104, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 132, 133, 134, 135, 136, 137, 138, 139, 143, 146, 152, 153, 154, 155, 163, 171, 173, 175, 176], "method": [3, 4, 9, 15, 16, 17, 18, 29, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 55, 57, 61, 62, 63, 65, 66, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 81, 85, 86, 88, 89, 90, 93, 95, 99, 100, 101, 102, 103, 104, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 132, 133, 134, 135, 136, 137, 139, 146, 152, 153, 154, 155, 163, 171, 173, 178], "paramet": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 29, 30, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 58, 59, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 88, 89, 90, 91, 93, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 130, 132, 133, 134, 135, 136, 137, 139, 141, 142, 146, 147, 148, 149, 150, 152, 155, 157, 158, 159, 160, 161, 163, 167, 168, 169, 170, 171, 172, 173, 178], "str": [3, 4, 5, 6, 7, 9, 10, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 59, 61, 62, 63, 65, 66, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 81, 85, 86, 88, 89, 90, 93, 95, 100, 101, 105, 109, 111, 112, 118, 119, 125, 130, 132, 134, 136, 137, 139, 140, 141, 147, 148, 149, 150, 152, 155, 157, 170, 173], "tupl": [3, 4, 6, 13, 15, 16, 18, 19, 21, 22, 24, 62, 63, 86, 101, 103, 105, 112, 113, 114, 115, 116, 117, 125, 139, 141, 152, 155, 158, 161, 163, 173], "dict": [3, 4, 5, 6, 7, 10, 11, 16, 17, 18, 20, 21, 22, 23, 24, 30, 36, 37, 47, 62, 63, 66, 72, 73, 81, 86, 90, 105, 125, 132, 134, 136, 137, 139, 140, 147, 148, 149, 150, 152, 155, 157, 159, 170, 171, 173], "ani": [3, 4, 5, 6, 9, 15, 16, 18, 21, 22, 23, 24, 29, 33, 46, 47, 62, 63, 66, 81, 85, 86, 88, 115, 124, 125, 137, 139, 147, 148, 152, 155, 157, 171, 172, 173, 175, 178], "inform": [3, 4, 30, 70, 139, 172, 173, 175, 176, 178], "bear": 3, "compon": [3, 4, 18, 19, 26, 27, 28, 33, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 62, 65, 66, 67, 85, 86, 89, 101, 106, 115, 121, 137, 139, 147, 148, 152, 155, 171, 172, 173, 178], "qubit": [3, 4, 9, 10, 11, 12, 13, 29, 32, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 55, 57, 61, 62, 64, 65, 66, 67, 68, 69, 71, 73, 78, 79, 82, 86, 87, 88, 90, 92, 94, 137, 139, 147, 148, 171, 172, 173, 176, 177, 178], "reson": [3, 64, 65, 66, 67, 68, 69, 88, 95, 101, 147, 148, 161, 171, 172, 177, 178], "act": [3, 4, 11, 12, 13, 16, 18, 19, 31, 50, 52, 63, 66, 85, 86, 90, 139, 147, 148, 171, 172, 173, 175, 176, 178], "argument": [3, 9, 10, 15, 18, 29, 33, 35, 46, 47, 62, 63, 73, 86, 88, 90, 139, 171, 173, 178], "valid": [3, 4, 7, 64, 70, 112, 113, 114, 117, 125, 141, 142, 155, 163, 171, 178], "op_tabl": [3, 4, 7, 9, 16, 36, 37, 85, 93, 95, 173], "against": [3, 4, 118, 142, 175, 178], "tabl": [3, 5, 7, 9, 10, 11, 100, 140, 171], "definit": [3, 4, 5, 6, 10, 17, 33, 63, 66, 96, 131, 139, 140, 171, 172, 173, 175], "quantumop": [3, 4, 5, 6, 7, 9, 10, 11, 16, 17, 18, 29, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 61, 62, 63, 65, 66, 67, 72, 73, 74, 75, 76, 77, 78, 79, 81, 85, 86, 88, 89, 90, 93, 95, 138, 140, 141, 171, 174, 178], "contain": [3, 4, 7, 9, 17, 18, 35, 62, 63, 70, 86, 100, 112, 113, 114, 117, 125, 139, 152, 155, 167, 171, 172, 173, 175, 178], "allow": [3, 4, 7, 9, 16, 18, 36, 37, 50, 81, 90, 101, 115, 125, 147, 171, 172, 173, 176, 178], "rais": [3, 4, 7, 58, 70, 101, 112, 113, 114, 117, 132, 139, 141, 142, 157, 158, 164, 165, 166, 172], "valueerror": [3, 4, 7, 70, 101, 112, 113, 114, 117, 139, 141, 142, 158], "i": [3, 4, 5, 9, 11, 12, 15, 16, 17, 18, 19, 29, 30, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 85, 86, 87, 88, 89, 90, 92, 94, 101, 112, 113, 114, 115, 117, 118, 125, 126, 127, 132, 134, 135, 136, 137, 139, 141, 142, 143, 146, 147, 148, 149, 150, 155, 161, 167, 170, 171, 172, 173, 174, 175, 176, 178], "return": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 18, 29, 30, 33, 35, 46, 47, 52, 55, 58, 59, 62, 63, 66, 69, 70, 72, 73, 74, 75, 78, 79, 80, 81, 85, 86, 88, 90, 91, 93, 95, 96, 100, 101, 105, 106, 107, 109, 112, 113, 114, 117, 125, 126, 130, 132, 134, 135, 136, 137, 139, 141, 142, 146, 147, 148, 149, 150, 152, 155, 157, 158, 159, 160, 161, 168, 170, 171, 173], "type": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 29, 30, 33, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 55, 57, 58, 59, 61, 62, 63, 65, 66, 67, 69, 70, 72, 73, 74, 75, 78, 79, 80, 81, 85, 86, 88, 89, 90, 91, 93, 95, 96, 100, 101, 103, 105, 106, 107, 112, 113, 114, 117, 125, 126, 127, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 146, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, 160, 161, 163, 168, 170, 173, 175], "calibr": [4, 6, 7, 15, 16, 17, 18, 21, 22, 23, 24, 29, 31, 35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 61, 62, 63, 65, 66, 67, 72, 73, 74, 75, 76, 77, 79, 85, 86, 89, 90, 93, 95, 132, 134, 136, 137, 139, 141, 142, 171, 172, 178], "chip_topologi": [4, 18, 86, 105, 106, 173, 178], "channel": [4, 17, 18, 29, 30, 33, 35, 47, 50, 52, 61, 62, 63, 68, 69, 72, 73, 74, 75, 76, 77, 79, 82, 85, 86, 88, 90, 99, 100, 101, 102, 103, 104, 110, 113, 114, 120, 124, 125, 126, 143, 147, 148, 149, 150, 152, 153, 155, 167, 168, 170, 171, 172, 173, 176, 178], "component_channel": 4, "out": [4, 9, 72, 74, 172, 173, 175, 176], "individu": [4, 51, 139, 172, 175], "encapsul": [4, 18, 31, 70, 178], "known": [4, 5, 58, 81, 125, 137, 139, 140, 142, 173], "op": [4, 5, 10, 11, 14, 16, 18, 139, 140, 141, 142], "them": [4, 9, 10, 63, 86, 90, 139, 155, 171, 173, 174, 178], "topologi": [4, 106, 178], "properti": [4, 9, 18, 64, 79, 81, 98, 100, 101, 105, 106, 125, 126, 139, 146, 148, 149, 150, 171, 178], "quantumopt": [4, 9, 10, 11, 142, 171, 173], "opcalibrationdatatre": [4, 142], "data": [4, 6, 15, 16, 18, 21, 22, 23, 24, 29, 31, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 61, 62, 63, 65, 66, 67, 72, 73, 74, 75, 76, 77, 79, 86, 89, 90, 100, 109, 132, 134, 136, 137, 139, 141, 142, 163, 167, 170, 171, 172], "tree": [4, 6, 18, 106, 141, 142], "chiptopologi": [4, 18, 46, 47, 62, 63, 78, 85, 86, 90, 105, 106, 173], "chip": [4, 9, 106], "deriv": [4, 79, 135, 137, 173, 175], "from": [4, 5, 6, 9, 11, 15, 16, 17, 18, 35, 36, 37, 46, 47, 62, 66, 69, 73, 74, 75, 79, 85, 93, 95, 101, 106, 109, 115, 118, 125, 126, 130, 131, 132, 134, 135, 136, 137, 146, 148, 152, 155, 157, 159, 167, 171, 172, 173, 175, 176, 178], "chad": [4, 139], "channelproperti": [4, 18, 98, 103, 105, 107, 125, 148, 149, 150, 168, 170], "map": [4, 5, 9, 16, 18, 21, 22, 24, 25, 26, 27, 28, 36, 37, 46, 47, 54, 55, 56, 57, 62, 63, 78, 81, 85, 90, 100, 106, 112, 125, 132, 134, 136, 137, 139, 140, 148, 155, 158, 171, 173], "configur": [4, 5, 99, 102, 104, 167, 170, 175], "drive": [4, 18, 26, 29, 33, 35, 46, 47, 62, 68, 69, 79, 85, 88, 90, 95, 101, 120, 161, 171, 172, 173, 176], "flux": [4, 18, 27, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 65, 66, 67, 139, 171, 173], "readout": [4, 18, 28, 35, 61, 62, 63, 85, 109, 116, 125, 152, 171, 176], "respons": [4, 101, 104, 173, 175, 176], "_cach": 4, "gateimplement": [4, 14, 15, 16, 17, 20, 29, 30, 31, 32, 33, 34, 38, 46, 47, 50, 52, 58, 59, 60, 64, 66, 71, 78, 81, 82, 85, 86, 87, 88, 90, 92, 94, 139, 141, 155, 171, 174, 176, 178], "cach": [4, 13, 15, 18, 29, 33, 46, 47, 62, 66, 85, 86, 88, 125, 155, 171, 173], "The": [4, 9, 10, 15, 16, 17, 18, 19, 29, 31, 32, 33, 35, 38, 46, 47, 52, 62, 63, 64, 66, 68, 71, 73, 79, 81, 82, 83, 85, 86, 87, 88, 90, 92, 93, 94, 95, 113, 118, 120, 125, 130, 132, 134, 135, 136, 137, 139, 143, 147, 148, 149, 150, 155, 167, 169, 170, 171, 172, 173, 175, 176, 178], "ha": [4, 9, 15, 18, 27, 31, 35, 46, 62, 64, 66, 81, 86, 88, 90, 100, 114, 115, 118, 125, 132, 134, 135, 136, 137, 139, 147, 148, 149, 150, 155, 167, 170, 171, 172, 173, 175, 176, 178], "same": [4, 9, 18, 33, 35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 52, 62, 65, 66, 67, 68, 79, 81, 89, 107, 113, 118, 132, 134, 135, 136, 137, 148, 155, 167, 170, 171, 172, 173, 175, 176, 178], "structur": [4, 171], "composite_cach": 4, "compositeg": [4, 14, 15, 34, 35, 36, 37, 82, 85, 92, 93, 94, 95, 171, 173], "timebox": [4, 9, 15, 18, 29, 31, 33, 35, 46, 47, 52, 62, 63, 66, 73, 78, 79, 85, 86, 88, 90, 93, 95, 147, 152, 153, 154, 171, 173, 174, 176], "flush": [4, 15, 171], "whenev": [4, 15, 62, 171], "inject": 4, "_channel_to_compon": 4, "self": [4, 9, 16, 17, 18, 36, 37, 46, 47, 62, 63, 74, 75, 79, 85, 86, 93, 95, 125, 139, 146, 155, 172, 173], "invert": 4, "algorithm": [4, 143, 147, 149, 153, 155, 171, 173, 178], "perform": [4, 47, 111, 118, 125, 175], "thi": [4, 9, 15, 16, 17, 18, 29, 31, 33, 35, 36, 37, 46, 47, 52, 55, 57, 62, 63, 64, 66, 68, 72, 73, 74, 75, 78, 79, 81, 83, 84, 85, 86, 88, 90, 100, 101, 113, 115, 116, 118, 121, 125, 131, 132, 134, 135, 136, 137, 139, 143, 146, 147, 149, 150, 153, 155, 171, 172, 173, 175, 176, 178], "us": [4, 9, 14, 16, 17, 18, 31, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 52, 55, 57, 61, 62, 63, 65, 66, 67, 69, 72, 73, 79, 81, 83, 84, 85, 86, 88, 90, 93, 94, 95, 100, 101, 110, 118, 120, 121, 124, 125, 130, 132, 134, 136, 137, 139, 147, 148, 153, 155, 161, 167, 170, 171, 172, 173, 174, 175, 176, 177], "determin": [4, 30, 147, 155, 172, 175, 178], "block": [4, 33, 35, 47, 62, 63, 79, 85, 86, 101, 108, 121, 124, 145, 147, 148, 152, 155, 171, 172, 176, 178], "associ": [4, 9, 62, 86, 100, 101, 116, 118, 173, 175, 176], "onli": [4, 9, 16, 18, 33, 35, 39, 40, 41, 42, 43, 44, 45, 48, 49, 52, 57, 62, 63, 64, 65, 66, 67, 79, 85, 89, 101, 125, 137, 139, 146, 155, 171, 172, 175, 176, 177, 178], "ar": [4, 9, 16, 17, 18, 30, 32, 33, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 62, 65, 66, 67, 71, 73, 74, 75, 81, 89, 90, 94, 100, 101, 113, 115, 118, 125, 126, 132, 134, 135, 136, 137, 139, 142, 146, 147, 148, 149, 150, 153, 154, 155, 167, 170, 171, 172, 173, 174, 175, 176, 178], "includ": [4, 7, 15, 17, 62, 63, 66, 72, 73, 100, 139, 155, 171, 172, 173, 175], "non": [4, 9, 16, 18, 62, 82, 86, 132, 134, 136, 137, 158, 173, 175, 178], "certain": [4, 17, 46, 47, 74, 75, 101, 173, 178], "virtual": [4, 35, 47, 66, 68, 69, 86, 90, 95, 101, 171, 176, 178], "do": [4, 7, 9, 30, 90, 92, 101, 125, 131, 134, 147, 161, 171, 172, 173, 175, 178], "just": [4, 9, 15, 16, 29, 62, 73, 85, 139, 155, 171, 173], "themselv": [4, 63, 172, 173], "_channel_typ": 4, "probe": [4, 25, 33, 35, 61, 62, 63, 86, 103, 109, 116, 148, 152, 171, 173], "_require_scheduling_in_second": 4, "bool": [4, 7, 9, 16, 17, 18, 33, 39, 40, 41, 42, 43, 44, 45, 48, 49, 52, 58, 61, 62, 63, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 81, 89, 101, 103, 107, 125, 139, 146, 147, 148, 159, 171], "whether": [4, 11, 18, 70, 81, 101, 107, 147, 148, 159, 173, 175, 178], "requir": [4, 18, 20, 30, 39, 40, 41, 42, 43, 44, 45, 48, 49, 61, 62, 65, 66, 67, 74, 75, 76, 77, 79, 84, 86, 89, 90, 101, 132, 134, 136, 137, 139, 141, 142, 152, 161, 167, 170, 171, 172, 173, 175], "second": [4, 9, 10, 18, 29, 33, 35, 46, 47, 51, 52, 62, 63, 64, 86, 88, 90, 101, 125, 132, 134, 136, 137, 146, 148, 149, 150, 171, 173, 176, 178], "instead": [4, 18, 68, 121, 147, 171, 172, 173, 176, 178], "sampl": [4, 18, 30, 68, 101, 103, 104, 107, 109, 110, 113, 114, 115, 119, 121, 125, 126, 132, 134, 135, 136, 137, 147, 148, 152, 167, 170, 172, 173, 174], "can": [4, 9, 14, 15, 16, 17, 18, 29, 31, 33, 35, 38, 46, 47, 52, 55, 57, 58, 62, 63, 66, 73, 74, 75, 79, 85, 86, 88, 90, 93, 95, 100, 101, 110, 112, 114, 115, 118, 120, 124, 125, 130, 132, 134, 136, 137, 139, 143, 145, 149, 150, 155, 157, 161, 171, 172, 173, 176, 178], "happen": [4, 64, 68, 90, 121, 143, 155, 172, 173], "two": [4, 9, 35, 38, 40, 43, 47, 52, 53, 55, 62, 64, 66, 73, 139, 147, 155, 159, 171, 172, 173, 176, 178], "reason": [4, 15, 73, 137, 155, 165, 172, 173, 175], "1": [4, 9, 12, 18, 33, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 52, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 72, 73, 74, 75, 76, 77, 81, 86, 89, 101, 113, 126, 132, 133, 135, 137, 139, 147, 153, 154, 155, 173, 175, 176, 177, 178], "differ": [4, 9, 14, 16, 18, 31, 32, 33, 36, 37, 46, 47, 62, 63, 64, 66, 69, 73, 78, 85, 90, 118, 125, 139, 148, 154, 155, 171, 173, 175, 176], "rate": [4, 30, 68, 101, 104, 107, 113, 114, 125, 147, 148, 167, 170, 173, 174], "other": [4, 9, 13, 15, 16, 18, 52, 62, 66, 79, 85, 86, 93, 95, 124, 134, 139, 147, 148, 153, 155, 167, 170, 171, 172, 173, 175, 176, 178], "uhfqa": [4, 101], "2": [4, 9, 12, 35, 46, 55, 56, 61, 62, 64, 71, 73, 87, 88, 92, 93, 94, 95, 96, 101, 132, 133, 134, 135, 136, 137, 147, 155, 173, 175, 176, 177, 178], "have": [4, 9, 15, 18, 26, 27, 28, 30, 47, 62, 66, 79, 85, 86, 107, 115, 125, 131, 139, 142, 147, 148, 155, 161, 171, 172, 173, 175, 176, 178], "granular": [4, 52, 101, 107, 115, 125, 148, 163, 167, 170, 171, 172, 176], "some": [4, 15, 16, 50, 81, 94, 131, 132, 134, 136, 137, 149, 150, 155, 171, 172, 173, 178], "mix": 4, "station": [4, 35, 70, 101, 106, 139, 171, 172], "ro": 4, "devic": [4, 176], "vendor": 4, "than": [4, 9, 86, 125, 139, 146, 149, 150, 167, 170, 171], "awg": [4, 27, 35, 39, 41, 42, 45, 46, 47, 66, 79, 125, 164, 167, 170, 171, 176], "_channel_templ": 4, "repres": [4, 8, 9, 11, 14, 18, 31, 38, 53, 80, 81, 91, 96, 125, 139, 140, 172, 173, 175, 176], "inject_calibr": [4, 171], "partial_calibr": 4, "new": [4, 9, 12, 15, 81, 125, 139, 147, 148, 149, 150, 152, 155, 171, 172, 173], "chang": [4, 15, 16, 18, 90, 114, 120, 139, 146, 161, 173, 175, 176], "after": [4, 73, 75, 77, 90, 103, 113, 121, 145, 146, 147, 161, 171, 176, 178], "initialis": [4, 17, 61, 62, 63, 72, 73, 74, 75, 76, 77, 86], "invalid": [4, 165], "gate_implement": [4, 15, 16, 17, 18, 29, 32, 34, 38, 50, 60, 64, 71, 82, 87, 92, 94], "affect": [4, 9, 33, 62, 90, 125, 126, 139, 155, 171, 176], "loci": [4, 9, 22, 62, 86, 139, 173, 178], "also": [4, 9, 15, 16, 17, 18, 29, 33, 46, 47, 52, 66, 69, 74, 75, 79, 85, 86, 88, 93, 95, 100, 125, 139, 143, 147, 148, 150, 155, 159, 161, 171, 173, 175, 176], "factoriz": [4, 62, 85, 86, 139, 171], "its": [4, 5, 15, 16, 18, 31, 33, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 52, 62, 63, 65, 66, 67, 89, 106, 114, 115, 125, 126, 139, 148, 149, 150, 153, 155, 171, 172, 173, 175, 178], "wa": [4, 35, 66, 69, 137, 171, 175, 176, 178], "must": [4, 7, 9, 10, 18, 35, 47, 101, 107, 125, 126, 137, 139, 155, 171, 173, 175], "doe": [4, 9, 35, 47, 58, 62, 70, 86, 113, 115, 121, 139, 171, 172, 173, 175, 176, 178], "all": [4, 9, 10, 13, 17, 18, 25, 26, 27, 28, 29, 30, 33, 47, 52, 57, 62, 63, 64, 69, 72, 73, 79, 86, 90, 101, 106, 107, 112, 113, 114, 117, 120, 125, 126, 132, 134, 136, 137, 143, 147, 153, 167, 170, 171, 172, 173, 174, 175, 176, 178], "valu": [4, 9, 11, 16, 18, 39, 40, 41, 42, 43, 44, 45, 48, 49, 55, 57, 61, 62, 65, 67, 74, 75, 76, 77, 81, 89, 110, 113, 115, 117, 118, 121, 132, 135, 142, 153, 154, 159, 171, 172, 173, 178], "found": [4, 9, 16, 36, 37, 58, 81, 125, 139], "merg": [4, 16, 147, 159], "actual": [4, 35, 52, 62, 132, 134, 135, 136, 137, 147, 167, 170, 173, 176, 178], "previou": [4, 171, 176], "validate_calibr": 4, "check": [4, 11, 101, 167, 170, 171], "match": [4, 125, 126, 167, 169, 170, 171, 178], "someth": [4, 17, 62, 63, 101, 112, 113, 114, 117, 141, 142, 161], "wrong": [4, 141, 142, 171], "get_drive_channel": [4, 178], "given": [4, 9, 10, 13, 16, 17, 18, 30, 31, 47, 52, 58, 62, 63, 81, 85, 88, 89, 93, 95, 101, 107, 114, 125, 126, 130, 139, 148, 155, 157, 160, 167, 170, 172, 173, 178], "exist": [4, 16, 58, 81, 85, 93, 95, 125, 171, 172, 173, 178], "keyerror": 4, "get_flux_channel": 4, "see": [4, 17, 52, 62, 74, 75, 76, 77, 96, 131, 136, 155, 171, 172, 173, 175, 176], "get_probe_channel": 4, "line": [4, 25, 35, 62, 63, 103, 171, 173], "belong": [4, 62, 171], "get_virtual_feedback_channel": 4, "feedback": [4, 35, 62, 83, 84, 85, 118, 171, 174, 178], "signal": [4, 14, 35, 62, 111, 118, 119, 136, 171, 174, 176, 177], "A": [4, 9, 12, 35, 62, 81, 110, 132, 139, 143, 149, 150, 152, 155, 158, 159, 171, 172, 173, 174, 175, 176, 177, 178], "between": [4, 14, 50, 52, 62, 64, 66, 68, 70, 86, 112, 125, 135, 137, 143, 172, 176], "sourc": [4, 66, 146, 171, 175, 176], "destin": [4, 176], "either": [4, 33, 90, 120, 155, 172, 175], "list": [4, 8, 9, 10, 11, 12, 16, 17, 18, 35, 46, 47, 58, 74, 75, 85, 93, 95, 125, 126, 146, 171, 172, 173, 175], "get_virtual_feedback_channel_for": 4, "awg_nam": 4, "feedback_qubit": [4, 35, 171, 176], "get": [4, 11, 15, 18, 46, 47, 59, 62, 63, 78, 85, 90, 100, 105, 106, 139, 146, 171, 173, 176, 178], "node": [4, 18], "receiv": [4, 118, 175, 176], "bit": [4, 35, 171, 176], "which": [4, 9, 13, 18, 33, 46, 62, 66, 81, 88, 90, 125, 126, 133, 134, 136, 137, 139, 147, 155, 161, 171, 172, 173, 174, 175, 176, 178], "": [4, 9, 15, 17, 29, 35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 61, 62, 63, 64, 65, 66, 67, 72, 73, 74, 75, 76, 77, 79, 86, 89, 90, 94, 100, 101, 107, 125, 132, 134, 136, 137, 152, 158, 171, 172, 173, 174, 175, 178], "measur": [4, 7, 18, 35, 61, 62, 63, 84, 85, 90, 101, 139, 148, 171, 172, 173, 174, 178], "result": [4, 9, 15, 35, 62, 63, 69, 85, 90, 111, 116, 118, 125, 171, 172, 175, 178], "support": [4, 31, 35, 62, 86, 135, 137, 158, 167, 170, 171, 172, 173, 175, 176], "fast": [4, 46, 62, 83, 84, 118, 171, 174, 177, 178], "_get_channel_for_compon": 4, "has_calibr": 4, "op_nam": [4, 16, 18], "impl_nam": [4, 9, 16, 18, 81, 141, 171, 173], "true": [4, 7, 9, 17, 18, 33, 39, 40, 41, 42, 43, 44, 45, 48, 49, 52, 58, 61, 62, 63, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 81, 89, 101, 103, 125, 139, 159, 171, 178], "iff": [4, 7, 16, 18, 33, 39, 40, 41, 42, 43, 44, 45, 48, 49, 52, 65, 66, 67, 89, 101, 139], "request": [4, 9, 16, 18, 52, 78, 102, 104, 171, 172, 178], "get_calibr": 4, "get_control_channel": 4, "directli": [4, 9, 63, 120, 171], "neighbor": [4, 147, 148, 155], "coupler": [4, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 64, 65, 66, 67, 86, 137, 139, 147, 148, 155, 171, 172, 173, 177, 178], "ad": [4, 9, 15, 62, 69, 81, 100, 125, 143, 147, 148, 171, 173, 178], "separ": [4, 16, 18, 30, 85, 93, 95, 171, 172, 175, 178], "resolut": [4, 155, 178], "phase": [4, 9, 35, 38, 40, 43, 46, 61, 62, 63, 64, 66, 69, 71, 73, 78, 79, 80, 88, 89, 90, 92, 113, 120, 132, 133, 134, 136, 139, 161, 171, 172, 173, 178], "Will": [4, 52, 153], "iter": [4, 7, 9, 10, 18, 70, 86, 107, 125, 126, 139, 152, 155, 178], "wait": [4, 33, 35, 52, 64, 68, 85, 86, 101, 108, 110, 124, 125, 145, 147, 171, 172, 176, 178], "durat": [4, 18, 29, 30, 33, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 61, 62, 63, 65, 66, 67, 68, 72, 73, 74, 75, 76, 77, 79, 86, 88, 89, 90, 101, 107, 110, 112, 113, 114, 115, 116, 117, 120, 121, 124, 125, 126, 132, 134, 135, 136, 137, 143, 146, 147, 148, 149, 150, 152, 155, 167, 170, 171, 172, 173, 176, 178], "round": [4, 52, 101, 107, 176, 178], "fals": [4, 7, 9, 16, 18, 44, 48, 49, 58, 62, 65, 67, 81, 89, 101, 103, 107, 125, 139, 171, 173], "util": [4, 16, 18, 171, 173], "everi": [4, 18, 113, 167, 170, 171, 173, 178], "guarante": [4, 52, 172], "idl": [4, 86, 121, 125, 171], "cannot": [4, 15, 110, 125, 155, 171, 173, 175, 176], "replac": [4, 9, 18, 81, 110, 121, 171, 175], "dynam": [4, 121, 171], "decoupl": [4, 121, 171], "sequenc": [4, 7, 9, 10, 14, 19, 66, 110, 121, 122, 126, 130, 139, 146, 155, 161, 172, 174, 176, 178], "thei": [4, 9, 16, 17, 61, 62, 63, 72, 73, 74, 75, 76, 77, 90, 94, 100, 101, 125, 126, 139, 155, 167, 170, 171, 172, 173, 176, 178], "treat": [4, 147, 155, 178], "content": [4, 5, 9, 101, 114, 125, 126, 139, 146, 154, 155, 157, 159, 171, 172, 173, 175, 178], "remain": [4, 143, 146, 161, 175], "align": [4, 172, 176, 178], "time": [4, 9, 18, 35, 50, 52, 62, 63, 64, 66, 68, 79, 86, 90, 101, 103, 107, 110, 114, 118, 124, 125, 126, 137, 143, 146, 147, 149, 150, 155, 171, 172, 173, 174, 178], "dure": [4, 52, 66, 101, 110, 124, 137, 155, 172, 178], "particular": [4, 9, 18, 21, 22, 23, 141, 175, 176, 178], "mai": [4, 16, 17, 18, 19, 29, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 61, 62, 63, 64, 65, 66, 67, 72, 73, 74, 75, 76, 77, 78, 85, 86, 88, 89, 90, 118, 121, 139, 155, 172, 173, 175, 176], "thu": [4, 30, 64, 90, 172, 176], "less": [4, 9, 143, 171], "space": [4, 11, 12, 13, 137, 176], "side": [4, 32, 33, 101, 149, 150, 172], "todo": [4, 35, 62, 81, 101, 127], "For": [4, 9, 12, 15, 21, 22, 62, 81, 101, 125, 132, 139, 171, 172, 173, 175, 176, 178], "now": [4, 90, 171], "nearest": [4, 52], "each": [4, 9, 10, 18, 31, 35, 62, 66, 69, 86, 100, 115, 125, 139, 147, 148, 152, 155, 170, 172, 173, 175, 176, 178], "benefit": 4, "exa": [4, 18, 158, 171, 173, 174, 178], "sweep": 4, "over": [4, 5, 10, 62, 125, 171], "In": [4, 5, 9, 16, 35, 50, 52, 62, 63, 64, 68, 79, 86, 110, 114, 118, 125, 139, 147, 171, 172, 173, 175, 176, 178], "futur": 4, "gener": [4, 9, 18, 62, 63, 79, 90, 130, 155, 171, 173, 175], "should": [4, 16, 18, 35, 47, 62, 63, 83, 84, 85, 93, 95, 100, 101, 137, 139, 143, 147, 148, 171, 173, 175, 176], "experi": [4, 9, 57, 139, 171], "float": [4, 13, 18, 29, 33, 35, 46, 47, 52, 62, 63, 68, 72, 73, 78, 79, 80, 86, 88, 90, 91, 95, 96, 101, 102, 103, 104, 107, 113, 117, 118, 120, 125, 127, 132, 133, 134, 135, 136, 137, 139, 146, 148, 149, 150, 160, 161, 163, 171, 173], "how": [4, 139, 155, 172, 173, 175, 176, 178], "long": [4, 64, 101, 171, 172, 173], "start": [4, 55, 57, 125, 143, 146, 147, 148, 153, 154, 171, 172, 173, 176], "simultan": [4, 62, 115, 143, 155, 172, 178], "box": [4, 35, 78, 79, 147, 153, 154, 155, 171, 178], "get_implement": [4, 16, 18, 62, 171, 173, 178], "use_priority_ord": 4, "strict_locu": [4, 16, 18], "priority_calibr": [4, 178], "provid": [4, 9, 16, 17, 18, 29, 30, 61, 62, 63, 72, 73, 74, 75, 76, 77, 79, 139, 167, 170, 171, 172, 173, 174, 175, 178], "an": [4, 9, 11, 12, 14, 16, 17, 18, 27, 32, 36, 37, 46, 50, 58, 62, 64, 71, 72, 74, 79, 88, 89, 90, 91, 94, 96, 100, 101, 102, 112, 113, 115, 125, 126, 130, 137, 139, 147, 149, 152, 155, 161, 164, 165, 171, 172, 173, 174, 175, 176, 178], "mean": [4, 9, 62, 64, 118, 139, 155, 171, 173, 175, 176, 178], "chosen": [4, 95, 172], "automat": [4, 9, 17, 63, 171, 173], "logic": [4, 17, 18, 29, 33, 46, 47, 66, 85, 86, 88, 125, 171, 173, 178], "describ": [4, 9, 10, 18, 109, 139, 155, 172, 175, 178], "below": [4, 18, 172, 175, 176, 178], "symmetr": [4, 16, 18, 33, 39, 40, 41, 42, 43, 44, 45, 48, 49, 52, 65, 66, 67, 89, 139, 171, 173], "order": [4, 9, 10, 11, 12, 16, 18, 19, 32, 33, 35, 66, 125, 137, 139, 155, 172, 173, 174, 176, 178], "avail": [4, 16, 18, 172, 173, 175, 176, 178], "effect": [4, 18, 35, 64, 79, 88, 139, 143, 155, 172, 173, 174, 176, 178], "get_default_implementation_for_locu": [4, 139, 171, 173], "otherwis": [4, 16, 18, 47, 62, 68, 81, 85, 101, 125, 126, 135, 171, 173, 175], "first": [4, 9, 11, 32, 33, 35, 47, 62, 125, 137, 139, 173, 176, 178], "prioriti": [4, 5, 139, 171], "follow": [4, 52, 62, 63, 64, 85, 90, 106, 120, 137, 143, 147, 155, 167, 170, 171, 172, 175, 176, 178], "defin": [4, 5, 9, 16, 17, 20, 26, 27, 28, 30, 36, 37, 46, 47, 62, 63, 64, 71, 74, 75, 86, 87, 101, 131, 132, 137, 139, 141, 142, 153, 155, 171, 172, 173, 174, 175, 178], "defaults_for_locu": [4, 139, 171], "global": [4, 139, 171], "load": [4, 6, 157], "common": [4, 16, 17, 36, 37, 62, 63, 72, 73, 85, 93, 94, 95, 107, 147, 171, 174, 175], "If": [4, 9, 11, 16, 17, 18, 36, 37, 58, 61, 62, 63, 72, 73, 74, 75, 76, 77, 81, 90, 100, 101, 121, 125, 126, 132, 134, 136, 137, 139, 149, 155, 171, 172, 173, 175, 178], "empti": [4, 9, 16, 62, 63, 118, 125, 139, 159, 171, 173], "note": [4, 14, 47, 62, 113, 125, 142, 146, 155, 173, 176], "prevent": [4, 172, 173], "save": 4, "via": [4, 16, 18, 73, 85, 86, 93, 95, 135, 137, 171, 173], "could": [4, 15, 52, 139, 173, 176], "_find_implementation_and_locu": 4, "find": [4, 137, 178], "instanc": [4, 9, 11, 16, 18, 31, 62, 68, 79, 88, 89, 113, 116, 139, 161, 178], "compat": [4, 62, 79, 167, 170, 171], "highest": [4, 139], "we": [4, 15, 52, 66, 90, 101, 137, 139, 161, 173, 175, 176, 178], "equival": [4, 90, 143, 155, 161, 172, 178], "one": [4, 7, 9, 16, 36, 37, 40, 43, 47, 53, 62, 63, 125, 139, 147, 148, 152, 155, 171, 172, 173, 175, 176, 178], "had": [4, 171], "_get_implement": 4, "built": [4, 9, 94, 171], "when": [4, 9, 15, 33, 35, 52, 62, 64, 86, 125, 127, 132, 134, 136, 137, 147, 148, 155, 164, 165, 166, 171, 172, 173, 176, 178], "later": [4, 9], "oilcalibrationdata": [4, 16, 17, 18, 29, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 61, 62, 63, 65, 66, 67, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 88, 89, 90, 93, 95, 141, 173], "impli": [4, 175], "get_implementation_class": [4, 58], "default": [4, 5, 9, 16, 18, 29, 30, 33, 35, 36, 37, 46, 47, 62, 63, 66, 78, 81, 85, 86, 88, 90, 113, 118, 132, 133, 134, 136, 137, 139, 142, 171, 172, 173, 178], "validate_quantum_circuit": [4, 171], "require_measur": [4, 7], "constitut": [4, 7, 175], "least": [4, 7, 52, 101, 107, 147, 148, 167, 170, 172, 173, 175], "circuit_to_timebox": [4, 171], "scheduling_algorithm": [4, 152, 155], "schedulingalgorithm": [4, 151, 152, 155], "hard_boundari": [4, 152, 153, 155], "locus_map": [4, 171], "convert": [4, 9, 18, 73, 95, 101, 110, 124, 132, 134, 136, 137, 145, 155, 171, 172, 173, 174], "resolv": [4, 18, 153, 155, 172, 174], "option": [4, 9, 10, 11, 30, 62, 125, 139, 171, 173, 176], "placehold": [4, 9, 171], "physic": [4, 9, 19, 101, 147, 171, 172, 173], "while": [4, 18, 73, 153, 172, 173, 175, 178], "unresolv": 4, "timeboxes_to_front_padded_playlist": 4, "neighborhood": [4, 153, 155, 171], "0": [4, 9, 12, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 61, 62, 63, 65, 66, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 82, 86, 89, 94, 95, 101, 103, 112, 113, 130, 132, 133, 134, 135, 136, 137, 146, 152, 155, 161, 173, 175, 178], "temporari": 4, "helper": [4, 18], "playlist": [4, 64, 98, 99, 100, 101, 102, 103, 104, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 135, 136, 137, 144, 145, 162, 166, 167, 170, 171, 174, 176, 178], "front": [4, 125], "pad": [4, 33, 125, 147, 153, 178], "equal": [4, 9, 35, 64, 90, 93, 146, 149, 150, 171, 172, 178], "sinc": [4, 30, 47, 66, 90, 137, 139, 171, 173], "delai": [4, 35, 61, 62, 63, 85, 109, 115, 171, 172, 176], "befor": [4, 68, 73, 75, 77, 81, 101, 103, 161, 171, 178], "final": [4, 132, 172, 173, 178], "wish": 4, "lose": 4, "coher": [4, 113], "done": [4, 73, 120, 127, 137, 143, 148, 171, 173], "onc": [4, 171, 172, 173], "handl": [4, 17, 30, 52, 63, 85, 100, 101, 107, 147, 150, 161, 171, 173], "better": [4, 101, 155], "remov": [4, 18, 90, 101, 125, 126, 127, 171, 178], "timeboxes_to_playlist": 4, "int": [4, 9, 12, 13, 68, 72, 73, 88, 100, 101, 103, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 130, 132, 133, 134, 135, 136, 137, 139, 146, 147, 152, 155, 163], "far": 4, "By": [4, 18, 46, 47, 62, 63, 66, 78, 85, 90, 132, 134, 136, 137, 161], "occupi": [4, 125, 147, 148, 155, 172], "unnecessari": [4, 35, 147, 171], "pack": [4, 153], "assum": [4, 33, 47, 69, 79, 85, 90, 95, 107, 125, 137, 172, 173, 175, 178], "refer": [4, 73, 94, 100, 120, 171, 173, 174, 178], "ensur": [4, 172, 176, 178], "work": [4, 9, 66, 86, 125, 146, 171, 172, 173, 175, 178], "intend": [4, 66, 86, 139, 172, 173], "properli": 4, "higher": [4, 172, 176], "help": [4, 9, 172, 173, 176], "defend": [4, 175], "crosstalk": [4, 143, 173], "expens": 4, "longer": [4, 86, 171], "more": [4, 17, 52, 110, 139, 155, 171, 172, 175, 176], "decoher": [4, 50], "timebox_to_schedul": 4, "finish": [4, 86, 171], "readi": [4, 174], "execut": [4, 32, 33, 100, 114, 122, 125, 139, 143, 172, 173, 174, 175, 176, 178], "sample_r": [4, 101, 102, 103, 104], "_finish_schedul": 4, "filter": 4, "zero": [4, 9, 33, 47, 52, 66, 73, 79, 82, 110, 115, 121, 136, 137, 139, 146, 149, 150, 171, 172], "spacer": [4, 143], "consequ": 4, "step": [4, 121, 137, 171], "process": [4, 69, 110, 172, 177], "consist": [4, 15, 46, 47, 73, 79, 88, 125, 132, 134, 136, 137, 139, 171, 173, 175], "extend": [4, 5, 11, 13, 52, 124, 125, 126, 147, 148, 149, 150, 155], "anoth": [4, 33, 47, 66, 68, 96, 139, 149, 150, 159, 171, 173], "gone": 4, "copi": [4, 9, 69, 114, 125, 126, 139, 159, 175], "resolve_timebox": [4, 155, 171, 178], "compute_neighborhood_hard_boundari": 4, "recurs": [4, 155, 159, 172, 178], "children": [4, 152, 155, 172, 178], "concaten": [4, 155, 172, 178], "strategi": [4, 147, 148, 154, 155], "composit": [4, 15, 16, 36, 37, 153, 154, 155, 171, 172, 173, 178], "solid": 4, "rectangl": [4, 178], "longest": [4, 52, 147, 153], "within": [4, 11, 118, 125, 154, 172, 175], "tetri": [4, 110, 153], "tightli": [4, 153], "possibl": [4, 52, 90, 112, 125, 137, 147, 148, 153, 154, 155, 171, 172, 175, 176, 178], "still": [4, 9, 126], "overlap": [4, 110, 115, 124, 147, 172, 178], "regardless": [4, 173, 176], "boundari": [4, 55, 57, 147, 153, 154], "modifi": [4, 5, 9, 125, 126, 146, 147, 148, 149, 150, 161, 173, 175, 178], "so": [4, 9, 17, 35, 58, 61, 62, 63, 72, 73, 74, 75, 76, 77, 86, 90, 125, 126, 143, 155, 171, 172, 173, 174, 178], "becom": [4, 9, 35, 132, 178], "atom": [4, 18, 152, 153, 155, 172, 173, 178], "isn": 4, "t": [4, 94, 131, 132, 134, 135, 137, 157, 171, 175], "alreadi": [4, 9, 58, 125, 155, 171, 173], "precomput": [4, 125, 155, 173], "typic": [4, 47, 62, 101, 139, 143, 172, 173, 176, 178], "want": [4, 9, 17, 46, 47, 62, 74, 75, 121, 173], "top": [4, 173], "layer": 4, "would": [4, 9, 15, 47, 68, 171, 173, 176, 178], "unus": 4, "set": [4, 9, 15, 17, 18, 20, 30, 35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 53, 61, 62, 63, 65, 66, 67, 72, 73, 74, 75, 76, 77, 81, 82, 85, 89, 106, 125, 133, 139, 147, 148, 152, 155, 171, 172, 173, 174, 176, 178], "lower": [4, 174, 176], "where": [4, 46, 47, 52, 62, 63, 64, 71, 87, 88, 94, 101, 115, 125, 132, 134, 135, 137, 139, 147, 150, 171, 172, 173, 175], "improv": [4, 35, 62, 171, 175], "need": [4, 9, 15, 16, 18, 29, 33, 35, 46, 47, 62, 63, 66, 81, 85, 86, 88, 125, 126, 132, 134, 136, 137, 139, 171, 172, 173, 174, 178], "_resolve_timebox_hard_boundari": 4, "compute_neighborhood": 4, "_get_neighborhood_hard_boundari": 4, "whose": [4, 57, 118, 173], "plu": 4, "mayb": 4, "_resolve_timebox_tetri": 4, "_block_neighborhood_tetri": 4, "add": [4, 9, 18, 58, 81, 86, 100, 125, 149, 150, 171, 172, 173, 175, 178], "addit": [4, 9, 18, 29, 30, 33, 46, 47, 62, 64, 66, 85, 86, 88, 92, 113, 125, 136, 139, 155, 173, 175, 178], "ideal": [4, 14, 50, 139, 143], "model": [4, 131, 143, 172], "correctli": [4, 15, 171, 173], "interact": [4, 47], "frame": [4, 66, 137, 161, 171, 173], "subspac": [4, 64, 139, 143, 172, 173], "connect": [4, 9, 86, 139, 155, 172, 173, 178], "those": [4, 30, 62, 85, 139, 155, 171, 173, 175, 178], "henc": [4, 161], "evolut": 4, "Of": 4, "cours": [4, 50, 173], "realiti": [4, 50], "possibli": [4, 47, 176], "applic": [4, 173, 175], "essenti": [4, 173], "precis": [4, 172], "interest": 4, "howev": [4, 16, 52, 85, 121, 132, 134, 136, 137, 172, 173, 175], "well": [4, 70, 86, 114, 125, 139, 167, 170, 173, 174, 176, 178], "local": [4, 66, 90, 120, 161], "shut": 4, "down": 4, "unwant": 4, "like": [4, 9, 17, 18, 62, 86, 109, 132, 134, 136, 137, 172, 173, 178], "end": [4, 9, 38, 66, 68, 69, 90, 94, 110, 124, 125, 126, 135, 171, 172, 175, 176], "carri": [4, 172, 175], "meant": [4, 9], "etc": 4, "build_playlist": 4, "finish_schedul": 4, "number": [4, 9, 13, 14, 35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 61, 62, 63, 65, 66, 67, 72, 73, 74, 75, 76, 77, 86, 89, 101, 111, 115, 125, 137, 139, 152, 155, 167, 170, 172, 173, 176, 178], "involv": [4, 18, 33, 172, 174, 178], "compress": [4, 172], "duplic": 4, "transfer": [4, 79, 175], "drop": 4, "point": [4, 90, 146, 147, 148, 173], "finalis": 4, "unless": [4, 18, 132, 134, 136, 137, 155, 171, 173, 175, 178], "call": [4, 9, 11, 15, 16, 18, 66, 86, 93, 171, 173, 178], "uniform": 4, "_set_gate_implementation_shortcut": 4, "creat": [4, 9, 15, 16, 18, 29, 35, 47, 130, 171, 172, 173, 174], "shortcut": [4, 9, 171, 178], "collis": [4, 5], "won": 4, "warn": 4, "hardcod": [5, 173], "nativ": [5, 31, 139, 178], "ones": [5, 16, 32, 33, 85, 93, 95, 153, 155, 173], "case": [5, 9, 18, 29, 33, 46, 47, 52, 62, 63, 79, 86, 88, 90, 125, 134, 135, 139, 147, 150, 161, 171, 172, 173], "take": [5, 9, 18, 35, 47, 125, 136, 137, 139, 159, 171, 173, 176, 178], "gate_definit": 5, "section": [5, 172, 173, 175, 176, 178], "yaml": [5, 6, 157], "file": [5, 6, 157, 175], "config": [6, 100, 171], "circuitoperationlist": [8, 171], "circuit_oper": 9, "num_qubit": [9, 13], "It": [9, 38, 71, 79, 85, 86, 90, 92, 94, 115, 137, 155, 171, 173], "mostli": [9, 172], "conveni": [9, 18, 62, 155, 171, 174], "enabl": [9, 52, 66, 171], "easi": [9, 178], "creation": [9, 173], "calcul": [9, 10, 13, 66, 135, 137, 171], "onto": 9, "import": [9, 53, 173, 175, 178], "present": [9, 10, 64, 125, 147, 178], "think": 9, "about": [9, 70, 112, 113, 114, 117, 172, 176, 178], "qiskit": [9, 171], "quantumregist": 9, "most": [9, 173, 174], "simpli": [9, 35, 90, 139, 172], "taken": [9, 171], "you": [9, 62, 63, 66, 121, 139, 171, 174, 175, 178], "good": 9, "practic": [9, 173, 176, 178], "mutabl": [9, 125], "regist": [9, 10, 11, 16, 81, 139, 171, 172, 174, 178], "usabl": [9, 18, 35, 171], "fundament": 9, "popul": [9, 64], "qb1": [9, 62, 139, 173, 178], "qbn": 9, "qb2": [9, 62, 139, 173, 176, 178], "altern": [9, 172, 176], "To": [9, 35, 52, 125, 173, 174, 175, 176, 178], "your": [9, 173, 175], "own": [9, 15, 18, 31, 139, 171, 172, 173, 175], "initi": [9, 30, 31, 132, 137, 172, 173], "my_tabl": 9, "rememb": 9, "circuit_op": 9, "find_qubit": 9, "origin": [9, 13, 18, 125, 126, 159, 175], "what": [9, 16, 139, 171, 172, 173], "__add__": [9, 62, 171], "__mul__": [9, 171], "__getitem__": [9, 171], "redefin": [9, 132, 134, 136, 137], "3": [9, 35, 61, 62, 147, 175, 177, 178], "circuit1": [9, 178], "circuit2": [9, 178], "4": [9, 54, 92, 94, 175, 177], "produc": [9, 149, 171, 172, 176, 178], "prx": [9, 16, 17, 35, 36, 37, 61, 62, 63, 70, 72, 73, 74, 75, 76, 77, 78, 79, 85, 90, 93, 95, 139, 161, 171, 172, 173, 176, 178], "add_op": 9, "angl": [9, 18, 35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 65, 66, 67, 71, 73, 78, 79, 80, 85, 87, 90, 91, 93, 94, 96, 139, 160, 161, 171, 173, 178], "drag_crf": [9, 36, 171], "abov": [9, 172, 173, 174, 175, 178], "shorten": 9, "exactli": [9, 18, 139, 152], "syntax": [9, 171, 172, 173, 175, 178], "usual": [9, 15, 52, 116, 137, 172, 173, 176, 178], "attach": [9, 175], "init": [9, 171, 173], "ariti": [9, 18, 33, 39, 40, 41, 42, 43, 44, 45, 48, 49, 52, 62, 65, 66, 67, 89, 139, 173], "unitari": [9, 10, 11, 13, 38, 55, 57, 64, 80, 82, 91, 96, 139, 171, 172, 173], "propag": [9, 13, 55, 57, 85, 171, 176], "entir": [9, 11, 101, 171], "u": [9, 54, 95, 171], "get_unitari": 9, "dimens": 9, "alwai": [9, 16, 32, 33, 35, 66, 85, 93, 95, 139, 143, 147, 149, 173], "qb3": [9, 62, 139, 176, 178], "8x8": 9, "matrix": [9, 10, 11, 12, 13, 38, 94, 139, 171, 173], "correspond": [9, 11, 16, 50, 54, 55, 56, 57, 85, 93, 95, 112, 139, 147, 155, 172, 176], "three": 9, "big": [9, 10, 11, 139], "endian": [9, 10, 11, 139], "convent": [9, 10, 66, 106], "With": [9, 17, 62, 63, 176], "action": [9, 10, 139, 172], "ident": [9, 13, 50, 56, 79, 171], "physical_circuit": 9, "map_loci": [9, 171], "physical_qubit": 9, "exampl": [9, 12, 15, 16, 66, 101, 139, 172, 173, 175, 178], "alic": 9, "zzz": 9, "qb5": [9, 139], "qb10": 9, "occurr": 9, "mani": [9, 171, 173, 178], "run": [9, 171, 176], "parallel": [9, 139, 171], "larg": [9, 172], "left": [9, 18, 29, 33, 46, 47, 62, 63, 86, 88, 90, 149, 150, 172, 173, 176], "ignor": [9, 35], "add_qubit": 9, "n": [9, 12, 13, 32, 33, 101, 132, 137], "qubit_nam": [9, 10], "overal": [9, 10], "arrai": [9, 10, 54, 56, 61, 62, 132, 134, 135, 136, 137, 171, 173], "ndarrai": [9, 10, 11, 12, 13, 35, 61, 62, 80, 91, 96, 134, 135, 136, 137, 139, 173], "locus_indic": 9, "append": [9, 33, 62, 125, 126, 171], "store": [9, 11, 15, 18, 46, 47, 62, 63, 78, 85, 90, 139, 173], "select": [9, 13, 176, 178], "indic": [9, 13, 68, 130, 172, 175], "qb4": [9, 176], "param": [9, 11, 18, 139, 171, 173], "barrier": [9, 10, 139, 173], "compos": [9, 143, 174], "safer": 9, "wai": [9, 16, 109, 155, 171, 172, 173, 178], "togeth": [9, 35, 46, 62, 68, 147, 155, 171, 172, 173, 178], "probabl": 9, "wire": 9, "k": [9, 12, 137], "achiev": [9, 173], "count_op": 9, "count": 9, "counter": 9, "occur": [9, 155], "make_circuit": [9, 171], "fresh": 9, "length": [9, 33, 61, 62, 63, 119, 125, 137, 147, 153, 167, 169, 170, 171], "total": [9, 69, 126, 143, 178], "across": 9, "deepcopi": 9, "_set_specific_operation_shortcut": 9, "through": [10, 31, 62, 171, 173, 175], "skip": [10, 125], "product": [10, 172, 175], "context": [11, 16, 18, 29, 33, 36, 37, 46, 47, 62, 63, 86, 88, 90, 172, 173, 178], "fetch": 11, "correct": [11, 66, 69, 92, 171, 173, 178], "size": [11, 159, 173], "Then": [11, 155, 173], "hilbert": [11, 13], "whole": [11, 172, 175], "perm": 12, "permut": [12, 171], "state": [12, 38, 50, 64, 66, 71, 73, 82, 85, 86, 90, 92, 94, 139, 161, 172, 173, 175, 176], "vector": [12, 171], "index": [12, 100, 126, 146, 172, 174], "th": [12, 137], "old": 12, "kron": [12, 139], "b": [12, 52, 62, 143, 149, 150, 155, 159, 175], "c": [12, 135, 155, 175], "n_qubit": 13, "larger": [13, 125, 172], "system": [13, 171, 175, 176, 178], "nest": [13, 18, 20, 39, 40, 41, 42, 43, 44, 45, 48, 49, 61, 65, 66, 67, 74, 75, 76, 77, 86, 89, 90], "hash": 13, "purpos": [13, 18, 62, 171, 173, 175], "rang": [13, 132, 155, 171], "abstract": [14, 139, 172, 173, 174], "conceptu": [14, 172], "wherea": [14, 62, 110, 139, 172, 173], "concret": [14, 139, 173, 174, 178], "One": [14, 18, 78, 172, 178], "approxim": 14, "abc": [14, 16, 18, 32, 34, 38, 50, 60, 64, 71, 72, 73, 78, 79, 82, 87, 92, 94], "customiqwaveform": [14, 60, 62, 63, 71, 72, 73, 173], "singlepulseg": [14, 71, 79, 171], "compositecach": 14, "__call__": [15, 16, 18, 29, 33, 46, 47, 62, 66, 85, 86, 88, 171, 173], "normal": [15, 35, 137, 139, 160, 171, 173, 175], "_timebox_cach": 15, "trust": 15, "itself": [15, 66, 86, 171, 173, 176], "member": [15, 16, 55, 57, 173], "deduc": 15, "cache_kei": 15, "extra_id": 15, "hashabl": [15, 173], "kei": [15, 16, 18, 35, 36, 37, 62, 63, 83, 84, 85, 93, 95, 171, 172, 173], "identifi": [15, 35, 101, 109, 125, 173, 175], "cast": 15, "extra": [15, 35, 66, 73, 173], "string": [15, 61, 62, 118, 130], "id": 15, "further": [15, 136, 137, 155, 173], "did": [15, 171], "come": [15, 173, 178], "fund": 15, "parent": [16, 17, 18, 29, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 61, 62, 63, 65, 66, 67, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 88, 89, 90, 93, 95, 171, 173], "calibration_data": [16, 17, 18, 29, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 61, 62, 63, 65, 66, 67, 72, 73, 74, 75, 76, 77, 78, 79, 85, 86, 88, 89, 90, 93, 95, 173], "term": [16, 132, 134, 136, 137, 139, 172, 173, 174, 175], "pre": [16, 137], "abl": [16, 107, 171], "know": [16, 18, 173], "consid": [16, 17, 52, 61, 62, 63, 72, 73, 74, 75, 76, 77, 146, 149, 150, 171, 173, 178], "registered_g": [16, 85, 93, 95, 171, 173], "cz": [16, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 54, 55, 64, 66, 90, 139, 171, 172, 173, 177, 178], "insid": [16, 18, 29, 33, 35, 46, 47, 66, 73, 85, 86, 88, 132, 146, 155, 171, 172, 173], "besid": [16, 85, 86, 93, 95], "here": [16, 73, 81, 85, 93, 95, 131, 137, 173, 176, 178], "construct": [16, 18, 31, 62, 79, 85, 88, 89, 93, 95, 132, 134, 136, 137, 171, 172, 174], "default_implement": [16, 36, 37, 139], "design": [16, 36, 37, 175], "fill": [16, 36, 37, 172], "he": [16, 36, 37], "sought": 16, "custom": [17, 18, 62, 63, 171, 172, 174], "waveform": [17, 30, 39, 41, 42, 45, 46, 47, 61, 62, 63, 65, 66, 67, 72, 73, 74, 75, 76, 77, 88, 100, 113, 114, 117, 132, 133, 134, 135, 136, 137, 167, 169, 170, 171, 172, 174], "iqpuls": [17, 46, 62, 63, 72, 73, 74, 75, 79, 88, 90, 108, 111, 115, 118, 120, 161, 169, 172, 173], "info": [17, 18, 171, 173], "somethingels": [17, 62, 63], "q": [17, 46, 61, 62, 63, 72, 73, 74, 75, 76, 77, 88, 113, 173, 177, 178], "mygat": [17, 62, 63], "i_wav": [17, 62, 63], "q_wave": [17, 62, 63], "wave_i": [17, 61, 74, 75, 76, 77, 113, 173], "wave_q": [17, 61, 74, 75, 76, 77, 113, 173], "dependent_wav": [17, 61, 62, 63, 72, 73, 74, 75, 76, 77], "depend": [17, 18, 29, 33, 46, 47, 52, 61, 62, 63, 72, 73, 74, 75, 76, 77, 86, 88, 90, 112, 171, 173], "share": [17, 30, 47, 61, 62, 63, 68, 72, 73, 74, 75, 76, 77, 175], "drag": [17, 61, 62, 63, 72, 73, 74, 75, 76, 77, 173], "root_paramet": [17, 47, 62, 63, 66, 72, 73], "independ": [17, 62, 63, 72, 73, 125, 126, 139, 172, 176], "overrid": [17, 18, 29, 33, 46, 47, 62, 63, 66, 72, 73, 74, 75, 78, 85, 86, 88, 90, 171, 173, 178], "excluded_paramet": [17, 46, 47, 74, 75], "exclud": [17, 46, 47, 74, 75, 175], "There": [18, 73, 173, 176, 178], "subclass": [18, 29, 31, 33, 46, 47, 62, 63, 86, 88, 90, 132, 134, 136, 137, 139, 171, 173], "__init__": [18, 171, 173], "rotat": [18, 35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 57, 65, 66, 67, 71, 73, 78, 79, 80, 87, 90, 91, 92, 94, 96, 161, 171, 173, 178], "input": [18, 35, 62, 172, 173], "raw": [18, 111, 118, 119, 130, 176], "meaning": [18, 33, 39, 40, 41, 42, 43, 44, 45, 48, 49, 52, 65, 66, 67, 89, 139], "special_implement": [18, 171], "special": [18, 47, 68, 79, 131, 139, 171, 173, 175, 178], "never": [18, 171, 173], "explicitli": [18, 62, 171, 173, 175, 178], "qualified_nam": 18, "qualifi": 18, "classmethod": [18, 46, 47, 62, 63, 72, 73, 74, 75, 78, 85, 86, 88, 90, 171], "needs_calibr": 18, "appropri": [18, 172, 175], "_call": [18, 29, 33, 35, 46, 47, 52, 62, 63, 66, 73, 78, 79, 85, 86, 88, 90, 93, 95, 171, 173], "kwarg": [18, 29, 33, 46, 47, 66, 74, 75, 85, 86, 88], "signatur": [18, 29, 33, 46, 47, 66, 85, 86, 88, 139, 171, 173], "suffici": [18, 29, 33, 46, 47, 66, 85, 86, 88, 101, 137], "assign": [18, 47, 62, 63, 100, 171], "specifi": [18, 29, 35, 114, 153, 173, 176, 178], "to_timebox": 18, "wrap": [18, 178], "duration_in_second": [18, 29, 33, 46, 47, 62, 63, 86, 88, 90, 125], "unimpl": [18, 29, 33, 46, 47, 62, 63, 86, 88, 90], "reimplement": [18, 29, 33, 46, 47, 62, 63, 86, 88, 90, 173], "make": [18, 29, 33, 46, 47, 62, 63, 66, 86, 88, 90, 114, 121, 125, 126, 139, 143, 146, 171, 173, 175, 178], "sens": [18, 29, 33, 46, 47, 62, 63, 86, 88, 90], "convert_calibration_data": 18, "channel_prop": 18, "item": [18, 125], "fraction": 18, "hz": [18, 40, 43, 61, 62, 65, 66, 67, 89, 101, 102, 104, 132, 134, 136, 137, 173], "addition": [18, 147, 148, 176], "under": [18, 143, 155, 175], "n_sampl": [18, 30, 72, 73, 88, 132, 133, 134, 135, 136, 137], "subset": [18, 55], "nestedparam": [18, 35, 39, 40, 41, 42, 43, 44, 45, 48, 49, 61, 65, 66, 67, 74, 75, 76, 77, 86, 89], "cl": 18, "get_paramet": 18, "expect": [18, 30], "wildcard": 18, "charact": [18, 125, 175], "dot": 18, "root": [18, 55], "settingnod": [18, 105, 106], "get_locus_mapping_nam": [18, 46, 47, 62, 63, 78, 85, 90, 173], "operation_nam": [18, 46, 47, 62, 63, 78, 85, 90, 173], "implementation_nam": [18, 46, 47, 62, 63, 78, 85, 90, 173], "behaviour": [18, 46, 47, 62, 63, 78, 85, 90, 171, 173], "get_custom_locus_map": [18, 86, 171, 173], "component_to_channel": [18, 86, 106], "wrt": 18, "often": [18, 171, 173], "set_locus_map": 18, "frozenset": [18, 86, 173], "matter": [19, 66, 173], "alia": [19, 20, 21, 22, 23, 24, 39, 40, 41, 42, 43, 44, 45, 48, 49, 61, 65, 67, 74, 75, 76, 77, 79, 89, 140], "probe_lin": [25, 62, 63], "single_components_with_dr": 26, "single_components_with_flux_awg": 27, "single_components_with_readout": 28, "plai": [29, 39, 41, 42, 45, 46, 47, 62, 66, 88, 113, 115, 116, 117, 152, 171, 172, 173, 178], "singl": [29, 31, 57, 61, 62, 63, 71, 72, 73, 75, 79, 87, 90, 92, 94, 125, 126, 139, 152, 155, 168, 171, 172, 173, 176, 178], "_get_puls": [29, 72, 73, 74, 75, 171], "_get_pulse_channel": 29, "basic": [29, 126, 171, 173], "insert": [29, 68, 81, 171], "overridden": [29, 139, 173], "wave": [30, 117, 134], "label_prefix": 30, "prefix": [30, 62], "label": [30, 35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 61, 62, 63, 65, 66, 67, 72, 73, 74, 75, 76, 77, 83, 84, 86, 89, 109, 111, 118, 119, 152, 155, 171, 172, 173], "format": [30, 175], "been": [31, 35, 81, 86, 155, 172, 175, 176], "sever": [31, 110, 139, 171, 173, 176, 178], "scheme": [31, 172], "likewis": 31, "sometim": [31, 172], "metaoper": [32, 33, 139, 173], "forc": [32, 50, 101, 107], "tempor": [32, 33], "preced": [32, 33, 52, 90, 159, 161], "qudit": [33, 139], "metainstruct": 33, "caus": [33, 35, 52, 171, 175, 176], "turn": [33, 171], "impos": 33, "relat": [33, 69, 171, 176, 178], "classic": [34, 35, 171, 176], "ccprx_composit": [34, 36, 37, 171, 176], "ccprx_composite_dragcosinerisefal": [34, 171], "ccprx_composite_draggaussian": [34, 171], "condit": [35, 36, 37, 85, 112, 118, 167, 170, 171, 173, 175, 176], "discrimin": 35, "obtain": [35, 79, 172, 175, 177], "segment": [35, 86, 118, 120, 123, 125, 130, 146, 147, 148, 171, 172, 176], "activ": [35, 116, 172], "underneath": 35, "Not": [35, 175, 178], "legaci": 35, "program": [35, 125], "mode": [35, 62], "control_delai": [35, 176], "unit": [35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 52, 61, 62, 63, 65, 66, 67, 72, 73, 74, 75, 76, 77, 86, 89, 113, 125, 132, 134, 136, 137, 172, 173, 176], "data_typ": [35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 61, 62, 63, 65, 66, 67, 72, 73, 74, 75, 76, 77, 86, 89], "datatyp": [35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 61, 62, 63, 65, 66, 67, 72, 73, 74, 75, 76, 77, 86, 89, 158], "collection_typ": [35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 61, 62, 63, 65, 66, 67, 72, 73, 74, 75, 76, 77, 86, 89], "collectiontyp": [35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 61, 62, 63, 65, 66, 67, 72, 73, 74, 75, 76, 77, 86, 89, 158], "element_indic": [35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 61, 62, 63, 65, 66, 67, 72, 73, 74, 75, 76, 77, 86, 89], "_parent_nam": [35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 61, 62, 63, 65, 66, 67, 72, 73, 74, 75, 76, 77, 86, 89], "_parent_label": [35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 61, 62, 63, 65, 66, 67, 72, 73, 74, 75, 76, 77, 86, 89], "instrument": [35, 90, 101, 104, 108, 123, 176], "drive_control": [35, 105], "feedback_sourc": 35, "141592653589793": 35, "feedback_kei": [35, 62, 171], "conditionalinstruct": [35, 62, 108, 118, 176], "until": [35, 90, 172], "enough": [35, 176], "arriv": [35, 176], "place": [35, 125, 136, 147, 148, 175], "sequenti": 35, "without": [35, 119, 124, 155, 171, 172, 173, 175, 178], "care": [35, 178], "yourself": [35, 174], "rad": [35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 61, 62, 63, 65, 66, 67, 73, 75, 77, 80, 89, 91, 113, 161], "multipl": [35, 62, 86, 101, 107, 112, 115, 118, 132, 134, 136, 137, 171, 172], "f": [35, 62, 63, 132, 134, 135, 137, 139, 173], "__": [35, 62, 63, 171], "current": [35, 62, 66, 146], "hw": [35, 62, 171], "per": [35, 62, 139, 171, 173], "listen": [35, 171], "user": [35, 62, 137, 155, 171, 172, 173, 176, 178], "drag_gaussian": [37, 171, 178], "z": [38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 55, 60, 61, 65, 66, 67, 73, 87, 90, 92, 94, 96, 161, 171, 173], "flip": [38, 171], "rel": [38, 66, 113, 132, 134, 136, 137, 171, 172, 173, 178], "11": [38, 177], "text": [38, 64, 73, 135, 137, 175], "begin": [38, 66, 68, 94, 109, 115, 126, 135, 146, 149, 150, 171, 176, 178], "pmatrix": [38, 94], "fluxpulseg": [38, 39, 41, 42, 44, 45, 48, 49, 64, 66, 173], "cz_gaussiansmoothedsquar": 38, "cz_slepian": 38, "cz_truncatedgaussiansmoothedsquar": 38, "cz_slepian_crf": 38, "cz_crf": 38, "fluxpulsegate_tgss_crf": 38, "fluxpulsegate_crf_crf": [38, 171], "couplerfluxpulsequbitacstarkpulseg": [38, 40, 43, 171], "cz_slepian_acstarkcrf": 38, "cz_crf_acstarkcrf": 38, "cosinerisefal": [39, 40, 44, 48, 49, 65, 67, 74, 75, 136], "coupler_wav": [39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 65, 66, 67, 173], "amplitud": [39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 61, 62, 63, 65, 67, 72, 73, 74, 75, 76, 77, 79, 88, 89, 132, 134, 136, 137, 171, 173], "scalar": [39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 61, 62, 63, 65, 66, 67, 72, 73, 74, 75, 76, 77, 86, 89], "center_offset": [39, 40, 41, 42, 43, 44, 45, 48, 49, 65, 67, 74, 75, 76, 77, 89, 135, 136, 137, 173], "crf": [39, 40, 43, 44, 48, 49, 65, 67, 74, 75], "full_width": [39, 40, 42, 43, 44, 45, 48, 49, 65, 67, 74, 75, 76, 77, 89, 135, 136, 137], "rise_tim": [39, 40, 43, 44, 45, 48, 49, 65, 67, 74, 75, 89, 135, 136], "rz": [39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 65, 66, 67, 73, 75, 77, 88, 89, 90, 95, 161, 171], "qubit_wav": [39, 41, 42, 44, 45, 47, 48, 49, 65, 66, 67, 173], "cosin": [40, 43, 89, 131, 132, 136, 137, 171], "rise": [40, 43, 89, 135, 136, 171], "fall": [40, 43, 89, 135, 136, 139, 171], "ac": [40, 43, 46, 88, 89, 171], "stark": [40, 43, 46, 88, 89, 171], "first_qubit": [40, 43], "mcrf": [40, 43, 89], "modulation_frequ": [40, 43, 89, 113, 136], "second_qubit": [40, 43], "qubit_drive_wav": [40, 43, 46], "modulatedcosinerisefal": [40, 43, 89, 131], "gaussiansmoothedsquar": 41, "gss": 41, "gaussian_sigma": 41, "square_width": 41, "slepian": [42, 43, 44, 131, 171], "coupling_strength_norm": [42, 43, 44, 137], "frequency_initial_norm": [42, 43, 44, 137], "frequency_to_minimize_norm": [42, 43, 44, 137], "lambda_1": [42, 43, 44, 137], "lambda_2": [42, 43, 44, 137], "squid_asymmetri": [42, 43, 44, 137], "truncatedgaussiansmoothedsquar": [45, 49, 67, 136], "tgss": [45, 49, 67], "analog": 46, "tune": 46, "frequenc": [46, 61, 62, 63, 66, 88, 102, 103, 113, 132, 134, 136, 137, 171, 173], "_ac_stark_puls": [46, 88], "phase_incr": [46, 88, 89, 90, 113, 120], "quadratur": [46, 88, 113], "pi": [46, 72, 73, 74, 75, 76, 77, 79, 85, 88, 92, 93, 94, 132, 133, 134, 135, 160, 171, 173, 176, 178], "discret": 47, "mediat": [47, 64], "coupl": [47, 137], "tunabl": [47, 177], "both": [47, 66, 149, 171, 173, 176, 178], "arbitrari": [47, 90, 94, 115, 161, 176, 178], "slot": 47, "move": [47, 65, 66, 67, 68, 146, 171, 178], "being": [47, 79, 139, 173, 176], "flux_puls": 47, "radian": [47, 71, 78, 79, 87, 90, 94, 113, 120, 134, 160], "maximum": [51, 86, 125, 137, 147], "up": [52, 62, 66, 69, 101, 107, 125, 137, 147, 171, 173], "hardwar": [52, 120, 139, 167, 170, 172, 173, 174, 176], "again": 52, "much": [52, 172], "why": [52, 173], "10": [52, 64, 177], "except": [52, 62, 73, 162, 164, 165, 166, 172, 173, 175], "enumer": [53, 55, 57], "xygat": [53, 56, 78], "intenum": [53, 57], "reprenum": 53, "twoqubitg": [53, 54], "iswap": [54, 55, 177], "j": [54, 56], "sqrt_iswap": [54, 55], "70710678": [54, 56], "70710678j": [54, 56], "matric": [54, 56, 173], "enum": [55, 57, 151, 153, 154], "qualnam": [55, 57, 153, 154], "dictionari": [55, 159, 173], "two_qubit_unitari": 55, "squar": 55, "x_90": 56, "x_180": 56, "x_m90": 56, "y_90": 56, "y_180": 56, "y_m90": 56, "su": [56, 94, 95, 96], "clifford": [57, 78], "axi": [57, 71, 92, 94, 161, 171, 173], "xy": [57, 71, 78], "plane": [57, 71, 92], "xygate_unitari": 57, "tomographi": 57, "overwrit": [58, 81], "error": [58, 137, 141, 155, 157, 164, 165, 166, 171, 172, 178], "class_nam": 59, "project": [60, 61, 85, 90], "basi": [60, 61, 85, 90, 94, 139, 175], "measure_customwaveform": [60, 61, 63, 173], "measure_const": [60, 171], "probepulse_customwaveform": [60, 171], "dispers": [61, 62], "constant": [61, 62, 84, 135, 171, 176], "acquisition_delai": [61, 62, 63], "acquisit": [61, 62, 63, 109, 116, 171, 176], "acquisition_typ": [61, 62], "threshold": [61, 62, 118], "amplitude_i": [61, 62, 63, 72, 73, 74, 75, 76, 77, 173], "amplitude_q": [61, 62, 63, 72, 73, 74, 75, 76, 77, 173], "integration_length": [61, 62, 63, 171], "integr": [61, 62, 63, 103, 111, 118, 119, 137, 171, 176], "integration_threshold": [61, 62], "integration_weights_i": [61, 62], "weight": [61, 62, 111, 118, 171], "dtype": [61, 62, 132, 134, 135, 136, 137, 173], "float64": [61, 62], "integration_weights_q": [61, 62], "dimension": 62, "len": 62, "intermedi": [62, 173], "IF": 62, "center": [62, 103, 135, 136, 137], "offset": [62, 115, 135, 137], "readouttrigg": [62, 63, 108, 118, 152, 172, 174], "_multiplexed_timebox": 62, "multiplexedprobetimebox": [62, 151, 171], "probe_timebox": 62, "_time_trac": 62, "time_trac": [62, 63, 109], "_build_instruct": [62, 63], "waveform_param": [62, 63], "root_param": [62, 63], "if_freq": 62, "acquisitionmethod": [62, 63, 108, 111, 116, 119], "do_acquisit": 62, "nake": 62, "multiplex": [62, 85, 152, 171], "trigger": [62, 63, 116, 125, 152, 171, 176], "goe": 62, "maintain": 62, "backward": [62, 79], "rout": [62, 118], "probelin": [62, 172, 176], "behav": [62, 110, 121], "featur": [62, 173, 174], "pick": 62, "anywher": [62, 118, 171], "pass": [62, 68, 69, 70, 171, 176], "acquisition_dur": 62, "trace": [62, 63], "record": 62, "acqusit": 62, "contrari": 63, "probl": 63, "exchang": 64, "invari": 64, "span": 64, "00": 64, "rangl": [64, 82], "01": 64, "swap": 64, "anyth": [64, 173], "orthogon": [64, 173], "involut": 64, "_": 64, "i_": 64, "langl": 64, "undefin": [64, 172], "complex": [64, 111, 173, 176, 178], "degre": [64, 92], "freedom": [64, 176], "continuum": 64, "cancel": 64, "due": [64, 66, 88, 172], "movemark": [64, 66, 171], "move_customwaveform": [64, 65, 67, 69, 171], "move_crf_crf": [64, 171], "move_tgss_crf": 64, "detun": [65, 66, 67, 68, 69, 171], "bookkeep": 66, "unknown": [66, 139, 165], "pair": [66, 115, 139, 173], "back": [66, 139, 146], "came": 66, "sandwich": [66, 69, 70, 171], "At": [66, 173], "annot": [66, 68, 175], "mark": [66, 175], "counteract": 66, "accumul": 66, "proport": 66, "sum": [66, 69, 115, 126, 132, 134, 136, 137, 155, 178], "virtualrz": [66, 68, 69, 90, 108, 172], "complet": [66, 172], "apply_move_gate_phase_correct": [66, 171], "track": [66, 126, 147, 171, 175, 178], "right": [68, 172, 175, 176, 178], "link": [68, 131, 171, 175], "noth": [68, 123, 125, 143, 145, 149, 150, 173, 175], "explicit": [68, 171, 172], "aforement": [68, 126, 147, 173], "marker": 68, "post": 68, "compil": [68, 70, 101, 110, 174, 175, 178], "apply_detuning_correct": 69, "level": [69, 70, 139, 172, 173, 174, 176, 178], "validate_prx": 70, "prepar": [70, 175], "conform": 70, "constraint": [70, 115, 172, 176], "unmodifi": 70, "x": [71, 73, 75, 78, 79, 92, 94, 171, 173, 177], "r_": [71, 73, 90], "phi": [71, 73, 87, 90, 94, 95, 96, 134, 161, 171], "theta": [71, 73, 90, 94, 95, 96, 137, 161, 171], "co": [71, 94, 132, 134], "y": [71, 78, 92, 94, 96, 171], "sin": [71, 94, 135], "r_z": [71, 73, 87, 90, 94, 95], "r_x": 71, "dagger": 71, "around": [71, 92, 94, 136, 161], "li": 71, "bloch": [71, 94, 173], "sphere": [71, 94, 173], "prx_gateimplement": [71, 79], "prx_singlepulse_gateimplement": [71, 72, 73], "prx_customwaveform": [71, 74, 76, 171, 173], "prx_draggaussian": 71, "prx_dragcosinerisefal": 71, "prx_customwaveformssx": [71, 75, 77, 171], "prx_draggaussiansx": [71, 171], "prx_dragcosinerisefallsx": [71, 171], "iq": [72, 73, 74, 75, 76, 77, 79, 101, 102, 111, 115, 118, 119, 161, 167, 170], "hot": [72, 73], "swappabl": [72, 73], "rest_of_calibration_data": [72, 73], "x_pi": [72, 74, 171], "sx": [73, 93, 171], "manipul": [73, 173], "formula": 73, "fuse": 73, "rz_after": [73, 75, 77], "rz_befor": [73, 75, 77, 171], "sqrt": [73, 75, 92, 171], "cosinerisefallderiv": [74, 75, 131], "vz": [75, 77], "prx_customwaveformsvz": [75, 77], "truncatedgaussian": [76, 77, 173], "tg": [76, 77], "truncatedgaussianderiv": [76, 77, 173], "gaussian": [77, 173], "rx": [78, 176, 178], "ry": [78, 171, 178], "xy_gat": 78, "static": [79, 132, 134, 136, 137, 152, 155, 171], "_single_iq_puls": [79, 171], "resonantli": 79, "x_": 79, "linear": [79, 132, 133], "linearli": [79, 173], "scale": [79, 113, 117, 172, 173], "adjust": [79, 161, 171, 172, 176], "iq_puls": [79, 171], "2x2": [80, 91, 96], "gate_nam": 81, "impl_class": 81, "set_as_default": 81, "quantum_op_spec": [81, 173], "split": [81, 172], "human": [81, 155, 172, 173], "readabl": [81, 155, 172, 175], "python": [81, 157, 158, 171, 173], "previous": [81, 171], "constructor": [81, 125], "miss": 81, "suitabl": 81, "qb": 81, "reset_condit": [82, 176], "reset_wait": [82, 171], "__default_feedback": 83, "doubl": [83, 84], "underscor": [83, 84], "emphas": [83, 84], "fact": [83, 84], "manual": [83, 84, 134, 173], "__reset": 84, "reset": [85, 86, 113, 139, 171, 172, 173, 176], "necessari": [85, 143, 172, 173, 178], "accommod": 85, "upon": 85, "relax": [86, 171], "compar": [86, 118, 125, 171], "shot": [86, 172], "destroi": 86, "wait_box": 86, "rz_virtual": 87, "rz_acstarkshift": [87, 89], "rz_acstarkshift_cosinerisefal": 87, "strong": 88, "off": [88, 171], "lead": [88, 171], "shift": 88, "ac_stark_puls": 88, "ac_stark_waveform": 89, "increment": [89, 90, 113, 120, 161, 171], "techniqu": [90, 95], "oscil": [90, 120, 161], "shortest": 90, "algebra": [90, 120], "commut": [90, 161], "toward": 90, "hit": 90, "elimin": 90, "multi": 90, "hold": [90, 175], "diagon": 90, "immedi": [90, 143, 171], "conjug": 90, "alpha": [90, 132, 133], "accomplish": 90, "assumpt": [90, 137], "negat": 90, "r": [92, 135, 177], "sigma": [92, 173, 177], "_x": 92, "xz": 92, "90": [92, 177], "sxgate": [92, 171], "limit": [93, 167, 170, 171, 175, 178], "parametr": [94, 137, 173, 177], "euler": [94, 95], "lambda": [94, 95, 171, 173], "subsequ": [94, 175], "r_y": [94, 95], "express": [94, 137, 175], "h": 94, "8": [94, 175], "http": [94, 171, 175], "openqasm": 94, "com": 94, "languag": [94, 172, 175], "html": [94, 130, 171], "ugat": [94, 171], "lam": [95, 96], "decomposit": 95, "cdot": 95, "probechannelproperti": 98, "channelconfigur": [98, 104], "realchannelconfig": [98, 100, 102], "iqchannelconfig": 98, "channeldescript": [98, 167, 168], "instruction_t": 100, "uniqu": [100, 139, 172, 173], "waveform_t": 100, "add_instruct": 100, "integ": [100, 101, 112, 155, 178], "similar": [100, 171, 173], "manner": 100, "instruction_duration_granular": [101, 103], "instruction_duration_min": [101, 103, 107], "compatible_instruct": [101, 103, 163], "is_iq": [101, 103], "is_virtu": [101, 103], "blocks_compon": [101, 103], "zi": 101, "hdawg": 101, "shfsg": 101, "shfqa": 101, "32": [101, 172], "16": [101, 125, 172, 177], "hack": 101, "frontend": 101, "sent": [101, 171, 172, 175], "might": [101, 172, 173, 176, 178], "duration_to_sampl": 101, "duration_to_second": 101, "duration_to_int_sampl": 101, "messag": [101, 141, 155], "check_min_sampl": 101, "close": [101, 178], "test": 101, "output": [101, 110, 121, 130, 139, 171, 172, 176, 178], "unaccept": 101, "round_duration_to_granular": 101, "round_up": [101, 107], "force_min_dur": [101, 107], "closest": [101, 107], "upconvers": [102, 120], "center_frequ": 103, "integration_start_dead_tim": 103, "integration_stop_dead_tim": 103, "dead": 103, "real": [104, 113, 117, 118, 137, 172], "flux_control": 105, "readout_control": 105, "intern": [105, 171, 172, 178], "standard": [106, 178], "flat": 106, "channel_properti": [106, 125, 148], "largest": 107, "realpuls": [108, 167, 169, 170, 173], "multiplexediqpuls": [108, 116], "timetrac": 108, "complexintegr": [108, 118], "thresholdstatediscrimin": 108, "delay_sampl": [109, 111, 118, 119], "acquir": [109, 116, 172], "qb1__readout": 109, "window": [109, 119, 132, 134, 135, 136, 137], "strictli": [110, 172, 173], "strict": [110, 171, 172], "version": [110, 174, 175], "dd": 110, "outcom": 112, "choic": 112, "evalu": 112, "ok": [112, 113, 114, 117], "get_child_instruct": [112, 114], "child": [112, 114, 147, 148, 167, 170], "scale_i": [113, 173], "scale_q": [113, 173], "upconvert": 113, "envelop": [113, 177], "factor": [113, 117, 137, 173], "success": 113, "carrier": 113, "get_waveform": [113, 114, 117], "command": [114, 172, 176], "entri": [115, 173], "outsid": [115, 172, 173], "interv": [115, 172, 173], "truncat": [115, 146, 171], "neg": 115, "probe_puls": 116, "shape": [117, 132, 134, 135, 136, 137, 174], "feedback_signal_label": [118, 171], "boolean": 118, "transmit": 118, "field": [118, 173, 175], "duration_sampl": 119, "captur": [119, 174], "updat": [120, 171, 176], "sure": 121, "synchron": 125, "critic": 125, "account": [125, 137, 171], "pprint": 125, "time_unit": 125, "fix": [125, 172], "width": [125, 135, 136], "graphic": 125, "represent": [125, 155, 172], "symbol": 125, "keysview": 125, "mutat": [125, 126], "vice": [125, 126], "versa": [125, 126], "immut": [125, 126], "add_channel": 125, "channel_nam": [125, 178], "unchang": [125, 159], "front_pad": 125, "to_dur": 125, "variabl": [125, 147, 171], "front_pad_in_second": 125, "pad_to_hard_box": 125, "pad_to_hard_box_in_second": 125, "smallest": 125, "revers": 125, "preserv": [125, 143, 172, 178], "rear": 125, "reverse_hard_box": 125, "No": [125, 171], "synchronis": 125, "break": 125, "cleanup": [125, 171], "clean": [125, 171], "thing": 125, "has_content_in": 125, "keep": [126, 147], "_instruct": 126, "_durat": 126, "prepend": 126, "pop": 126, "idx": [126, 146], "1e": [127, 149, 150], "12": [127, 149, 150], "comp": [127, 171], "1281": 127, "visualis": [129, 171], "view": [130, 171], "browser": 130, "jupyt": 130, "notebook": 130, "ipython": 130, "core": [130, 171], "displai": [130, 175], "inspect": 130, "don": [131, 175], "serial": 131, "reimport": 131, "document": [131, 171, 175], "appear": [131, 172, 175], "chirp": [131, 133, 171], "chirpimag": [131, 171], "freq_start": [132, 133], "freq_stop": [132, 133], "05": [132, 133], "omega": 132, "f_": 132, "mathrm": 132, "d": [132, 155, 175, 177], "taper": 132, "rectangular": [132, 147], "hann": 132, "nyquist": 132, "zone": 132, "constrain": 132, "5": [132, 173, 175, 177, 178], "_sampl": [132, 134, 135, 136, 137, 173], "sample_coord": [132, 134, 135, 136, 137, 173], "coordin": [132, 134, 135, 136, 137], "non_timelike_attribut": [132, 134, 136, 137, 173], "timelik": [132, 134, 136, 137], "dimensionless": [132, 134, 136, 137], "invers": [132, 134, 136, 137], "5707963267948966": 133, "imaginari": 133, "period": 134, "sinusoid": [134, 135, 136], "p": [135, 177], "plateau": 135, "Its": [135, 172], "midpoint": [135, 137], "descript": [136, 155, 175], "detail": [136, 137, 139, 172, 174, 176], "middl": 136, "minim": [137, 143], "adiabat": [137, 177], "prior": 137, "optim": [137, 149, 171], "lambda_n": 137, "tau_": 137, "acceler": 137, "reconstruct": 137, "tau": 137, "lab": 137, "interpol": 137, "v": [137, 167, 170, 171], "voltag": 137, "go": [137, 173], "advis": [137, 175], "look": [137, 173], "mathemat": [137, 174], "heavi": 137, "coeffici": 137, "leakag": 137, "strength": 137, "squid": [137, 171], "asymmetri": [137, 171], "_sample_normalized_slepian": 137, "coord": 137, "_t_tau": 137, "num_sampl": 137, "129": 137, "convers": [137, 173, 175], "analyt": 137, "solut": 137, "therefor": [137, 172], "numer": 137, "scipi": [137, 171], "romb": 137, "form": [137, 171, 172, 173, 175], "_theta_tau": 137, "fourier": 137, "shown": [137, 171, 176], "tau_puls": 137, "quantum_op": 139, "short": [139, 149], "simpl": [139, 155, 172, 173, 177], "unambigu": [139, 172, 173], "subsystem": 139, "qumod": 139, "pictur": [139, 176], "famili": [139, 172], "plural": 139, "intent": 139, "target": [139, 171, 178], "callabl": [139, 173], "np": [139, 173, 176, 178], "lowest": [139, 172], "docstr": 139, "exact": [139, 173], "first_qubit_basis_ket": 139, "second_qubit_basis_ket": 139, "set_default_implement": [139, 173], "set_default_implementation_for_locu": [139, 173], "cal_data": 141, "impl": [141, 173], "noiseless": 143, "sync": 143, "try": 143, "segmentpoint": 143, "nonsolid": 144, "nevertheless": 144, "tol": [146, 149, 150], "frac": 146, "serv": 146, "pointer": 146, "smaller": [146, 149, 150], "toler": 146, "remaind": 146, "next": [146, 172, 173, 176], "cut_tail": 146, "cut": 146, "tail": 146, "onward": 146, "rewind": 146, "fastforward": 146, "forward": 146, "child_schedul": [147, 148], "child_compon": [147, 148], "neighborhood_compon": [147, 148, 152, 155], "component_dur": [147, 148], "is_alap": [147, 148], "respect": [147, 153, 167, 170, 172, 173], "hard": [147, 171], "rag": [147, 149, 150], "edg": [147, 171], "earliest": [147, 148], "max": 147, "combin": [147, 175], "extend_hard_boundary_in_second": 147, "computational_reson": [147, 148], "These": [147, 148, 155, 172, 173, 178], "even": [147, 148, 171, 173, 175], "yet": [147, 148, 171], "ever": [147, 148], "alap": [147, 148, 154, 155, 172, 178], "As": [147, 148, 155, 173, 176], "late": [147, 148, 154, 155], "extend_hard_boundari": 148, "incom": 148, "extens": [149, 150, 171], "reserv": 151, "resourc": 151, "schedulingstrategi": [151, 152, 153, 155, 178], "locus_compon": [152, 155, 173], "asap": [152, 154, 155, 172, 176, 178], "from_readout_trigg": 152, "readout_trigg": 152, "probe_channel": 152, "block_channel": 152, "block_dur": 152, "soon": [154, 155, 171, 176], "fragment": 155, "accord": [155, 178], "union": [155, 175, 178], "made": [155, 173, 174, 175, 178], "rule": [155, 161, 171, 172, 173, 178], "operand": [155, 178], "pipe": [155, 178], "group": [155, 173, 178], "element": [155, 171, 172, 178], "let": [155, 173], "a_then_b": 155, "c_then_d": 155, "set_alap": [155, 178], "abcd": 155, "abb": 155, "ccd": 155, "all_togeth": 155, "dictat": 155, "flatten": 155, "ancestor": 155, "set_asap": 155, "print": [155, 171, 175, 178], "_idx": 155, "type_hint": 158, "typehint": 158, "merge_non": 159, "leav": 159, "psi_1": 161, "psi_2": 161, "decrement": 161, "beforehand": 161, "opposit": 161, "direct": [161, 175], "playlistvalidationerror": 162, "awgschedulevalidationdata": [162, 167], "awgschedulevalidationerror": 162, "invalidinstructionerror": 162, "sampling_r": 163, "min_number_of_sampl": 163, "fail": [164, 166], "issue_str": 165, "encount": 165, "channel_descript": [167, 168], "device_constraint": [167, 168, 170], "minimum": [167, 170, 172], "register_gate_implement": 171, "imposs": 171, "retain": [171, 175], "bump": 171, "rapidjson": 171, "issu": [171, 175], "sw": 171, "685": 171, "x90": 171, "were": 171, "though": [171, 172, 173], "refactor": 171, "codebas": 171, "lint": 171, "467": 171, "speed": 171, "reshap": 171, "faster": 171, "neither": [171, 173], "assing": 171, "signific": 171, "speedup": 171, "anywai": 171, "diffrenet": 171, "broader": 171, "numpi": [171, 178], "verifi": 171, "compatibili": 171, "ruff": 171, "migrat": 171, "guid": 171, "org": [171, 175], "doc": [171, 173], "stabl": 171, "numpy_2_0_migration_guid": 171, "builtin": 171, "easili": [171, 174, 178], "quantumcircuit": 171, "extract": 171, "crf_acstarkcrf": 171, "slepian_acstarkcrf": 171, "repo": 171, "organ": [171, 178], "1042": 171, "disabl": 171, "horizont": 171, "scroll": 171, "toggl": 171, "cover": 171, "concept": [171, 173, 174], "usag": [171, 173], "531": 171, "gitlab": 171, "public": 171, "page": [171, 174, 175], "776": 171, "didn": 171, "mr": 171, "514": 171, "client": [171, 172, 173, 174], "licens": [171, 174], "apach": [171, 175], "extlink": 171, "sphinx": 171, "916": 171, "intersphinx": 171, "665": 171, "becaus": [171, 173], "proper": 171, "realiz": [171, 177], "former": 171, "semant": [171, 172], "disturb": 171, "774": 171, "leak": 171, "web": 171, "artifact": 171, "resetwait": 171, "comfort": [171, 173], "timelin": [171, 172], "broken": 171, "redisplai": 171, "upcom": 171, "releas": 171, "prefer": [171, 173, 175], "font": 171, "viewer": 171, "358": 171, "typo": 171, "api": [171, 173, 174, 178], "workflow": [171, 178], "meth": 171, "pulla": [171, 174, 178], "potenti": 171, "crash": 171, "discoveri": 171, "throw": 171, "sc": 171, "nonsens": 171, "mcm": 171, "cc_prx": [171, 176], "merge_dict": 171, "crf_crf": 171, "interfac": [171, 173, 175], "feedback_label": 171, "renam": 171, "similarli": [171, 173], "conditional_prx": 171, "hopefulli": 171, "yml": 171, "conditionalreset": 171, "mid": 171, "constant_qnd": 171, "qndness": 171, "phase_increment_befor": 171, "transform": [171, 172, 174, 175], "sign": 171, "phase_transform": 171, "fulfil": 171, "satisfi": [171, 176], "conditionalprx": 171, "accept": [171, 175], "signifi": 171, "weigth": 171, "canon": 171, "whitelist": 171, "2112": 171, "write": [171, 173, 175], "1831": 171, "drag_crf_sx": 171, "drag_gaussian_sx": 171, "prx_u": 171, "prx_sx": 171, "_x_pi_puls": 171, "register_implement": [171, 172, 173], "547": 171, "prioritis": 171, "1929": 171, "1468": 171, "programm": 171, "1925": 171, "crude": 171, "visual": [171, 172, 176], "measure_nop": 171, "small": [171, 172], "validate_move_instruct": 171, "2056": 171, "pipelin": [171, 176], "packag": 171, "give": [172, 173, 175, 178], "overview": 172, "main": [172, 173], "terminologi": 172, "deliv": 172, "send": [172, 176], "assembli": 172, "batch": 172, "summar": 172, "imag": [172, 176], "illustr": [172, 176], "visibl": 172, "microwav": [172, 174], "ambigu": 172, "machin": 172, "subject": [172, 175], "violat": 172, "concern": 172, "philosophi": 172, "inaccess": 172, "attempt": 172, "smart": 172, "magic": 172, "inconsist": 172, "transpar": 172, "technic": 172, "apart": 172, "few": 172, "instant": 172, "thought": [172, 176], "desir": [172, 178], "read": [172, 176, 178], "importantli": 172, "disjoint": [172, 178], "partli": 172, "figur": [172, 176], "demonstr": 172, "explain": 172, "necessarili": [172, 173, 175], "variou": [172, 173], "runtim": [172, 176, 178], "build_quantum_op": 172, "bridg": 172, "gap": 172, "collect": [172, 173], "repeat": [172, 178], "repetit": 172, "encod": 172, "aim": 172, "memori": 172, "fit": [172, 175], "chunk": 172, "inspect_playlist": 172, "neat": 172, "metadata": 173, "question": [173, 178], "cnot": 173, "NOT": 173, "On": [173, 176], "hand": 173, "frozen": 173, "programmat": 173, "procedur": 173, "invok": 173, "random": 173, "benchmark": 173, "getter": 173, "qc": 173, "introduc": 173, "emphasi": 173, "def": 173, "code": [173, 175, 176], "_default": 173, "implementation_": 173, "default_prx_qb1": 173, "special_prx_qb1": 173, "my_special_prx": 173, "default_box": 173, "chain": [173, 176], "default_cz_box": 173, "pure": 173, "develop": 173, "choos": [173, 175], "thumb": 173, "rest": 173, "simplifi": [173, 176], "educ": 173, "__class__": 173, "__name__": 173, "low": 173, "subsect": 173, "relai": 173, "live": 173, "denot": 173, "asymmetr": 173, "tri": 173, "replic": 173, "mandatori": 173, "alter": 173, "electron": [173, 175], "physcial": 173, "averag": 173, "mu": 173, "spread": 173, "recip": 173, "offset_coord": 173, "exp": 173, "resampl": 173, "understand": [173, 176, 177], "unitless": 173, "scalar_coeffieci": 173, "quick": [173, 174, 178], "simplest": 173, "composteg": 173, "compositehadamard": 173, "hadamard": 173, "_this_": 173, "member_prx": 173, "latter": 173, "onelin": 173, "prx_mycoolwaveform": 173, "coolwaveformi": 173, "coolwaveformq": 173, "my": 173, "cool": 173, "cz_mycoolwaveform": 173, "coolcouplerwaveform": 173, "coolqubitwaveform": 173, "measure_mycoolwaveform": 173, "preload": 173, "altogeth": 173, "snippet": 173, "cnot_matrix": 173, "cnot_op": 173, "my_build": 173, "my_cnot_impl": 173, "implementation_class": 173, "mycnotclass": 173, "access": [173, 178], "7": [174, 175], "24": 174, "date": [174, 175], "2025": 174, "02": 174, "high": [174, 177], "unifi": 174, "hide": 174, "But": 174, "framework": [174, 178], "machineri": 174, "standalon": 174, "librari": [174, 176], "encourag": [174, 178], "familiar": 174, "especi": [174, 178], "miscellan": 174, "pitfal": 174, "changelog": 174, "search": 174, "januari": 175, "2004": [175, 177], "www": 175, "AND": 175, "FOR": 175, "reproduct": 175, "distribut": 175, "shall": 175, "9": [175, 176, 178], "licensor": 175, "copyright": 175, "owner": 175, "entiti": 175, "author": 175, "grant": 175, "legal": 175, "power": 175, "indirect": 175, "manag": 175, "contract": 175, "ii": 175, "ownership": 175, "fifti": 175, "percent": 175, "50": 175, "outstand": 175, "iii": 175, "benefici": 175, "exercis": 175, "permiss": 175, "modif": 175, "softwar": [175, 177], "mechan": 175, "translat": 175, "media": 175, "authorship": 175, "notic": [175, 178], "appendix": 175, "editori": 175, "revis": 175, "elabor": 175, "mere": 175, "bind": 175, "thereof": 175, "contribut": 175, "intention": 175, "submit": 175, "inclus": 175, "behalf": 175, "verbal": 175, "written": 175, "commun": 175, "mail": 175, "discuss": 175, "conspicu": 175, "contributor": 175, "whom": 175, "incorpor": 175, "herebi": 175, "perpetu": 175, "worldwid": 175, "exclus": 175, "charg": 175, "royalti": 175, "free": [175, 177], "irrevoc": 175, "reproduc": 175, "publicli": 175, "sublicens": 175, "patent": 175, "offer": 175, "sell": 175, "claim": 175, "infring": 175, "alon": 175, "institut": 175, "litig": 175, "cross": [175, 178], "counterclaim": 175, "lawsuit": 175, "alleg": 175, "contributori": 175, "termin": 175, "redistribut": 175, "medium": 175, "meet": 175, "recipi": 175, "promin": 175, "trademark": 175, "pertain": 175, "along": 175, "wherev": 175, "third": 175, "parti": 175, "alongsid": 175, "addendum": 175, "constru": 175, "statement": [175, 176], "compli": 175, "submiss": 175, "notwithstand": 175, "herein": 175, "supersed": 175, "agreement": 175, "regard": 175, "6": 175, "trade": 175, "servic": 175, "customari": 175, "disclaim": 175, "warranti": 175, "law": 175, "agre": 175, "AS": 175, "OR": 175, "OF": 175, "kind": 175, "titl": 175, "merchant": 175, "sole": 175, "risk": 175, "liabil": 175, "event": 175, "theori": 175, "tort": 175, "neglig": 175, "deliber": 175, "grossli": 175, "liabl": 175, "damag": 175, "incident": 175, "consequenti": 175, "aris": 175, "inabl": 175, "loss": 175, "goodwil": 175, "stoppag": 175, "failur": 175, "malfunct": 175, "commerci": 175, "fee": 175, "indemn": 175, "oblig": 175, "indemnifi": 175, "harmless": 175, "incur": 175, "assert": 175, "boilerpl": 175, "enclos": 175, "bracket": 175, "comment": 175, "recommend": 175, "easier": 175, "identif": 175, "archiv": 175, "2024": 175, "complianc": 175, "govern": 175, "show": 176, "flexibl": 176, "goal": 176, "finit": 176, "condition": 176, "qccsw": 176, "excut": 176, "last": [176, 178], "too": 176, "earli": 176, "facilit": 176, "effici": 176, "travel": 176, "conditionalinstrucion": 176, "equaival": 176, "feedaback_kei": 176, "reset_qb2": 176, "set_qb3_to_1": 176, "cc_prx_qb4": 176, "2nd": [176, 177], "prx_qb3": 176, "prx_qb4": 176, "80e": [176, 178], "clariti": 176, "bottom": 176, "master": 176, "slave": 176, "compens": 176, "trigger_delai": 176, "explan": 176, "end_delai": 176, "spcecifi": 176, "trigger_mast": 176, "emit": 176, "daisi": 176, "central": 176, "cabl": 176, "john": 177, "m": 177, "martini": 177, "michael": 177, "geller": 177, "_z": 177, "phy": 177, "rev": 177, "022307": 177, "aug": 177, "2014": 177, "arxiv": 177, "1402": 177, "5467": 177, "doi": 177, "1103": 177, "physreva": 177, "lyon": 177, "digit": 177, "prentic": 177, "hall": 177, "edit": 177, "isbn": 177, "978": 177, "0131089891": 177, "cecilia": 177, "gisel": 177, "jarn": 177, "heurist": 177, "approach": 177, "anal": 177, "afa": 177, "29": 177, "51": 177, "57": 177, "2018": 177, "1703": 177, "06812": 177, "31527": 177, "analesafa": 177, "eyob": 177, "sete": 177, "nicola": 177, "didier": 177, "angela": 177, "chen": 177, "shobhan": 177, "kulshreshtha": 177, "riccardo": 177, "manenti": 177, "stefano": 177, "poletto": 177, "entangl": 177, "appl": 177, "024050": 177, "2021": 177, "2104": 177, "03511": 177, "physrevappli": 177, "youngkyu": 177, "sung": 177, "leon": 177, "ding": 177, "jochen": 177, "braum\u00fcller": 177, "antti": 177, "veps\u00e4l\u00e4inen": 177, "bharath": 177, "kannan": 177, "morten": 177, "kjaergaard": 177, "ami": 177, "green": 177, "gabriel": 177, "o": 177, "samach": 177, "chri": 177, "mcnalli": 177, "david": 177, "kim": 177, "alexand": 177, "melvil": 177, "bethani": 177, "niedzielski": 177, "molli": 177, "schwartz": 177, "jonilyn": 177, "l": 177, "yoder": 177, "terri": 177, "orlando": 177, "simon": 177, "gustavsson": 177, "william": 177, "oliv": 177, "fidel": 177, "zz": 177, "021058": 177, "jun": 177, "2011": 177, "01261": 177, "physrevx": 177, "capabl": 178, "ask": 178, "recogn": 178, "cz_gate_impl": 178, "prx_gate_impl": 178, "measure_gate_impl": 178, "keyword": 178, "instanti": 178, "x180": 178, "y90": 178, "100e": 178, "decid": 178, "p1": 178, "p2": 178, "handi": 178, "everyth": 178, "circuit3": 178, "sub": 178, "word": 178, "slide": 178, "past": 178, "neighbour": 178, "talk": 178, "neighbourhood": 178, "worri": 178, "advers": 178, "ruin": 178, "best": 178, "arrang": 178, "aid": 178, "discov": 178, "all_qubit": 178, "get_neighbor_locus_compon": 178, "160e": 178, "cz_schedul": 178, "forget": 178}, "objects": {"iqm": [[1, 0, 0, "-", "pulse"]], "iqm.pulse": [[2, 0, 0, "-", "builder"], [8, 0, 0, "-", "circuit_operations"], [14, 0, 0, "-", "gate_implementation"], [31, 0, 0, "-", "gates"], [97, 0, 0, "-", "playlist"], [138, 0, 0, "-", "quantum_ops"], [143, 0, 0, "-", "scheduler"], [151, 0, 0, "-", "timebox"], [156, 0, 0, "-", "utils"], [162, 0, 0, "-", "validation"]], "iqm.pulse.builder": [[3, 1, 1, "", "CircuitOperation"], [4, 1, 1, "", "ScheduleBuilder"], [5, 4, 1, "", "build_quantum_ops"], [6, 4, 1, "", "load_config"], [7, 4, 1, "", "validate_quantum_circuit"]], "iqm.pulse.builder.CircuitOperation": [[3, 2, 1, "", "args"], [3, 2, 1, "", "implementation"], [3, 2, 1, "", "locus"], [3, 2, 1, "", "name"], [3, 3, 1, "", "validate"]], "iqm.pulse.builder.ScheduleBuilder": [[4, 3, 1, "", "_block_neighborhood_tetris"], [4, 2, 1, "", "_cache"], [4, 2, 1, "", "_channel_templates"], [4, 2, 1, "", "_channel_to_component"], [4, 2, 1, "", "_channel_types"], [4, 3, 1, "", "_find_implementation_and_locus"], [4, 3, 1, "", "_finish_schedule"], [4, 3, 1, "", "_get_channel_for_component"], [4, 3, 1, "", "_get_implementation"], [4, 3, 1, "", "_get_neighborhood_hard_boundary"], [4, 2, 1, "", "_require_scheduling_in_seconds"], [4, 3, 1, "", "_resolve_timebox_hard_boundary"], [4, 3, 1, "", "_resolve_timebox_tetris"], [4, 3, 1, "", "_set_gate_implementation_shortcut"], [4, 3, 1, "", "build_playlist"], [4, 3, 1, "", "circuit_to_timebox"], [4, 2, 1, "", "composite_cache"], [4, 3, 1, "", "get_calibration"], [4, 3, 1, "", "get_control_channels"], [4, 3, 1, "", "get_drive_channel"], [4, 3, 1, "", "get_flux_channel"], [4, 3, 1, "", "get_implementation"], [4, 3, 1, "", "get_implementation_class"], [4, 3, 1, "", "get_probe_channel"], [4, 3, 1, "", "get_virtual_feedback_channel_for"], [4, 3, 1, "", "get_virtual_feedback_channels"], [4, 3, 1, "", "has_calibration"], [4, 3, 1, "", "inject_calibration"], [4, 3, 1, "", "resolve_timebox"], [4, 3, 1, "", "timebox_to_schedule"], [4, 3, 1, "", "timeboxes_to_front_padded_playlist"], [4, 3, 1, "", "timeboxes_to_playlist"], [4, 3, 1, "", "validate_calibration"], [4, 3, 1, "", "validate_quantum_circuit"], [4, 3, 1, "", "wait"]], "iqm.pulse.circuit_operations": [[9, 1, 1, "", "CircuitOperationList"], [10, 4, 1, "", "get_unitary_from_circuit"], [11, 4, 1, "", "get_unitary_from_op"], [12, 4, 1, "", "reorder"], [13, 4, 1, "", "reshape_unitary"]], "iqm.pulse.circuit_operations.CircuitOperationList": [[9, 3, 1, "", "_set_specific_operation_shortcut"], [9, 3, 1, "", "add_op"], [9, 3, 1, "", "add_qubits"], [9, 3, 1, "", "barrier"], [9, 3, 1, "", "compose"], [9, 3, 1, "", "count_ops"], [9, 3, 1, "", "find_qubits"], [9, 3, 1, "", "get_unitary"], [9, 3, 1, "", "map_loci"]], "iqm.pulse.gate_implementation": [[15, 1, 1, "", "CompositeCache"], [16, 1, 1, "", "CompositeGate"], [17, 1, 1, "", "CustomIQWaveforms"], [18, 1, 1, "", "GateImplementation"], [19, 6, 1, "", "Locus"], [20, 6, 1, "", "NestedParams"], [21, 6, 1, "", "OCalibrationData"], [22, 6, 1, "", "OICalibrationData"], [23, 6, 1, "", "OILCalibrationData"], [24, 6, 1, "", "OpCalibrationDataTree"], [25, 6, 1, "", "PROBE_LINES_LOCUS_MAPPING"], [26, 6, 1, "", "SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING"], [27, 6, 1, "", "SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING"], [28, 6, 1, "", "SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING"], [29, 1, 1, "", "SinglePulseGate"], [30, 4, 1, "", "get_waveform_parameters"]], "iqm.pulse.gate_implementation.CompositeCache": [[15, 3, 1, "", "flush"], [15, 3, 1, "", "get"], [15, 3, 1, "", "set"]], "iqm.pulse.gate_implementation.CompositeGate": [[16, 3, 1, "", "build"], [16, 2, 1, "", "default_implementations"], [16, 2, 1, "", "registered_gates"]], "iqm.pulse.gate_implementation.CustomIQWaveforms": [[17, 2, 1, "", "dependent_waves"], [17, 2, 1, "", "excluded_parameters"], [17, 2, 1, "", "root_parameters"], [17, 2, 1, "", "wave_i"], [17, 2, 1, "", "wave_q"]], "iqm.pulse.gate_implementation.GateImplementation": [[18, 3, 1, "", "_call"], [18, 3, 1, "", "build"], [18, 3, 1, "", "convert_calibration_data"], [18, 3, 1, "", "duration_in_seconds"], [18, 3, 1, "", "get_custom_locus_mapping"], [18, 3, 1, "", "get_locus_mapping_name"], [18, 3, 1, "", "get_parameters"], [18, 3, 1, "", "needs_calibration"], [18, 2, 1, "", "parameters"], [18, 5, 1, "", "qualified_name"], [18, 2, 1, "", "special_implementation"], [18, 2, 1, "", "symmetric"], [18, 3, 1, "", "to_timebox"]], "iqm.pulse.gate_implementation.SinglePulseGate": [[29, 3, 1, "", "_call"], [29, 3, 1, "", "_get_pulse"], [29, 3, 1, "", "_get_pulse_channel"], [29, 3, 1, "", "duration_in_seconds"]], "iqm.pulse.gates": [[32, 0, 0, "-", "barrier"], [34, 0, 0, "-", "conditional"], [38, 0, 0, "-", "cz"], [50, 0, 0, "-", "delay"], [53, 0, 0, "-", "enums"], [58, 4, 1, "", "expose_implementation"], [59, 4, 1, "", "get_implementation_class"], [60, 0, 0, "-", "measure"], [64, 0, 0, "-", "move"], [71, 0, 0, "-", "prx"], [81, 4, 1, "", "register_implementation"], [82, 0, 0, "-", "reset"], [87, 0, 0, "-", "rz"], [92, 0, 0, "-", "sx"], [94, 0, 0, "-", "u"]], "iqm.pulse.gates.barrier": [[33, 1, 1, "", "Barrier"]], "iqm.pulse.gates.barrier.Barrier": [[33, 3, 1, "", "_call"], [33, 3, 1, "", "duration_in_seconds"], [33, 2, 1, "", "symmetric"]], "iqm.pulse.gates.conditional": [[35, 1, 1, "", "CCPRX_Composite"], [36, 1, 1, "", "CCPRX_Composite_DRAGCosineRiseFall"], [37, 1, 1, "", "CCPRX_Composite_DRAGGaussian"]], "iqm.pulse.gates.conditional.CCPRX_Composite": [[35, 3, 1, "", "_call"], [35, 2, 1, "", "parameters"]], "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall": [[36, 2, 1, "", "default_implementations"]], "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian": [[37, 2, 1, "", "default_implementations"]], "iqm.pulse.gates.cz": [[39, 1, 1, "", "CZ_CRF"], [40, 1, 1, "", "CZ_CRF_ACStarkCRF"], [41, 1, 1, "", "CZ_GaussianSmoothedSquare"], [42, 1, 1, "", "CZ_Slepian"], [43, 1, 1, "", "CZ_Slepian_ACStarkCRF"], [44, 1, 1, "", "CZ_Slepian_CRF"], [45, 1, 1, "", "CZ_TruncatedGaussianSmoothedSquare"], [46, 1, 1, "", "CouplerFluxPulseQubitACStarkPulseGate"], [47, 1, 1, "", "FluxPulseGate"], [48, 1, 1, "", "FluxPulseGate_CRF_CRF"], [49, 1, 1, "", "FluxPulseGate_TGSS_CRF"]], "iqm.pulse.gates.cz.CZ_CRF": [[39, 2, 1, "", "coupler_wave"], [39, 2, 1, "", "parameters"], [39, 2, 1, "", "qubit_wave"], [39, 2, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF": [[40, 2, 1, "", "coupler_wave"], [40, 2, 1, "", "parameters"], [40, 2, 1, "", "qubit_drive_wave"], [40, 2, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare": [[41, 2, 1, "", "coupler_wave"], [41, 2, 1, "", "parameters"], [41, 2, 1, "", "qubit_wave"], [41, 2, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_Slepian": [[42, 2, 1, "", "coupler_wave"], [42, 2, 1, "", "parameters"], [42, 2, 1, "", "qubit_wave"], [42, 2, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF": [[43, 2, 1, "", "coupler_wave"], [43, 2, 1, "", "parameters"], [43, 2, 1, "", "qubit_drive_wave"], [43, 2, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_Slepian_CRF": [[44, 2, 1, "", "coupler_wave"], [44, 2, 1, "", "parameters"], [44, 2, 1, "", "qubit_wave"], [44, 2, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare": [[45, 2, 1, "", "coupler_wave"], [45, 2, 1, "", "parameters"], [45, 2, 1, "", "qubit_wave"], [45, 2, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate": [[46, 3, 1, "", "_ac_stark_pulse"], [46, 3, 1, "", "_call"], [46, 2, 1, "", "coupler_wave"], [46, 3, 1, "", "duration_in_seconds"], [46, 2, 1, "", "excluded_parameters"], [46, 3, 1, "", "get_locus_mapping_name"], [46, 2, 1, "", "qubit_drive_wave"]], "iqm.pulse.gates.cz.FluxPulseGate": [[47, 3, 1, "", "_call"], [47, 2, 1, "", "coupler_wave"], [47, 3, 1, "", "duration_in_seconds"], [47, 2, 1, "", "excluded_parameters"], [47, 3, 1, "", "get_locus_mapping_name"], [47, 2, 1, "", "qubit_wave"], [47, 2, 1, "", "root_parameters"]], "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF": [[48, 2, 1, "", "coupler_wave"], [48, 2, 1, "", "parameters"], [48, 2, 1, "", "qubit_wave"], [48, 2, 1, "", "symmetric"]], "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF": [[49, 2, 1, "", "coupler_wave"], [49, 2, 1, "", "parameters"], [49, 2, 1, "", "qubit_wave"], [49, 2, 1, "", "symmetric"]], "iqm.pulse.gates.delay": [[51, 6, 1, "", "DELAY_MAX_DURATION_SECONDS"], [52, 1, 1, "", "Delay"]], "iqm.pulse.gates.delay.Delay": [[52, 3, 1, "", "_call"], [52, 2, 1, "", "symmetric"]], "iqm.pulse.gates.enums": [[54, 6, 1, "", "TWO_QUBIT_UNITARIES"], [55, 1, 1, "", "TwoQubitGate"], [56, 6, 1, "", "XYGATE_UNITARIES"], [57, 1, 1, "", "XYGate"]], "iqm.pulse.gates.enums.TwoQubitGate": [[55, 2, 1, "", "CZ"], [55, 2, 1, "", "ISWAP"], [55, 2, 1, "", "SQRT_ISWAP"]], "iqm.pulse.gates.measure": [[61, 1, 1, "", "Measure_Constant"], [62, 1, 1, "", "Measure_CustomWaveforms"], [63, 1, 1, "", "ProbePulse_CustomWaveforms"]], "iqm.pulse.gates.measure.Measure_Constant": [[61, 2, 1, "", "dependent_waves"], [61, 2, 1, "", "parameters"], [61, 2, 1, "", "wave_i"], [61, 2, 1, "", "wave_q"]], "iqm.pulse.gates.measure.Measure_CustomWaveforms": [[62, 3, 1, "", "_build_instructions"], [62, 3, 1, "", "_call"], [62, 2, 1, "", "_multiplexed_timeboxes"], [62, 2, 1, "", "_time_traces"], [62, 2, 1, "", "dependent_waves"], [62, 3, 1, "", "duration_in_seconds"], [62, 3, 1, "", "get_locus_mapping_name"], [62, 3, 1, "", "probe_timebox"], [62, 2, 1, "", "root_parameters"], [62, 3, 1, "", "time_trace"]], "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms": [[63, 3, 1, "", "_build_instructions"], [63, 3, 1, "", "_call"], [63, 2, 1, "", "dependent_waves"], [63, 3, 1, "", "duration_in_seconds"], [63, 3, 1, "", "get_locus_mapping_name"], [63, 2, 1, "", "root_parameters"]], "iqm.pulse.gates.move": [[65, 1, 1, "", "MOVE_CRF_CRF"], [66, 1, 1, "", "MOVE_CustomWaveforms"], [67, 1, 1, "", "MOVE_TGSS_CRF"], [68, 1, 1, "", "MoveMarker"], [69, 4, 1, "", "apply_move_gate_phase_corrections"], [70, 4, 1, "", "validate_move_instructions"]], "iqm.pulse.gates.move.MOVE_CRF_CRF": [[65, 2, 1, "", "coupler_wave"], [65, 2, 1, "", "parameters"], [65, 2, 1, "", "qubit_wave"], [65, 2, 1, "", "symmetric"]], "iqm.pulse.gates.move.MOVE_CustomWaveforms": [[66, 3, 1, "", "_call"], [66, 2, 1, "", "coupler_wave"], [66, 2, 1, "", "parameters"], [66, 2, 1, "", "qubit_wave"], [66, 2, 1, "", "root_parameters"], [66, 2, 1, "", "symmetric"]], "iqm.pulse.gates.move.MOVE_TGSS_CRF": [[67, 2, 1, "", "coupler_wave"], [67, 2, 1, "", "parameters"], [67, 2, 1, "", "qubit_wave"], [67, 2, 1, "", "symmetric"]], "iqm.pulse.gates.move.MoveMarker": [[68, 2, 1, "", "duration"]], "iqm.pulse.gates.prx": [[72, 1, 1, "", "PRX_CustomWaveforms"], [73, 1, 1, "", "PRX_CustomWaveformsSX"], [74, 1, 1, "", "PRX_DRAGCosineRiseFall"], [75, 1, 1, "", "PRX_DRAGCosineRiseFallSX"], [76, 1, 1, "", "PRX_DRAGGaussian"], [77, 1, 1, "", "PRX_DRAGGaussianSX"], [78, 1, 1, "", "PRX_GateImplementation"], [79, 1, 1, "", "PRX_SinglePulse_GateImplementation"], [80, 4, 1, "", "get_unitary_prx"]], "iqm.pulse.gates.prx.PRX_CustomWaveforms": [[72, 3, 1, "", "_get_pulse"], [72, 2, 1, "", "dependent_waves"], [72, 2, 1, "", "root_parameters"]], "iqm.pulse.gates.prx.PRX_CustomWaveformsSX": [[73, 3, 1, "", "_call"], [73, 3, 1, "", "_get_pulse"], [73, 2, 1, "", "dependent_waves"], [73, 2, 1, "", "root_parameters"]], "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall": [[74, 3, 1, "", "_get_pulse"], [74, 2, 1, "", "dependent_waves"], [74, 2, 1, "", "excluded_parameters"], [74, 2, 1, "", "parameters"], [74, 2, 1, "", "wave_i"], [74, 2, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX": [[75, 3, 1, "", "_get_pulse"], [75, 2, 1, "", "dependent_waves"], [75, 2, 1, "", "excluded_parameters"], [75, 2, 1, "", "parameters"], [75, 2, 1, "", "wave_i"], [75, 2, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_DRAGGaussian": [[76, 2, 1, "", "dependent_waves"], [76, 2, 1, "", "parameters"], [76, 2, 1, "", "wave_i"], [76, 2, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_DRAGGaussianSX": [[77, 2, 1, "", "dependent_waves"], [77, 2, 1, "", "parameters"], [77, 2, 1, "", "wave_i"], [77, 2, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_GateImplementation": [[78, 3, 1, "", "_call"], [78, 3, 1, "", "clifford"], [78, 3, 1, "", "get_locus_mapping_name"], [78, 3, 1, "", "rx"], [78, 3, 1, "", "ry"]], "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation": [[79, 3, 1, "", "_call"], [79, 5, 1, "", "iq_pulse"]], "iqm.pulse.gates.reset": [[83, 6, 1, "", "RESET_FEEDBACK_KEY"], [84, 6, 1, "", "RESET_MEASUREMENT_KEY"], [85, 1, 1, "", "Reset_Conditional"], [86, 1, 1, "", "Reset_Wait"]], "iqm.pulse.gates.reset.Reset_Conditional": [[85, 3, 1, "", "_call"], [85, 3, 1, "", "get_locus_mapping_name"], [85, 2, 1, "", "registered_gates"]], "iqm.pulse.gates.reset.Reset_Wait": [[86, 3, 1, "", "_call"], [86, 3, 1, "", "duration_in_seconds"], [86, 3, 1, "", "get_custom_locus_mapping"], [86, 2, 1, "", "parameters"], [86, 3, 1, "", "wait_box"]], "iqm.pulse.gates.rz": [[88, 1, 1, "", "RZ_ACStarkShift"], [89, 1, 1, "", "RZ_ACStarkShift_CosineRiseFall"], [90, 1, 1, "", "RZ_Virtual"], [91, 4, 1, "", "get_unitary_rz"]], "iqm.pulse.gates.rz.RZ_ACStarkShift": [[88, 3, 1, "", "_ac_stark_pulse"], [88, 3, 1, "", "_call"], [88, 3, 1, "", "duration_in_seconds"]], "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall": [[89, 2, 1, "", "ac_stark_waveform"], [89, 2, 1, "", "parameters"], [89, 2, 1, "", "symmetric"]], "iqm.pulse.gates.rz.RZ_Virtual": [[90, 3, 1, "", "_call"], [90, 3, 1, "", "duration_in_seconds"], [90, 3, 1, "", "get_locus_mapping_name"], [90, 2, 1, "", "parameters"]], "iqm.pulse.gates.sx": [[93, 1, 1, "", "SXGate"]], "iqm.pulse.gates.sx.SXGate": [[93, 3, 1, "", "_call"], [93, 2, 1, "", "registered_gates"]], "iqm.pulse.gates.u": [[95, 1, 1, "", "UGate"], [96, 4, 1, "", "get_unitary_u"]], "iqm.pulse.gates.u.UGate": [[95, 3, 1, "", "_call"], [95, 2, 1, "", "registered_gates"]], "iqm.pulse.playlist": [[98, 0, 0, "-", "channel"], [108, 0, 0, "-", "instructions"], [122, 0, 0, "-", "playlist"], [123, 0, 0, "-", "schedule"], [128, 0, 0, "-", "visualisation"], [131, 0, 0, "-", "waveforms"]], "iqm.pulse.playlist.channel": [[99, 1, 1, "", "ChannelConfiguration"], [100, 1, 1, "", "ChannelDescription"], [101, 1, 1, "", "ChannelProperties"], [102, 1, 1, "", "IQChannelConfig"], [103, 1, 1, "", "ProbeChannelProperties"], [104, 1, 1, "", "RealChannelConfig"], [105, 4, 1, "", "get_channel_properties"], [106, 4, 1, "", "get_channel_properties_from_station_settings"], [107, 4, 1, "", "round_duration_to_granularity_samples"]], "iqm.pulse.playlist.channel.ChannelDescription": [[100, 3, 1, "", "add_instruction"]], "iqm.pulse.playlist.channel.ChannelProperties": [[101, 2, 1, "", "blocks_component"], [101, 2, 1, "", "compatible_instructions"], [101, 3, 1, "", "duration_to_int_samples"], [101, 3, 1, "", "duration_to_samples"], [101, 3, 1, "", "duration_to_seconds"], [101, 2, 1, "", "instruction_duration_granularity"], [101, 2, 1, "", "instruction_duration_min"], [101, 2, 1, "", "is_iq"], [101, 2, 1, "", "is_virtual"], [101, 3, 1, "", "round_duration_to_granularity"], [101, 2, 1, "", "sample_rate"]], "iqm.pulse.playlist.channel.IQChannelConfig": [[102, 2, 1, "", "frequency"]], "iqm.pulse.playlist.channel.ProbeChannelProperties": [[103, 2, 1, "", "center_frequency"], [103, 2, 1, "", "integration_start_dead_time"], [103, 2, 1, "", "integration_stop_dead_time"]], "iqm.pulse.playlist.channel.RealChannelConfig": [[104, 2, 1, "", "sample_rate"]], "iqm.pulse.playlist.instructions": [[109, 1, 1, "", "AcquisitionMethod"], [110, 1, 1, "", "Block"], [111, 1, 1, "", "ComplexIntegration"], [112, 1, 1, "", "ConditionalInstruction"], [113, 1, 1, "", "IQPulse"], [114, 1, 1, "", "Instruction"], [115, 1, 1, "", "MultiplexedIQPulse"], [116, 1, 1, "", "ReadoutTrigger"], [117, 1, 1, "", "RealPulse"], [118, 1, 1, "", "ThresholdStateDiscrimination"], [119, 1, 1, "", "TimeTrace"], [120, 1, 1, "", "VirtualRZ"], [121, 1, 1, "", "Wait"]], "iqm.pulse.playlist.instructions.AcquisitionMethod": [[109, 2, 1, "", "delay_samples"], [109, 2, 1, "", "label"]], "iqm.pulse.playlist.instructions.ComplexIntegration": [[111, 2, 1, "", "weights"]], "iqm.pulse.playlist.instructions.ConditionalInstruction": [[112, 2, 1, "", "condition"], [112, 3, 1, "", "get_child_instructions"], [112, 2, 1, "", "outcomes"], [112, 3, 1, "", "validate"]], "iqm.pulse.playlist.instructions.IQPulse": [[113, 3, 1, "", "get_waveforms"], [113, 2, 1, "", "modulation_frequency"], [113, 2, 1, "", "phase"], [113, 2, 1, "", "phase_increment"], [113, 2, 1, "", "scale_i"], [113, 2, 1, "", "scale_q"], [113, 3, 1, "", "validate"], [113, 2, 1, "", "wave_i"], [113, 2, 1, "", "wave_q"]], "iqm.pulse.playlist.instructions.Instruction": [[114, 3, 1, "", "copy"], [114, 2, 1, "", "duration"], [114, 3, 1, "", "get_child_instructions"], [114, 3, 1, "", "get_waveforms"], [114, 3, 1, "", "validate"]], "iqm.pulse.playlist.instructions.MultiplexedIQPulse": [[115, 2, 1, "", "entries"]], "iqm.pulse.playlist.instructions.ReadoutTrigger": [[116, 2, 1, "", "acquisitions"], [116, 2, 1, "", "probe_pulse"]], "iqm.pulse.playlist.instructions.RealPulse": [[117, 3, 1, "", "get_waveforms"], [117, 2, 1, "", "scale"], [117, 3, 1, "", "validate"], [117, 2, 1, "", "wave"]], "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination": [[118, 2, 1, "", "feedback_signal_label"], [118, 2, 1, "", "threshold"]], "iqm.pulse.playlist.instructions.TimeTrace": [[119, 2, 1, "", "duration_samples"]], "iqm.pulse.playlist.instructions.VirtualRZ": [[120, 2, 1, "", "phase_increment"]], "iqm.pulse.playlist.schedule": [[124, 1, 1, "", "Nothing"], [125, 1, 1, "", "Schedule"], [126, 1, 1, "", "Segment"], [127, 6, 1, "", "TOLERANCE"]], "iqm.pulse.playlist.schedule.Schedule": [[125, 3, 1, "", "add_channels"], [125, 3, 1, "", "append"], [125, 3, 1, "", "channels"], [125, 3, 1, "", "cleanup"], [125, 3, 1, "", "copy"], [125, 5, 1, "", "duration"], [125, 3, 1, "", "duration_in_seconds"], [125, 3, 1, "", "extend"], [125, 3, 1, "", "front_pad"], [125, 3, 1, "", "front_pad_in_seconds"], [125, 3, 1, "", "has_content_in"], [125, 3, 1, "", "items"], [125, 3, 1, "", "pad_to_hard_box"], [125, 3, 1, "", "pad_to_hard_box_in_seconds"], [125, 3, 1, "", "pprint"], [125, 3, 1, "", "reverse"], [125, 3, 1, "", "reverse_hard_box"], [125, 3, 1, "", "validate"]], "iqm.pulse.playlist.schedule.Segment": [[126, 2, 1, "", "_duration"], [126, 2, 1, "", "_instructions"], [126, 3, 1, "", "append"], [126, 3, 1, "", "copy"], [126, 5, 1, "", "duration"], [126, 3, 1, "", "extend"], [126, 3, 1, "", "pop"], [126, 3, 1, "", "prepend"]], "iqm.pulse.playlist.visualisation": [[129, 0, 0, "-", "base"]], "iqm.pulse.playlist.visualisation.base": [[130, 4, 1, "", "inspect_playlist"]], "iqm.pulse.playlist.waveforms": [[132, 1, 1, "", "Chirp"], [133, 1, 1, "", "ChirpImag"], [134, 1, 1, "", "Cosine"], [135, 1, 1, "", "CosineRiseFallDerivative"], [136, 1, 1, "", "ModulatedCosineRiseFall"], [137, 1, 1, "", "Slepian"]], "iqm.pulse.playlist.waveforms.Chirp": [[132, 3, 1, "", "_sample"], [132, 3, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.waveforms.ChirpImag": [[133, 2, 1, "", "phase"]], "iqm.pulse.playlist.waveforms.Cosine": [[134, 3, 1, "", "_sample"], [134, 3, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.waveforms.CosineRiseFallDerivative": [[135, 3, 1, "", "_sample"]], "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall": [[136, 3, 1, "", "_sample"], [136, 3, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.waveforms.Slepian": [[137, 3, 1, "", "_sample"], [137, 3, 1, "", "_sample_normalized_slepian"], [137, 3, 1, "", "_t_tau"], [137, 3, 1, "", "_theta_tau"], [137, 3, 1, "", "non_timelike_attributes"]], "iqm.pulse.quantum_ops": [[139, 1, 1, "", "QuantumOp"], [140, 6, 1, "", "QuantumOpTable"], [141, 4, 1, "", "validate_locus_calibration"], [142, 4, 1, "", "validate_op_calibration"]], "iqm.pulse.quantum_ops.QuantumOp": [[139, 2, 1, "", "arity"], [139, 3, 1, "", "copy"], [139, 5, 1, "", "default_implementation"], [139, 2, 1, "", "defaults_for_locus"], [139, 2, 1, "", "factorizable"], [139, 3, 1, "", "get_default_implementation_for_locus"], [139, 2, 1, "", "implementations"], [139, 2, 1, "", "name"], [139, 2, 1, "", "params"], [139, 3, 1, "", "set_default_implementation"], [139, 3, 1, "", "set_default_implementation_for_locus"], [139, 2, 1, "", "symmetric"], [139, 2, 1, "", "unitary"]], "iqm.pulse.scheduler": [[144, 6, 1, "", "BLOCKING"], [145, 6, 1, "", "NONSOLID"], [146, 1, 1, "", "SegmentPointer"], [147, 4, 1, "", "extend_hard_boundary"], [148, 4, 1, "", "extend_hard_boundary_in_seconds"], [149, 4, 1, "", "extend_schedule"], [150, 4, 1, "", "extend_schedule_new"]], "iqm.pulse.scheduler.SegmentPointer": [[146, 2, 1, "", "TOL"], [146, 3, 1, "", "cut_tail"], [146, 3, 1, "", "fastforward"], [146, 2, 1, "", "frac"], [146, 3, 1, "", "get"], [146, 2, 1, "", "idx"], [146, 3, 1, "", "next"], [146, 5, 1, "", "remainder"], [146, 3, 1, "", "rewind"], [146, 2, 1, "", "source"], [146, 3, 1, "", "tail"]], "iqm.pulse.timebox": [[152, 1, 1, "", "MultiplexedProbeTimeBox"], [153, 1, 1, "", "SchedulingAlgorithm"], [154, 1, 1, "", "SchedulingStrategy"], [155, 1, 1, "", "TimeBox"]], "iqm.pulse.timebox.MultiplexedProbeTimeBox": [[152, 3, 1, "", "from_readout_trigger"]], "iqm.pulse.timebox.SchedulingAlgorithm": [[153, 2, 1, "", "HARD_BOUNDARY"], [153, 2, 1, "", "TETRIS"]], "iqm.pulse.timebox.SchedulingStrategy": [[154, 2, 1, "", "ALAP"], [154, 2, 1, "", "ASAP"]], "iqm.pulse.timebox.TimeBox": [[155, 2, 1, "", "atom"], [155, 3, 1, "", "atomic"], [155, 2, 1, "", "children"], [155, 3, 1, "", "composite"], [155, 2, 1, "", "label"], [155, 2, 1, "", "locus_components"], [155, 2, 1, "", "neighborhood_components"], [155, 3, 1, "", "print"], [155, 2, 1, "", "scheduling"], [155, 2, 1, "", "scheduling_algorithm"], [155, 3, 1, "", "set_alap"], [155, 3, 1, "", "set_asap"], [155, 3, 1, "", "validate"]], "iqm.pulse.utils": [[157, 4, 1, "", "load_yaml"], [158, 4, 1, "", "map_waveform_param_types"], [159, 4, 1, "", "merge_dicts"], [160, 4, 1, "", "normalize_angle"], [161, 4, 1, "", "phase_transformation"]], "iqm.pulse.validation": [[163, 1, 1, "", "AWGScheduleValidationData"], [164, 7, 1, "", "AWGScheduleValidationError"], [165, 7, 1, "", "InvalidInstructionError"], [166, 7, 1, "", "PlaylistValidationError"], [167, 4, 1, "", "validate_awg_and_schedule_compatibility"], [168, 4, 1, "", "validate_channel"], [169, 4, 1, "", "validate_instruction_and_wf_length"], [170, 4, 1, "", "validate_playlist_compatibility"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:property", "6": "py:data", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"api": 0, "refer": [0, 172, 177], "puls": [1, 5, 6, 7, 10, 11, 12, 13, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 51, 54, 56, 58, 59, 69, 70, 80, 81, 83, 84, 91, 96, 105, 106, 107, 127, 130, 140, 141, 142, 144, 145, 147, 148, 149, 150, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 174, 176], "builder": [2, 5, 6, 7], "circuitoper": 3, "schedulebuild": [4, 178], "iqm": [5, 6, 7, 10, 11, 12, 13, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 51, 54, 56, 58, 59, 69, 70, 80, 81, 83, 84, 91, 96, 105, 106, 107, 127, 130, 140, 141, 142, 144, 145, 147, 148, 149, 150, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 174], "build_quantum_op": 5, "load_config": 6, "validate_quantum_circuit": 7, "circuit_oper": [8, 10, 11, 12, 13], "circuitoperationlist": 9, "get_unitary_from_circuit": 10, "get_unitary_from_op": 11, "reorder": 12, "reshape_unitari": 13, "gate_implement": [14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30], "compositecach": 15, "compositeg": 16, "customiqwaveform": 17, "gateimplement": [18, 172, 173], "locu": 19, "nestedparam": 20, "ocalibrationdata": 21, "oicalibrationdata": 22, "oilcalibrationdata": 23, "opcalibrationdatatre": 24, "probe_lines_locus_map": 25, "single_components_with_drive_locus_map": 26, "single_components_with_flux_awg_locus_map": 27, "single_components_with_readout_locus_map": 28, "singlepulseg": 29, "get_waveform_paramet": 30, "gate": [31, 51, 54, 56, 58, 59, 69, 70, 80, 81, 83, 84, 91, 96, 173], "barrier": [32, 33], "condit": 34, "ccprx_composit": 35, "ccprx_composite_dragcosinerisefal": 36, "ccprx_composite_draggaussian": 37, "cz": 38, "cz_crf": 39, "cz_crf_acstarkcrf": 40, "cz_gaussiansmoothedsquar": 41, "cz_slepian": 42, "cz_slepian_acstarkcrf": 43, "cz_slepian_crf": 44, "cz_truncatedgaussiansmoothedsquar": 45, "couplerfluxpulsequbitacstarkpulseg": 46, "fluxpulseg": 47, "fluxpulsegate_crf_crf": 48, "fluxpulsegate_tgss_crf": 49, "delai": [50, 51, 52], "delay_max_duration_second": 51, "enum": [53, 54, 56], "two_qubit_unitari": 54, "twoqubitg": 55, "xygate_unitari": 56, "xygat": 57, "expose_implement": 58, "get_implementation_class": 59, "measur": [60, 176], "measure_const": 61, "measure_customwaveform": 62, "probepulse_customwaveform": 63, "move": [64, 69, 70], "move_crf_crf": 65, "move_customwaveform": 66, "move_tgss_crf": 67, "movemark": 68, "apply_move_gate_phase_correct": 69, "validate_move_instruct": 70, "prx": [71, 80], "prx_customwaveform": 72, "prx_customwaveformssx": 73, "prx_dragcosinerisefal": 74, "prx_dragcosinerisefallsx": 75, "prx_draggaussian": 76, "prx_draggaussiansx": 77, "prx_gateimplement": 78, "prx_singlepulse_gateimplement": 79, "get_unitary_prx": 80, "register_implement": 81, "reset": [82, 83, 84], "reset_feedback_kei": 83, "reset_measurement_kei": 84, "reset_condit": 85, "reset_wait": 86, "rz": [87, 91], "rz_acstarkshift": 88, "rz_acstarkshift_cosinerisefal": 89, "rz_virtual": 90, "get_unitary_rz": 91, "sx": 92, "sxgate": 93, "u": [94, 96], "ugat": 95, "get_unitary_u": 96, "playlist": [97, 105, 106, 107, 122, 127, 130, 172], "channel": [98, 105, 106, 107], "channelconfigur": 99, "channeldescript": 100, "channelproperti": 101, "iqchannelconfig": 102, "probechannelproperti": 103, "realchannelconfig": 104, "get_channel_properti": 105, "get_channel_properties_from_station_set": 106, "round_duration_to_granularity_sampl": 107, "instruct": [108, 114, 172, 173], "acquisitionmethod": 109, "block": [110, 144], "complexintegr": 111, "conditionalinstruct": 112, "iqpuls": 113, "multiplexediqpuls": 115, "readouttrigg": [116, 176], "realpuls": 117, "thresholdstatediscrimin": 118, "timetrac": 119, "virtualrz": 120, "wait": 121, "schedul": [123, 125, 127, 143, 144, 145, 147, 148, 149, 150, 172, 178], "noth": 124, "segment": 126, "toler": 127, "visualis": [128, 130], "base": [129, 130, 173], "inspect_playlist": 130, "waveform": [131, 173], "chirp": 132, "chirpimag": 133, "cosin": 134, "cosinerisefallderiv": 135, "modulatedcosinerisefal": 136, "slepian": 137, "quantum_op": [138, 140, 141, 142], "quantumop": [139, 172, 173], "quantumopt": 140, "validate_locus_calibr": 141, "validate_op_calibr": 142, "nonsolid": 145, "segmentpoint": 146, "extend_hard_boundari": 147, "extend_hard_boundary_in_second": 148, "extend_schedul": 149, "extend_schedule_new": 150, "timebox": [151, 155, 172, 178], "multiplexedprobetimebox": 152, "schedulingalgorithm": 153, "schedulingstrategi": 154, "util": [156, 157, 158, 159, 160, 161], "load_yaml": 157, "map_waveform_param_typ": 158, "merge_dict": 159, "normalize_angl": 160, "phase_transform": 161, "valid": [162, 164, 165, 166, 167, 168, 169, 170], "awgschedulevalidationdata": 163, "awgschedulevalidationerror": 164, "invalidinstructionerror": 165, "playlistvalidationerror": 166, "validate_awg_and_schedule_compat": 167, "validate_channel": 168, "validate_instruction_and_wf_length": 169, "validate_playlist_compat": 170, "changelog": 171, "version": 171, "7": 171, "24": 171, "2025": 171, "02": 171, "20": 171, "bug": 171, "fix": 171, "23": 171, "19": 171, "featur": [171, 178], "22": 171, "10": 171, "21": 171, "07": 171, "04": 171, "18": 171, "17": 171, "03": 171, "16": 171, "15": 171, "01": 171, "28": 171, "14": 171, "13": 171, "12": 171, "27": 171, "11": 171, "9": 171, "08": 171, "8": 171, "2024": 171, "30": 171, "6": 171, "5": 171, "4": 171, "3": 171, "09": 171, "2": 171, "05": 171, "1": 171, "0": 171, "29": 171, "break": 171, "chang": 171, "31": 171, "25": 171, "06": 171, "26": 171, "concept": 172, "class": [172, 173], "quick": 172, "custom": 173, "implement": 173, "calibr": 173, "data": 173, "more": 173, "regist": 173, "content": 174, "indic": 174, "tabl": 174, "licens": 175, "time": 176, "fast": 176, "feedback": 176, "us": 178, "creat": 178, "compos": 178, "resolv": 178, "miscellan": 178, "common": 178, "pitfal": 178}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinxcontrib.bibtex": 9, "sphinx": 60}, "alltitles": {"API Reference": [[0, "api-reference"]], "pulse": [[1, "module-iqm.pulse"]], "builder": [[2, "module-iqm.pulse.builder"]], "CircuitOperation": [[3, "circuitoperation"]], "ScheduleBuilder": [[4, "schedulebuilder"]], "iqm.pulse.builder.build_quantum_ops": [[5, "iqm-pulse-builder-build-quantum-ops"]], "iqm.pulse.builder.load_config": [[6, "iqm-pulse-builder-load-config"]], "iqm.pulse.builder.validate_quantum_circuit": [[7, "iqm-pulse-builder-validate-quantum-circuit"]], "circuit_operations": [[8, "module-iqm.pulse.circuit_operations"]], "CircuitOperationList": [[9, "circuitoperationlist"]], "iqm.pulse.circuit_operations.get_unitary_from_circuit": [[10, "iqm-pulse-circuit-operations-get-unitary-from-circuit"]], "iqm.pulse.circuit_operations.get_unitary_from_op": [[11, "iqm-pulse-circuit-operations-get-unitary-from-op"]], "iqm.pulse.circuit_operations.reorder": [[12, "iqm-pulse-circuit-operations-reorder"]], "iqm.pulse.circuit_operations.reshape_unitary": [[13, "iqm-pulse-circuit-operations-reshape-unitary"]], "gate_implementation": [[14, "module-iqm.pulse.gate_implementation"]], "CompositeCache": [[15, "compositecache"]], "CompositeGate": [[16, "compositegate"]], "CustomIQWaveforms": [[17, "customiqwaveforms"]], "GateImplementation": [[18, "gateimplementation"]], "iqm.pulse.gate_implementation.Locus": [[19, "iqm-pulse-gate-implementation-locus"]], "iqm.pulse.gate_implementation.NestedParams": [[20, "iqm-pulse-gate-implementation-nestedparams"]], "iqm.pulse.gate_implementation.OCalibrationData": [[21, "iqm-pulse-gate-implementation-ocalibrationdata"]], "iqm.pulse.gate_implementation.OICalibrationData": [[22, "iqm-pulse-gate-implementation-oicalibrationdata"]], "iqm.pulse.gate_implementation.OILCalibrationData": [[23, "iqm-pulse-gate-implementation-oilcalibrationdata"]], "iqm.pulse.gate_implementation.OpCalibrationDataTree": [[24, "iqm-pulse-gate-implementation-opcalibrationdatatree"]], "iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING": [[25, "iqm-pulse-gate-implementation-probe-lines-locus-mapping"]], "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING": [[26, "iqm-pulse-gate-implementation-single-components-with-drive-locus-mapping"]], "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING": [[27, "iqm-pulse-gate-implementation-single-components-with-flux-awg-locus-mapping"]], "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING": [[28, "iqm-pulse-gate-implementation-single-components-with-readout-locus-mapping"]], "SinglePulseGate": [[29, "singlepulsegate"]], "iqm.pulse.gate_implementation.get_waveform_parameters": [[30, "iqm-pulse-gate-implementation-get-waveform-parameters"]], "gates": [[31, "module-iqm.pulse.gates"]], "barrier": [[32, "module-iqm.pulse.gates.barrier"]], "Barrier": [[33, "barrier"]], "conditional": [[34, "module-iqm.pulse.gates.conditional"]], "CCPRX_Composite": [[35, "ccprx-composite"]], "CCPRX_Composite_DRAGCosineRiseFall": [[36, "ccprx-composite-dragcosinerisefall"]], "CCPRX_Composite_DRAGGaussian": [[37, "ccprx-composite-draggaussian"]], "cz": [[38, "module-iqm.pulse.gates.cz"]], "CZ_CRF": [[39, "cz-crf"]], "CZ_CRF_ACStarkCRF": [[40, "cz-crf-acstarkcrf"]], "CZ_GaussianSmoothedSquare": [[41, "cz-gaussiansmoothedsquare"]], "CZ_Slepian": [[42, "cz-slepian"]], "CZ_Slepian_ACStarkCRF": [[43, "cz-slepian-acstarkcrf"]], "CZ_Slepian_CRF": [[44, "cz-slepian-crf"]], "CZ_TruncatedGaussianSmoothedSquare": [[45, "cz-truncatedgaussiansmoothedsquare"]], "CouplerFluxPulseQubitACStarkPulseGate": [[46, "couplerfluxpulsequbitacstarkpulsegate"]], "FluxPulseGate": [[47, "fluxpulsegate"]], "FluxPulseGate_CRF_CRF": [[48, "fluxpulsegate-crf-crf"]], "FluxPulseGate_TGSS_CRF": [[49, "fluxpulsegate-tgss-crf"]], "delay": [[50, "module-iqm.pulse.gates.delay"]], "iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS": [[51, "iqm-pulse-gates-delay-delay-max-duration-seconds"]], "Delay": [[52, "delay"]], "enums": [[53, "module-iqm.pulse.gates.enums"]], "iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES": [[54, "iqm-pulse-gates-enums-two-qubit-unitaries"]], "TwoQubitGate": [[55, "twoqubitgate"]], "iqm.pulse.gates.enums.XYGATE_UNITARIES": [[56, "iqm-pulse-gates-enums-xygate-unitaries"]], "XYGate": [[57, "xygate"]], "iqm.pulse.gates.expose_implementation": [[58, "iqm-pulse-gates-expose-implementation"]], "iqm.pulse.gates.get_implementation_class": [[59, "iqm-pulse-gates-get-implementation-class"]], "measure": [[60, "module-iqm.pulse.gates.measure"]], "Measure_Constant": [[61, "measure-constant"]], "Measure_CustomWaveforms": [[62, "measure-customwaveforms"]], "ProbePulse_CustomWaveforms": [[63, "probepulse-customwaveforms"]], "move": [[64, "module-iqm.pulse.gates.move"]], "MOVE_CRF_CRF": [[65, "move-crf-crf"]], "MOVE_CustomWaveforms": [[66, "move-customwaveforms"]], "MOVE_TGSS_CRF": [[67, "move-tgss-crf"]], "MoveMarker": [[68, "movemarker"]], "iqm.pulse.gates.move.apply_move_gate_phase_corrections": [[69, "iqm-pulse-gates-move-apply-move-gate-phase-corrections"]], "iqm.pulse.gates.move.validate_move_instructions": [[70, "iqm-pulse-gates-move-validate-move-instructions"]], "prx": [[71, "module-iqm.pulse.gates.prx"]], "PRX_CustomWaveforms": [[72, "prx-customwaveforms"]], "PRX_CustomWaveformsSX": [[73, "prx-customwaveformssx"]], "PRX_DRAGCosineRiseFall": [[74, "prx-dragcosinerisefall"]], "PRX_DRAGCosineRiseFallSX": [[75, "prx-dragcosinerisefallsx"]], "PRX_DRAGGaussian": [[76, "prx-draggaussian"]], "PRX_DRAGGaussianSX": [[77, "prx-draggaussiansx"]], "PRX_GateImplementation": [[78, "prx-gateimplementation"]], "PRX_SinglePulse_GateImplementation": [[79, "prx-singlepulse-gateimplementation"]], "iqm.pulse.gates.prx.get_unitary_prx": [[80, "iqm-pulse-gates-prx-get-unitary-prx"]], "iqm.pulse.gates.register_implementation": [[81, "iqm-pulse-gates-register-implementation"]], "reset": [[82, "module-iqm.pulse.gates.reset"]], "iqm.pulse.gates.reset.RESET_FEEDBACK_KEY": [[83, "iqm-pulse-gates-reset-reset-feedback-key"]], "iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY": [[84, "iqm-pulse-gates-reset-reset-measurement-key"]], "Reset_Conditional": [[85, "reset-conditional"]], "Reset_Wait": [[86, "reset-wait"]], "rz": [[87, "module-iqm.pulse.gates.rz"]], "RZ_ACStarkShift": [[88, "rz-acstarkshift"]], "RZ_ACStarkShift_CosineRiseFall": [[89, "rz-acstarkshift-cosinerisefall"]], "RZ_Virtual": [[90, "rz-virtual"]], "iqm.pulse.gates.rz.get_unitary_rz": [[91, "iqm-pulse-gates-rz-get-unitary-rz"]], "sx": [[92, "module-iqm.pulse.gates.sx"]], "SXGate": [[93, "sxgate"]], "u": [[94, "module-iqm.pulse.gates.u"]], "UGate": [[95, "ugate"]], "iqm.pulse.gates.u.get_unitary_u": [[96, "iqm-pulse-gates-u-get-unitary-u"]], "playlist": [[97, "module-iqm.pulse.playlist"], [122, "module-iqm.pulse.playlist.playlist"]], "channel": [[98, "module-iqm.pulse.playlist.channel"]], "ChannelConfiguration": [[99, "channelconfiguration"]], "ChannelDescription": [[100, "channeldescription"]], "ChannelProperties": [[101, "channelproperties"]], "IQChannelConfig": [[102, "iqchannelconfig"]], "ProbeChannelProperties": [[103, "probechannelproperties"]], "RealChannelConfig": [[104, "realchannelconfig"]], "iqm.pulse.playlist.channel.get_channel_properties": [[105, "iqm-pulse-playlist-channel-get-channel-properties"]], "iqm.pulse.playlist.channel.get_channel_properties_from_station_settings": [[106, "iqm-pulse-playlist-channel-get-channel-properties-from-station-settings"]], "iqm.pulse.playlist.channel.round_duration_to_granularity_samples": [[107, "iqm-pulse-playlist-channel-round-duration-to-granularity-samples"]], "instructions": [[108, "module-iqm.pulse.playlist.instructions"]], "AcquisitionMethod": [[109, "acquisitionmethod"]], "Block": [[110, "block"]], "ComplexIntegration": [[111, "complexintegration"]], "ConditionalInstruction": [[112, "conditionalinstruction"]], "IQPulse": [[113, "iqpulse"]], "Instruction": [[114, "instruction"]], "MultiplexedIQPulse": [[115, "multiplexediqpulse"]], "ReadoutTrigger": [[116, "readouttrigger"]], "RealPulse": [[117, "realpulse"]], "ThresholdStateDiscrimination": [[118, "thresholdstatediscrimination"]], "TimeTrace": [[119, "timetrace"]], "VirtualRZ": [[120, "virtualrz"]], "Wait": [[121, "wait"]], "schedule": [[123, "module-iqm.pulse.playlist.schedule"]], "Nothing": [[124, "nothing"]], "Schedule": [[125, "schedule"]], "Segment": [[126, "segment"]], "iqm.pulse.playlist.schedule.TOLERANCE": [[127, "iqm-pulse-playlist-schedule-tolerance"]], "visualisation": [[128, "module-iqm.pulse.playlist.visualisation"]], "base": [[129, "module-iqm.pulse.playlist.visualisation.base"]], "iqm.pulse.playlist.visualisation.base.inspect_playlist": [[130, "iqm-pulse-playlist-visualisation-base-inspect-playlist"]], "waveforms": [[131, "module-iqm.pulse.playlist.waveforms"]], "Chirp": [[132, "chirp"]], "ChirpImag": [[133, "chirpimag"]], "Cosine": [[134, "cosine"]], "CosineRiseFallDerivative": [[135, "cosinerisefallderivative"]], "ModulatedCosineRiseFall": [[136, "modulatedcosinerisefall"]], "Slepian": [[137, "slepian"]], "quantum_ops": [[138, "module-iqm.pulse.quantum_ops"]], "QuantumOp": [[139, "quantumop"], [173, "quantumop"]], "iqm.pulse.quantum_ops.QuantumOpTable": [[140, "iqm-pulse-quantum-ops-quantumoptable"]], "iqm.pulse.quantum_ops.validate_locus_calibration": [[141, "iqm-pulse-quantum-ops-validate-locus-calibration"]], "iqm.pulse.quantum_ops.validate_op_calibration": [[142, "iqm-pulse-quantum-ops-validate-op-calibration"]], "scheduler": [[143, "module-iqm.pulse.scheduler"]], "iqm.pulse.scheduler.BLOCKING": [[144, "iqm-pulse-scheduler-blocking"]], "iqm.pulse.scheduler.NONSOLID": [[145, "iqm-pulse-scheduler-nonsolid"]], "SegmentPointer": [[146, "segmentpointer"]], "iqm.pulse.scheduler.extend_hard_boundary": [[147, "iqm-pulse-scheduler-extend-hard-boundary"]], "iqm.pulse.scheduler.extend_hard_boundary_in_seconds": [[148, "iqm-pulse-scheduler-extend-hard-boundary-in-seconds"]], "iqm.pulse.scheduler.extend_schedule": [[149, "iqm-pulse-scheduler-extend-schedule"]], "iqm.pulse.scheduler.extend_schedule_new": [[150, "iqm-pulse-scheduler-extend-schedule-new"]], "timebox": [[151, "module-iqm.pulse.timebox"]], "MultiplexedProbeTimeBox": [[152, "multiplexedprobetimebox"]], "SchedulingAlgorithm": [[153, "schedulingalgorithm"]], "SchedulingStrategy": [[154, "schedulingstrategy"]], "TimeBox": [[155, "timebox"]], "utils": [[156, "module-iqm.pulse.utils"]], "iqm.pulse.utils.load_yaml": [[157, "iqm-pulse-utils-load-yaml"]], "iqm.pulse.utils.map_waveform_param_types": [[158, "iqm-pulse-utils-map-waveform-param-types"]], "iqm.pulse.utils.merge_dicts": [[159, "iqm-pulse-utils-merge-dicts"]], "iqm.pulse.utils.normalize_angle": [[160, "iqm-pulse-utils-normalize-angle"]], "iqm.pulse.utils.phase_transformation": [[161, "iqm-pulse-utils-phase-transformation"]], "validation": [[162, "module-iqm.pulse.validation"]], "AWGScheduleValidationData": [[163, "awgschedulevalidationdata"]], "iqm.pulse.validation.AWGScheduleValidationError": [[164, "iqm-pulse-validation-awgschedulevalidationerror"]], "iqm.pulse.validation.InvalidInstructionError": [[165, "iqm-pulse-validation-invalidinstructionerror"]], "iqm.pulse.validation.PlaylistValidationError": [[166, "iqm-pulse-validation-playlistvalidationerror"]], "iqm.pulse.validation.validate_awg_and_schedule_compatibility": [[167, "iqm-pulse-validation-validate-awg-and-schedule-compatibility"]], "iqm.pulse.validation.validate_channel": [[168, "iqm-pulse-validation-validate-channel"]], "iqm.pulse.validation.validate_instruction_and_wf_length": [[169, "iqm-pulse-validation-validate-instruction-and-wf-length"]], "iqm.pulse.validation.validate_playlist_compatibility": [[170, "iqm-pulse-validation-validate-playlist-compatibility"]], "Changelog": [[171, "changelog"]], "Version 7.24 (2025-02-20)": [[171, "version-7-24-2025-02-20"]], "Bug fixes": [[171, "bug-fixes"], [171, "id15"], [171, "id47"], [171, "id52"], [171, "id53"], [171, "id62"], [171, "id63"], [171, "id68"], [171, "id70"], [171, "id71"], [171, "id73"], [171, "id103"]], "Version 7.23 (2025-02-19)": [[171, "version-7-23-2025-02-19"]], "Features": [[171, "features"], [171, "id1"], [171, "id4"], [171, "id5"], [171, "id8"], [171, "id10"], [171, "id13"], [171, "id14"], [171, "id16"], [171, "id17"], [171, "id20"], [171, "id23"], [171, "id26"], [171, "id29"], [171, "id32"], [171, "id35"], [171, "id37"], [171, "id40"], [171, "id43"], [171, "id46"], [171, "id48"], [171, "id49"], [171, "id54"], [171, "id59"], [171, "id64"], [171, "id66"], [171, "id67"], [171, "id69"], [171, "id72"], [171, "id75"], [171, "id77"], [171, "id80"], [171, "id81"], [171, "id82"], [171, "id83"], [171, "id86"], [171, "id87"], [171, "id89"], [171, "id92"], [171, "id93"], [171, "id94"], [171, "id95"], [171, "id96"], [171, "id97"], [171, "id98"], [171, "id99"], [171, "id102"], [171, "id104"], [171, "id107"], [171, "id109"], [171, "id110"], [171, "id113"]], "Version 7.22 (2025-02-10)": [[171, "version-7-22-2025-02-10"]], "Version 7.21 (2025-02-07)": [[171, "version-7-21-2025-02-07"]], "Version 7.20 (2025-02-04)": [[171, "version-7-20-2025-02-04"]], "Version 7.19 (2025-02-04)": [[171, "version-7-19-2025-02-04"]], "Bug Fixes": [[171, "id9"]], "Version 7.18 (2025-02-04)": [[171, "version-7-18-2025-02-04"]], "Version 7.17 (2025-02-03)": [[171, "version-7-17-2025-02-03"]], "Version 7.16 (2025-02-03)": [[171, "version-7-16-2025-02-03"]], "Version 7.15 (2025-01-28)": [[171, "version-7-15-2025-01-28"]], "Bug fix": [[171, "bug-fix"], [171, "id36"]], "Version 7.14 (2025-01-28)": [[171, "version-7-14-2025-01-28"]], "Version 7.13 (2025-01-28)": [[171, "version-7-13-2025-01-28"]], "Version 7.12 (2025-01-27)": [[171, "version-7-12-2025-01-27"]], "Version 7.11 (2025-01-24)": [[171, "version-7-11-2025-01-24"]], "Version 7.10 (2025-01-17)": [[171, "version-7-10-2025-01-17"]], "Version 7.9 (2025-01-08)": [[171, "version-7-9-2025-01-08"]], "Version 7.8 (2025-01-02)": [[171, "version-7-8-2025-01-02"]], "Version 7.7 (2024-12-30)": [[171, "version-7-7-2024-12-30"]], "Version 7.6 (2024-12-30)": [[171, "version-7-6-2024-12-30"]], "Version 7.5 (2024-12-12)": [[171, "version-7-5-2024-12-12"]], "Version 7.4 (2024-12-10)": [[171, "version-7-4-2024-12-10"]], "Version 7.3 (2024-12-09)": [[171, "version-7-3-2024-12-09"]], "Version 7.2 (2024-12-05)": [[171, "version-7-2-2024-12-05"]], "Version 7.1 (2024-12-04)": [[171, "version-7-1-2024-12-04"]], "Version 7.0 (2024-11-29)": [[171, "version-7-0-2024-11-29"]], "Breaking changes": [[171, "breaking-changes"], [171, "id65"], [171, "id74"], [171, "id76"], [171, "id88"], [171, "id108"]], "Version 6.14 (2024-11-27)": [[171, "version-6-14-2024-11-27"]], "Version 6.13 (2024-11-20)": [[171, "version-6-13-2024-11-20"]], "Version 6.12 (2024-11-19)": [[171, "version-6-12-2024-11-19"]], "Version 6.11 (2024-11-18)": [[171, "version-6-11-2024-11-18"]], "Version 6.10 (2024-11-15)": [[171, "version-6-10-2024-11-15"]], "Version 6.9 (2024-11-13)": [[171, "version-6-9-2024-11-13"]], "Version 6.8 (2024-11-12)": [[171, "version-6-8-2024-11-12"]], "Version 6.7 (2024-11-12)": [[171, "version-6-7-2024-11-12"]], "Version 6.6 (2024-11-08)": [[171, "version-6-6-2024-11-08"]], "Version 6.5 (2024-10-31)": [[171, "version-6-5-2024-10-31"]], "Version 6.4 (2024-10-30)": [[171, "version-6-4-2024-10-30"]], "Version 6.3 (2024-10-30)": [[171, "version-6-3-2024-10-30"]], "Version 6.2 (2024-10-28)": [[171, "version-6-2-2024-10-28"]], "Version 6.1 (2024-10-28)": [[171, "version-6-1-2024-10-28"]], "Version 6.0 (2024-10-25)": [[171, "version-6-0-2024-10-25"]], "Version 5.9 (2024-10-24)": [[171, "version-5-9-2024-10-24"]], "Version 5.8 (2024-10-21)": [[171, "version-5-8-2024-10-21"]], "Version 5.7 (2024-10-16)": [[171, "version-5-7-2024-10-16"]], "Version 5.6 (2024-10-16)": [[171, "version-5-6-2024-10-16"]], "Version 5.5 (2024-10-15)": [[171, "version-5-5-2024-10-15"]], "Version 5.4 (2024-10-15)": [[171, "version-5-4-2024-10-15"]], "Version 5.3 (2024-10-11)": [[171, "version-5-3-2024-10-11"]], "Version 5.2 (2024-10-11)": [[171, "version-5-2-2024-10-11"]], "Version 5.1 (2024-10-11)": [[171, "version-5-1-2024-10-11"]], "Version 5.0 (2024-10-08)": [[171, "version-5-0-2024-10-08"]], "Version 4.0 (2024-10-02)": [[171, "version-4-0-2024-10-02"]], "Version 3.5 (2024-09-25)": [[171, "version-3-5-2024-09-25"]], "Version 3.4 (2024-09-23)": [[171, "version-3-4-2024-09-23"]], "Version 3.3 (2024-09-19)": [[171, "version-3-3-2024-09-19"]], "Version 3.2 (2024-09-11)": [[171, "version-3-2-2024-09-11"]], "Version 3.1 (2024-09-11)": [[171, "version-3-1-2024-09-11"]], "Version 3.0 (2024-09-06)": [[171, "version-3-0-2024-09-06"]], "Version 2.13 (2024-09-04)": [[171, "version-2-13-2024-09-04"]], "Version 2.12 (2024-08-27)": [[171, "version-2-12-2024-08-27"]], "Version 2.11 (2024-08-26)": [[171, "version-2-11-2024-08-26"]], "Version 2.10 (2024-08-26)": [[171, "version-2-10-2024-08-26"]], "Version 2.9 (2024-08-23)": [[171, "version-2-9-2024-08-23"]], "Version 2.8 (2024-08-22)": [[171, "version-2-8-2024-08-22"]], "Version 2.7 (2024-08-16)": [[171, "version-2-7-2024-08-16"]], "Version 2.6 (2024-08-16)": [[171, "version-2-6-2024-08-16"]], "Version 2.5 (2024-08-15)": [[171, "version-2-5-2024-08-15"]], "Version 2.4 (2024-08-09)": [[171, "version-2-4-2024-08-09"]], "Version 2.3 (2024-08-05)": [[171, "version-2-3-2024-08-05"]], "Version 2.2 (2024-07-29)": [[171, "version-2-2-2024-07-29"]], "Version 2.1 (2024-07-23)": [[171, "version-2-1-2024-07-23"]], "Version 2.0 (2024-07-15)": [[171, "version-2-0-2024-07-15"]], "Version 1.6 (2024-07-12)": [[171, "version-1-6-2024-07-12"]], "Version 1.5 (2024-07-05)": [[171, "version-1-5-2024-07-05"]], "Version 1.4 (2024-07-04)": [[171, "version-1-4-2024-07-04"]], "Version 1.3 (2024-07-04)": [[171, "version-1-3-2024-07-04"]], "Version 1.2 (2024-07-03)": [[171, "version-1-2-2024-07-03"]], "Version 1.1 (2024-07-02)": [[171, "version-1-1-2024-07-02"]], "Version 1.0 (2024-07-01)": [[171, "version-1-0-2024-07-01"]], "Concepts and Classes": [[172, "concepts-and-classes"]], "Quick reference": [[172, "quick-reference"]], "Instructions": [[172, "instructions"]], "Schedules": [[172, "schedules"]], "TimeBoxes": [[172, "timeboxes"]], "QuantumOps": [[172, "quantumops"]], "GateImplementations": [[172, "gateimplementations"]], "Playlists": [[172, "playlists"]], "Custom gate implementations": [[173, "custom-gate-implementations"], [173, "id1"]], "GateImplementation class": [[173, "gateimplementation-class"]], "Instructions, Waveforms and calibration data": [[173, "instructions-waveforms-and-calibration-data"]], "More base classes": [[173, "more-base-classes"]], "Registering gates and implementations": [[173, "registering-gates-and-implementations"]], "IQM Pulse": [[174, "iqm-pulse"]], "Contents": [[174, "contents"]], "Indices and tables": [[174, "indices-and-tables"]], "License": [[175, "license"]], "Pulse timing": [[176, "pulse-timing"]], "Measure and ReadoutTrigger": [[176, "measure-and-readouttrigger"]], "Fast feedback timing": [[176, "fast-feedback-timing"]], "References": [[177, "references"]], "Using ScheduleBuilder": [[178, "using-schedulebuilder"]], "Creating TimeBoxes": [[178, "creating-timeboxes"]], "Composing TimeBoxes": [[178, "composing-timeboxes"]], "Resolving TimeBoxes into a Schedule": [[178, "resolving-timeboxes-into-a-schedule"]], "Miscellaneous features": [[178, "miscellaneous-features"]], "Common pitfalls": [[178, "common-pitfalls"]]}, "indexentries": {"iqm.pulse": [[1, "module-iqm.pulse"]], "module": [[1, "module-iqm.pulse"], [2, "module-iqm.pulse.builder"], [8, "module-iqm.pulse.circuit_operations"], [14, "module-iqm.pulse.gate_implementation"], [31, "module-iqm.pulse.gates"], [32, "module-iqm.pulse.gates.barrier"], [34, "module-iqm.pulse.gates.conditional"], [38, "module-iqm.pulse.gates.cz"], [50, "module-iqm.pulse.gates.delay"], [53, "module-iqm.pulse.gates.enums"], [60, "module-iqm.pulse.gates.measure"], [64, "module-iqm.pulse.gates.move"], [71, "module-iqm.pulse.gates.prx"], [82, "module-iqm.pulse.gates.reset"], [87, "module-iqm.pulse.gates.rz"], [92, "module-iqm.pulse.gates.sx"], [94, "module-iqm.pulse.gates.u"], [97, "module-iqm.pulse.playlist"], [98, "module-iqm.pulse.playlist.channel"], [108, "module-iqm.pulse.playlist.instructions"], [122, "module-iqm.pulse.playlist.playlist"], [123, "module-iqm.pulse.playlist.schedule"], [128, "module-iqm.pulse.playlist.visualisation"], [129, "module-iqm.pulse.playlist.visualisation.base"], [131, "module-iqm.pulse.playlist.waveforms"], [138, "module-iqm.pulse.quantum_ops"], [143, "module-iqm.pulse.scheduler"], [151, "module-iqm.pulse.timebox"], [156, "module-iqm.pulse.utils"], [162, "module-iqm.pulse.validation"]], "iqm.pulse.builder": [[2, "module-iqm.pulse.builder"]], "circuitoperation (class in iqm.pulse.builder)": [[3, "iqm.pulse.builder.CircuitOperation"]], "args (iqm.pulse.builder.circuitoperation attribute)": [[3, "iqm.pulse.builder.CircuitOperation.args"]], "implementation (iqm.pulse.builder.circuitoperation attribute)": [[3, "iqm.pulse.builder.CircuitOperation.implementation"]], "locus (iqm.pulse.builder.circuitoperation attribute)": [[3, "iqm.pulse.builder.CircuitOperation.locus"]], "name (iqm.pulse.builder.circuitoperation attribute)": [[3, "iqm.pulse.builder.CircuitOperation.name"]], "validate() (iqm.pulse.builder.circuitoperation method)": [[3, "iqm.pulse.builder.CircuitOperation.validate"]], "schedulebuilder (class in iqm.pulse.builder)": [[4, "iqm.pulse.builder.ScheduleBuilder"]], "_block_neighborhood_tetris() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder._block_neighborhood_tetris"]], "_cache (iqm.pulse.builder.schedulebuilder attribute)": [[4, "iqm.pulse.builder.ScheduleBuilder._cache"]], "_channel_templates (iqm.pulse.builder.schedulebuilder attribute)": [[4, "iqm.pulse.builder.ScheduleBuilder._channel_templates"]], "_channel_to_component (iqm.pulse.builder.schedulebuilder attribute)": [[4, "iqm.pulse.builder.ScheduleBuilder._channel_to_component"]], "_channel_types (iqm.pulse.builder.schedulebuilder attribute)": [[4, "iqm.pulse.builder.ScheduleBuilder._channel_types"]], "_find_implementation_and_locus() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder._find_implementation_and_locus"]], "_finish_schedule() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder._finish_schedule"]], "_get_channel_for_component() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder._get_channel_for_component"]], "_get_implementation() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder._get_implementation"]], "_get_neighborhood_hard_boundary() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder._get_neighborhood_hard_boundary"]], "_require_scheduling_in_seconds (iqm.pulse.builder.schedulebuilder attribute)": [[4, "iqm.pulse.builder.ScheduleBuilder._require_scheduling_in_seconds"]], "_resolve_timebox_hard_boundary() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder._resolve_timebox_hard_boundary"]], "_resolve_timebox_tetris() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder._resolve_timebox_tetris"]], "_set_gate_implementation_shortcut() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder._set_gate_implementation_shortcut"]], "build_playlist() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.build_playlist"]], "circuit_to_timebox() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.circuit_to_timebox"]], "composite_cache (iqm.pulse.builder.schedulebuilder attribute)": [[4, "iqm.pulse.builder.ScheduleBuilder.composite_cache"]], "get_calibration() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.get_calibration"]], "get_control_channels() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.get_control_channels"]], "get_drive_channel() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.get_drive_channel"]], "get_flux_channel() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.get_flux_channel"]], "get_implementation() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.get_implementation"]], "get_implementation_class() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.get_implementation_class"]], "get_probe_channel() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.get_probe_channel"]], "get_virtual_feedback_channel_for() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.get_virtual_feedback_channel_for"]], "get_virtual_feedback_channels() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.get_virtual_feedback_channels"]], "has_calibration() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.has_calibration"]], "inject_calibration() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.inject_calibration"]], "resolve_timebox() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.resolve_timebox"]], "timebox_to_schedule() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.timebox_to_schedule"]], "timeboxes_to_front_padded_playlist() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.timeboxes_to_front_padded_playlist"]], "timeboxes_to_playlist() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.timeboxes_to_playlist"]], "validate_calibration() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.validate_calibration"]], "validate_quantum_circuit() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.validate_quantum_circuit"]], "wait() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.wait"]], "build_quantum_ops() (in module iqm.pulse.builder)": [[5, "iqm.pulse.builder.build_quantum_ops"]], "load_config() (in module iqm.pulse.builder)": [[6, "iqm.pulse.builder.load_config"]], "validate_quantum_circuit() (in module iqm.pulse.builder)": [[7, "iqm.pulse.builder.validate_quantum_circuit"]], "iqm.pulse.circuit_operations": [[8, "module-iqm.pulse.circuit_operations"]], "circuitoperationlist (class in iqm.pulse.circuit_operations)": [[9, "iqm.pulse.circuit_operations.CircuitOperationList"]], "_set_specific_operation_shortcut() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[9, "iqm.pulse.circuit_operations.CircuitOperationList._set_specific_operation_shortcut"]], "add_op() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[9, "iqm.pulse.circuit_operations.CircuitOperationList.add_op"]], "add_qubits() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[9, "iqm.pulse.circuit_operations.CircuitOperationList.add_qubits"]], "barrier() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[9, "iqm.pulse.circuit_operations.CircuitOperationList.barrier"]], "compose() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[9, "iqm.pulse.circuit_operations.CircuitOperationList.compose"]], "count_ops() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[9, "iqm.pulse.circuit_operations.CircuitOperationList.count_ops"]], "find_qubits() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[9, "iqm.pulse.circuit_operations.CircuitOperationList.find_qubits"]], "get_unitary() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[9, "iqm.pulse.circuit_operations.CircuitOperationList.get_unitary"]], "map_loci() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[9, "iqm.pulse.circuit_operations.CircuitOperationList.map_loci"]], "get_unitary_from_circuit() (in module iqm.pulse.circuit_operations)": [[10, "iqm.pulse.circuit_operations.get_unitary_from_circuit"]], "get_unitary_from_op() (in module iqm.pulse.circuit_operations)": [[11, "iqm.pulse.circuit_operations.get_unitary_from_op"]], "reorder() (in module iqm.pulse.circuit_operations)": [[12, "iqm.pulse.circuit_operations.reorder"]], "reshape_unitary() (in module iqm.pulse.circuit_operations)": [[13, "iqm.pulse.circuit_operations.reshape_unitary"]], "iqm.pulse.gate_implementation": [[14, "module-iqm.pulse.gate_implementation"]], "compositecache (class in iqm.pulse.gate_implementation)": [[15, "iqm.pulse.gate_implementation.CompositeCache"]], "flush() (iqm.pulse.gate_implementation.compositecache method)": [[15, "iqm.pulse.gate_implementation.CompositeCache.flush"]], "get() (iqm.pulse.gate_implementation.compositecache method)": [[15, "iqm.pulse.gate_implementation.CompositeCache.get"]], "set() (iqm.pulse.gate_implementation.compositecache method)": [[15, "iqm.pulse.gate_implementation.CompositeCache.set"]], "compositegate (class in iqm.pulse.gate_implementation)": [[16, "iqm.pulse.gate_implementation.CompositeGate"]], "build() (iqm.pulse.gate_implementation.compositegate method)": [[16, "iqm.pulse.gate_implementation.CompositeGate.build"]], "default_implementations (iqm.pulse.gate_implementation.compositegate attribute)": [[16, "iqm.pulse.gate_implementation.CompositeGate.default_implementations"]], "registered_gates (iqm.pulse.gate_implementation.compositegate attribute)": [[16, "iqm.pulse.gate_implementation.CompositeGate.registered_gates"]], "customiqwaveforms (class in iqm.pulse.gate_implementation)": [[17, "iqm.pulse.gate_implementation.CustomIQWaveforms"]], "dependent_waves (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[17, "iqm.pulse.gate_implementation.CustomIQWaveforms.dependent_waves"]], "excluded_parameters (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[17, "iqm.pulse.gate_implementation.CustomIQWaveforms.excluded_parameters"]], "root_parameters (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[17, "iqm.pulse.gate_implementation.CustomIQWaveforms.root_parameters"]], "wave_i (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[17, "iqm.pulse.gate_implementation.CustomIQWaveforms.wave_i"]], "wave_q (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[17, "iqm.pulse.gate_implementation.CustomIQWaveforms.wave_q"]], "gateimplementation (class in iqm.pulse.gate_implementation)": [[18, "iqm.pulse.gate_implementation.GateImplementation"]], "_call() (iqm.pulse.gate_implementation.gateimplementation method)": [[18, "iqm.pulse.gate_implementation.GateImplementation._call"]], "build() (iqm.pulse.gate_implementation.gateimplementation method)": [[18, "iqm.pulse.gate_implementation.GateImplementation.build"]], "convert_calibration_data() (iqm.pulse.gate_implementation.gateimplementation class method)": [[18, "iqm.pulse.gate_implementation.GateImplementation.convert_calibration_data"]], "duration_in_seconds() (iqm.pulse.gate_implementation.gateimplementation method)": [[18, "iqm.pulse.gate_implementation.GateImplementation.duration_in_seconds"]], "get_custom_locus_mapping() (iqm.pulse.gate_implementation.gateimplementation class method)": [[18, "iqm.pulse.gate_implementation.GateImplementation.get_custom_locus_mapping"]], "get_locus_mapping_name() (iqm.pulse.gate_implementation.gateimplementation class method)": [[18, "iqm.pulse.gate_implementation.GateImplementation.get_locus_mapping_name"]], "get_parameters() (iqm.pulse.gate_implementation.gateimplementation class method)": [[18, "iqm.pulse.gate_implementation.GateImplementation.get_parameters"]], "needs_calibration() (iqm.pulse.gate_implementation.gateimplementation class method)": [[18, "iqm.pulse.gate_implementation.GateImplementation.needs_calibration"]], "parameters (iqm.pulse.gate_implementation.gateimplementation attribute)": [[18, "iqm.pulse.gate_implementation.GateImplementation.parameters"]], "qualified_name (iqm.pulse.gate_implementation.gateimplementation property)": [[18, "iqm.pulse.gate_implementation.GateImplementation.qualified_name"]], "special_implementation (iqm.pulse.gate_implementation.gateimplementation attribute)": [[18, "iqm.pulse.gate_implementation.GateImplementation.special_implementation"]], "symmetric (iqm.pulse.gate_implementation.gateimplementation attribute)": [[18, "iqm.pulse.gate_implementation.GateImplementation.symmetric"]], "to_timebox() (iqm.pulse.gate_implementation.gateimplementation method)": [[18, "iqm.pulse.gate_implementation.GateImplementation.to_timebox"]], "locus (in module iqm.pulse.gate_implementation)": [[19, "iqm.pulse.gate_implementation.Locus"]], "nestedparams (in module iqm.pulse.gate_implementation)": [[20, "iqm.pulse.gate_implementation.NestedParams"]], "ocalibrationdata (in module iqm.pulse.gate_implementation)": [[21, "iqm.pulse.gate_implementation.OCalibrationData"]], "oicalibrationdata (in module iqm.pulse.gate_implementation)": [[22, "iqm.pulse.gate_implementation.OICalibrationData"]], "oilcalibrationdata (in module iqm.pulse.gate_implementation)": [[23, "iqm.pulse.gate_implementation.OILCalibrationData"]], "opcalibrationdatatree (in module iqm.pulse.gate_implementation)": [[24, "iqm.pulse.gate_implementation.OpCalibrationDataTree"]], "probe_lines_locus_mapping (in module iqm.pulse.gate_implementation)": [[25, "iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING"]], "single_components_with_drive_locus_mapping (in module iqm.pulse.gate_implementation)": [[26, "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING"]], "single_components_with_flux_awg_locus_mapping (in module iqm.pulse.gate_implementation)": [[27, "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING"]], "single_components_with_readout_locus_mapping (in module iqm.pulse.gate_implementation)": [[28, "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING"]], "singlepulsegate (class in iqm.pulse.gate_implementation)": [[29, "iqm.pulse.gate_implementation.SinglePulseGate"]], "_call() (iqm.pulse.gate_implementation.singlepulsegate method)": [[29, "iqm.pulse.gate_implementation.SinglePulseGate._call"]], "_get_pulse() (iqm.pulse.gate_implementation.singlepulsegate method)": [[29, "iqm.pulse.gate_implementation.SinglePulseGate._get_pulse"]], "_get_pulse_channel() (iqm.pulse.gate_implementation.singlepulsegate method)": [[29, "iqm.pulse.gate_implementation.SinglePulseGate._get_pulse_channel"]], "duration_in_seconds() (iqm.pulse.gate_implementation.singlepulsegate method)": [[29, "iqm.pulse.gate_implementation.SinglePulseGate.duration_in_seconds"]], "get_waveform_parameters() (in module iqm.pulse.gate_implementation)": [[30, "iqm.pulse.gate_implementation.get_waveform_parameters"]], "iqm.pulse.gates": [[31, "module-iqm.pulse.gates"]], "iqm.pulse.gates.barrier": [[32, "module-iqm.pulse.gates.barrier"]], "barrier (class in iqm.pulse.gates.barrier)": [[33, "iqm.pulse.gates.barrier.Barrier"]], "_call() (iqm.pulse.gates.barrier.barrier method)": [[33, "iqm.pulse.gates.barrier.Barrier._call"]], "duration_in_seconds() (iqm.pulse.gates.barrier.barrier method)": [[33, "iqm.pulse.gates.barrier.Barrier.duration_in_seconds"]], "symmetric (iqm.pulse.gates.barrier.barrier attribute)": [[33, "iqm.pulse.gates.barrier.Barrier.symmetric"]], "iqm.pulse.gates.conditional": [[34, "module-iqm.pulse.gates.conditional"]], "ccprx_composite (class in iqm.pulse.gates.conditional)": [[35, "iqm.pulse.gates.conditional.CCPRX_Composite"]], "_call() (iqm.pulse.gates.conditional.ccprx_composite method)": [[35, "iqm.pulse.gates.conditional.CCPRX_Composite._call"]], "parameters (iqm.pulse.gates.conditional.ccprx_composite attribute)": [[35, "iqm.pulse.gates.conditional.CCPRX_Composite.parameters"]], "ccprx_composite_dragcosinerisefall (class in iqm.pulse.gates.conditional)": [[36, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall"]], "default_implementations (iqm.pulse.gates.conditional.ccprx_composite_dragcosinerisefall attribute)": [[36, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall.default_implementations"]], "ccprx_composite_draggaussian (class in iqm.pulse.gates.conditional)": [[37, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian"]], "default_implementations (iqm.pulse.gates.conditional.ccprx_composite_draggaussian attribute)": [[37, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian.default_implementations"]], "iqm.pulse.gates.cz": [[38, "module-iqm.pulse.gates.cz"]], "cz_crf (class in iqm.pulse.gates.cz)": [[39, "iqm.pulse.gates.cz.CZ_CRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_crf attribute)": [[39, "iqm.pulse.gates.cz.CZ_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_crf attribute)": [[39, "iqm.pulse.gates.cz.CZ_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_crf attribute)": [[39, "iqm.pulse.gates.cz.CZ_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_crf attribute)": [[39, "iqm.pulse.gates.cz.CZ_CRF.symmetric"]], "cz_crf_acstarkcrf (class in iqm.pulse.gates.cz)": [[40, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[40, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[40, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.parameters"]], "qubit_drive_wave (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[40, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.qubit_drive_wave"]], "symmetric (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[40, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.symmetric"]], "cz_gaussiansmoothedsquare (class in iqm.pulse.gates.cz)": [[41, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare"]], "coupler_wave (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[41, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[41, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[41, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[41, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.symmetric"]], "cz_slepian (class in iqm.pulse.gates.cz)": [[42, "iqm.pulse.gates.cz.CZ_Slepian"]], "coupler_wave (iqm.pulse.gates.cz.cz_slepian attribute)": [[42, "iqm.pulse.gates.cz.CZ_Slepian.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_slepian attribute)": [[42, "iqm.pulse.gates.cz.CZ_Slepian.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_slepian attribute)": [[42, "iqm.pulse.gates.cz.CZ_Slepian.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_slepian attribute)": [[42, "iqm.pulse.gates.cz.CZ_Slepian.symmetric"]], "cz_slepian_acstarkcrf (class in iqm.pulse.gates.cz)": [[43, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[43, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[43, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.parameters"]], "qubit_drive_wave (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[43, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.qubit_drive_wave"]], "symmetric (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[43, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.symmetric"]], "cz_slepian_crf (class in iqm.pulse.gates.cz)": [[44, "iqm.pulse.gates.cz.CZ_Slepian_CRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[44, "iqm.pulse.gates.cz.CZ_Slepian_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[44, "iqm.pulse.gates.cz.CZ_Slepian_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[44, "iqm.pulse.gates.cz.CZ_Slepian_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[44, "iqm.pulse.gates.cz.CZ_Slepian_CRF.symmetric"]], "cz_truncatedgaussiansmoothedsquare (class in iqm.pulse.gates.cz)": [[45, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare"]], "coupler_wave (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[45, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[45, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[45, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[45, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.symmetric"]], "couplerfluxpulsequbitacstarkpulsegate (class in iqm.pulse.gates.cz)": [[46, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate"]], "_ac_stark_pulse() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate class method)": [[46, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate._ac_stark_pulse"]], "_call() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate method)": [[46, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate._call"]], "coupler_wave (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate attribute)": [[46, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.coupler_wave"]], "duration_in_seconds() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate method)": [[46, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.duration_in_seconds"]], "excluded_parameters (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate attribute)": [[46, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.excluded_parameters"]], "get_locus_mapping_name() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate class method)": [[46, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.get_locus_mapping_name"]], "qubit_drive_wave (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate attribute)": [[46, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.qubit_drive_wave"]], "fluxpulsegate (class in iqm.pulse.gates.cz)": [[47, "iqm.pulse.gates.cz.FluxPulseGate"]], "_call() (iqm.pulse.gates.cz.fluxpulsegate method)": [[47, "iqm.pulse.gates.cz.FluxPulseGate._call"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[47, "iqm.pulse.gates.cz.FluxPulseGate.coupler_wave"]], "duration_in_seconds() (iqm.pulse.gates.cz.fluxpulsegate method)": [[47, "iqm.pulse.gates.cz.FluxPulseGate.duration_in_seconds"]], "excluded_parameters (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[47, "iqm.pulse.gates.cz.FluxPulseGate.excluded_parameters"]], "get_locus_mapping_name() (iqm.pulse.gates.cz.fluxpulsegate class method)": [[47, "iqm.pulse.gates.cz.FluxPulseGate.get_locus_mapping_name"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[47, "iqm.pulse.gates.cz.FluxPulseGate.qubit_wave"]], "root_parameters (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[47, "iqm.pulse.gates.cz.FluxPulseGate.root_parameters"]], "fluxpulsegate_crf_crf (class in iqm.pulse.gates.cz)": [[48, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[48, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[48, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[48, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[48, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.symmetric"]], "fluxpulsegate_tgss_crf (class in iqm.pulse.gates.cz)": [[49, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[49, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[49, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[49, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[49, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.symmetric"]], "iqm.pulse.gates.delay": [[50, "module-iqm.pulse.gates.delay"]], "delay_max_duration_seconds (in module iqm.pulse.gates.delay)": [[51, "iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS"]], "delay (class in iqm.pulse.gates.delay)": [[52, "iqm.pulse.gates.delay.Delay"]], "_call() (iqm.pulse.gates.delay.delay method)": [[52, "iqm.pulse.gates.delay.Delay._call"]], "symmetric (iqm.pulse.gates.delay.delay attribute)": [[52, "iqm.pulse.gates.delay.Delay.symmetric"]], "iqm.pulse.gates.enums": [[53, "module-iqm.pulse.gates.enums"]], "two_qubit_unitaries (in module iqm.pulse.gates.enums)": [[54, "iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES"]], "cz (iqm.pulse.gates.enums.twoqubitgate attribute)": [[55, "iqm.pulse.gates.enums.TwoQubitGate.CZ"]], "iswap (iqm.pulse.gates.enums.twoqubitgate attribute)": [[55, "iqm.pulse.gates.enums.TwoQubitGate.ISWAP"]], "sqrt_iswap (iqm.pulse.gates.enums.twoqubitgate attribute)": [[55, "iqm.pulse.gates.enums.TwoQubitGate.SQRT_ISWAP"]], "twoqubitgate (class in iqm.pulse.gates.enums)": [[55, "iqm.pulse.gates.enums.TwoQubitGate"]], "xygate_unitaries (in module iqm.pulse.gates.enums)": [[56, "iqm.pulse.gates.enums.XYGATE_UNITARIES"]], "xygate (class in iqm.pulse.gates.enums)": [[57, "iqm.pulse.gates.enums.XYGate"]], "expose_implementation() (in module iqm.pulse.gates)": [[58, "iqm.pulse.gates.expose_implementation"]], "get_implementation_class() (in module iqm.pulse.gates)": [[59, "iqm.pulse.gates.get_implementation_class"]], "iqm.pulse.gates.measure": [[60, "module-iqm.pulse.gates.measure"]], "measure_constant (class in iqm.pulse.gates.measure)": [[61, "iqm.pulse.gates.measure.Measure_Constant"]], "dependent_waves (iqm.pulse.gates.measure.measure_constant attribute)": [[61, "iqm.pulse.gates.measure.Measure_Constant.dependent_waves"]], "parameters (iqm.pulse.gates.measure.measure_constant attribute)": [[61, "iqm.pulse.gates.measure.Measure_Constant.parameters"]], "wave_i (iqm.pulse.gates.measure.measure_constant attribute)": [[61, "iqm.pulse.gates.measure.Measure_Constant.wave_i"]], "wave_q (iqm.pulse.gates.measure.measure_constant attribute)": [[61, "iqm.pulse.gates.measure.Measure_Constant.wave_q"]], "measure_customwaveforms (class in iqm.pulse.gates.measure)": [[62, "iqm.pulse.gates.measure.Measure_CustomWaveforms"]], "_build_instructions() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[62, "iqm.pulse.gates.measure.Measure_CustomWaveforms._build_instructions"]], "_call() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[62, "iqm.pulse.gates.measure.Measure_CustomWaveforms._call"]], "_multiplexed_timeboxes (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[62, "iqm.pulse.gates.measure.Measure_CustomWaveforms._multiplexed_timeboxes"]], "_time_traces (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[62, "iqm.pulse.gates.measure.Measure_CustomWaveforms._time_traces"]], "dependent_waves (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[62, "iqm.pulse.gates.measure.Measure_CustomWaveforms.dependent_waves"]], "duration_in_seconds() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[62, "iqm.pulse.gates.measure.Measure_CustomWaveforms.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.measure.measure_customwaveforms class method)": [[62, "iqm.pulse.gates.measure.Measure_CustomWaveforms.get_locus_mapping_name"]], "probe_timebox() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[62, "iqm.pulse.gates.measure.Measure_CustomWaveforms.probe_timebox"]], "root_parameters (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[62, "iqm.pulse.gates.measure.Measure_CustomWaveforms.root_parameters"]], "time_trace() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[62, "iqm.pulse.gates.measure.Measure_CustomWaveforms.time_trace"]], "probepulse_customwaveforms (class in iqm.pulse.gates.measure)": [[63, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms"]], "_build_instructions() (iqm.pulse.gates.measure.probepulse_customwaveforms method)": [[63, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms._build_instructions"]], "_call() (iqm.pulse.gates.measure.probepulse_customwaveforms method)": [[63, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms._call"]], "dependent_waves (iqm.pulse.gates.measure.probepulse_customwaveforms attribute)": [[63, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.dependent_waves"]], "duration_in_seconds() (iqm.pulse.gates.measure.probepulse_customwaveforms method)": [[63, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.measure.probepulse_customwaveforms class method)": [[63, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.get_locus_mapping_name"]], "root_parameters (iqm.pulse.gates.measure.probepulse_customwaveforms attribute)": [[63, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.root_parameters"]], "iqm.pulse.gates.move": [[64, "module-iqm.pulse.gates.move"]], "move_crf_crf (class in iqm.pulse.gates.move)": [[65, "iqm.pulse.gates.move.MOVE_CRF_CRF"]], "coupler_wave (iqm.pulse.gates.move.move_crf_crf attribute)": [[65, "iqm.pulse.gates.move.MOVE_CRF_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.move.move_crf_crf attribute)": [[65, "iqm.pulse.gates.move.MOVE_CRF_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.move.move_crf_crf attribute)": [[65, "iqm.pulse.gates.move.MOVE_CRF_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.move.move_crf_crf attribute)": [[65, "iqm.pulse.gates.move.MOVE_CRF_CRF.symmetric"]], "move_customwaveforms (class in iqm.pulse.gates.move)": [[66, "iqm.pulse.gates.move.MOVE_CustomWaveforms"]], "_call() (iqm.pulse.gates.move.move_customwaveforms method)": [[66, "iqm.pulse.gates.move.MOVE_CustomWaveforms._call"]], "coupler_wave (iqm.pulse.gates.move.move_customwaveforms attribute)": [[66, "iqm.pulse.gates.move.MOVE_CustomWaveforms.coupler_wave"]], "parameters (iqm.pulse.gates.move.move_customwaveforms attribute)": [[66, "iqm.pulse.gates.move.MOVE_CustomWaveforms.parameters"]], "qubit_wave (iqm.pulse.gates.move.move_customwaveforms attribute)": [[66, "iqm.pulse.gates.move.MOVE_CustomWaveforms.qubit_wave"]], "root_parameters (iqm.pulse.gates.move.move_customwaveforms attribute)": [[66, "iqm.pulse.gates.move.MOVE_CustomWaveforms.root_parameters"]], "symmetric (iqm.pulse.gates.move.move_customwaveforms attribute)": [[66, "iqm.pulse.gates.move.MOVE_CustomWaveforms.symmetric"]], "move_tgss_crf (class in iqm.pulse.gates.move)": [[67, "iqm.pulse.gates.move.MOVE_TGSS_CRF"]], "coupler_wave (iqm.pulse.gates.move.move_tgss_crf attribute)": [[67, "iqm.pulse.gates.move.MOVE_TGSS_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.move.move_tgss_crf attribute)": [[67, "iqm.pulse.gates.move.MOVE_TGSS_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.move.move_tgss_crf attribute)": [[67, "iqm.pulse.gates.move.MOVE_TGSS_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.move.move_tgss_crf attribute)": [[67, "iqm.pulse.gates.move.MOVE_TGSS_CRF.symmetric"]], "movemarker (class in iqm.pulse.gates.move)": [[68, "iqm.pulse.gates.move.MoveMarker"]], "duration (iqm.pulse.gates.move.movemarker attribute)": [[68, "iqm.pulse.gates.move.MoveMarker.duration"]], "apply_move_gate_phase_corrections() (in module iqm.pulse.gates.move)": [[69, "iqm.pulse.gates.move.apply_move_gate_phase_corrections"]], "validate_move_instructions() (in module iqm.pulse.gates.move)": [[70, "iqm.pulse.gates.move.validate_move_instructions"]], "iqm.pulse.gates.prx": [[71, "module-iqm.pulse.gates.prx"]], "prx_customwaveforms (class in iqm.pulse.gates.prx)": [[72, "iqm.pulse.gates.prx.PRX_CustomWaveforms"]], "_get_pulse() (iqm.pulse.gates.prx.prx_customwaveforms class method)": [[72, "iqm.pulse.gates.prx.PRX_CustomWaveforms._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_customwaveforms attribute)": [[72, "iqm.pulse.gates.prx.PRX_CustomWaveforms.dependent_waves"]], "root_parameters (iqm.pulse.gates.prx.prx_customwaveforms attribute)": [[72, "iqm.pulse.gates.prx.PRX_CustomWaveforms.root_parameters"]], "prx_customwaveformssx (class in iqm.pulse.gates.prx)": [[73, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX"]], "_call() (iqm.pulse.gates.prx.prx_customwaveformssx method)": [[73, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX._call"]], "_get_pulse() (iqm.pulse.gates.prx.prx_customwaveformssx class method)": [[73, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_customwaveformssx attribute)": [[73, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX.dependent_waves"]], "root_parameters (iqm.pulse.gates.prx.prx_customwaveformssx attribute)": [[73, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX.root_parameters"]], "prx_dragcosinerisefall (class in iqm.pulse.gates.prx)": [[74, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall"]], "_get_pulse() (iqm.pulse.gates.prx.prx_dragcosinerisefall class method)": [[74, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[74, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.dependent_waves"]], "excluded_parameters (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[74, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.excluded_parameters"]], "parameters (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[74, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[74, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[74, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.wave_q"]], "prx_dragcosinerisefallsx (class in iqm.pulse.gates.prx)": [[75, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX"]], "_get_pulse() (iqm.pulse.gates.prx.prx_dragcosinerisefallsx class method)": [[75, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[75, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.dependent_waves"]], "excluded_parameters (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[75, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.excluded_parameters"]], "parameters (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[75, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[75, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[75, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.wave_q"]], "prx_draggaussian (class in iqm.pulse.gates.prx)": [[76, "iqm.pulse.gates.prx.PRX_DRAGGaussian"]], "dependent_waves (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[76, "iqm.pulse.gates.prx.PRX_DRAGGaussian.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[76, "iqm.pulse.gates.prx.PRX_DRAGGaussian.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[76, "iqm.pulse.gates.prx.PRX_DRAGGaussian.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[76, "iqm.pulse.gates.prx.PRX_DRAGGaussian.wave_q"]], "prx_draggaussiansx (class in iqm.pulse.gates.prx)": [[77, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX"]], "dependent_waves (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[77, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[77, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[77, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[77, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.wave_q"]], "prx_gateimplementation (class in iqm.pulse.gates.prx)": [[78, "iqm.pulse.gates.prx.PRX_GateImplementation"]], "_call() (iqm.pulse.gates.prx.prx_gateimplementation method)": [[78, "iqm.pulse.gates.prx.PRX_GateImplementation._call"]], "clifford() (iqm.pulse.gates.prx.prx_gateimplementation method)": [[78, "iqm.pulse.gates.prx.PRX_GateImplementation.clifford"]], "get_locus_mapping_name() (iqm.pulse.gates.prx.prx_gateimplementation class method)": [[78, "iqm.pulse.gates.prx.PRX_GateImplementation.get_locus_mapping_name"]], "rx() (iqm.pulse.gates.prx.prx_gateimplementation method)": [[78, "iqm.pulse.gates.prx.PRX_GateImplementation.rx"]], "ry() (iqm.pulse.gates.prx.prx_gateimplementation method)": [[78, "iqm.pulse.gates.prx.PRX_GateImplementation.ry"]], "prx_singlepulse_gateimplementation (class in iqm.pulse.gates.prx)": [[79, "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation"]], "_call() (iqm.pulse.gates.prx.prx_singlepulse_gateimplementation method)": [[79, "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation._call"]], "iq_pulse (iqm.pulse.gates.prx.prx_singlepulse_gateimplementation property)": [[79, "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation.iq_pulse"]], "get_unitary_prx() (in module iqm.pulse.gates.prx)": [[80, "iqm.pulse.gates.prx.get_unitary_prx"]], "register_implementation() (in module iqm.pulse.gates)": [[81, "iqm.pulse.gates.register_implementation"]], "iqm.pulse.gates.reset": [[82, "module-iqm.pulse.gates.reset"]], "reset_feedback_key (in module iqm.pulse.gates.reset)": [[83, "iqm.pulse.gates.reset.RESET_FEEDBACK_KEY"]], "reset_measurement_key (in module iqm.pulse.gates.reset)": [[84, "iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY"]], "reset_conditional (class in iqm.pulse.gates.reset)": [[85, "iqm.pulse.gates.reset.Reset_Conditional"]], "_call() (iqm.pulse.gates.reset.reset_conditional method)": [[85, "iqm.pulse.gates.reset.Reset_Conditional._call"]], "get_locus_mapping_name() (iqm.pulse.gates.reset.reset_conditional class method)": [[85, "iqm.pulse.gates.reset.Reset_Conditional.get_locus_mapping_name"]], "registered_gates (iqm.pulse.gates.reset.reset_conditional attribute)": [[85, "iqm.pulse.gates.reset.Reset_Conditional.registered_gates"]], "reset_wait (class in iqm.pulse.gates.reset)": [[86, "iqm.pulse.gates.reset.Reset_Wait"]], "_call() (iqm.pulse.gates.reset.reset_wait method)": [[86, "iqm.pulse.gates.reset.Reset_Wait._call"]], "duration_in_seconds() (iqm.pulse.gates.reset.reset_wait method)": [[86, "iqm.pulse.gates.reset.Reset_Wait.duration_in_seconds"]], "get_custom_locus_mapping() (iqm.pulse.gates.reset.reset_wait class method)": [[86, "iqm.pulse.gates.reset.Reset_Wait.get_custom_locus_mapping"]], "parameters (iqm.pulse.gates.reset.reset_wait attribute)": [[86, "iqm.pulse.gates.reset.Reset_Wait.parameters"]], "wait_box() (iqm.pulse.gates.reset.reset_wait method)": [[86, "iqm.pulse.gates.reset.Reset_Wait.wait_box"]], "iqm.pulse.gates.rz": [[87, "module-iqm.pulse.gates.rz"]], "rz_acstarkshift (class in iqm.pulse.gates.rz)": [[88, "iqm.pulse.gates.rz.RZ_ACStarkShift"]], "_ac_stark_pulse() (iqm.pulse.gates.rz.rz_acstarkshift class method)": [[88, "iqm.pulse.gates.rz.RZ_ACStarkShift._ac_stark_pulse"]], "_call() (iqm.pulse.gates.rz.rz_acstarkshift method)": [[88, "iqm.pulse.gates.rz.RZ_ACStarkShift._call"]], "duration_in_seconds() (iqm.pulse.gates.rz.rz_acstarkshift method)": [[88, "iqm.pulse.gates.rz.RZ_ACStarkShift.duration_in_seconds"]], "rz_acstarkshift_cosinerisefall (class in iqm.pulse.gates.rz)": [[89, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall"]], "ac_stark_waveform (iqm.pulse.gates.rz.rz_acstarkshift_cosinerisefall attribute)": [[89, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.ac_stark_waveform"]], "parameters (iqm.pulse.gates.rz.rz_acstarkshift_cosinerisefall attribute)": [[89, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.parameters"]], "symmetric (iqm.pulse.gates.rz.rz_acstarkshift_cosinerisefall attribute)": [[89, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.symmetric"]], "rz_virtual (class in iqm.pulse.gates.rz)": [[90, "iqm.pulse.gates.rz.RZ_Virtual"]], "_call() (iqm.pulse.gates.rz.rz_virtual method)": [[90, "iqm.pulse.gates.rz.RZ_Virtual._call"]], "duration_in_seconds() (iqm.pulse.gates.rz.rz_virtual method)": [[90, "iqm.pulse.gates.rz.RZ_Virtual.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.rz.rz_virtual class method)": [[90, "iqm.pulse.gates.rz.RZ_Virtual.get_locus_mapping_name"]], "parameters (iqm.pulse.gates.rz.rz_virtual attribute)": [[90, "iqm.pulse.gates.rz.RZ_Virtual.parameters"]], "get_unitary_rz() (in module iqm.pulse.gates.rz)": [[91, "iqm.pulse.gates.rz.get_unitary_rz"]], "iqm.pulse.gates.sx": [[92, "module-iqm.pulse.gates.sx"]], "sxgate (class in iqm.pulse.gates.sx)": [[93, "iqm.pulse.gates.sx.SXGate"]], "_call() (iqm.pulse.gates.sx.sxgate method)": [[93, "iqm.pulse.gates.sx.SXGate._call"]], "registered_gates (iqm.pulse.gates.sx.sxgate attribute)": [[93, "iqm.pulse.gates.sx.SXGate.registered_gates"]], "iqm.pulse.gates.u": [[94, "module-iqm.pulse.gates.u"]], "ugate (class in iqm.pulse.gates.u)": [[95, "iqm.pulse.gates.u.UGate"]], "_call() (iqm.pulse.gates.u.ugate method)": [[95, "iqm.pulse.gates.u.UGate._call"]], "registered_gates (iqm.pulse.gates.u.ugate attribute)": [[95, "iqm.pulse.gates.u.UGate.registered_gates"]], "get_unitary_u() (in module iqm.pulse.gates.u)": [[96, "iqm.pulse.gates.u.get_unitary_u"]], "iqm.pulse.playlist": [[97, "module-iqm.pulse.playlist"]], "iqm.pulse.playlist.channel": [[98, "module-iqm.pulse.playlist.channel"]], "channelconfiguration (class in iqm.pulse.playlist.channel)": [[99, "iqm.pulse.playlist.channel.ChannelConfiguration"]], "channeldescription (class in iqm.pulse.playlist.channel)": [[100, "iqm.pulse.playlist.channel.ChannelDescription"]], "add_instruction() (iqm.pulse.playlist.channel.channeldescription method)": [[100, "iqm.pulse.playlist.channel.ChannelDescription.add_instruction"]], "channelproperties (class in iqm.pulse.playlist.channel)": [[101, "iqm.pulse.playlist.channel.ChannelProperties"]], "blocks_component (iqm.pulse.playlist.channel.channelproperties attribute)": [[101, "iqm.pulse.playlist.channel.ChannelProperties.blocks_component"]], "compatible_instructions (iqm.pulse.playlist.channel.channelproperties attribute)": [[101, "iqm.pulse.playlist.channel.ChannelProperties.compatible_instructions"]], "duration_to_int_samples() (iqm.pulse.playlist.channel.channelproperties method)": [[101, "iqm.pulse.playlist.channel.ChannelProperties.duration_to_int_samples"]], "duration_to_samples() (iqm.pulse.playlist.channel.channelproperties method)": [[101, "iqm.pulse.playlist.channel.ChannelProperties.duration_to_samples"]], "duration_to_seconds() (iqm.pulse.playlist.channel.channelproperties method)": [[101, "iqm.pulse.playlist.channel.ChannelProperties.duration_to_seconds"]], "instruction_duration_granularity (iqm.pulse.playlist.channel.channelproperties attribute)": [[101, "iqm.pulse.playlist.channel.ChannelProperties.instruction_duration_granularity"]], "instruction_duration_min (iqm.pulse.playlist.channel.channelproperties attribute)": [[101, "iqm.pulse.playlist.channel.ChannelProperties.instruction_duration_min"]], "is_iq (iqm.pulse.playlist.channel.channelproperties attribute)": [[101, "iqm.pulse.playlist.channel.ChannelProperties.is_iq"]], "is_virtual (iqm.pulse.playlist.channel.channelproperties attribute)": [[101, "iqm.pulse.playlist.channel.ChannelProperties.is_virtual"]], "round_duration_to_granularity() (iqm.pulse.playlist.channel.channelproperties method)": [[101, "iqm.pulse.playlist.channel.ChannelProperties.round_duration_to_granularity"]], "sample_rate (iqm.pulse.playlist.channel.channelproperties attribute)": [[101, "iqm.pulse.playlist.channel.ChannelProperties.sample_rate"]], "iqchannelconfig (class in iqm.pulse.playlist.channel)": [[102, "iqm.pulse.playlist.channel.IQChannelConfig"]], "frequency (iqm.pulse.playlist.channel.iqchannelconfig attribute)": [[102, "iqm.pulse.playlist.channel.IQChannelConfig.frequency"]], "probechannelproperties (class in iqm.pulse.playlist.channel)": [[103, "iqm.pulse.playlist.channel.ProbeChannelProperties"]], "center_frequency (iqm.pulse.playlist.channel.probechannelproperties attribute)": [[103, "iqm.pulse.playlist.channel.ProbeChannelProperties.center_frequency"]], "integration_start_dead_time (iqm.pulse.playlist.channel.probechannelproperties attribute)": [[103, "iqm.pulse.playlist.channel.ProbeChannelProperties.integration_start_dead_time"]], "integration_stop_dead_time (iqm.pulse.playlist.channel.probechannelproperties attribute)": [[103, "iqm.pulse.playlist.channel.ProbeChannelProperties.integration_stop_dead_time"]], "realchannelconfig (class in iqm.pulse.playlist.channel)": [[104, "iqm.pulse.playlist.channel.RealChannelConfig"]], "sample_rate (iqm.pulse.playlist.channel.realchannelconfig attribute)": [[104, "iqm.pulse.playlist.channel.RealChannelConfig.sample_rate"]], "get_channel_properties() (in module iqm.pulse.playlist.channel)": [[105, "iqm.pulse.playlist.channel.get_channel_properties"]], "get_channel_properties_from_station_settings() (in module iqm.pulse.playlist.channel)": [[106, "iqm.pulse.playlist.channel.get_channel_properties_from_station_settings"]], "round_duration_to_granularity_samples() (in module iqm.pulse.playlist.channel)": [[107, "iqm.pulse.playlist.channel.round_duration_to_granularity_samples"]], "iqm.pulse.playlist.instructions": [[108, "module-iqm.pulse.playlist.instructions"]], "acquisitionmethod (class in iqm.pulse.playlist.instructions)": [[109, "iqm.pulse.playlist.instructions.AcquisitionMethod"]], "delay_samples (iqm.pulse.playlist.instructions.acquisitionmethod attribute)": [[109, "iqm.pulse.playlist.instructions.AcquisitionMethod.delay_samples"]], "label (iqm.pulse.playlist.instructions.acquisitionmethod attribute)": [[109, "iqm.pulse.playlist.instructions.AcquisitionMethod.label"]], "block (class in iqm.pulse.playlist.instructions)": [[110, "iqm.pulse.playlist.instructions.Block"]], "complexintegration (class in iqm.pulse.playlist.instructions)": [[111, "iqm.pulse.playlist.instructions.ComplexIntegration"]], "weights (iqm.pulse.playlist.instructions.complexintegration attribute)": [[111, "iqm.pulse.playlist.instructions.ComplexIntegration.weights"]], "conditionalinstruction (class in iqm.pulse.playlist.instructions)": [[112, "iqm.pulse.playlist.instructions.ConditionalInstruction"]], "condition (iqm.pulse.playlist.instructions.conditionalinstruction attribute)": [[112, "iqm.pulse.playlist.instructions.ConditionalInstruction.condition"]], "get_child_instructions() (iqm.pulse.playlist.instructions.conditionalinstruction method)": [[112, "iqm.pulse.playlist.instructions.ConditionalInstruction.get_child_instructions"]], "outcomes (iqm.pulse.playlist.instructions.conditionalinstruction attribute)": [[112, "iqm.pulse.playlist.instructions.ConditionalInstruction.outcomes"]], "validate() (iqm.pulse.playlist.instructions.conditionalinstruction method)": [[112, "iqm.pulse.playlist.instructions.ConditionalInstruction.validate"]], "iqpulse (class in iqm.pulse.playlist.instructions)": [[113, "iqm.pulse.playlist.instructions.IQPulse"]], "get_waveforms() (iqm.pulse.playlist.instructions.iqpulse method)": [[113, "iqm.pulse.playlist.instructions.IQPulse.get_waveforms"]], "modulation_frequency (iqm.pulse.playlist.instructions.iqpulse attribute)": [[113, "iqm.pulse.playlist.instructions.IQPulse.modulation_frequency"]], "phase (iqm.pulse.playlist.instructions.iqpulse attribute)": [[113, "iqm.pulse.playlist.instructions.IQPulse.phase"]], "phase_increment (iqm.pulse.playlist.instructions.iqpulse attribute)": [[113, "iqm.pulse.playlist.instructions.IQPulse.phase_increment"]], "scale_i (iqm.pulse.playlist.instructions.iqpulse attribute)": [[113, "iqm.pulse.playlist.instructions.IQPulse.scale_i"]], "scale_q (iqm.pulse.playlist.instructions.iqpulse attribute)": [[113, "iqm.pulse.playlist.instructions.IQPulse.scale_q"]], "validate() (iqm.pulse.playlist.instructions.iqpulse method)": [[113, "iqm.pulse.playlist.instructions.IQPulse.validate"]], "wave_i (iqm.pulse.playlist.instructions.iqpulse attribute)": [[113, "iqm.pulse.playlist.instructions.IQPulse.wave_i"]], "wave_q (iqm.pulse.playlist.instructions.iqpulse attribute)": [[113, "iqm.pulse.playlist.instructions.IQPulse.wave_q"]], "instruction (class in iqm.pulse.playlist.instructions)": [[114, "iqm.pulse.playlist.instructions.Instruction"]], "copy() (iqm.pulse.playlist.instructions.instruction method)": [[114, "iqm.pulse.playlist.instructions.Instruction.copy"]], "duration (iqm.pulse.playlist.instructions.instruction attribute)": [[114, "iqm.pulse.playlist.instructions.Instruction.duration"]], "get_child_instructions() (iqm.pulse.playlist.instructions.instruction method)": [[114, "iqm.pulse.playlist.instructions.Instruction.get_child_instructions"]], "get_waveforms() (iqm.pulse.playlist.instructions.instruction method)": [[114, "iqm.pulse.playlist.instructions.Instruction.get_waveforms"]], "validate() (iqm.pulse.playlist.instructions.instruction method)": [[114, "iqm.pulse.playlist.instructions.Instruction.validate"]], "multiplexediqpulse (class in iqm.pulse.playlist.instructions)": [[115, "iqm.pulse.playlist.instructions.MultiplexedIQPulse"]], "entries (iqm.pulse.playlist.instructions.multiplexediqpulse attribute)": [[115, "iqm.pulse.playlist.instructions.MultiplexedIQPulse.entries"]], "readouttrigger (class in iqm.pulse.playlist.instructions)": [[116, "iqm.pulse.playlist.instructions.ReadoutTrigger"]], "acquisitions (iqm.pulse.playlist.instructions.readouttrigger attribute)": [[116, "iqm.pulse.playlist.instructions.ReadoutTrigger.acquisitions"]], "probe_pulse (iqm.pulse.playlist.instructions.readouttrigger attribute)": [[116, "iqm.pulse.playlist.instructions.ReadoutTrigger.probe_pulse"]], "realpulse (class in iqm.pulse.playlist.instructions)": [[117, "iqm.pulse.playlist.instructions.RealPulse"]], "get_waveforms() (iqm.pulse.playlist.instructions.realpulse method)": [[117, "iqm.pulse.playlist.instructions.RealPulse.get_waveforms"]], "scale (iqm.pulse.playlist.instructions.realpulse attribute)": [[117, "iqm.pulse.playlist.instructions.RealPulse.scale"]], "validate() (iqm.pulse.playlist.instructions.realpulse method)": [[117, "iqm.pulse.playlist.instructions.RealPulse.validate"]], "wave (iqm.pulse.playlist.instructions.realpulse attribute)": [[117, "iqm.pulse.playlist.instructions.RealPulse.wave"]], "thresholdstatediscrimination (class in iqm.pulse.playlist.instructions)": [[118, "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination"]], "feedback_signal_label (iqm.pulse.playlist.instructions.thresholdstatediscrimination attribute)": [[118, "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination.feedback_signal_label"]], "threshold (iqm.pulse.playlist.instructions.thresholdstatediscrimination attribute)": [[118, "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination.threshold"]], "timetrace (class in iqm.pulse.playlist.instructions)": [[119, "iqm.pulse.playlist.instructions.TimeTrace"]], "duration_samples (iqm.pulse.playlist.instructions.timetrace attribute)": [[119, "iqm.pulse.playlist.instructions.TimeTrace.duration_samples"]], "virtualrz (class in iqm.pulse.playlist.instructions)": [[120, "iqm.pulse.playlist.instructions.VirtualRZ"]], "phase_increment (iqm.pulse.playlist.instructions.virtualrz attribute)": [[120, "iqm.pulse.playlist.instructions.VirtualRZ.phase_increment"]], "wait (class in iqm.pulse.playlist.instructions)": [[121, "iqm.pulse.playlist.instructions.Wait"]], "iqm.pulse.playlist.playlist": [[122, "module-iqm.pulse.playlist.playlist"]], "iqm.pulse.playlist.schedule": [[123, "module-iqm.pulse.playlist.schedule"]], "nothing (class in iqm.pulse.playlist.schedule)": [[124, "iqm.pulse.playlist.schedule.Nothing"]], "schedule (class in iqm.pulse.playlist.schedule)": [[125, "iqm.pulse.playlist.schedule.Schedule"]], "add_channels() (iqm.pulse.playlist.schedule.schedule method)": [[125, "iqm.pulse.playlist.schedule.Schedule.add_channels"]], "append() (iqm.pulse.playlist.schedule.schedule method)": [[125, "iqm.pulse.playlist.schedule.Schedule.append"]], "channels() (iqm.pulse.playlist.schedule.schedule method)": [[125, "iqm.pulse.playlist.schedule.Schedule.channels"]], "cleanup() (iqm.pulse.playlist.schedule.schedule method)": [[125, "iqm.pulse.playlist.schedule.Schedule.cleanup"]], "copy() (iqm.pulse.playlist.schedule.schedule method)": [[125, "iqm.pulse.playlist.schedule.Schedule.copy"]], "duration (iqm.pulse.playlist.schedule.schedule property)": [[125, "iqm.pulse.playlist.schedule.Schedule.duration"]], "duration_in_seconds() (iqm.pulse.playlist.schedule.schedule method)": [[125, "iqm.pulse.playlist.schedule.Schedule.duration_in_seconds"]], "extend() (iqm.pulse.playlist.schedule.schedule method)": [[125, "iqm.pulse.playlist.schedule.Schedule.extend"]], "front_pad() (iqm.pulse.playlist.schedule.schedule method)": [[125, "iqm.pulse.playlist.schedule.Schedule.front_pad"]], "front_pad_in_seconds() (iqm.pulse.playlist.schedule.schedule method)": [[125, "iqm.pulse.playlist.schedule.Schedule.front_pad_in_seconds"]], "has_content_in() (iqm.pulse.playlist.schedule.schedule method)": [[125, "iqm.pulse.playlist.schedule.Schedule.has_content_in"]], "items() (iqm.pulse.playlist.schedule.schedule method)": [[125, "iqm.pulse.playlist.schedule.Schedule.items"]], "pad_to_hard_box() (iqm.pulse.playlist.schedule.schedule method)": [[125, "iqm.pulse.playlist.schedule.Schedule.pad_to_hard_box"]], "pad_to_hard_box_in_seconds() (iqm.pulse.playlist.schedule.schedule method)": [[125, "iqm.pulse.playlist.schedule.Schedule.pad_to_hard_box_in_seconds"]], "pprint() (iqm.pulse.playlist.schedule.schedule method)": [[125, "iqm.pulse.playlist.schedule.Schedule.pprint"]], "reverse() (iqm.pulse.playlist.schedule.schedule method)": [[125, "iqm.pulse.playlist.schedule.Schedule.reverse"]], "reverse_hard_box() (iqm.pulse.playlist.schedule.schedule method)": [[125, "iqm.pulse.playlist.schedule.Schedule.reverse_hard_box"]], "validate() (iqm.pulse.playlist.schedule.schedule method)": [[125, "iqm.pulse.playlist.schedule.Schedule.validate"]], "segment (class in iqm.pulse.playlist.schedule)": [[126, "iqm.pulse.playlist.schedule.Segment"]], "_duration (iqm.pulse.playlist.schedule.segment attribute)": [[126, "iqm.pulse.playlist.schedule.Segment._duration"]], "_instructions (iqm.pulse.playlist.schedule.segment attribute)": [[126, "iqm.pulse.playlist.schedule.Segment._instructions"]], "append() (iqm.pulse.playlist.schedule.segment method)": [[126, "iqm.pulse.playlist.schedule.Segment.append"]], "copy() (iqm.pulse.playlist.schedule.segment method)": [[126, "iqm.pulse.playlist.schedule.Segment.copy"]], "duration (iqm.pulse.playlist.schedule.segment property)": [[126, "iqm.pulse.playlist.schedule.Segment.duration"]], "extend() (iqm.pulse.playlist.schedule.segment method)": [[126, "iqm.pulse.playlist.schedule.Segment.extend"]], "pop() (iqm.pulse.playlist.schedule.segment method)": [[126, "iqm.pulse.playlist.schedule.Segment.pop"]], "prepend() (iqm.pulse.playlist.schedule.segment method)": [[126, "iqm.pulse.playlist.schedule.Segment.prepend"]], "tolerance (in module iqm.pulse.playlist.schedule)": [[127, "iqm.pulse.playlist.schedule.TOLERANCE"]], "iqm.pulse.playlist.visualisation": [[128, "module-iqm.pulse.playlist.visualisation"]], "iqm.pulse.playlist.visualisation.base": [[129, "module-iqm.pulse.playlist.visualisation.base"]], "inspect_playlist() (in module iqm.pulse.playlist.visualisation.base)": [[130, "iqm.pulse.playlist.visualisation.base.inspect_playlist"]], "iqm.pulse.playlist.waveforms": [[131, "module-iqm.pulse.playlist.waveforms"]], "chirp (class in iqm.pulse.playlist.waveforms)": [[132, "iqm.pulse.playlist.waveforms.Chirp"]], "_sample() (iqm.pulse.playlist.waveforms.chirp method)": [[132, "iqm.pulse.playlist.waveforms.Chirp._sample"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.chirp static method)": [[132, "iqm.pulse.playlist.waveforms.Chirp.non_timelike_attributes"]], "chirpimag (class in iqm.pulse.playlist.waveforms)": [[133, "iqm.pulse.playlist.waveforms.ChirpImag"]], "phase (iqm.pulse.playlist.waveforms.chirpimag attribute)": [[133, "iqm.pulse.playlist.waveforms.ChirpImag.phase"]], "cosine (class in iqm.pulse.playlist.waveforms)": [[134, "iqm.pulse.playlist.waveforms.Cosine"]], "_sample() (iqm.pulse.playlist.waveforms.cosine method)": [[134, "iqm.pulse.playlist.waveforms.Cosine._sample"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.cosine static method)": [[134, "iqm.pulse.playlist.waveforms.Cosine.non_timelike_attributes"]], "cosinerisefallderivative (class in iqm.pulse.playlist.waveforms)": [[135, "iqm.pulse.playlist.waveforms.CosineRiseFallDerivative"]], "_sample() (iqm.pulse.playlist.waveforms.cosinerisefallderivative method)": [[135, "iqm.pulse.playlist.waveforms.CosineRiseFallDerivative._sample"]], "modulatedcosinerisefall (class in iqm.pulse.playlist.waveforms)": [[136, "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall"]], "_sample() (iqm.pulse.playlist.waveforms.modulatedcosinerisefall method)": [[136, "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall._sample"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.modulatedcosinerisefall static method)": [[136, "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall.non_timelike_attributes"]], "slepian (class in iqm.pulse.playlist.waveforms)": [[137, "iqm.pulse.playlist.waveforms.Slepian"]], "_sample() (iqm.pulse.playlist.waveforms.slepian method)": [[137, "iqm.pulse.playlist.waveforms.Slepian._sample"]], "_sample_normalized_slepian() (iqm.pulse.playlist.waveforms.slepian method)": [[137, "iqm.pulse.playlist.waveforms.Slepian._sample_normalized_slepian"]], "_t_tau() (iqm.pulse.playlist.waveforms.slepian method)": [[137, "iqm.pulse.playlist.waveforms.Slepian._t_tau"]], "_theta_tau() (iqm.pulse.playlist.waveforms.slepian method)": [[137, "iqm.pulse.playlist.waveforms.Slepian._theta_tau"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.slepian static method)": [[137, "iqm.pulse.playlist.waveforms.Slepian.non_timelike_attributes"]], "iqm.pulse.quantum_ops": [[138, "module-iqm.pulse.quantum_ops"]], "quantumop (class in iqm.pulse.quantum_ops)": [[139, "iqm.pulse.quantum_ops.QuantumOp"]], "arity (iqm.pulse.quantum_ops.quantumop attribute)": [[139, "iqm.pulse.quantum_ops.QuantumOp.arity"]], "copy() (iqm.pulse.quantum_ops.quantumop method)": [[139, "iqm.pulse.quantum_ops.QuantumOp.copy"]], "default_implementation (iqm.pulse.quantum_ops.quantumop property)": [[139, "iqm.pulse.quantum_ops.QuantumOp.default_implementation"]], "defaults_for_locus (iqm.pulse.quantum_ops.quantumop attribute)": [[139, "iqm.pulse.quantum_ops.QuantumOp.defaults_for_locus"]], "factorizable (iqm.pulse.quantum_ops.quantumop attribute)": [[139, "iqm.pulse.quantum_ops.QuantumOp.factorizable"]], "get_default_implementation_for_locus() (iqm.pulse.quantum_ops.quantumop method)": [[139, "iqm.pulse.quantum_ops.QuantumOp.get_default_implementation_for_locus"]], "implementations (iqm.pulse.quantum_ops.quantumop attribute)": [[139, "iqm.pulse.quantum_ops.QuantumOp.implementations"]], "name (iqm.pulse.quantum_ops.quantumop attribute)": [[139, "iqm.pulse.quantum_ops.QuantumOp.name"]], "params (iqm.pulse.quantum_ops.quantumop attribute)": [[139, "iqm.pulse.quantum_ops.QuantumOp.params"]], "set_default_implementation() (iqm.pulse.quantum_ops.quantumop method)": [[139, "iqm.pulse.quantum_ops.QuantumOp.set_default_implementation"]], "set_default_implementation_for_locus() (iqm.pulse.quantum_ops.quantumop method)": [[139, "iqm.pulse.quantum_ops.QuantumOp.set_default_implementation_for_locus"]], "symmetric (iqm.pulse.quantum_ops.quantumop attribute)": [[139, "iqm.pulse.quantum_ops.QuantumOp.symmetric"]], "unitary (iqm.pulse.quantum_ops.quantumop attribute)": [[139, "iqm.pulse.quantum_ops.QuantumOp.unitary"]], "quantumoptable (in module iqm.pulse.quantum_ops)": [[140, "iqm.pulse.quantum_ops.QuantumOpTable"]], "validate_locus_calibration() (in module iqm.pulse.quantum_ops)": [[141, "iqm.pulse.quantum_ops.validate_locus_calibration"]], "validate_op_calibration() (in module iqm.pulse.quantum_ops)": [[142, "iqm.pulse.quantum_ops.validate_op_calibration"]], "iqm.pulse.scheduler": [[143, "module-iqm.pulse.scheduler"]], "blocking (in module iqm.pulse.scheduler)": [[144, "iqm.pulse.scheduler.BLOCKING"]], "nonsolid (in module iqm.pulse.scheduler)": [[145, "iqm.pulse.scheduler.NONSOLID"]], "segmentpointer (class in iqm.pulse.scheduler)": [[146, "iqm.pulse.scheduler.SegmentPointer"]], "tol (iqm.pulse.scheduler.segmentpointer attribute)": [[146, "iqm.pulse.scheduler.SegmentPointer.TOL"]], "cut_tail() (iqm.pulse.scheduler.segmentpointer method)": [[146, "iqm.pulse.scheduler.SegmentPointer.cut_tail"]], "fastforward() (iqm.pulse.scheduler.segmentpointer method)": [[146, "iqm.pulse.scheduler.SegmentPointer.fastforward"]], "frac (iqm.pulse.scheduler.segmentpointer attribute)": [[146, "iqm.pulse.scheduler.SegmentPointer.frac"]], "get() (iqm.pulse.scheduler.segmentpointer method)": [[146, "iqm.pulse.scheduler.SegmentPointer.get"]], "idx (iqm.pulse.scheduler.segmentpointer attribute)": [[146, "iqm.pulse.scheduler.SegmentPointer.idx"]], "next() (iqm.pulse.scheduler.segmentpointer method)": [[146, "iqm.pulse.scheduler.SegmentPointer.next"]], "remainder (iqm.pulse.scheduler.segmentpointer property)": [[146, "iqm.pulse.scheduler.SegmentPointer.remainder"]], "rewind() (iqm.pulse.scheduler.segmentpointer method)": [[146, "iqm.pulse.scheduler.SegmentPointer.rewind"]], "source (iqm.pulse.scheduler.segmentpointer attribute)": [[146, "iqm.pulse.scheduler.SegmentPointer.source"]], "tail() (iqm.pulse.scheduler.segmentpointer method)": [[146, "iqm.pulse.scheduler.SegmentPointer.tail"]], "extend_hard_boundary() (in module iqm.pulse.scheduler)": [[147, "iqm.pulse.scheduler.extend_hard_boundary"]], "extend_hard_boundary_in_seconds() (in module iqm.pulse.scheduler)": [[148, "iqm.pulse.scheduler.extend_hard_boundary_in_seconds"]], "extend_schedule() (in module iqm.pulse.scheduler)": [[149, "iqm.pulse.scheduler.extend_schedule"]], "extend_schedule_new() (in module iqm.pulse.scheduler)": [[150, "iqm.pulse.scheduler.extend_schedule_new"]], "iqm.pulse.timebox": [[151, "module-iqm.pulse.timebox"]], "multiplexedprobetimebox (class in iqm.pulse.timebox)": [[152, "iqm.pulse.timebox.MultiplexedProbeTimeBox"]], "from_readout_trigger() (iqm.pulse.timebox.multiplexedprobetimebox static method)": [[152, "iqm.pulse.timebox.MultiplexedProbeTimeBox.from_readout_trigger"]], "hard_boundary (iqm.pulse.timebox.schedulingalgorithm attribute)": [[153, "iqm.pulse.timebox.SchedulingAlgorithm.HARD_BOUNDARY"]], "schedulingalgorithm (class in iqm.pulse.timebox)": [[153, "iqm.pulse.timebox.SchedulingAlgorithm"]], "tetris (iqm.pulse.timebox.schedulingalgorithm attribute)": [[153, "iqm.pulse.timebox.SchedulingAlgorithm.TETRIS"]], "alap (iqm.pulse.timebox.schedulingstrategy attribute)": [[154, "iqm.pulse.timebox.SchedulingStrategy.ALAP"]], "asap (iqm.pulse.timebox.schedulingstrategy attribute)": [[154, "iqm.pulse.timebox.SchedulingStrategy.ASAP"]], "schedulingstrategy (class in iqm.pulse.timebox)": [[154, "iqm.pulse.timebox.SchedulingStrategy"]], "timebox (class in iqm.pulse.timebox)": [[155, "iqm.pulse.timebox.TimeBox"]], "atom (iqm.pulse.timebox.timebox attribute)": [[155, "iqm.pulse.timebox.TimeBox.atom"]], "atomic() (iqm.pulse.timebox.timebox static method)": [[155, "iqm.pulse.timebox.TimeBox.atomic"]], "children (iqm.pulse.timebox.timebox attribute)": [[155, "iqm.pulse.timebox.TimeBox.children"]], "composite() (iqm.pulse.timebox.timebox static method)": [[155, "iqm.pulse.timebox.TimeBox.composite"]], "label (iqm.pulse.timebox.timebox attribute)": [[155, "iqm.pulse.timebox.TimeBox.label"]], "locus_components (iqm.pulse.timebox.timebox attribute)": [[155, "iqm.pulse.timebox.TimeBox.locus_components"]], "neighborhood_components (iqm.pulse.timebox.timebox attribute)": [[155, "iqm.pulse.timebox.TimeBox.neighborhood_components"]], "print() (iqm.pulse.timebox.timebox method)": [[155, "iqm.pulse.timebox.TimeBox.print"]], "scheduling (iqm.pulse.timebox.timebox attribute)": [[155, "iqm.pulse.timebox.TimeBox.scheduling"]], "scheduling_algorithm (iqm.pulse.timebox.timebox attribute)": [[155, "iqm.pulse.timebox.TimeBox.scheduling_algorithm"]], "set_alap() (iqm.pulse.timebox.timebox method)": [[155, "iqm.pulse.timebox.TimeBox.set_alap"]], "set_asap() (iqm.pulse.timebox.timebox method)": [[155, "iqm.pulse.timebox.TimeBox.set_asap"]], "validate() (iqm.pulse.timebox.timebox method)": [[155, "iqm.pulse.timebox.TimeBox.validate"]], "iqm.pulse.utils": [[156, "module-iqm.pulse.utils"]], "load_yaml() (in module iqm.pulse.utils)": [[157, "iqm.pulse.utils.load_yaml"]], "map_waveform_param_types() (in module iqm.pulse.utils)": [[158, "iqm.pulse.utils.map_waveform_param_types"]], "merge_dicts() (in module iqm.pulse.utils)": [[159, "iqm.pulse.utils.merge_dicts"]], "normalize_angle() (in module iqm.pulse.utils)": [[160, "iqm.pulse.utils.normalize_angle"]], "phase_transformation() (in module iqm.pulse.utils)": [[161, "iqm.pulse.utils.phase_transformation"]], "iqm.pulse.validation": [[162, "module-iqm.pulse.validation"]], "awgschedulevalidationdata (class in iqm.pulse.validation)": [[163, "iqm.pulse.validation.AWGScheduleValidationData"]], "awgschedulevalidationerror": [[164, "iqm.pulse.validation.AWGScheduleValidationError"]], "invalidinstructionerror": [[165, "iqm.pulse.validation.InvalidInstructionError"]], "playlistvalidationerror": [[166, "iqm.pulse.validation.PlaylistValidationError"]], "validate_awg_and_schedule_compatibility() (in module iqm.pulse.validation)": [[167, "iqm.pulse.validation.validate_awg_and_schedule_compatibility"]], "validate_channel() (in module iqm.pulse.validation)": [[168, "iqm.pulse.validation.validate_channel"]], "validate_instruction_and_wf_length() (in module iqm.pulse.validation)": [[169, "iqm.pulse.validation.validate_instruction_and_wf_length"]], "validate_playlist_compatibility() (in module iqm.pulse.validation)": [[170, "iqm.pulse.validation.validate_playlist_compatibility"]]}})