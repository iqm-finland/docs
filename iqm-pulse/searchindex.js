Search.setIndex({"docnames": ["API", "api/iqm.pulse", "api/iqm.pulse.builder", "api/iqm.pulse.builder.CircuitOperation", "api/iqm.pulse.builder.ScheduleBuilder", "api/iqm.pulse.builder.build_quantum_ops", "api/iqm.pulse.builder.load_config", "api/iqm.pulse.builder.validate_quantum_circuit", "api/iqm.pulse.circuit_operations", "api/iqm.pulse.circuit_operations.CircuitOperationList", "api/iqm.pulse.circuit_operations.get_unitary_from_circuit", "api/iqm.pulse.circuit_operations.get_unitary_from_op", "api/iqm.pulse.circuit_operations.reorder", "api/iqm.pulse.circuit_operations.reshape_unitary", "api/iqm.pulse.gate_implementation", "api/iqm.pulse.gate_implementation.CompositeCache", "api/iqm.pulse.gate_implementation.CompositeGate", "api/iqm.pulse.gate_implementation.CustomIQWaveforms", "api/iqm.pulse.gate_implementation.GateImplementation", "api/iqm.pulse.gate_implementation.Locus", "api/iqm.pulse.gate_implementation.NestedParams", "api/iqm.pulse.gate_implementation.OCalibrationData", "api/iqm.pulse.gate_implementation.OICalibrationData", "api/iqm.pulse.gate_implementation.OILCalibrationData", "api/iqm.pulse.gate_implementation.OpCalibrationDataTree", "api/iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING", "api/iqm.pulse.gate_implementation.SinglePulseGate", "api/iqm.pulse.gate_implementation.get_waveform_parameters", "api/iqm.pulse.gates", "api/iqm.pulse.gates.barrier", "api/iqm.pulse.gates.barrier.Barrier", "api/iqm.pulse.gates.conditional", "api/iqm.pulse.gates.conditional.CCPRX_Composite", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian", "api/iqm.pulse.gates.cz", "api/iqm.pulse.gates.cz.CZ_CRF", "api/iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF", "api/iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare", "api/iqm.pulse.gates.cz.CZ_Slepian", "api/iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF", "api/iqm.pulse.gates.cz.CZ_Slepian_CRF", "api/iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare", "api/iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate", "api/iqm.pulse.gates.cz.FluxPulseGate", "api/iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF", "api/iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF", "api/iqm.pulse.gates.delay", "api/iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS", "api/iqm.pulse.gates.delay.Delay", "api/iqm.pulse.gates.enums", "api/iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES", "api/iqm.pulse.gates.enums.TwoQubitGate", "api/iqm.pulse.gates.enums.XYGATE_UNITARIES", "api/iqm.pulse.gates.enums.XYGate", "api/iqm.pulse.gates.expose_implementation", "api/iqm.pulse.gates.flux_multiplexer", "api/iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear", "api/iqm.pulse.gates.flux_multiplexer.TOLERANCE", "api/iqm.pulse.gates.get_implementation_class", "api/iqm.pulse.gates.measure", "api/iqm.pulse.gates.measure.Measure_Constant", "api/iqm.pulse.gates.measure.Measure_CustomWaveforms", "api/iqm.pulse.gates.measure.ProbePulse_CustomWaveforms", "api/iqm.pulse.gates.move", "api/iqm.pulse.gates.move.MOVE_CRF_CRF", "api/iqm.pulse.gates.move.MOVE_CustomWaveforms", "api/iqm.pulse.gates.move.MOVE_TGSS_CRF", "api/iqm.pulse.gates.move.MoveMarker", "api/iqm.pulse.gates.move.apply_move_gate_phase_corrections", "api/iqm.pulse.gates.move.validate_move_instructions", "api/iqm.pulse.gates.prx", "api/iqm.pulse.gates.prx.ABC_Constant_smooth", "api/iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall", "api/iqm.pulse.gates.prx.PRX_CustomWaveforms", "api/iqm.pulse.gates.prx.PRX_CustomWaveformsSX", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX", "api/iqm.pulse.gates.prx.PRX_DRAGGaussian", "api/iqm.pulse.gates.prx.PRX_DRAGGaussianSX", "api/iqm.pulse.gates.prx.PRX_GateImplementation", "api/iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation", "api/iqm.pulse.gates.prx.get_unitary_prx", "api/iqm.pulse.gates.register_implementation", "api/iqm.pulse.gates.reset", "api/iqm.pulse.gates.reset.RESET_FEEDBACK_KEY", "api/iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY", "api/iqm.pulse.gates.reset.Reset_Conditional", "api/iqm.pulse.gates.reset.Reset_Wait", "api/iqm.pulse.gates.rz", "api/iqm.pulse.gates.rz.RZ_ACStarkShift", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant", "api/iqm.pulse.gates.rz.RZ_Virtual", "api/iqm.pulse.gates.rz.get_unitary_rz", "api/iqm.pulse.gates.sx", "api/iqm.pulse.gates.sx.SXGate", "api/iqm.pulse.gates.u", "api/iqm.pulse.gates.u.UGate", "api/iqm.pulse.gates.u.get_unitary_u", "api/iqm.pulse.playlist", "api/iqm.pulse.playlist.channel", "api/iqm.pulse.playlist.channel.ChannelConfiguration", "api/iqm.pulse.playlist.channel.ChannelDescription", "api/iqm.pulse.playlist.channel.ChannelProperties", "api/iqm.pulse.playlist.channel.IQChannelConfig", "api/iqm.pulse.playlist.channel.ProbeChannelProperties", "api/iqm.pulse.playlist.channel.RealChannelConfig", "api/iqm.pulse.playlist.channel.get_channel_properties", "api/iqm.pulse.playlist.channel.get_channel_properties_from_station_settings", "api/iqm.pulse.playlist.channel.round_duration_to_granularity_samples", "api/iqm.pulse.playlist.instructions", "api/iqm.pulse.playlist.instructions.AcquisitionMethod", "api/iqm.pulse.playlist.instructions.Block", "api/iqm.pulse.playlist.instructions.ComplexIntegration", "api/iqm.pulse.playlist.instructions.ConditionalInstruction", "api/iqm.pulse.playlist.instructions.FluxPulse", "api/iqm.pulse.playlist.instructions.IQPulse", "api/iqm.pulse.playlist.instructions.Instruction", "api/iqm.pulse.playlist.instructions.MultiplexedIQPulse", "api/iqm.pulse.playlist.instructions.ReadoutTrigger", "api/iqm.pulse.playlist.instructions.RealPulse", "api/iqm.pulse.playlist.instructions.ThresholdStateDiscrimination", "api/iqm.pulse.playlist.instructions.TimeTrace", "api/iqm.pulse.playlist.instructions.VirtualRZ", "api/iqm.pulse.playlist.instructions.Wait", "api/iqm.pulse.playlist.playlist", "api/iqm.pulse.playlist.schedule", "api/iqm.pulse.playlist.schedule.Nothing", "api/iqm.pulse.playlist.schedule.Schedule", "api/iqm.pulse.playlist.schedule.Segment", "api/iqm.pulse.playlist.schedule.TOLERANCE", "api/iqm.pulse.playlist.visualisation", "api/iqm.pulse.playlist.visualisation.base", "api/iqm.pulse.playlist.visualisation.base.inspect_playlist", "api/iqm.pulse.playlist.waveforms", "api/iqm.pulse.playlist.waveforms.Chirp", "api/iqm.pulse.playlist.waveforms.ChirpImag", "api/iqm.pulse.playlist.waveforms.Cosine", "api/iqm.pulse.playlist.waveforms.CosineFall", "api/iqm.pulse.playlist.waveforms.CosineRise", "api/iqm.pulse.playlist.waveforms.CosineRiseFallDerivative", "api/iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall", "api/iqm.pulse.playlist.waveforms.Slepian", "api/iqm.pulse.quantum_ops", "api/iqm.pulse.quantum_ops.QuantumOp", "api/iqm.pulse.quantum_ops.QuantumOpTable", "api/iqm.pulse.quantum_ops.validate_locus_calibration", "api/iqm.pulse.quantum_ops.validate_op_calibration", "api/iqm.pulse.scheduler", "api/iqm.pulse.scheduler.BLOCKING", "api/iqm.pulse.scheduler.NONSOLID", "api/iqm.pulse.scheduler.SegmentPointer", "api/iqm.pulse.scheduler.extend_hard_boundary", "api/iqm.pulse.scheduler.extend_hard_boundary_in_seconds", "api/iqm.pulse.scheduler.extend_schedule", "api/iqm.pulse.scheduler.extend_schedule_new", "api/iqm.pulse.timebox", "api/iqm.pulse.timebox.MultiplexedProbeTimeBox", "api/iqm.pulse.timebox.SchedulingAlgorithm", "api/iqm.pulse.timebox.SchedulingStrategy", "api/iqm.pulse.timebox.TimeBox", "api/iqm.pulse.utils", "api/iqm.pulse.utils.load_yaml", "api/iqm.pulse.utils.map_waveform_param_types", "api/iqm.pulse.utils.merge_dicts", "api/iqm.pulse.utils.normalize_angle", "api/iqm.pulse.utils.phase_transformation", "api/iqm.pulse.validation", "api/iqm.pulse.validation.AWGScheduleValidationData", "api/iqm.pulse.validation.AWGScheduleValidationError", "api/iqm.pulse.validation.InvalidInstructionError", "api/iqm.pulse.validation.PlaylistValidationError", "api/iqm.pulse.validation.validate_awg_and_schedule_compatibility", "api/iqm.pulse.validation.validate_channel", "api/iqm.pulse.validation.validate_instruction_and_wf_length", "api/iqm.pulse.validation.validate_playlist_compatibility", "changelog", "concepts", "custom_gates", "index", "license", "pulse_timing", "references", "using_builder"], "filenames": ["API.rst", "api/iqm.pulse.rst", "api/iqm.pulse.builder.rst", "api/iqm.pulse.builder.CircuitOperation.rst", "api/iqm.pulse.builder.ScheduleBuilder.rst", "api/iqm.pulse.builder.build_quantum_ops.rst", "api/iqm.pulse.builder.load_config.rst", "api/iqm.pulse.builder.validate_quantum_circuit.rst", "api/iqm.pulse.circuit_operations.rst", "api/iqm.pulse.circuit_operations.CircuitOperationList.rst", "api/iqm.pulse.circuit_operations.get_unitary_from_circuit.rst", "api/iqm.pulse.circuit_operations.get_unitary_from_op.rst", "api/iqm.pulse.circuit_operations.reorder.rst", "api/iqm.pulse.circuit_operations.reshape_unitary.rst", "api/iqm.pulse.gate_implementation.rst", "api/iqm.pulse.gate_implementation.CompositeCache.rst", "api/iqm.pulse.gate_implementation.CompositeGate.rst", "api/iqm.pulse.gate_implementation.CustomIQWaveforms.rst", "api/iqm.pulse.gate_implementation.GateImplementation.rst", "api/iqm.pulse.gate_implementation.Locus.rst", "api/iqm.pulse.gate_implementation.NestedParams.rst", "api/iqm.pulse.gate_implementation.OCalibrationData.rst", "api/iqm.pulse.gate_implementation.OICalibrationData.rst", "api/iqm.pulse.gate_implementation.OILCalibrationData.rst", "api/iqm.pulse.gate_implementation.OpCalibrationDataTree.rst", "api/iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING.rst", "api/iqm.pulse.gate_implementation.SinglePulseGate.rst", "api/iqm.pulse.gate_implementation.get_waveform_parameters.rst", "api/iqm.pulse.gates.rst", "api/iqm.pulse.gates.barrier.rst", "api/iqm.pulse.gates.barrier.Barrier.rst", "api/iqm.pulse.gates.conditional.rst", "api/iqm.pulse.gates.conditional.CCPRX_Composite.rst", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall.rst", "api/iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian.rst", "api/iqm.pulse.gates.cz.rst", "api/iqm.pulse.gates.cz.CZ_CRF.rst", "api/iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.rst", "api/iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.rst", "api/iqm.pulse.gates.cz.CZ_Slepian.rst", "api/iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.rst", "api/iqm.pulse.gates.cz.CZ_Slepian_CRF.rst", "api/iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.rst", "api/iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.rst", "api/iqm.pulse.gates.cz.FluxPulseGate.rst", "api/iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.rst", "api/iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.rst", "api/iqm.pulse.gates.delay.rst", "api/iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS.rst", "api/iqm.pulse.gates.delay.Delay.rst", "api/iqm.pulse.gates.enums.rst", "api/iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES.rst", "api/iqm.pulse.gates.enums.TwoQubitGate.rst", "api/iqm.pulse.gates.enums.XYGATE_UNITARIES.rst", "api/iqm.pulse.gates.enums.XYGate.rst", "api/iqm.pulse.gates.expose_implementation.rst", "api/iqm.pulse.gates.flux_multiplexer.rst", "api/iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear.rst", "api/iqm.pulse.gates.flux_multiplexer.TOLERANCE.rst", "api/iqm.pulse.gates.get_implementation_class.rst", "api/iqm.pulse.gates.measure.rst", "api/iqm.pulse.gates.measure.Measure_Constant.rst", "api/iqm.pulse.gates.measure.Measure_CustomWaveforms.rst", "api/iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.rst", "api/iqm.pulse.gates.move.rst", "api/iqm.pulse.gates.move.MOVE_CRF_CRF.rst", "api/iqm.pulse.gates.move.MOVE_CustomWaveforms.rst", "api/iqm.pulse.gates.move.MOVE_TGSS_CRF.rst", "api/iqm.pulse.gates.move.MoveMarker.rst", "api/iqm.pulse.gates.move.apply_move_gate_phase_corrections.rst", "api/iqm.pulse.gates.move.validate_move_instructions.rst", "api/iqm.pulse.gates.prx.rst", "api/iqm.pulse.gates.prx.ABC_Constant_smooth.rst", "api/iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.rst", "api/iqm.pulse.gates.prx.PRX_CustomWaveforms.rst", "api/iqm.pulse.gates.prx.PRX_CustomWaveformsSX.rst", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.rst", "api/iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.rst", "api/iqm.pulse.gates.prx.PRX_DRAGGaussian.rst", "api/iqm.pulse.gates.prx.PRX_DRAGGaussianSX.rst", "api/iqm.pulse.gates.prx.PRX_GateImplementation.rst", "api/iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation.rst", "api/iqm.pulse.gates.prx.get_unitary_prx.rst", "api/iqm.pulse.gates.register_implementation.rst", "api/iqm.pulse.gates.reset.rst", "api/iqm.pulse.gates.reset.RESET_FEEDBACK_KEY.rst", "api/iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY.rst", "api/iqm.pulse.gates.reset.Reset_Conditional.rst", "api/iqm.pulse.gates.reset.Reset_Wait.rst", "api/iqm.pulse.gates.rz.rst", "api/iqm.pulse.gates.rz.RZ_ACStarkShift.rst", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.rst", "api/iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.rst", "api/iqm.pulse.gates.rz.RZ_Virtual.rst", "api/iqm.pulse.gates.rz.get_unitary_rz.rst", "api/iqm.pulse.gates.sx.rst", "api/iqm.pulse.gates.sx.SXGate.rst", "api/iqm.pulse.gates.u.rst", "api/iqm.pulse.gates.u.UGate.rst", "api/iqm.pulse.gates.u.get_unitary_u.rst", "api/iqm.pulse.playlist.rst", "api/iqm.pulse.playlist.channel.rst", "api/iqm.pulse.playlist.channel.ChannelConfiguration.rst", "api/iqm.pulse.playlist.channel.ChannelDescription.rst", "api/iqm.pulse.playlist.channel.ChannelProperties.rst", "api/iqm.pulse.playlist.channel.IQChannelConfig.rst", "api/iqm.pulse.playlist.channel.ProbeChannelProperties.rst", "api/iqm.pulse.playlist.channel.RealChannelConfig.rst", "api/iqm.pulse.playlist.channel.get_channel_properties.rst", "api/iqm.pulse.playlist.channel.get_channel_properties_from_station_settings.rst", "api/iqm.pulse.playlist.channel.round_duration_to_granularity_samples.rst", "api/iqm.pulse.playlist.instructions.rst", "api/iqm.pulse.playlist.instructions.AcquisitionMethod.rst", "api/iqm.pulse.playlist.instructions.Block.rst", "api/iqm.pulse.playlist.instructions.ComplexIntegration.rst", "api/iqm.pulse.playlist.instructions.ConditionalInstruction.rst", "api/iqm.pulse.playlist.instructions.FluxPulse.rst", "api/iqm.pulse.playlist.instructions.IQPulse.rst", "api/iqm.pulse.playlist.instructions.Instruction.rst", "api/iqm.pulse.playlist.instructions.MultiplexedIQPulse.rst", "api/iqm.pulse.playlist.instructions.ReadoutTrigger.rst", "api/iqm.pulse.playlist.instructions.RealPulse.rst", "api/iqm.pulse.playlist.instructions.ThresholdStateDiscrimination.rst", "api/iqm.pulse.playlist.instructions.TimeTrace.rst", "api/iqm.pulse.playlist.instructions.VirtualRZ.rst", "api/iqm.pulse.playlist.instructions.Wait.rst", "api/iqm.pulse.playlist.playlist.rst", "api/iqm.pulse.playlist.schedule.rst", "api/iqm.pulse.playlist.schedule.Nothing.rst", "api/iqm.pulse.playlist.schedule.Schedule.rst", "api/iqm.pulse.playlist.schedule.Segment.rst", "api/iqm.pulse.playlist.schedule.TOLERANCE.rst", "api/iqm.pulse.playlist.visualisation.rst", "api/iqm.pulse.playlist.visualisation.base.rst", "api/iqm.pulse.playlist.visualisation.base.inspect_playlist.rst", "api/iqm.pulse.playlist.waveforms.rst", "api/iqm.pulse.playlist.waveforms.Chirp.rst", "api/iqm.pulse.playlist.waveforms.ChirpImag.rst", "api/iqm.pulse.playlist.waveforms.Cosine.rst", "api/iqm.pulse.playlist.waveforms.CosineFall.rst", "api/iqm.pulse.playlist.waveforms.CosineRise.rst", "api/iqm.pulse.playlist.waveforms.CosineRiseFallDerivative.rst", "api/iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall.rst", "api/iqm.pulse.playlist.waveforms.Slepian.rst", "api/iqm.pulse.quantum_ops.rst", "api/iqm.pulse.quantum_ops.QuantumOp.rst", "api/iqm.pulse.quantum_ops.QuantumOpTable.rst", "api/iqm.pulse.quantum_ops.validate_locus_calibration.rst", "api/iqm.pulse.quantum_ops.validate_op_calibration.rst", "api/iqm.pulse.scheduler.rst", "api/iqm.pulse.scheduler.BLOCKING.rst", "api/iqm.pulse.scheduler.NONSOLID.rst", "api/iqm.pulse.scheduler.SegmentPointer.rst", "api/iqm.pulse.scheduler.extend_hard_boundary.rst", "api/iqm.pulse.scheduler.extend_hard_boundary_in_seconds.rst", "api/iqm.pulse.scheduler.extend_schedule.rst", "api/iqm.pulse.scheduler.extend_schedule_new.rst", "api/iqm.pulse.timebox.rst", "api/iqm.pulse.timebox.MultiplexedProbeTimeBox.rst", "api/iqm.pulse.timebox.SchedulingAlgorithm.rst", "api/iqm.pulse.timebox.SchedulingStrategy.rst", "api/iqm.pulse.timebox.TimeBox.rst", "api/iqm.pulse.utils.rst", "api/iqm.pulse.utils.load_yaml.rst", "api/iqm.pulse.utils.map_waveform_param_types.rst", "api/iqm.pulse.utils.merge_dicts.rst", "api/iqm.pulse.utils.normalize_angle.rst", "api/iqm.pulse.utils.phase_transformation.rst", "api/iqm.pulse.validation.rst", "api/iqm.pulse.validation.AWGScheduleValidationData.rst", "api/iqm.pulse.validation.AWGScheduleValidationError.rst", "api/iqm.pulse.validation.InvalidInstructionError.rst", "api/iqm.pulse.validation.PlaylistValidationError.rst", "api/iqm.pulse.validation.validate_awg_and_schedule_compatibility.rst", "api/iqm.pulse.validation.validate_channel.rst", "api/iqm.pulse.validation.validate_instruction_and_wf_length.rst", "api/iqm.pulse.validation.validate_playlist_compatibility.rst", "changelog.rst", "concepts.rst", "custom_gates.rst", "index.rst", "license.rst", "pulse_timing.rst", "references.rst", "using_builder.rst"], "titles": ["API Reference", "pulse", "builder", "CircuitOperation", "ScheduleBuilder", "iqm.pulse.builder.build_quantum_ops", "iqm.pulse.builder.load_config", "iqm.pulse.builder.validate_quantum_circuit", "circuit_operations", "CircuitOperationList", "iqm.pulse.circuit_operations.get_unitary_from_circuit", "iqm.pulse.circuit_operations.get_unitary_from_op", "iqm.pulse.circuit_operations.reorder", "iqm.pulse.circuit_operations.reshape_unitary", "gate_implementation", "CompositeCache", "CompositeGate", "CustomIQWaveforms", "GateImplementation", "iqm.pulse.gate_implementation.Locus", "iqm.pulse.gate_implementation.NestedParams", "iqm.pulse.gate_implementation.OCalibrationData", "iqm.pulse.gate_implementation.OICalibrationData", "iqm.pulse.gate_implementation.OILCalibrationData", "iqm.pulse.gate_implementation.OpCalibrationDataTree", "iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING", "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING", "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING", "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING", "SinglePulseGate", "iqm.pulse.gate_implementation.get_waveform_parameters", "gates", "barrier", "Barrier", "conditional", "CCPRX_Composite", "CCPRX_Composite_DRAGCosineRiseFall", "CCPRX_Composite_DRAGGaussian", "cz", "CZ_CRF", "CZ_CRF_ACStarkCRF", "CZ_GaussianSmoothedSquare", "CZ_Slepian", "CZ_Slepian_ACStarkCRF", "CZ_Slepian_CRF", "CZ_TruncatedGaussianSmoothedSquare", "CouplerFluxPulseQubitACStarkPulseGate", "FluxPulseGate", "FluxPulseGate_CRF_CRF", "FluxPulseGate_TGSS_CRF", "delay", "iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS", "Delay", "enums", "iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES", "TwoQubitGate", "iqm.pulse.gates.enums.XYGATE_UNITARIES", "XYGate", "iqm.pulse.gates.expose_implementation", "flux_multiplexer", "FluxMultiplexer_SampleLinear", "iqm.pulse.gates.flux_multiplexer.TOLERANCE", "iqm.pulse.gates.get_implementation_class", "measure", "Measure_Constant", "Measure_CustomWaveforms", "ProbePulse_CustomWaveforms", "move", "MOVE_CRF_CRF", "MOVE_CustomWaveforms", "MOVE_TGSS_CRF", "MoveMarker", "iqm.pulse.gates.move.apply_move_gate_phase_corrections", "iqm.pulse.gates.move.validate_move_instructions", "prx", "ABC_Constant_smooth", "Constant_PRX_with_smooth_rise_fall", "PRX_CustomWaveforms", "PRX_CustomWaveformsSX", "PRX_DRAGCosineRiseFall", "PRX_DRAGCosineRiseFallSX", "PRX_DRAGGaussian", "PRX_DRAGGaussianSX", "PRX_GateImplementation", "PRX_SinglePulse_GateImplementation", "iqm.pulse.gates.prx.get_unitary_prx", "iqm.pulse.gates.register_implementation", "reset", "iqm.pulse.gates.reset.RESET_FEEDBACK_KEY", "iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY", "Reset_Conditional", "Reset_Wait", "rz", "RZ_ACStarkShift", "RZ_ACStarkShift_CosineRiseFall", "RZ_ACStarkShift_smoothConstant", "RZ_Virtual", "iqm.pulse.gates.rz.get_unitary_rz", "sx", "SXGate", "u", "UGate", "iqm.pulse.gates.u.get_unitary_u", "playlist", "channel", "ChannelConfiguration", "ChannelDescription", "ChannelProperties", "IQChannelConfig", "ProbeChannelProperties", "RealChannelConfig", "iqm.pulse.playlist.channel.get_channel_properties", "iqm.pulse.playlist.channel.get_channel_properties_from_station_settings", "iqm.pulse.playlist.channel.round_duration_to_granularity_samples", "instructions", "AcquisitionMethod", "Block", "ComplexIntegration", "ConditionalInstruction", "FluxPulse", "IQPulse", "Instruction", "MultiplexedIQPulse", "ReadoutTrigger", "RealPulse", "ThresholdStateDiscrimination", "TimeTrace", "VirtualRZ", "Wait", "playlist", "schedule", "Nothing", "Schedule", "Segment", "iqm.pulse.playlist.schedule.TOLERANCE", "visualisation", "base", "iqm.pulse.playlist.visualisation.base.inspect_playlist", "waveforms", "Chirp", "ChirpImag", "Cosine", "CosineFall", "CosineRise", "CosineRiseFallDerivative", "ModulatedCosineRiseFall", "Slepian", "quantum_ops", "QuantumOp", "iqm.pulse.quantum_ops.QuantumOpTable", "iqm.pulse.quantum_ops.validate_locus_calibration", "iqm.pulse.quantum_ops.validate_op_calibration", "scheduler", "iqm.pulse.scheduler.BLOCKING", "iqm.pulse.scheduler.NONSOLID", "SegmentPointer", "iqm.pulse.scheduler.extend_hard_boundary", "iqm.pulse.scheduler.extend_hard_boundary_in_seconds", "iqm.pulse.scheduler.extend_schedule", "iqm.pulse.scheduler.extend_schedule_new", "timebox", "MultiplexedProbeTimeBox", "SchedulingAlgorithm", "SchedulingStrategy", "TimeBox", "utils", "iqm.pulse.utils.load_yaml", "iqm.pulse.utils.map_waveform_param_types", "iqm.pulse.utils.merge_dicts", "iqm.pulse.utils.normalize_angle", "iqm.pulse.utils.phase_transformation", "validation", "AWGScheduleValidationData", "iqm.pulse.validation.AWGScheduleValidationError", "iqm.pulse.validation.InvalidInstructionError", "iqm.pulse.validation.PlaylistValidationError", "iqm.pulse.validation.validate_awg_and_schedule_compatibility", "iqm.pulse.validation.validate_channel", "iqm.pulse.validation.validate_instruction_and_wf_length", "iqm.pulse.validation.validate_playlist_compatibility", "Changelog", "Concepts and Classes", "Custom gate implementations", "IQM Pulse", "License", "Pulse timing", "References", "Using ScheduleBuilder"], "terms": {"control": [1, 4, 14, 27, 34, 35, 38, 40, 43, 50, 52, 55, 65, 103, 104, 106, 107, 112, 113, 114, 116, 121, 130, 131, 132, 158, 159, 164, 172, 176, 179, 180, 181, 182, 184, 185, 186, 187], "gate": [1, 4, 9, 15, 16, 17, 18, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 57, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 146, 148, 150, 170, 180, 181, 183, 185, 186, 187], "instruct": [1, 2, 4, 14, 18, 29, 30, 33, 47, 50, 52, 65, 66, 67, 69, 71, 72, 73, 75, 76, 83, 84, 91, 95, 96, 103, 106, 107, 109, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 148, 152, 153, 154, 155, 157, 158, 159, 160, 161, 164, 170, 171, 174, 176, 178, 179, 180, 183, 185, 187], "schedul": [1, 2, 4, 14, 18, 29, 33, 46, 47, 52, 65, 66, 71, 72, 73, 75, 76, 78, 83, 84, 91, 93, 95, 96, 103, 107, 116, 128, 129, 131, 133, 148, 155, 160, 161, 162, 163, 164, 171, 173, 180, 182, 183, 185], "quantum": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 18, 19, 21, 22, 23, 24, 29, 31, 32, 33, 46, 47, 50, 52, 65, 66, 69, 73, 83, 86, 87, 90, 91, 93, 96, 103, 121, 147, 148, 149, 151, 170, 180, 181, 182, 183, 187], "comput": [1, 3, 4, 14, 29, 65, 69, 90, 100, 103, 107, 119, 121, 132, 133, 148, 152, 156, 157, 164, 170, 180, 181, 182, 183, 184, 187], "full": [1, 2, 8, 14, 31, 32, 34, 38, 50, 53, 59, 63, 67, 74, 87, 92, 98, 100, 103, 104, 114, 129, 130, 135, 136, 138, 145, 147, 152, 160, 165, 171, 180, 182], "path": [1, 2, 6, 8, 14, 18, 31, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 53, 59, 63, 64, 65, 67, 68, 70, 74, 79, 80, 81, 82, 87, 92, 94, 98, 100, 103, 104, 114, 129, 130, 132, 135, 136, 138, 147, 152, 160, 164, 165, 166, 168, 171, 180], "iqm": [1, 2, 3, 4, 8, 9, 14, 15, 16, 17, 18, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 57, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 152, 155, 160, 161, 162, 163, 164, 165, 171, 172, 180, 181, 184, 185, 187], "subpackag": [1, 31, 103, 135], "modul": [1, 3, 4, 9, 14, 15, 16, 17, 18, 29, 31, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 57, 59, 60, 64, 65, 66, 68, 69, 70, 71, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 90, 91, 93, 94, 95, 96, 99, 101, 103, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 152, 155, 161, 162, 163, 164, 172, 181, 182, 183], "tool": [2, 152, 155, 183], "build": [2, 4, 5, 16, 18, 65, 66, 72, 77, 78, 79, 80, 161, 164, 182], "puls": [2, 3, 4, 8, 9, 14, 15, 16, 17, 18, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 57, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 152, 155, 160, 161, 162, 163, 164, 165, 171, 172, 180, 181, 182, 187], "function": [2, 4, 5, 8, 11, 14, 18, 29, 31, 33, 46, 47, 67, 69, 74, 84, 90, 91, 92, 93, 100, 104, 111, 112, 136, 146, 147, 148, 152, 164, 165, 171, 180, 182], "class": [2, 3, 4, 8, 9, 14, 15, 16, 17, 18, 20, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 160, 161, 162, 163, 164, 171, 172, 180, 183, 184], "inherit": [2, 8, 14, 16, 17, 18, 29, 32, 33, 34, 38, 46, 47, 50, 53, 59, 63, 65, 66, 67, 69, 74, 77, 78, 79, 80, 83, 87, 90, 91, 92, 93, 96, 98, 100, 104, 114, 130, 138, 147, 152, 160, 171, 180, 182], "circuitoper": [2, 4, 7, 8, 9, 10, 11, 73, 180], "schedulebuild": [2, 9, 16, 17, 18, 29, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 60, 64, 65, 66, 68, 69, 70, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 90, 91, 93, 94, 95, 96, 99, 101, 164, 180, 181, 182, 183], "builder": [3, 4, 9, 16, 17, 18, 29, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 60, 64, 65, 66, 68, 69, 70, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 90, 91, 93, 94, 95, 96, 99, 101, 180, 181, 182, 185, 187], "name": [3, 4, 5, 9, 15, 16, 17, 18, 19, 21, 24, 25, 26, 27, 28, 29, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 55, 57, 60, 62, 64, 65, 66, 68, 69, 70, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 90, 91, 93, 94, 95, 96, 99, 101, 106, 112, 119, 132, 148, 149, 150, 157, 161, 162, 163, 164, 180, 181, 182, 184, 187], "locu": [3, 4, 9, 16, 17, 18, 23, 25, 26, 27, 28, 29, 31, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 60, 64, 65, 66, 68, 69, 70, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 90, 91, 93, 94, 95, 96, 99, 101, 148, 150, 161, 164, 180, 181, 182, 185, 187], "arg": [3, 4, 9, 18, 29, 33, 46, 47, 69, 90, 91, 93, 182], "factori": [3, 4, 107, 109, 119, 148, 161, 164], "implement": [3, 4, 9, 10, 14, 15, 16, 17, 18, 21, 22, 23, 29, 31, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 58, 60, 62, 64, 65, 66, 68, 69, 70, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 90, 91, 93, 94, 95, 96, 99, 101, 132, 148, 150, 151, 170, 180, 181, 183, 185, 186, 187], "none": [3, 4, 6, 7, 9, 10, 15, 16, 18, 21, 22, 24, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 55, 57, 58, 60, 62, 64, 65, 66, 68, 69, 70, 76, 77, 78, 79, 80, 81, 82, 86, 91, 94, 95, 121, 132, 133, 148, 150, 151, 155, 156, 157, 158, 159, 161, 162, 163, 164, 168, 177, 179, 180, 182], "base": [3, 4, 9, 15, 16, 17, 18, 29, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 55, 57, 60, 64, 65, 66, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 90, 91, 93, 94, 95, 96, 99, 101, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 139, 140, 141, 142, 143, 144, 145, 146, 148, 155, 161, 162, 163, 164, 172, 180, 184, 185], "object": [3, 4, 9, 15, 30, 105, 106, 107, 115, 121, 132, 133, 148, 155, 164, 172, 180, 182, 184], "specif": [3, 4, 16, 18, 29, 31, 32, 33, 46, 47, 50, 69, 84, 90, 91, 93, 96, 106, 132, 146, 148, 172, 176, 180, 181, 182, 184, 187], "oper": [3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 16, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 32, 33, 35, 36, 37, 46, 47, 51, 52, 65, 66, 67, 69, 83, 86, 87, 89, 90, 91, 93, 96, 147, 148, 149, 150, 151, 164, 172, 180, 181, 182, 183, 185, 187], "appli": [3, 4, 35, 47, 52, 67, 69, 71, 72, 84, 91, 121, 148, 182, 184, 185, 187], "part": [3, 4, 18, 75, 125, 140, 142, 143, 144, 145, 148, 155, 164, 180, 181, 182, 184, 185, 187], "qpu": [3, 4, 18, 19, 33, 60, 128, 148, 156, 160, 164, 180, 181, 182, 187], "e": [3, 4, 16, 17, 18, 29, 33, 46, 47, 52, 64, 65, 66, 69, 74, 77, 78, 79, 80, 81, 82, 84, 86, 91, 92, 93, 96, 98, 100, 139, 141, 145, 146, 148, 152, 156, 157, 158, 159, 164, 180, 182, 186], "g": [3, 4, 16, 17, 18, 29, 33, 46, 47, 52, 64, 65, 66, 77, 78, 79, 80, 81, 82, 86, 91, 93, 96, 139, 141, 145, 146, 156, 157, 164, 180, 182, 186], "circuit": [3, 4, 7, 8, 9, 10, 11, 52, 65, 73, 91, 96, 148, 180, 181, 182, 183, 185, 187], "attribut": [3, 4, 9, 14, 16, 17, 18, 29, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 57, 59, 60, 64, 65, 66, 68, 69, 70, 71, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 90, 91, 93, 94, 95, 96, 99, 101, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 152, 155, 161, 162, 163, 164, 172, 180, 182, 184, 185], "method": [3, 4, 9, 15, 16, 17, 18, 29, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 55, 57, 60, 64, 65, 66, 68, 69, 70, 71, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 90, 91, 93, 94, 95, 96, 99, 101, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 139, 140, 141, 142, 143, 144, 145, 146, 148, 155, 161, 162, 163, 164, 172, 180, 182, 187], "paramet": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 29, 30, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 58, 60, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 90, 91, 93, 94, 95, 96, 97, 99, 101, 102, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 155, 156, 157, 158, 159, 161, 164, 166, 167, 168, 169, 170, 172, 176, 177, 178, 179, 180, 181, 182, 187], "str": [3, 4, 5, 6, 7, 9, 10, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 29, 30, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 60, 62, 64, 65, 66, 68, 69, 70, 71, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 90, 91, 93, 94, 95, 96, 99, 101, 106, 107, 111, 115, 117, 118, 119, 125, 126, 132, 137, 139, 141, 145, 146, 148, 149, 150, 156, 157, 158, 159, 161, 164, 166, 179, 182], "tupl": [3, 4, 6, 13, 15, 16, 18, 19, 21, 22, 24, 60, 65, 66, 91, 107, 109, 111, 118, 119, 120, 121, 122, 123, 124, 132, 148, 150, 161, 164, 167, 170, 172, 182], "dict": [3, 4, 5, 6, 7, 10, 11, 16, 17, 18, 20, 21, 22, 23, 24, 30, 36, 37, 47, 60, 65, 66, 69, 77, 78, 86, 91, 96, 111, 132, 139, 141, 145, 146, 148, 149, 156, 157, 158, 159, 161, 164, 166, 168, 179, 180, 182], "ani": [3, 4, 5, 6, 9, 15, 16, 18, 21, 22, 23, 24, 29, 33, 46, 47, 65, 66, 69, 86, 90, 91, 93, 122, 131, 132, 146, 148, 156, 157, 161, 164, 166, 180, 181, 182, 184, 187], "inform": [3, 4, 30, 73, 148, 181, 182, 184, 185, 187], "bear": 3, "compon": [3, 4, 18, 19, 26, 27, 28, 33, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 60, 65, 68, 69, 70, 76, 90, 91, 94, 95, 107, 112, 122, 128, 146, 148, 156, 157, 161, 164, 180, 181, 182, 187], "qubit": [3, 4, 9, 10, 11, 12, 13, 29, 32, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 55, 57, 64, 65, 67, 68, 69, 70, 71, 72, 74, 78, 83, 84, 87, 91, 92, 93, 96, 98, 100, 146, 148, 156, 157, 180, 181, 182, 185, 186, 187], "reson": [3, 67, 68, 69, 70, 71, 72, 93, 101, 107, 156, 157, 170, 180, 181, 186, 187], "act": [3, 4, 11, 12, 13, 16, 18, 19, 31, 50, 52, 66, 69, 90, 91, 96, 148, 156, 157, 180, 181, 182, 184, 185, 187], "argument": [3, 9, 10, 15, 18, 29, 33, 35, 46, 47, 65, 66, 78, 91, 93, 96, 148, 180, 182, 187], "valid": [3, 4, 7, 67, 73, 118, 120, 121, 124, 132, 150, 151, 164, 172, 180, 187], "op_tabl": [3, 4, 7, 9, 16, 36, 37, 90, 99, 101, 182], "against": [3, 4, 125, 151, 184, 187], "tabl": [3, 5, 7, 9, 10, 11, 106, 149, 180], "definit": [3, 4, 5, 6, 10, 17, 33, 66, 69, 102, 138, 148, 149, 180, 181, 182, 184], "quantumop": [3, 4, 5, 6, 7, 9, 10, 11, 16, 17, 18, 29, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 60, 64, 65, 66, 68, 69, 70, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 90, 91, 93, 94, 95, 96, 99, 101, 147, 149, 150, 180, 183, 187], "contain": [3, 4, 7, 9, 17, 18, 35, 65, 66, 73, 91, 106, 118, 120, 121, 124, 132, 148, 161, 164, 176, 180, 181, 182, 184, 187], "allow": [3, 4, 7, 9, 16, 18, 36, 37, 50, 86, 96, 107, 122, 132, 156, 180, 181, 182, 185, 187], "rais": [3, 4, 7, 58, 73, 107, 118, 120, 121, 124, 139, 148, 150, 151, 166, 167, 173, 174, 175, 181], "valueerror": [3, 4, 7, 73, 107, 118, 120, 121, 124, 148, 150, 151, 167], "i": [3, 4, 5, 9, 11, 12, 15, 16, 17, 18, 19, 29, 30, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 57, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 90, 91, 92, 93, 94, 95, 96, 98, 100, 107, 118, 120, 121, 122, 124, 125, 132, 133, 134, 139, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 155, 156, 157, 158, 159, 164, 170, 176, 179, 180, 181, 182, 183, 184, 185, 187], "return": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 18, 29, 30, 33, 35, 46, 47, 52, 55, 58, 60, 62, 65, 66, 69, 72, 73, 75, 77, 78, 79, 80, 83, 84, 85, 86, 90, 91, 93, 96, 97, 99, 101, 102, 106, 107, 111, 112, 113, 115, 118, 120, 121, 124, 132, 133, 137, 139, 141, 142, 143, 144, 145, 146, 148, 150, 151, 155, 156, 157, 158, 159, 161, 164, 166, 167, 168, 169, 170, 177, 179, 180, 182], "type": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 29, 30, 33, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 55, 57, 58, 60, 62, 64, 65, 66, 68, 69, 70, 72, 73, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 90, 91, 93, 94, 95, 96, 97, 99, 101, 102, 106, 107, 109, 111, 112, 113, 118, 120, 121, 124, 132, 133, 134, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 155, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 172, 177, 179, 180, 182, 184], "calibr": [4, 6, 7, 15, 16, 17, 18, 21, 22, 23, 24, 29, 31, 35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 60, 64, 65, 66, 68, 69, 70, 76, 77, 78, 79, 80, 81, 82, 84, 90, 91, 94, 95, 96, 99, 101, 139, 141, 145, 146, 148, 150, 151, 180, 181, 187], "chip_topologi": [4, 18, 60, 91, 111, 112, 182, 187], "channel": [4, 17, 18, 29, 30, 33, 35, 47, 50, 52, 64, 65, 66, 71, 72, 75, 77, 78, 79, 80, 81, 82, 84, 87, 90, 91, 93, 96, 105, 106, 107, 108, 109, 110, 116, 119, 120, 121, 127, 131, 132, 133, 152, 156, 157, 158, 159, 161, 162, 164, 176, 177, 179, 180, 181, 182, 185, 187], "component_channel": 4, "out": [4, 9, 77, 79, 180, 181, 182, 184, 185], "individu": [4, 51, 148, 181, 184], "encapsul": [4, 18, 31, 73, 187], "known": [4, 5, 58, 86, 132, 146, 148, 149, 151, 182], "op": [4, 5, 10, 11, 14, 16, 18, 148, 149, 150, 151], "them": [4, 9, 10, 66, 91, 96, 148, 164, 180, 182, 183, 187], "topologi": [4, 112, 187], "properti": [4, 9, 18, 67, 84, 86, 104, 106, 107, 111, 112, 132, 133, 148, 155, 157, 158, 159, 180, 187], "quantumopt": [4, 9, 10, 11, 151, 180, 182], "opcalibrationdatatre": [4, 151], "data": [4, 6, 15, 16, 18, 21, 22, 23, 24, 29, 31, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 60, 64, 65, 66, 68, 69, 70, 76, 77, 78, 79, 80, 81, 82, 84, 91, 94, 95, 96, 106, 115, 139, 141, 145, 146, 148, 150, 151, 172, 176, 179, 180, 181], "tree": [4, 6, 18, 112, 150, 151], "chiptopologi": [4, 18, 46, 47, 60, 65, 66, 83, 90, 91, 96, 111, 112, 182], "chip": [4, 9, 112, 180], "deriv": [4, 84, 144, 146, 182, 184], "from": [4, 5, 6, 9, 11, 15, 16, 17, 18, 35, 36, 37, 46, 47, 60, 65, 69, 72, 78, 79, 80, 84, 90, 99, 101, 107, 112, 115, 119, 122, 125, 132, 133, 137, 138, 139, 141, 144, 145, 146, 155, 157, 161, 164, 166, 168, 176, 180, 181, 182, 184, 185, 187], "chad": [4, 148], "channelproperti": [4, 18, 104, 109, 111, 113, 132, 157, 158, 159, 177, 179], "map": [4, 5, 9, 16, 18, 21, 22, 24, 25, 26, 27, 28, 36, 37, 46, 47, 54, 55, 56, 57, 65, 66, 83, 86, 90, 96, 106, 112, 118, 132, 139, 141, 145, 146, 148, 149, 157, 164, 167, 180, 182], "configur": [4, 5, 105, 108, 110, 176, 179, 184], "drive": [4, 18, 26, 29, 33, 35, 46, 47, 65, 71, 72, 75, 84, 90, 93, 96, 101, 107, 119, 127, 170, 180, 181, 182, 185], "flux": [4, 18, 27, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 59, 60, 68, 69, 70, 119, 148, 180, 182], "readout": [4, 18, 28, 35, 64, 65, 66, 90, 115, 123, 132, 161, 180, 185], "respons": [4, 107, 110, 182, 184, 185], "_cach": 4, "gateimplement": [4, 14, 15, 16, 17, 20, 29, 30, 31, 32, 33, 34, 38, 46, 47, 50, 52, 58, 59, 60, 62, 63, 67, 69, 74, 83, 86, 87, 90, 91, 92, 93, 96, 98, 100, 148, 150, 164, 180, 183, 185, 187], "cach": [4, 13, 15, 18, 29, 33, 46, 47, 65, 69, 90, 91, 93, 132, 164, 180, 182], "The": [4, 9, 10, 15, 16, 17, 18, 19, 29, 31, 32, 33, 35, 38, 46, 47, 52, 60, 65, 66, 67, 69, 71, 74, 75, 78, 84, 86, 87, 88, 90, 91, 92, 93, 96, 98, 99, 100, 101, 120, 125, 127, 132, 137, 139, 141, 142, 143, 144, 145, 146, 148, 152, 156, 157, 158, 159, 164, 176, 178, 179, 180, 181, 182, 184, 185, 187], "ha": [4, 9, 15, 18, 27, 31, 35, 46, 65, 67, 69, 86, 91, 93, 96, 106, 121, 122, 125, 132, 139, 141, 144, 145, 146, 148, 156, 157, 158, 159, 164, 176, 179, 180, 181, 182, 184, 185, 187], "same": [4, 9, 18, 33, 35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 52, 65, 68, 69, 70, 71, 75, 76, 84, 86, 94, 95, 113, 120, 125, 139, 141, 142, 143, 144, 145, 146, 157, 164, 176, 179, 180, 181, 182, 184, 185, 187], "structur": [4, 180], "composite_cach": 4, "compositeg": [4, 14, 15, 34, 35, 36, 37, 87, 90, 98, 99, 100, 101, 180, 182], "timebox": [4, 9, 15, 18, 29, 31, 33, 35, 46, 47, 52, 59, 65, 66, 69, 75, 78, 83, 84, 90, 91, 93, 96, 99, 101, 156, 161, 162, 163, 180, 182, 183, 185], "flush": [4, 15, 180], "whenev": [4, 15, 65, 180], "inject": [4, 180], "_channel_to_compon": 4, "self": [4, 9, 16, 17, 18, 36, 37, 46, 47, 65, 66, 79, 80, 84, 90, 91, 99, 101, 132, 148, 155, 164, 181, 182], "invert": 4, "algorithm": [4, 152, 156, 158, 162, 164, 180, 182, 187], "perform": [4, 47, 117, 125, 132, 184], "thi": [4, 9, 15, 16, 17, 18, 29, 31, 33, 35, 36, 37, 46, 47, 52, 55, 57, 60, 65, 66, 67, 69, 71, 75, 77, 78, 79, 80, 83, 84, 86, 88, 89, 90, 91, 93, 96, 106, 107, 120, 122, 123, 125, 128, 132, 138, 139, 141, 142, 143, 144, 145, 146, 148, 152, 155, 156, 158, 159, 162, 164, 180, 181, 182, 184, 185, 187], "us": [4, 9, 14, 16, 17, 18, 31, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 52, 55, 57, 64, 65, 66, 68, 69, 70, 72, 75, 77, 78, 84, 86, 88, 89, 90, 91, 93, 96, 99, 100, 101, 106, 107, 116, 125, 127, 128, 131, 132, 137, 139, 141, 143, 145, 146, 148, 156, 157, 162, 164, 170, 176, 179, 180, 181, 182, 183, 184, 185, 186], "determin": [4, 30, 156, 164, 181, 184, 187], "block": [4, 33, 35, 47, 65, 66, 84, 90, 91, 107, 114, 128, 131, 154, 156, 157, 161, 164, 180, 181, 185, 187], "associ": [4, 9, 65, 91, 106, 107, 123, 125, 182, 184, 185], "onli": [4, 9, 16, 18, 33, 35, 39, 40, 41, 42, 43, 44, 45, 48, 49, 52, 57, 65, 66, 67, 68, 69, 70, 76, 84, 90, 94, 95, 107, 132, 142, 143, 146, 148, 155, 164, 180, 181, 184, 185, 186, 187], "ar": [4, 9, 16, 17, 18, 30, 32, 33, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 65, 68, 69, 70, 74, 76, 78, 79, 80, 86, 94, 95, 96, 100, 106, 107, 120, 122, 125, 132, 133, 139, 141, 144, 145, 146, 148, 151, 155, 156, 157, 158, 159, 162, 163, 164, 176, 179, 180, 181, 182, 183, 184, 185, 187], "includ": [4, 7, 15, 17, 65, 66, 69, 77, 78, 106, 148, 164, 180, 181, 182, 184], "non": [4, 9, 16, 18, 60, 65, 87, 91, 139, 141, 145, 146, 167, 182, 184, 187], "certain": [4, 17, 46, 47, 79, 80, 107, 182, 187], "virtual": [4, 35, 47, 69, 71, 72, 91, 96, 101, 107, 180, 185, 187], "do": [4, 7, 9, 30, 60, 96, 98, 107, 132, 138, 141, 156, 170, 180, 181, 182, 184, 187], "just": [4, 9, 15, 16, 29, 65, 78, 90, 148, 164, 180, 182], "themselv": [4, 66, 181, 182], "_channel_typ": 4, "probe": [4, 25, 33, 35, 64, 65, 66, 91, 109, 115, 123, 157, 161, 180, 182], "_require_scheduling_in_second": 4, "bool": [4, 7, 9, 16, 17, 18, 33, 39, 40, 41, 42, 43, 44, 45, 48, 49, 52, 58, 64, 65, 66, 68, 69, 70, 72, 73, 76, 77, 78, 79, 80, 81, 82, 86, 94, 95, 107, 109, 113, 132, 148, 155, 156, 157, 168, 180], "whether": [4, 11, 18, 73, 86, 107, 113, 156, 157, 168, 182, 184, 187], "requir": [4, 18, 20, 30, 39, 40, 41, 42, 43, 44, 45, 48, 49, 60, 64, 65, 68, 69, 70, 76, 79, 80, 81, 82, 84, 89, 91, 94, 95, 96, 107, 139, 141, 143, 145, 146, 148, 150, 151, 161, 170, 176, 179, 180, 181, 182, 184], "second": [4, 9, 10, 18, 29, 33, 35, 46, 47, 51, 52, 65, 66, 67, 91, 93, 96, 107, 132, 139, 141, 145, 146, 155, 157, 158, 159, 180, 182, 185, 187], "instead": [4, 18, 71, 128, 156, 180, 181, 182, 185, 187], "sampl": [4, 18, 30, 71, 107, 109, 110, 113, 115, 116, 120, 121, 122, 126, 128, 132, 133, 139, 141, 142, 143, 144, 145, 146, 156, 157, 161, 176, 179, 181, 182, 183], "can": [4, 9, 14, 15, 16, 17, 18, 29, 31, 33, 35, 38, 46, 47, 52, 55, 57, 58, 65, 66, 69, 75, 78, 79, 80, 84, 90, 91, 93, 96, 99, 101, 106, 107, 116, 118, 119, 121, 122, 125, 127, 131, 132, 137, 139, 141, 145, 146, 148, 152, 154, 158, 159, 164, 166, 170, 180, 181, 182, 185, 187], "happen": [4, 67, 71, 96, 128, 143, 152, 164, 181, 182], "two": [4, 9, 35, 38, 40, 43, 47, 52, 53, 55, 60, 65, 67, 69, 78, 148, 156, 164, 168, 180, 181, 182, 185, 187], "reason": [4, 15, 78, 146, 164, 174, 181, 182, 184], "1": [4, 9, 12, 18, 33, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 52, 54, 55, 56, 57, 60, 64, 65, 66, 67, 68, 69, 70, 76, 77, 78, 79, 80, 81, 82, 86, 91, 94, 95, 107, 120, 133, 139, 140, 144, 146, 148, 156, 162, 163, 164, 182, 184, 185, 186, 187], "differ": [4, 9, 14, 16, 18, 31, 32, 33, 36, 37, 46, 47, 65, 66, 67, 69, 72, 78, 83, 90, 96, 125, 132, 148, 157, 163, 164, 180, 182, 184, 185], "rate": [4, 30, 71, 107, 110, 113, 120, 121, 132, 156, 157, 176, 179, 182, 183], "other": [4, 9, 13, 15, 16, 18, 52, 65, 69, 84, 90, 91, 99, 101, 131, 141, 148, 156, 157, 162, 164, 176, 179, 180, 181, 182, 184, 185, 187], "uhfqa": [4, 107], "2": [4, 9, 12, 35, 46, 55, 56, 60, 64, 65, 67, 74, 78, 92, 93, 98, 99, 100, 101, 102, 107, 139, 140, 141, 144, 145, 146, 156, 164, 182, 184, 185, 186, 187], "have": [4, 9, 15, 18, 26, 27, 28, 30, 47, 65, 69, 75, 84, 90, 91, 113, 122, 132, 138, 148, 151, 156, 157, 164, 170, 180, 181, 182, 184, 185, 187], "granular": [4, 52, 107, 113, 122, 132, 157, 172, 176, 179, 180, 181, 185], "some": [4, 15, 16, 50, 86, 100, 138, 139, 141, 145, 146, 158, 159, 164, 180, 181, 182, 187], "mix": 4, "station": [4, 35, 73, 107, 112, 148, 180, 181], "ro": 4, "devic": [4, 185], "vendor": 4, "than": [4, 9, 91, 132, 148, 155, 158, 159, 176, 179, 180], "awg": [4, 27, 35, 39, 41, 42, 45, 46, 47, 69, 75, 84, 132, 173, 176, 179, 180, 185], "_channel_templ": 4, "repres": [4, 8, 9, 11, 14, 18, 31, 38, 53, 60, 85, 86, 97, 102, 119, 132, 148, 149, 181, 182, 184, 185], "inject_calibr": [4, 180], "partial_calibr": 4, "new": [4, 9, 12, 15, 86, 132, 148, 156, 157, 158, 159, 161, 164, 180, 181, 182], "chang": [4, 15, 16, 18, 60, 96, 121, 127, 148, 155, 170, 182, 184, 185], "after": [4, 60, 78, 80, 82, 96, 109, 120, 128, 154, 155, 156, 170, 180, 185, 187], "initialis": [4, 17, 64, 65, 66, 77, 78, 79, 80, 81, 82, 91], "invalid": [4, 174], "gate_implement": [4, 15, 16, 17, 18, 29, 32, 34, 38, 50, 59, 63, 67, 74, 87, 92, 98, 100], "affect": [4, 9, 33, 65, 96, 132, 133, 148, 164, 180, 185], "loci": [4, 9, 22, 65, 91, 148, 182, 187], "also": [4, 9, 15, 16, 17, 18, 29, 33, 46, 47, 52, 69, 72, 79, 80, 84, 90, 91, 93, 99, 101, 106, 132, 148, 152, 156, 157, 159, 164, 168, 170, 180, 182, 184, 185], "factoriz": [4, 65, 90, 91, 148, 180], "its": [4, 5, 15, 16, 18, 31, 33, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 52, 65, 66, 68, 69, 70, 76, 94, 95, 112, 121, 122, 132, 133, 142, 143, 148, 157, 158, 159, 162, 164, 180, 181, 182, 184, 187], "wa": [4, 35, 69, 72, 146, 180, 184, 185, 187], "must": [4, 7, 9, 10, 18, 35, 47, 60, 107, 113, 132, 133, 146, 148, 164, 180, 182, 184], "doe": [4, 9, 35, 47, 58, 65, 73, 91, 120, 122, 128, 148, 180, 181, 182, 184, 185, 187], "all": [4, 9, 10, 13, 17, 18, 25, 26, 27, 28, 29, 30, 33, 47, 52, 57, 65, 66, 67, 72, 77, 78, 84, 91, 96, 107, 112, 113, 118, 120, 121, 124, 127, 132, 133, 139, 141, 145, 146, 152, 156, 162, 176, 179, 180, 181, 182, 183, 184, 185, 187], "valu": [4, 9, 11, 16, 18, 39, 40, 41, 42, 43, 44, 45, 48, 49, 55, 57, 60, 61, 64, 65, 68, 70, 79, 80, 81, 82, 86, 94, 116, 120, 122, 124, 125, 128, 139, 144, 151, 162, 163, 168, 180, 181, 182, 187], "found": [4, 9, 16, 36, 37, 58, 86, 132, 148], "merg": [4, 16, 156, 168], "actual": [4, 35, 52, 65, 139, 141, 142, 143, 144, 145, 146, 156, 176, 179, 180, 182, 185, 187], "previou": [4, 180, 185], "validate_calibr": 4, "check": [4, 11, 107, 176, 179, 180], "match": [4, 60, 132, 133, 176, 178, 179, 180, 187], "someth": [4, 17, 65, 66, 107, 118, 120, 121, 124, 150, 151, 170], "wrong": [4, 150, 151, 180], "get_drive_channel": [4, 187], "given": [4, 9, 10, 13, 16, 17, 18, 30, 31, 47, 52, 58, 59, 60, 65, 66, 75, 76, 86, 90, 93, 94, 95, 99, 101, 107, 113, 121, 132, 133, 137, 148, 157, 164, 166, 169, 176, 179, 181, 182, 187], "exist": [4, 16, 58, 86, 90, 99, 101, 132, 180, 181, 182, 187], "keyerror": 4, "get_flux_channel": 4, "see": [4, 17, 52, 65, 79, 80, 81, 82, 102, 138, 145, 164, 180, 181, 182, 184, 185], "get_probe_channel": 4, "line": [4, 25, 35, 65, 66, 109, 180, 182], "belong": [4, 65, 180], "get_virtual_feedback_channel": 4, "feedback": [4, 35, 65, 88, 89, 90, 125, 180, 183, 187], "signal": [4, 14, 35, 65, 117, 125, 126, 142, 143, 145, 180, 183, 185, 186], "A": [4, 9, 12, 35, 65, 86, 116, 139, 148, 152, 158, 159, 161, 164, 167, 168, 180, 181, 182, 183, 184, 185, 186, 187], "between": [4, 14, 50, 52, 65, 67, 69, 71, 73, 91, 118, 132, 144, 146, 152, 181, 185], "sourc": [4, 69, 155, 180, 184, 185], "destin": [4, 185], "either": [4, 33, 96, 127, 164, 180, 181, 184], "list": [4, 8, 9, 10, 11, 12, 16, 17, 18, 35, 46, 47, 58, 60, 79, 80, 90, 99, 101, 132, 133, 155, 180, 181, 182, 184], "get_virtual_feedback_channel_for": 4, "awg_nam": 4, "feedback_qubit": [4, 35, 180, 185], "get": [4, 11, 15, 18, 46, 47, 62, 65, 66, 83, 90, 96, 106, 111, 112, 148, 155, 180, 182, 185, 187], "node": [4, 18], "receiv": [4, 125, 184, 185], "bit": [4, 35, 180, 185], "which": [4, 9, 13, 18, 33, 46, 65, 69, 75, 86, 93, 96, 132, 133, 140, 141, 145, 146, 148, 156, 164, 170, 180, 181, 182, 183, 184, 185, 187], "": [4, 9, 15, 17, 29, 35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 64, 65, 66, 67, 68, 69, 70, 76, 77, 78, 79, 80, 81, 82, 84, 91, 94, 95, 96, 100, 106, 107, 113, 132, 139, 141, 145, 146, 161, 167, 180, 181, 182, 183, 184, 187], "measur": [4, 7, 18, 35, 64, 65, 66, 89, 90, 96, 107, 148, 157, 180, 181, 182, 183, 187], "result": [4, 9, 15, 35, 65, 66, 72, 90, 96, 117, 123, 125, 132, 180, 181, 184, 187], "support": [4, 31, 35, 60, 65, 91, 144, 146, 167, 176, 179, 180, 181, 182, 184, 185], "fast": [4, 46, 65, 88, 89, 125, 180, 183, 186, 187], "_get_channel_for_compon": 4, "has_calibr": 4, "op_nam": [4, 16, 18], "impl_nam": [4, 9, 16, 18, 86, 150, 180, 182], "true": [4, 7, 9, 17, 18, 33, 39, 40, 41, 42, 43, 44, 45, 48, 49, 52, 58, 64, 65, 66, 68, 69, 70, 72, 73, 76, 77, 78, 79, 80, 81, 82, 86, 94, 95, 107, 109, 132, 148, 168, 180, 187], "iff": [4, 7, 16, 18, 33, 39, 40, 41, 42, 43, 44, 45, 48, 49, 52, 68, 69, 70, 76, 94, 95, 107, 148], "request": [4, 9, 16, 18, 52, 83, 108, 110, 180, 181, 187], "get_calibr": 4, "get_control_channel": 4, "directli": [4, 9, 66, 127, 180], "neighbor": [4, 156, 157, 164], "coupler": [4, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 67, 68, 69, 70, 91, 146, 148, 156, 157, 164, 180, 181, 182, 186, 187], "ad": [4, 9, 15, 65, 72, 86, 106, 132, 152, 156, 157, 180, 182, 187], "separ": [4, 16, 18, 30, 90, 99, 101, 180, 181, 184, 187], "resolut": [4, 164, 187], "phase": [4, 9, 35, 38, 40, 43, 46, 64, 65, 66, 67, 69, 72, 74, 75, 78, 83, 84, 85, 93, 94, 96, 98, 119, 120, 127, 139, 140, 141, 145, 148, 170, 180, 181, 182, 187], "Will": [4, 52, 162], "iter": [4, 7, 9, 10, 18, 60, 73, 91, 113, 132, 133, 148, 161, 164, 187], "wait": [4, 33, 35, 52, 67, 71, 90, 91, 107, 114, 116, 131, 132, 154, 156, 180, 181, 185, 187], "durat": [4, 18, 29, 30, 33, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 64, 65, 66, 68, 69, 70, 71, 76, 77, 78, 79, 80, 81, 82, 84, 91, 93, 94, 95, 96, 107, 113, 116, 118, 119, 120, 121, 122, 123, 124, 127, 128, 131, 132, 133, 139, 141, 142, 143, 144, 145, 146, 152, 155, 156, 157, 158, 159, 161, 164, 176, 179, 180, 181, 182, 185, 187], "round": [4, 52, 107, 113, 180, 185, 187], "fals": [4, 7, 9, 16, 18, 39, 40, 41, 42, 43, 44, 45, 48, 49, 58, 64, 65, 68, 70, 79, 80, 81, 82, 86, 94, 107, 109, 113, 132, 148, 180, 182], "util": [4, 16, 18, 180, 182], "everi": [4, 18, 120, 176, 179, 180, 182, 187], "guarante": [4, 52, 181], "idl": [4, 91, 128, 132, 180], "cannot": [4, 15, 116, 132, 164, 180, 182, 184, 185], "replac": [4, 9, 18, 86, 116, 128, 180, 184], "dynam": [4, 128, 180], "decoupl": [4, 128, 180], "sequenc": [4, 7, 9, 10, 14, 19, 69, 116, 128, 129, 133, 137, 148, 155, 164, 170, 181, 183, 185, 187], "thei": [4, 9, 16, 17, 64, 65, 66, 77, 78, 79, 80, 81, 82, 96, 100, 106, 107, 132, 133, 148, 164, 176, 179, 180, 181, 182, 185, 187], "treat": [4, 156, 164, 187], "content": [4, 5, 9, 107, 121, 132, 133, 148, 155, 163, 164, 166, 168, 180, 181, 182, 184, 187], "remain": [4, 152, 155, 170, 184], "align": [4, 181, 185, 187], "time": [4, 9, 18, 35, 50, 52, 65, 66, 67, 69, 71, 76, 84, 91, 95, 96, 107, 109, 113, 116, 121, 125, 131, 132, 133, 142, 143, 146, 152, 155, 156, 158, 159, 164, 180, 181, 182, 183, 187], "dure": [4, 52, 69, 107, 116, 131, 142, 143, 146, 164, 181, 187], "particular": [4, 9, 18, 21, 22, 23, 150, 184, 185, 187], "mai": [4, 16, 17, 18, 19, 29, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 60, 64, 65, 66, 67, 68, 69, 70, 76, 77, 78, 79, 80, 81, 82, 83, 90, 91, 93, 94, 95, 96, 125, 128, 148, 164, 181, 182, 184, 185], "thu": [4, 30, 67, 75, 96, 181, 185], "less": [4, 9, 152, 180], "space": [4, 11, 12, 13, 146, 185], "side": [4, 32, 33, 107, 158, 159, 181], "todo": [4, 35, 60, 65, 86, 107, 134], "For": [4, 9, 12, 15, 21, 22, 65, 86, 107, 132, 139, 148, 180, 181, 182, 184, 185, 187], "now": [4, 60, 96, 180], "nearest": [4, 52], "each": [4, 9, 10, 18, 31, 35, 65, 69, 72, 91, 106, 122, 132, 148, 156, 157, 161, 164, 179, 181, 182, 184, 185, 187], "benefit": 4, "exa": [4, 18, 143, 167, 180, 182, 183, 187], "sweep": 4, "over": [4, 5, 10, 65, 132, 180], "In": [4, 5, 9, 16, 35, 50, 52, 65, 66, 67, 71, 84, 91, 116, 121, 125, 132, 148, 156, 180, 181, 182, 184, 185, 187], "futur": 4, "gener": [4, 9, 18, 65, 66, 84, 96, 137, 164, 180, 182, 184], "should": [4, 16, 18, 35, 47, 65, 66, 75, 88, 89, 90, 99, 101, 106, 107, 146, 148, 152, 156, 157, 180, 182, 184, 185], "experi": [4, 9, 57, 148, 180], "float": [4, 13, 18, 29, 33, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 60, 64, 65, 66, 68, 69, 70, 71, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 91, 93, 94, 95, 96, 97, 101, 102, 107, 108, 109, 110, 113, 119, 120, 124, 125, 127, 132, 134, 139, 140, 141, 142, 143, 144, 145, 146, 148, 155, 157, 158, 159, 169, 170, 172, 180, 182], "how": [4, 148, 164, 181, 182, 184, 185, 187], "long": [4, 67, 75, 107, 142, 143, 180, 181, 182], "start": [4, 55, 57, 132, 152, 155, 156, 157, 162, 163, 180, 181, 182, 185], "simultan": [4, 65, 122, 152, 164, 181, 187], "box": [4, 35, 75, 83, 84, 156, 162, 163, 164, 180, 187], "get_implement": [4, 16, 18, 65, 180, 182, 187], "use_priority_ord": 4, "strict_locu": [4, 16, 18], "priority_calibr": [4, 187], "provid": [4, 9, 16, 17, 18, 29, 30, 64, 65, 66, 77, 78, 79, 80, 81, 82, 84, 148, 176, 179, 180, 181, 182, 183, 184, 187], "an": [4, 9, 11, 12, 14, 16, 17, 18, 27, 32, 36, 37, 46, 50, 58, 60, 65, 67, 74, 75, 76, 77, 79, 84, 93, 94, 95, 96, 97, 100, 102, 106, 107, 108, 118, 120, 122, 132, 133, 137, 146, 148, 156, 158, 161, 164, 170, 173, 174, 180, 181, 182, 183, 184, 185, 187], "mean": [4, 9, 65, 67, 125, 148, 164, 180, 182, 184, 185, 187], "chosen": [4, 101, 181], "automat": [4, 9, 17, 66, 180, 182], "logic": [4, 17, 18, 29, 33, 46, 47, 69, 90, 91, 93, 132, 180, 182, 187], "describ": [4, 9, 10, 18, 115, 148, 164, 181, 184, 187], "below": [4, 18, 181, 184, 185, 187], "symmetr": [4, 16, 18, 33, 39, 40, 41, 42, 43, 44, 45, 48, 49, 52, 68, 69, 70, 76, 94, 95, 148, 180, 182], "order": [4, 9, 10, 11, 12, 16, 18, 19, 32, 33, 35, 69, 132, 146, 148, 164, 181, 182, 183, 185, 187], "avail": [4, 16, 18, 181, 182, 184, 185, 187], "effect": [4, 18, 35, 67, 84, 93, 148, 152, 164, 181, 182, 183, 185, 187], "get_default_implementation_for_locu": [4, 148, 180, 182], "otherwis": [4, 16, 18, 47, 65, 71, 86, 90, 107, 132, 133, 144, 180, 182, 184], "first": [4, 9, 11, 32, 33, 35, 47, 65, 132, 146, 148, 182, 185, 187], "prioriti": [4, 5, 148, 180], "follow": [4, 52, 65, 66, 67, 90, 96, 112, 127, 146, 152, 156, 164, 176, 179, 180, 181, 184, 185, 187], "defin": [4, 5, 9, 16, 17, 20, 26, 27, 28, 30, 36, 37, 46, 47, 65, 66, 67, 74, 79, 80, 91, 92, 107, 138, 139, 146, 148, 150, 151, 162, 164, 180, 181, 182, 183, 184, 187], "defaults_for_locu": [4, 148, 180], "global": [4, 60, 148, 180], "load": [4, 6, 166], "common": [4, 16, 17, 36, 37, 65, 66, 77, 78, 90, 99, 100, 101, 113, 156, 180, 183, 184], "If": [4, 9, 11, 16, 17, 18, 36, 37, 58, 64, 65, 66, 77, 78, 79, 80, 81, 82, 86, 96, 106, 107, 128, 132, 133, 139, 141, 145, 146, 148, 158, 164, 180, 181, 182, 184, 187], "empti": [4, 9, 16, 60, 65, 66, 125, 132, 148, 168, 180, 182], "note": [4, 14, 47, 65, 120, 132, 151, 155, 164, 182, 185], "prevent": [4, 181, 182], "save": 4, "via": [4, 16, 18, 60, 78, 90, 91, 99, 101, 144, 146, 180, 182], "could": [4, 15, 52, 148, 182, 185], "_find_implementation_and_locu": 4, "find": [4, 146, 187], "instanc": [4, 9, 11, 16, 18, 31, 65, 71, 75, 76, 84, 93, 94, 95, 120, 123, 148, 170, 187], "compat": [4, 65, 84, 176, 179, 180], "highest": [4, 148], "we": [4, 15, 52, 60, 69, 96, 107, 146, 148, 170, 182, 184, 185, 187], "equival": [4, 96, 152, 164, 170, 181, 187], "one": [4, 7, 9, 16, 36, 37, 40, 43, 47, 53, 65, 66, 75, 132, 148, 156, 157, 161, 164, 180, 181, 182, 184, 185, 187], "had": [4, 180], "_get_implement": 4, "built": [4, 9, 100, 180], "when": [4, 9, 15, 33, 35, 52, 65, 67, 91, 132, 134, 139, 141, 145, 146, 156, 157, 164, 173, 174, 175, 180, 181, 182, 185, 187], "later": [4, 9], "oilcalibrationdata": [4, 16, 17, 18, 29, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 60, 64, 65, 66, 68, 69, 70, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 90, 91, 93, 94, 95, 96, 99, 101, 150, 182], "impli": [4, 184], "get_implementation_class": [4, 58], "default": [4, 5, 9, 16, 18, 29, 30, 33, 35, 36, 37, 46, 47, 65, 66, 69, 83, 86, 90, 91, 93, 96, 120, 125, 139, 140, 141, 145, 146, 148, 151, 180, 181, 182, 187], "validate_quantum_circuit": [4, 180], "require_measur": [4, 7], "constitut": [4, 7, 184], "least": [4, 7, 52, 107, 113, 156, 157, 176, 179, 181, 182, 184], "circuit_to_timebox": [4, 180], "scheduling_algorithm": [4, 161, 164], "schedulingalgorithm": [4, 160, 161, 164], "hard_boundari": [4, 161, 162, 164], "locus_map": [4, 180], "convert": [4, 9, 18, 78, 101, 107, 116, 131, 139, 141, 145, 146, 154, 164, 180, 181, 182, 183], "resolv": [4, 18, 143, 162, 164, 181, 183], "option": [4, 9, 10, 11, 30, 65, 132, 148, 180, 182, 185], "placehold": [4, 9, 180], "physic": [4, 9, 19, 107, 156, 180, 181, 182], "while": [4, 18, 78, 162, 181, 182, 184, 187], "unresolv": 4, "timeboxes_to_front_padded_playlist": 4, "neighborhood": [4, 162, 164, 180], "0": [4, 9, 12, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 55, 56, 64, 65, 66, 68, 69, 70, 71, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 91, 94, 95, 100, 101, 107, 109, 118, 120, 137, 139, 140, 141, 142, 144, 145, 146, 155, 161, 164, 170, 182, 184, 187], "temporari": 4, "helper": [4, 18], "playlist": [4, 67, 104, 105, 106, 107, 108, 109, 110, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 153, 154, 171, 175, 176, 179, 180, 183, 185, 187], "front": [4, 132], "pad": [4, 33, 76, 95, 132, 156, 162, 187], "equal": [4, 9, 35, 67, 96, 99, 142, 143, 155, 158, 159, 180, 181, 187], "sinc": [4, 30, 47, 69, 96, 146, 148, 180, 182], "delai": [4, 35, 64, 65, 66, 90, 115, 122, 180, 181, 185], "befor": [4, 71, 78, 80, 82, 86, 107, 109, 170, 180, 187], "final": [4, 139, 181, 182, 187], "wish": 4, "lose": 4, "coher": [4, 120], "done": [4, 78, 127, 134, 146, 152, 157, 180, 182], "onc": [4, 180, 181, 182], "handl": [4, 17, 30, 52, 66, 90, 106, 107, 113, 156, 159, 170, 180, 182], "better": [4, 107, 164, 180], "remov": [4, 18, 96, 107, 132, 133, 134, 180, 187], "timeboxes_to_playlist": 4, "int": [4, 9, 12, 13, 71, 75, 77, 78, 93, 106, 107, 109, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 155, 156, 161, 164, 172, 180], "far": 4, "By": [4, 18, 46, 47, 65, 66, 69, 83, 90, 96, 139, 141, 145, 146, 170], "occupi": [4, 132, 156, 157, 164, 181], "unnecessari": [4, 35, 156, 180], "pack": [4, 162], "assum": [4, 33, 47, 72, 84, 90, 96, 101, 113, 132, 142, 143, 146, 181, 182, 184, 187], "refer": [4, 78, 100, 106, 127, 180, 182, 183, 187], "ensur": [4, 181, 185, 187], "work": [4, 9, 69, 91, 132, 155, 180, 181, 182, 184, 187], "intend": [4, 69, 91, 148, 181, 182], "properli": 4, "higher": [4, 181, 185], "help": [4, 9, 181, 182, 185], "defend": [4, 184], "crosstalk": [4, 59, 60, 119, 152, 180, 182], "expens": 4, "longer": [4, 91, 180], "more": [4, 17, 52, 116, 148, 164, 180, 181, 184, 185], "decoher": [4, 50], "timebox_to_schedul": 4, "finish": [4, 91, 180], "readi": [4, 183], "execut": [4, 32, 33, 106, 121, 129, 132, 148, 152, 181, 182, 183, 184, 185, 187], "sample_r": [4, 107, 108, 109, 110], "_finish_schedul": 4, "filter": 4, "zero": [4, 9, 33, 47, 52, 60, 61, 69, 78, 84, 87, 116, 122, 128, 145, 146, 148, 155, 158, 159, 180, 181], "spacer": [4, 152], "consequ": 4, "step": [4, 128, 146, 180], "process": [4, 72, 116, 181, 186], "consist": [4, 15, 46, 47, 75, 78, 84, 93, 132, 139, 141, 145, 146, 148, 180, 182, 184], "extend": [4, 5, 11, 13, 52, 131, 132, 133, 156, 157, 158, 159, 164], "anoth": [4, 33, 47, 69, 71, 102, 148, 158, 159, 168, 180, 182], "gone": 4, "copi": [4, 9, 72, 121, 132, 133, 148, 168, 184], "_fuse_long_distance_virtual_rz": 4, "fuse": [4, 78, 180], "distanc": [4, 180], "virtualrz": [4, 69, 71, 72, 96, 114, 181], "correct": [4, 11, 59, 60, 69, 72, 98, 119, 180, 182, 187], "next": [4, 155, 181, 182, 185], "fluxpuls": [4, 114], "resolve_timebox": [4, 164, 180, 187], "compute_neighborhood_hard_boundari": 4, "recurs": [4, 164, 168, 181, 187], "children": [4, 161, 164, 181, 187], "concaten": [4, 164, 181, 187], "strategi": [4, 156, 157, 163, 164], "composit": [4, 15, 16, 36, 37, 162, 163, 164, 180, 181, 182, 187], "solid": 4, "rectangl": [4, 187], "longest": [4, 52, 156, 162], "within": [4, 11, 125, 132, 163, 181, 184], "tetri": [4, 116, 162], "tightli": [4, 162], "possibl": [4, 52, 96, 118, 132, 146, 156, 157, 162, 163, 164, 180, 181, 184, 185, 187], "still": [4, 9, 60, 133], "overlap": [4, 116, 122, 131, 156, 181, 187], "regardless": [4, 182, 185], "boundari": [4, 55, 57, 156, 162, 163], "modifi": [4, 5, 9, 132, 133, 155, 156, 157, 158, 159, 170, 182, 184, 187], "so": [4, 9, 17, 35, 58, 60, 64, 65, 66, 75, 77, 78, 79, 80, 81, 82, 91, 96, 132, 133, 152, 164, 180, 181, 182, 183, 187], "becom": [4, 9, 35, 139, 187], "atom": [4, 18, 161, 162, 164, 181, 182, 187], "isn": 4, "t": [4, 60, 75, 100, 138, 139, 141, 144, 146, 166, 180, 184], "alreadi": [4, 9, 58, 132, 164, 180, 182], "precomput": [4, 132, 164, 182], "typic": [4, 47, 65, 107, 148, 152, 181, 182, 185, 187], "want": [4, 9, 17, 46, 47, 65, 79, 80, 128, 182], "top": [4, 182], "layer": 4, "would": [4, 9, 15, 47, 71, 180, 182, 185, 187], "unus": 4, "set": [4, 9, 15, 17, 18, 20, 30, 35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 53, 59, 64, 65, 66, 68, 69, 70, 77, 78, 79, 80, 81, 82, 86, 87, 90, 94, 112, 132, 140, 148, 156, 157, 161, 164, 180, 181, 182, 183, 185, 187], "lower": [4, 183, 185], "where": [4, 46, 47, 52, 60, 65, 66, 67, 74, 92, 93, 100, 107, 122, 132, 139, 141, 144, 146, 148, 156, 159, 180, 181, 182, 184], "improv": [4, 35, 65, 180, 184], "need": [4, 9, 15, 16, 18, 29, 33, 35, 46, 47, 60, 65, 66, 69, 86, 90, 91, 93, 132, 133, 139, 141, 145, 146, 148, 180, 181, 182, 183, 187], "_resolve_timebox_hard_boundari": 4, "compute_neighborhood": 4, "_get_neighborhood_hard_boundari": 4, "whose": [4, 57, 125, 182], "plu": 4, "mayb": 4, "_resolve_timebox_tetri": 4, "_block_neighborhood_tetri": 4, "add": [4, 9, 18, 58, 86, 91, 106, 132, 158, 159, 180, 181, 182, 184, 187], "addit": [4, 9, 18, 29, 30, 33, 46, 47, 65, 67, 69, 90, 91, 93, 98, 120, 132, 145, 148, 164, 182, 184, 187], "ideal": [4, 14, 50, 148, 152], "model": [4, 138, 152, 181], "correctli": [4, 15, 180, 182], "interact": [4, 47], "frame": [4, 69, 119, 146, 170, 180, 182], "subspac": [4, 67, 148, 152, 181, 182], "connect": [4, 9, 91, 148, 164, 181, 182, 187], "those": [4, 30, 65, 90, 148, 164, 180, 182, 184, 187], "henc": [4, 170], "evolut": 4, "Of": 4, "cours": [4, 50, 182], "realiti": [4, 50], "possibli": [4, 47, 185], "applic": [4, 182, 184], "essenti": [4, 182], "precis": [4, 181], "interest": 4, "howev": [4, 16, 52, 90, 128, 139, 141, 145, 146, 181, 182, 184], "well": [4, 73, 91, 121, 132, 148, 176, 179, 182, 183, 185, 187], "local": [4, 69, 96, 119, 127, 170], "shut": 4, "down": 4, "unwant": 4, "like": [4, 9, 17, 18, 65, 91, 115, 139, 141, 145, 146, 180, 181, 182, 187], "end": [4, 9, 38, 69, 71, 72, 96, 100, 116, 131, 132, 133, 144, 180, 181, 184, 185], "carri": [4, 181, 184], "meant": [4, 9], "etc": 4, "build_playlist": 4, "finish_schedul": 4, "number": [4, 9, 13, 14, 69, 107, 117, 122, 132, 146, 148, 161, 164, 176, 179, 180, 181, 182, 185, 187], "involv": [4, 18, 33, 181, 183, 187], "compress": [4, 181], "duplic": 4, "transfer": [4, 84, 184], "drop": 4, "point": [4, 96, 155, 156, 157, 182], "finalis": 4, "unless": [4, 18, 139, 141, 145, 146, 164, 180, 182, 184, 187], "call": [4, 9, 11, 15, 16, 18, 69, 91, 99, 180, 182, 187], "uniform": 4, "_set_gate_implementation_shortcut": 4, "creat": [4, 9, 15, 16, 18, 29, 35, 47, 75, 137, 180, 181, 182, 183], "shortcut": [4, 9, 180, 187], "collis": [4, 5], "won": 4, "warn": 4, "hardcod": [5, 182], "nativ": [5, 31, 148, 187], "ones": [5, 16, 32, 33, 90, 99, 101, 162, 164, 182], "case": [5, 9, 18, 29, 33, 46, 47, 52, 65, 66, 84, 91, 93, 96, 132, 141, 144, 148, 156, 159, 170, 180, 181, 182], "take": [5, 9, 18, 35, 47, 132, 145, 146, 148, 168, 180, 182, 185, 187], "gate_definit": 5, "section": [5, 181, 182, 184, 185, 187], "yaml": [5, 6, 166], "file": [5, 6, 166, 184], "config": [6, 106, 180], "circuitoperationlist": [8, 180], "circuit_oper": 9, "num_qubit": [9, 13], "It": [9, 38, 74, 84, 90, 91, 96, 98, 100, 122, 146, 164, 180, 182], "mostli": [9, 181], "conveni": [9, 18, 65, 164, 180, 183], "enabl": [9, 52, 69, 75, 142, 143, 180], "easi": [9, 187], "creation": [9, 182], "calcul": [9, 10, 13, 69, 144, 146, 180], "onto": 9, "import": [9, 53, 182, 184, 187], "present": [9, 10, 67, 132, 156, 187], "think": 9, "about": [9, 73, 118, 120, 121, 124, 181, 185, 187], "qiskit": [9, 180], "quantumregist": 9, "most": [9, 182, 183], "simpli": [9, 35, 96, 148, 181], "taken": [9, 180], "you": [9, 65, 66, 69, 128, 148, 180, 183, 184, 187], "good": 9, "practic": [9, 182, 185, 187], "mutabl": [9, 132], "regist": [9, 10, 11, 16, 86, 148, 180, 181, 183, 187], "usabl": [9, 18, 35, 180], "fundament": 9, "popul": [9, 67], "qb1": [9, 65, 148, 182, 187], "qbn": 9, "qb2": [9, 65, 148, 182, 185, 187], "altern": [9, 181, 185], "To": [9, 35, 52, 132, 182, 183, 184, 185, 187], "your": [9, 182, 184], "own": [9, 15, 18, 31, 148, 180, 181, 182, 184], "initi": [9, 30, 31, 139, 146, 181, 182], "my_tabl": 9, "rememb": 9, "circuit_op": 9, "find_qubit": 9, "origin": [9, 13, 18, 132, 133, 168, 184], "what": [9, 16, 148, 180, 181, 182], "__add__": [9, 65, 180], "__mul__": [9, 180], "__getitem__": [9, 180], "redefin": [9, 139, 141, 145, 146], "3": [9, 35, 60, 64, 65, 76, 95, 156, 184, 186, 187], "circuit1": [9, 187], "circuit2": [9, 187], "4": [9, 54, 98, 100, 184, 186], "produc": [9, 158, 180, 181, 185, 187], "prx": [9, 16, 17, 35, 36, 37, 64, 65, 66, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 90, 92, 96, 99, 101, 148, 170, 180, 181, 182, 185, 187], "add_op": 9, "angl": [9, 18, 35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 68, 69, 70, 74, 75, 78, 83, 84, 85, 90, 92, 96, 97, 99, 100, 102, 119, 148, 169, 170, 180, 182, 187], "drag_crf": [9, 36, 180], "abov": [9, 181, 182, 183, 184, 187], "shorten": 9, "exactli": [9, 18, 148, 161], "syntax": [9, 180, 181, 182, 184, 187], "usual": [9, 15, 52, 123, 146, 181, 182, 185, 187], "attach": [9, 184], "init": [9, 180, 182], "ariti": [9, 18, 33, 39, 40, 41, 42, 43, 44, 45, 48, 49, 52, 65, 68, 69, 70, 76, 94, 95, 148, 182], "unitari": [9, 10, 11, 13, 38, 55, 57, 67, 85, 87, 97, 102, 148, 180, 181, 182], "propag": [9, 13, 55, 57, 90, 180, 185], "entir": [9, 11, 107, 180], "u": [9, 54, 101, 180], "get_unitari": 9, "dimens": 9, "alwai": [9, 16, 32, 33, 35, 69, 90, 99, 101, 148, 152, 156, 158, 182], "qb3": [9, 65, 148, 185, 187], "8x8": 9, "matrix": [9, 10, 11, 12, 13, 38, 60, 100, 148, 180, 182], "correspond": [9, 11, 16, 50, 54, 55, 56, 57, 60, 90, 99, 101, 118, 148, 156, 164, 181, 185], "three": [9, 75], "big": [9, 10, 11, 148], "endian": [9, 10, 11, 148], "convent": [9, 10, 69, 112], "With": [9, 17, 65, 66, 185], "action": [9, 10, 148, 181], "ident": [9, 13, 50, 56, 84, 180], "physical_circuit": 9, "map_loci": [9, 180], "physical_qubit": 9, "exampl": [9, 12, 15, 16, 69, 107, 148, 180, 181, 182, 184, 187], "alic": 9, "zzz": 9, "qb5": [9, 148], "qb10": 9, "occurr": 9, "mani": [9, 180, 182, 187], "run": [9, 180, 185], "parallel": [9, 148, 180], "larg": [9, 181], "left": [9, 18, 29, 33, 46, 47, 65, 66, 91, 93, 96, 158, 159, 181, 182, 185], "ignor": [9, 35], "add_qubit": 9, "n": [9, 12, 13, 32, 33, 107, 139, 146], "qubit_nam": [9, 10], "overal": [9, 10], "arrai": [9, 10, 54, 56, 60, 64, 65, 139, 141, 142, 143, 144, 145, 146, 180, 182], "ndarrai": [9, 10, 11, 12, 13, 35, 60, 64, 65, 85, 97, 102, 141, 142, 143, 144, 145, 146, 148, 182], "locus_indic": 9, "append": [9, 33, 65, 132, 133, 180], "store": [9, 11, 15, 18, 46, 47, 65, 66, 83, 90, 96, 119, 148, 182], "select": [9, 13, 185, 187], "indic": [9, 13, 71, 137, 181, 184], "qb4": [9, 185], "param": [9, 11, 18, 148, 180, 182], "barrier": [9, 10, 148, 182], "compos": [9, 152, 183], "safer": 9, "wai": [9, 16, 115, 164, 180, 181, 182, 187], "togeth": [9, 35, 46, 65, 71, 156, 164, 180, 181, 182, 187], "probabl": 9, "wire": 9, "k": [9, 12, 146], "achiev": [9, 182], "count_op": 9, "count": 9, "counter": 9, "occur": [9, 142, 143, 164], "make_circuit": [9, 180], "fresh": 9, "length": [9, 33, 60, 64, 65, 66, 126, 132, 146, 156, 162, 176, 178, 179, 180], "total": [9, 72, 133, 152, 187], "across": 9, "deepcopi": 9, "_set_specific_operation_shortcut": 9, "through": [10, 31, 65, 180, 182, 184], "skip": [10, 132], "product": [10, 181, 184], "context": [11, 16, 18, 29, 33, 36, 37, 46, 47, 65, 66, 91, 93, 96, 181, 182, 187], "fetch": 11, "size": [11, 168, 182], "Then": [11, 164, 182], "hilbert": [11, 13], "whole": [11, 60, 181, 184], "perm": 12, "permut": [12, 180], "state": [12, 38, 50, 67, 69, 74, 78, 87, 90, 91, 96, 98, 100, 148, 170, 181, 182, 184, 185], "vector": [12, 180], "index": [12, 60, 106, 133, 155, 181, 183], "th": [12, 146], "old": 12, "kron": [12, 148], "b": [12, 52, 65, 152, 158, 159, 164, 168, 184], "c": [12, 144, 164, 184], "n_qubit": 13, "larger": [13, 132, 181], "system": [13, 180, 184, 185, 187], "nest": [13, 18, 20, 39, 40, 41, 42, 43, 44, 45, 48, 49, 60, 64, 68, 69, 70, 76, 79, 80, 81, 82, 91, 94, 95, 96], "hash": 13, "purpos": [13, 18, 65, 180, 182, 184], "rang": [13, 139, 164, 180], "abstract": [14, 148, 181, 182, 183], "conceptu": [14, 181], "wherea": [14, 65, 116, 148, 181, 182], "concret": [14, 148, 182, 183, 187], "One": [14, 18, 83, 181, 187], "approxim": 14, "abc": [14, 16, 18, 32, 34, 38, 50, 59, 63, 67, 74, 75, 77, 78, 83, 84, 87, 92, 98, 100], "customiqwaveform": [14, 63, 65, 66, 74, 77, 78, 182], "singlepulseg": [14, 74, 84, 180], "compositecach": 14, "__call__": [15, 16, 18, 29, 33, 46, 47, 65, 69, 90, 91, 93, 180, 182], "normal": [15, 35, 60, 146, 148, 169, 180, 182, 184], "_timebox_cach": 15, "trust": 15, "itself": [15, 69, 91, 180, 182, 185], "member": [15, 16, 55, 57, 182], "deduc": 15, "cache_kei": 15, "extra_id": 15, "hashabl": [15, 182], "kei": [15, 16, 18, 35, 36, 37, 65, 66, 88, 89, 90, 99, 101, 180, 181, 182], "identifi": [15, 35, 107, 115, 132, 182, 184], "cast": 15, "extra": [15, 35, 69, 78, 182], "string": [15, 60, 64, 65, 125, 137], "id": 15, "further": [15, 145, 146, 164, 182], "did": [15, 180], "come": [15, 182, 187], "fund": 15, "parent": [16, 17, 18, 29, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 60, 64, 65, 66, 68, 69, 70, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 90, 91, 93, 94, 95, 96, 99, 101, 180, 182], "calibration_data": [16, 17, 18, 29, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 60, 64, 65, 66, 68, 69, 70, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 90, 91, 93, 94, 95, 96, 99, 101, 182], "term": [16, 139, 141, 145, 146, 148, 181, 182, 183, 184], "pre": [16, 146], "abl": [16, 113, 180], "know": [16, 18, 182], "consid": [16, 17, 52, 61, 64, 65, 66, 77, 78, 79, 80, 81, 82, 155, 158, 159, 180, 182, 187], "registered_g": [16, 90, 99, 101, 180, 182], "cz": [16, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 54, 55, 67, 69, 96, 148, 180, 181, 182, 186, 187], "insid": [16, 18, 29, 33, 35, 46, 47, 69, 78, 90, 91, 93, 139, 155, 164, 180, 181, 182], "besid": [16, 90, 91, 99, 101], "here": [16, 60, 78, 86, 90, 99, 101, 138, 146, 182, 185, 187], "construct": [16, 18, 31, 65, 75, 76, 84, 90, 93, 94, 95, 99, 101, 139, 141, 145, 146, 180, 181, 183], "default_implement": [16, 36, 37, 148], "design": [16, 36, 37, 184], "fill": [16, 36, 37, 181], "he": [16, 36, 37], "sought": 16, "custom": [17, 18, 65, 66, 180, 181, 183], "waveform": [17, 30, 39, 41, 42, 45, 46, 47, 60, 61, 64, 65, 66, 68, 69, 70, 75, 77, 78, 79, 80, 81, 82, 93, 106, 119, 120, 121, 124, 139, 140, 141, 142, 143, 144, 145, 146, 176, 178, 179, 180, 181, 183], "iqpuls": [17, 46, 65, 66, 75, 77, 78, 79, 80, 84, 93, 96, 114, 117, 122, 125, 127, 170, 178, 180, 181, 182], "info": [17, 18, 180, 182], "somethingels": [17, 65, 66], "q": [17, 46, 64, 65, 66, 75, 77, 78, 79, 80, 81, 82, 93, 120, 182, 186, 187], "mygat": [17, 65, 66], "i_wav": [17, 65, 66], "q_wave": [17, 65, 66], "wave_i": [17, 64, 79, 80, 81, 82, 120, 182], "wave_q": [17, 64, 79, 80, 81, 82, 120, 182], "dependent_wav": [17, 64, 65, 66, 77, 78, 79, 80, 81, 82], "depend": [17, 18, 29, 33, 46, 47, 52, 64, 65, 66, 77, 78, 79, 80, 81, 82, 91, 93, 96, 118, 180, 182], "share": [17, 30, 47, 64, 65, 66, 71, 77, 78, 79, 80, 81, 82, 184], "drag": [17, 64, 65, 66, 77, 78, 79, 80, 81, 82, 182], "root_paramet": [17, 47, 65, 66, 69, 77, 78], "independ": [17, 65, 66, 77, 78, 132, 133, 148, 181, 185], "overrid": [17, 18, 29, 33, 46, 47, 65, 66, 69, 77, 78, 79, 80, 83, 90, 91, 93, 96, 180, 182, 187], "excluded_paramet": [17, 46, 47, 79, 80], "exclud": [17, 46, 47, 79, 80, 184], "There": [18, 78, 182, 185, 187], "subclass": [18, 29, 31, 33, 46, 47, 65, 66, 91, 93, 96, 139, 141, 145, 146, 148, 180, 182], "__init__": [18, 180, 182], "rotat": [18, 35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 57, 68, 69, 70, 74, 75, 78, 83, 84, 85, 92, 96, 97, 98, 100, 102, 170, 180, 182, 187], "input": [18, 35, 65, 181, 182], "raw": [18, 117, 125, 126, 137, 185], "meaning": [18, 33, 39, 40, 41, 42, 43, 44, 45, 48, 49, 52, 68, 69, 70, 76, 94, 95, 148], "special_implement": [18, 180], "special": [18, 47, 71, 84, 138, 148, 180, 182, 184, 187], "never": [18, 180, 182], "explicitli": [18, 65, 180, 182, 184, 187], "qualified_nam": 18, "qualifi": 18, "classmethod": [18, 46, 47, 60, 65, 66, 75, 77, 78, 79, 80, 83, 90, 91, 93, 96, 180], "needs_calibr": 18, "appropri": [18, 181, 184], "_call": [18, 29, 33, 35, 46, 47, 52, 65, 66, 69, 75, 78, 83, 84, 90, 91, 93, 96, 99, 101, 180, 182], "kwarg": [18, 29, 33, 46, 47, 69, 75, 79, 80, 90, 91, 93], "signatur": [18, 29, 33, 46, 47, 69, 90, 91, 93, 148, 180, 182], "suffici": [18, 29, 33, 46, 47, 69, 90, 91, 93, 107, 146], "assign": [18, 47, 65, 66, 106, 180], "specifi": [18, 29, 35, 121, 162, 182, 185, 187], "to_timebox": 18, "wrap": [18, 187], "duration_in_second": [18, 29, 33, 46, 47, 65, 66, 91, 93, 96, 132], "unimpl": [18, 29, 33, 46, 47, 65, 66, 91, 93, 96], "reimplement": [18, 29, 33, 46, 47, 65, 66, 91, 93, 96, 182], "make": [18, 29, 33, 46, 47, 65, 66, 69, 91, 93, 96, 121, 128, 132, 133, 148, 152, 155, 180, 182, 184, 187], "sens": [18, 29, 33, 46, 47, 65, 66, 91, 93, 96], "convert_calibration_data": 18, "channel_prop": 18, "item": [18, 132], "fraction": 18, "hz": [18, 40, 43, 64, 65, 68, 69, 70, 94, 107, 108, 110, 139, 141, 145, 146, 182], "addition": [18, 156, 157, 185], "under": [18, 152, 164, 184], "n_sampl": [18, 30, 75, 77, 78, 93, 139, 140, 141, 142, 143, 144, 145, 146], "subset": [18, 55], "nestedparam": [18, 35, 39, 40, 41, 42, 43, 44, 45, 48, 49, 60, 64, 68, 69, 70, 76, 79, 80, 81, 82, 91, 94, 95], "cl": 18, "get_paramet": 18, "expect": [18, 30], "wildcard": 18, "charact": [18, 132, 184], "dot": 18, "root": [18, 55], "settingnod": [18, 111, 112], "get_locus_mapping_nam": [18, 46, 47, 65, 66, 83, 90, 96, 182], "operation_nam": [18, 46, 47, 65, 66, 83, 90, 96, 182], "implementation_nam": [18, 46, 47, 65, 66, 83, 90, 96, 182], "behaviour": [18, 46, 47, 65, 66, 83, 90, 96, 180, 182], "get_custom_locus_map": [18, 60, 91, 180, 182], "component_to_channel": [18, 60, 91, 112], "wrt": 18, "often": [18, 180, 182], "set_locus_map": 18, "frozenset": [18, 60, 91, 182], "matter": [19, 69, 182], "alia": [19, 20, 21, 22, 23, 24, 39, 40, 41, 42, 43, 44, 45, 48, 49, 64, 68, 70, 76, 79, 80, 81, 82, 84, 94, 95, 149], "probe_lin": [25, 65, 66], "single_components_with_dr": 26, "single_components_with_flux_awg": 27, "single_components_with_readout": 28, "plai": [29, 39, 41, 42, 45, 46, 47, 60, 65, 69, 75, 93, 120, 122, 123, 124, 161, 180, 181, 182, 187], "singl": [29, 31, 57, 64, 65, 66, 74, 77, 78, 80, 84, 92, 96, 98, 100, 132, 133, 148, 161, 164, 177, 180, 181, 182, 185, 187], "_get_puls": [29, 77, 78, 79, 80, 180], "_get_pulse_channel": 29, "basic": [29, 133, 180, 182], "insert": [29, 71, 86, 180], "overridden": [29, 148, 182], "wave": [30, 119, 124, 141], "label_prefix": 30, "prefix": [30, 65], "label": [30, 35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 60, 64, 65, 66, 68, 69, 70, 76, 77, 78, 79, 80, 81, 82, 88, 89, 91, 94, 95, 115, 117, 125, 126, 161, 164, 180, 181, 182], "format": [30, 184], "been": [31, 35, 86, 91, 164, 181, 184, 185], "sever": [31, 116, 148, 180, 182, 185, 187], "scheme": [31, 181], "likewis": 31, "sometim": [31, 181], "metaoper": [32, 33, 148, 182], "forc": [32, 50, 107, 113], "tempor": [32, 33], "preced": [32, 33, 52, 96, 168, 170], "qudit": [33, 148], "metainstruct": 33, "caus": [33, 35, 52, 60, 180, 184, 185], "turn": [33, 180], "impos": 33, "relat": [33, 72, 180, 185, 187], "classic": [34, 35, 180, 185], "ccprx_composit": [34, 36, 37, 180, 185], "ccprx_composite_dragcosinerisefal": [34, 180], "ccprx_composite_draggaussian": [34, 180], "condit": [35, 36, 37, 90, 118, 125, 176, 179, 180, 182, 184, 185], "discrimin": 35, "obtain": [35, 84, 181, 184, 186], "segment": [35, 75, 91, 125, 127, 130, 132, 137, 155, 156, 157, 180, 181, 185], "activ": [35, 123, 181], "underneath": 35, "control_delai": [35, 185], "unit": [35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 52, 60, 64, 65, 66, 68, 69, 70, 76, 77, 78, 79, 80, 81, 82, 91, 94, 95, 120, 132, 139, 141, 145, 146, 181, 182, 185], "data_typ": [35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 60, 64, 65, 66, 68, 69, 70, 76, 77, 78, 79, 80, 81, 82, 91, 94, 95], "datatyp": [35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 60, 64, 65, 66, 68, 69, 70, 76, 77, 78, 79, 80, 81, 82, 91, 94, 95, 167, 180], "collection_typ": [35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 60, 64, 65, 66, 68, 69, 70, 76, 77, 78, 79, 80, 81, 82, 91, 94, 95], "collectiontyp": [35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 60, 64, 65, 66, 68, 69, 70, 76, 77, 78, 79, 80, 81, 82, 91, 94, 95, 167], "element_indic": [35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 60, 64, 65, 66, 68, 69, 70, 76, 77, 78, 79, 80, 81, 82, 91, 94, 95], "instrument": [35, 96, 107, 110, 114, 130, 185], "drive_control": [35, 111], "feedback_sourc": 35, "141592653589793": 35, "feedback_kei": [35, 65, 180], "conditionalinstruct": [35, 65, 114, 125, 185], "until": [35, 96, 181], "enough": [35, 185], "arriv": [35, 185], "place": [35, 132, 143, 145, 156, 157, 184], "sequenti": 35, "without": [35, 126, 131, 164, 180, 181, 182, 184, 187], "care": [35, 187], "yourself": [35, 183], "rad": [35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 64, 65, 66, 68, 69, 70, 78, 80, 82, 85, 94, 97, 120, 170], "multipl": [35, 65, 91, 107, 113, 118, 122, 125, 139, 141, 145, 146, 180, 181], "f": [35, 60, 65, 66, 139, 141, 144, 146, 148, 182], "__": [35, 60, 65, 66, 180], "current": [35, 65, 69, 155], "hw": [35, 65, 180], "per": [35, 65, 148, 180, 182], "listen": [35, 180], "user": [35, 60, 65, 146, 164, 180, 181, 182, 185, 187], "drag_gaussian": [37, 180, 187], "z": [38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 55, 63, 64, 68, 69, 70, 78, 92, 96, 98, 100, 102, 170, 180, 182], "flip": [38, 180], "rel": [38, 69, 120, 139, 141, 145, 146, 180, 181, 182, 187], "11": [38, 186], "text": [38, 67, 78, 144, 146, 184], "begin": [38, 69, 71, 100, 115, 122, 133, 144, 155, 158, 159, 180, 185, 187], "pmatrix": [38, 100], "fluxpulseg": [38, 39, 41, 42, 44, 45, 48, 49, 67, 69, 182], "cz_gaussiansmoothedsquar": 38, "cz_slepian": 38, "cz_truncatedgaussiansmoothedsquar": 38, "cz_slepian_crf": 38, "cz_crf": 38, "fluxpulsegate_tgss_crf": 38, "fluxpulsegate_crf_crf": [38, 180], "couplerfluxpulsequbitacstarkpulseg": [38, 40, 43, 180], "cz_slepian_acstarkcrf": 38, "cz_crf_acstarkcrf": 38, "cosinerisefal": [39, 40, 44, 48, 49, 68, 70, 79, 80, 145], "coupler_wav": [39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 68, 69, 70, 182], "amplitud": [39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 60, 64, 65, 66, 68, 70, 77, 78, 79, 80, 81, 82, 84, 93, 94, 139, 141, 143, 145, 146, 180, 182], "scalar": [39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 64, 65, 66, 68, 69, 70, 76, 77, 78, 79, 80, 81, 82, 91, 94, 95], "center_offset": [39, 40, 41, 42, 43, 44, 45, 48, 49, 68, 70, 79, 80, 81, 82, 94, 144, 145, 146, 182], "crf": [39, 40, 43, 44, 48, 49, 68, 70, 79, 80], "read_onli": [39, 40, 41, 42, 43, 44, 45, 48, 49, 64, 65, 68, 70, 79, 80, 81, 82, 94], "full_width": [39, 40, 42, 43, 44, 45, 48, 49, 68, 70, 79, 80, 81, 82, 94, 144, 145, 146], "rise_tim": [39, 40, 43, 44, 45, 48, 49, 68, 70, 76, 79, 80, 94, 95, 143, 144, 145], "rz": [39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 68, 69, 70, 78, 80, 82, 93, 94, 95, 96, 101, 119, 170, 180], "qubit_wav": [39, 41, 42, 44, 45, 47, 48, 49, 68, 69, 70, 182], "cosin": [40, 43, 76, 94, 95, 138, 139, 142, 143, 145, 146, 180], "rise": [40, 43, 75, 76, 94, 95, 142, 143, 144, 145, 180], "fall": [40, 43, 75, 76, 94, 95, 142, 144, 145, 148, 180], "ac": [40, 43, 46, 75, 76, 93, 94, 95, 180], "stark": [40, 43, 46, 75, 76, 93, 94, 95, 180], "first_qubit": [40, 43], "mcrf": [40, 43, 94], "modulation_frequ": [40, 43, 94, 120, 145], "second_qubit": [40, 43], "qubit_drive_wav": [40, 43, 46], "modulatedcosinerisefal": [40, 43, 94, 138], "gaussiansmoothedsquar": 41, "gss": 41, "gaussian_sigma": 41, "square_width": 41, "slepian": [42, 43, 44, 138, 180], "coupling_strength_norm": [42, 43, 44, 146], "frequency_initial_norm": [42, 43, 44, 146], "frequency_to_minimize_norm": [42, 43, 44, 146], "lambda_1": [42, 43, 44, 146], "lambda_2": [42, 43, 44, 146], "squid_asymmetri": [42, 43, 44, 146], "truncatedgaussiansmoothedsquar": [45, 49, 70, 145], "tgss": [45, 49, 70], "analog": 46, "tune": 46, "frequenc": [46, 64, 65, 66, 69, 93, 108, 109, 120, 139, 141, 145, 146, 180, 182], "_ac_stark_puls": [46, 93], "phase_incr": [46, 93, 94, 96, 120, 127], "quadratur": [46, 93, 120], "pi": [46, 77, 78, 79, 80, 81, 82, 84, 90, 93, 98, 99, 100, 139, 140, 141, 144, 169, 180, 182, 185, 187], "discret": 47, "mediat": [47, 67], "coupl": [47, 146], "tunabl": [47, 186], "both": [47, 69, 75, 158, 180, 182, 185, 187], "arbitrari": [47, 96, 100, 122, 170, 185, 187], "slot": 47, "move": [47, 68, 69, 70, 71, 155, 180, 187], "being": [47, 84, 148, 182, 185], "flux_puls": 47, "radian": [47, 74, 75, 83, 84, 92, 96, 100, 120, 127, 141, 169], "maximum": [51, 61, 91, 132, 146, 156], "up": [52, 65, 69, 72, 107, 113, 132, 146, 156, 180, 182], "hardwar": [52, 127, 148, 176, 179, 181, 182, 183, 185], "again": 52, "much": [52, 181], "why": [52, 182], "10": [52, 61, 67, 186], "except": [52, 65, 78, 171, 173, 174, 175, 181, 182, 184], "enumer": [53, 55, 57], "xygat": [53, 56, 83], "intenum": [53, 57], "reprenum": 53, "twoqubitg": [53, 54], "iswap": [54, 55, 186], "j": [54, 56, 60], "sqrt_iswap": [54, 55], "70710678": [54, 56], "70710678j": [54, 56], "matric": [54, 56, 182], "enum": [55, 57, 160, 162, 163], "qualnam": [55, 57, 162, 163], "dictionari": [55, 168, 182], "two_qubit_unitari": 55, "squar": 55, "x_90": 56, "x_180": 56, "x_m90": 56, "y_90": 56, "y_180": 56, "y_m90": 56, "su": [56, 100, 101, 102], "clifford": [57, 83], "axi": [57, 74, 98, 100, 170, 180, 182], "xy": [57, 74, 83], "plane": [57, 74, 98], "xygate_unitari": 57, "tomographi": 57, "overwrit": [58, 86], "error": [58, 146, 150, 164, 166, 173, 174, 175, 180, 181, 187], "fluxmultiplexer_samplelinear": [59, 180], "flux_multiplex": 60, "linear": [60, 84, 139, 140], "multiplex": [60, 65, 90, 161, 180], "cross": [60, 184, 187], "talk": [60, 187], "element": [60, 164, 180, 181, 187], "c_ij": 60, "aris": [60, 184], "a_i": 60, "w_i": 60, "sum_j": 60, "a_j": 60, "w_j": 60, "spars": 60, "form": [60, 146, 180, 181, 182, 184], "xarrai": 60, "yet": [60, 156, 157, 180], "matrix_index": 60, "relev": 60, "flat": [60, 112], "np": [60, 148, 182, 185, 187], "matrix_el": 60, "experiment": 60, "r": [60, 98, 144, 186], "d": [60, 139, 164, 184, 186], "everyth": [60, 187], "subject": [60, 181, 184], "1e": [61, 134, 158, 159], "absolut": 61, "uniformli": 61, "class_nam": 62, "project": [63, 64, 90, 96], "basi": [63, 64, 90, 96, 100, 148, 184], "measure_customwaveform": [63, 64, 66, 182], "measure_const": [63, 180], "probepulse_customwaveform": [63, 180], "dispers": [64, 65], "constant": [64, 65, 75, 76, 89, 95, 142, 143, 144, 180, 185], "acquisition_delai": [64, 65, 66], "acquisit": [64, 65, 66, 115, 123, 180, 185], "acquisition_typ": [64, 65], "threshold": [64, 65, 125], "amplitude_i": [64, 65, 66, 75, 76, 77, 78, 79, 80, 81, 82, 95, 182], "amplitude_q": [64, 65, 66, 75, 76, 77, 78, 79, 80, 81, 82, 95, 182], "integration_length": [64, 65, 66, 180], "integr": [64, 65, 66, 109, 117, 125, 126, 146, 180, 185], "integration_threshold": [64, 65], "integration_weights_i": [64, 65], "weight": [64, 65, 117, 125, 180], "dtype": [64, 65, 139, 141, 142, 143, 144, 145, 146, 182], "float64": [64, 65], "integration_weights_q": [64, 65], "dimension": 65, "len": 65, "intermedi": [65, 182], "IF": 65, "center": [65, 109, 144, 145, 146], "offset": [65, 122, 144, 146], "readouttrigg": [65, 66, 114, 125, 161, 181, 183], "_multiplexed_timebox": 65, "multiplexedprobetimebox": [65, 160, 180], "probe_timebox": 65, "_time_trac": 65, "time_trac": [65, 66, 115], "_build_instruct": [65, 66], "waveform_param": [65, 66], "root_param": [65, 66], "if_freq": 65, "acquisitionmethod": [65, 66, 114, 117, 123, 126], "do_acquisit": 65, "nake": 65, "trigger": [65, 66, 123, 132, 161, 180, 185], "goe": 65, "maintain": 65, "backward": [65, 84], "rout": [65, 125], "probelin": [65, 181, 185], "behav": [65, 116, 128], "featur": [65, 182, 183], "mode": 65, "pick": 65, "anywher": [65, 125, 180], "pass": [65, 71, 72, 73, 180, 185], "acquisition_dur": 65, "trace": [65, 66], "record": 65, "acqusit": 65, "contrari": 66, "probl": 66, "exchang": 67, "invari": 67, "span": 67, "00": 67, "rangl": [67, 87], "01": 67, "swap": 67, "anyth": [67, 182], "orthogon": [67, 182], "involut": 67, "_": 67, "i_": 67, "langl": 67, "undefin": [67, 181], "complex": [67, 117, 182, 185, 187], "degre": [67, 98], "freedom": [67, 185], "continuum": 67, "cancel": [67, 180], "due": [67, 69, 93, 119, 143, 181], "movemark": [67, 69, 180], "move_customwaveform": [67, 68, 70, 72, 180], "move_crf_crf": [67, 180], "move_tgss_crf": 67, "detun": [68, 69, 70, 71, 72, 180], "bookkeep": 69, "unknown": [69, 148, 174], "pair": [69, 122, 142, 143, 148, 182], "back": [69, 148, 155], "came": 69, "sandwich": [69, 72, 73, 180], "At": [69, 182], "annot": [69, 71, 184], "mark": [69, 184], "counteract": 69, "accumul": 69, "proport": 69, "sum": [69, 72, 122, 133, 139, 141, 145, 146, 164, 187], "complet": [69, 181], "apply_move_gate_phase_correct": [69, 180], "track": [69, 133, 156, 180, 184, 187], "right": [71, 180, 181, 184, 185, 187], "link": [71, 138, 180, 184], "noth": [71, 130, 132, 152, 154, 158, 159, 182, 184], "explicit": [71, 180, 181], "aforement": [71, 133, 156, 182], "marker": 71, "post": 71, "compil": [71, 73, 107, 116, 183, 184, 187], "apply_detuning_correct": 72, "level": [72, 73, 148, 181, 182, 183, 185, 187], "validate_prx": 73, "prepar": [73, 184], "conform": 73, "constraint": [73, 122, 181, 185], "unmodifi": 73, "x": [74, 75, 78, 80, 83, 84, 98, 100, 180, 182, 186], "r_": [74, 78, 96], "phi": [74, 78, 92, 96, 100, 101, 102, 141, 170, 180], "theta": [74, 78, 96, 100, 101, 102, 146, 170, 180], "co": [74, 100, 139, 141], "y": [74, 83, 98, 100, 102, 180], "sin": [74, 100, 144], "r_z": [74, 78, 92, 96, 100, 101], "r_x": 74, "dagger": 74, "around": [74, 98, 100, 145, 170], "li": 74, "bloch": [74, 100, 182], "sphere": [74, 100, 182], "prx_gateimplement": [74, 75, 84, 92], "prx_singlepulse_gateimplement": [74, 77, 78], "prx_customwaveform": [74, 79, 81, 180, 182], "prx_draggaussian": 74, "prx_dragcosinerisefal": 74, "prx_customwaveformssx": [74, 80, 82, 180], "prx_draggaussiansx": [74, 180], "prx_dragcosinerisefallsx": [74, 180], "abc_constant_smooth": [74, 76, 92], "constant_prx_with_smooth_rise_fal": [74, 92, 95, 180], "arbitrarili": [75, 142, 143, 180], "smooth": [75, 142, 143], "rise_waveform": [75, 76, 95], "main_waveform": [75, 76, 95], "fall_waveform": [75, 76, 95], "middl": [75, 145], "limit": [75, 99, 176, 179, 180, 184, 187], "memori": [75, 180, 181], "doesn": 75, "_main_puls": 75, "main": [75, 181, 182], "_rise_puls": 75, "_fall_puls": 75, "cosinefal": [76, 95, 138], "cosineris": [76, 95, 138], "iq": [77, 78, 79, 80, 81, 82, 84, 107, 108, 117, 122, 125, 126, 170, 176, 179], "hot": [77, 78], "swappabl": [77, 78], "rest_of_calibration_data": [77, 78], "x_pi": [77, 79, 180], "sx": [78, 99, 180], "manipul": [78, 182], "formula": 78, "rz_after": [78, 80, 82], "rz_befor": [78, 80, 82, 180], "sqrt": [78, 80, 98, 180], "cosinerisefallderiv": [79, 80, 138], "vz": [80, 82], "prx_customwaveformsvz": [80, 82], "truncatedgaussian": [81, 82, 182], "tg": [81, 82], "truncatedgaussianderiv": [81, 82, 182], "gaussian": [82, 182], "rx": [83, 185, 187], "ry": [83, 180, 187], "xy_gat": 83, "static": [84, 139, 141, 145, 146, 161, 164, 180], "_single_iq_puls": [84, 180], "resonantli": 84, "x_": 84, "linearli": [84, 182], "scale": [84, 119, 120, 124, 181, 182], "adjust": [84, 170, 180, 181, 185], "iq_puls": [84, 180], "2x2": [85, 97, 102], "gate_nam": 86, "impl_class": 86, "set_as_default": 86, "quantum_op_spec": [86, 182], "split": [86, 181], "human": [86, 164, 181, 182], "readabl": [86, 164, 181, 184], "python": [86, 166, 167, 180, 182], "previous": [86, 180], "constructor": [86, 132], "miss": 86, "suitabl": 86, "qb": 86, "reset_condit": [87, 185], "reset_wait": [87, 180], "__default_feedback": 88, "doubl": [88, 89], "underscor": [88, 89], "emphas": [88, 89], "fact": [88, 89], "manual": [88, 89, 141, 182], "__reset": 89, "reset": [90, 91, 120, 148, 180, 181, 182, 185], "necessari": [90, 152, 181, 182, 187], "accommod": 90, "upon": 90, "relax": [91, 180], "compar": [91, 125, 132, 180], "shot": [91, 181], "destroi": 91, "wait_box": 91, "rz_virtual": 92, "rz_acstarkshift": [92, 94], "rz_acstarkshift_cosinerisefal": 92, "rz_acstarkshift_smoothconst": [92, 180], "strong": 93, "off": [93, 180], "lead": [93, 180], "shift": [93, 119], "ac_stark_puls": 93, "ac_stark_waveform": 94, "increment": [94, 96, 120, 127, 170, 180], "techniqu": [96, 101], "oscil": [96, 127, 170], "shortest": 96, "algebra": [96, 127], "commut": [96, 170], "toward": 96, "hit": 96, "elimin": 96, "multi": 96, "hold": [96, 184], "diagon": 96, "immedi": [96, 152, 180], "conjug": 96, "alpha": [96, 139, 140], "accomplish": 96, "assumpt": [96, 146], "negat": 96, "sigma": [98, 182, 186], "_x": 98, "xz": 98, "90": [98, 186], "sxgate": [98, 180], "parametr": [100, 146, 182, 186], "euler": [100, 101], "lambda": [100, 101, 180, 182], "subsequ": [100, 184], "r_y": [100, 101], "express": [100, 146, 184], "h": 100, "8": [100, 183, 184], "http": [100, 180, 184], "openqasm": 100, "com": 100, "languag": [100, 181, 184], "html": [100, 137, 180], "ugat": [100, 180], "lam": [101, 102], "decomposit": 101, "cdot": 101, "probechannelproperti": 104, "channelconfigur": [104, 110], "realchannelconfig": [104, 106, 108], "iqchannelconfig": 104, "channeldescript": [104, 176, 177], "instruction_t": 106, "uniqu": [106, 148, 181, 182], "waveform_t": 106, "add_instruct": 106, "integ": [106, 107, 118, 164, 187], "similar": [106, 180, 182], "manner": 106, "instruction_duration_granular": [107, 109], "instruction_duration_min": [107, 109, 113], "compatible_instruct": [107, 109, 172], "is_iq": [107, 109], "is_virtu": [107, 109], "blocks_compon": [107, 109], "zi": 107, "hdawg": 107, "shfsg": 107, "shfqa": 107, "32": [107, 181], "16": [107, 132, 181, 186], "hack": 107, "frontend": 107, "sent": [107, 180, 181, 184], "might": [107, 181, 182, 185, 187], "duration_to_sampl": 107, "duration_to_second": 107, "duration_to_int_sampl": 107, "messag": [107, 150, 164], "check_min_sampl": 107, "close": [107, 187], "test": 107, "output": [107, 116, 128, 137, 148, 180, 181, 185, 187], "unaccept": 107, "round_duration_to_granular": 107, "round_up": [107, 113], "force_min_dur": [107, 113], "closest": [107, 113], "upconvers": [108, 127], "center_frequ": 109, "integration_start_dead_tim": 109, "integration_stop_dead_tim": 109, "dead": 109, "real": [110, 120, 124, 125, 146, 181], "flux_control": 111, "readout_control": 111, "intern": [111, 180, 181, 187], "standard": [112, 187], "channel_properti": [112, 132, 157], "largest": 113, "realpuls": [114, 119, 176, 178, 179, 182], "multiplexediqpuls": [114, 123], "timetrac": 114, "complexintegr": [114, 125], "thresholdstatediscrimin": 114, "delay_sampl": [115, 117, 125, 126], "acquir": [115, 123, 181], "qb1__readout": 115, "window": [115, 126, 139, 141, 144, 145, 146], "strictli": [116, 181, 182], "strict": [116, 180, 181], "version": [116, 183, 184], "dd": 116, "outcom": 118, "choic": 118, "evalu": 118, "ok": [118, 120, 121, 124], "get_child_instruct": [118, 121], "child": [118, 121, 156, 157, 176, 179], "collect": [119, 181, 182], "scale_i": [120, 182], "scale_q": [120, 182], "upconvert": 120, "envelop": [120, 186], "factor": [120, 124, 146, 182], "success": 120, "carrier": 120, "get_waveform": [120, 121, 124], "command": [121, 181, 185], "entri": [122, 182], "outsid": [122, 181, 182], "interv": [122, 181, 182], "truncat": [122, 155, 180], "neg": 122, "probe_puls": 123, "shape": [124, 139, 141, 142, 143, 144, 145, 146, 183], "feedback_signal_label": [125, 180], "boolean": 125, "transmit": 125, "field": [125, 182, 184], "duration_sampl": 126, "captur": [126, 183], "updat": [127, 180, 185], "sure": 128, "synchron": 132, "program": 132, "critic": 132, "account": [132, 146, 180], "pprint": 132, "time_unit": 132, "fix": [132, 181], "width": [132, 144, 145], "graphic": 132, "represent": [132, 164, 181], "symbol": 132, "keysview": 132, "mutat": [132, 133], "vice": [132, 133], "versa": [132, 133], "immut": [132, 133], "add_channel": 132, "channel_nam": [132, 187], "unchang": [132, 168], "front_pad": 132, "to_dur": 132, "variabl": [132, 156, 180], "front_pad_in_second": 132, "pad_to_hard_box": 132, "pad_to_hard_box_in_second": 132, "smallest": 132, "revers": 132, "preserv": [132, 152, 181, 187], "rear": 132, "reverse_hard_box": 132, "No": [132, 180], "synchronis": 132, "break": 132, "cleanup": [132, 180], "clean": [132, 180], "thing": [132, 142, 143], "has_content_in": 132, "keep": [133, 156], "_instruct": 133, "_durat": 133, "prepend": 133, "pop": 133, "idx": [133, 155], "12": [134, 158, 159], "comp": [134, 180], "1281": 134, "visualis": [136, 180], "view": [137, 180], "browser": 137, "jupyt": 137, "notebook": 137, "ipython": 137, "core": [137, 180], "displai": [137, 184], "inspect": 137, "don": [138, 184], "serial": 138, "reimport": 138, "document": [138, 180, 184], "appear": [138, 181, 184], "chirp": [138, 140, 180], "chirpimag": [138, 180], "freq_start": [139, 140], "freq_stop": [139, 140], "05": [139, 140], "omega": 139, "f_": 139, "mathrm": 139, "taper": 139, "rectangular": [139, 156], "hann": 139, "nyquist": 139, "zone": 139, "constrain": 139, "5": [139, 182, 184, 186, 187], "_sampl": [139, 141, 142, 143, 144, 145, 146, 182], "sample_coord": [139, 141, 142, 143, 144, 145, 146, 182], "coordin": [139, 141, 142, 143, 144, 145, 146], "non_timelike_attribut": [139, 141, 145, 146, 182], "timelik": [139, 141, 145, 146], "dimensionless": [139, 141, 145, 146], "invers": [139, 141, 145, 146], "5707963267948966": 140, "imaginari": 140, "period": 141, "sinusoid": [141, 144, 145], "made": [142, 143, 164, 182, 183, 184, 187], "dummi": 143, "bug": 143, "fixm": 143, "p": [144, 186], "plateau": 144, "Its": [144, 181], "midpoint": [144, 146], "descript": [145, 164, 184], "detail": [145, 146, 148, 181, 183, 185], "minim": [146, 152, 180], "adiabat": [146, 186], "prior": 146, "optim": [146, 158, 180], "lambda_n": 146, "tau_": 146, "acceler": 146, "reconstruct": 146, "tau": 146, "lab": 146, "interpol": 146, "v": [146, 176, 179, 180], "voltag": 146, "go": [146, 182], "advis": [146, 184], "look": [146, 182], "mathemat": [146, 183], "heavi": 146, "coeffici": 146, "leakag": 146, "strength": 146, "squid": [146, 180], "asymmetri": [146, 180], "_sample_normalized_slepian": 146, "coord": 146, "_t_tau": 146, "num_sampl": 146, "129": 146, "convers": [146, 182, 184], "analyt": 146, "solut": 146, "therefor": [146, 181], "numer": 146, "scipi": [146, 180], "romb": 146, "_theta_tau": 146, "fourier": 146, "shown": [146, 180, 185], "tau_puls": 146, "quantum_op": 148, "short": [148, 158], "simpl": [148, 164, 181, 182, 186], "unambigu": [148, 181, 182], "subsystem": 148, "qumod": 148, "pictur": [148, 185], "famili": [148, 181], "plural": 148, "intent": 148, "target": [148, 180, 187], "callabl": [148, 182], "lowest": [148, 181], "docstr": 148, "exact": [148, 182], "first_qubit_basis_ket": 148, "second_qubit_basis_ket": 148, "set_default_implement": [148, 182], "set_default_implementation_for_locu": [148, 182], "cal_data": 150, "impl": [150, 182], "noiseless": 152, "sync": 152, "try": [152, 180], "segmentpoint": 152, "nonsolid": 153, "nevertheless": 153, "tol": [155, 158, 159], "frac": 155, "serv": 155, "pointer": 155, "smaller": [155, 158, 159], "toler": 155, "remaind": 155, "cut_tail": 155, "cut": 155, "tail": 155, "onward": 155, "rewind": 155, "fastforward": 155, "forward": 155, "child_schedul": [156, 157], "child_compon": [156, 157], "neighborhood_compon": [156, 157, 161, 164], "component_dur": [156, 157], "is_alap": [156, 157], "respect": [156, 162, 176, 179, 181, 182], "hard": [156, 180], "rag": [156, 158, 159], "edg": [156, 180], "earliest": [156, 157], "max": 156, "combin": [156, 184], "extend_hard_boundary_in_second": 156, "computational_reson": [156, 157], "These": [156, 157, 164, 180, 181, 182, 187], "even": [156, 157, 180, 182, 184], "ever": [156, 157], "alap": [156, 157, 163, 164, 181, 187], "As": [156, 157, 164, 182, 185], "late": [156, 157, 163, 164], "extend_hard_boundari": 157, "incom": 157, "extens": [158, 159, 180], "reserv": 160, "resourc": 160, "schedulingstrategi": [160, 161, 162, 164, 187], "locus_compon": [161, 164, 182], "asap": [161, 163, 164, 181, 185, 187], "from_readout_trigg": 161, "readout_trigg": 161, "probe_channel": 161, "block_channel": 161, "block_dur": 161, "soon": [163, 164, 180, 185], "fragment": 164, "accord": [164, 187], "union": [164, 184, 187], "rule": [164, 170, 180, 181, 182, 187], "operand": [164, 187], "pipe": [164, 187], "group": [164, 182, 187], "let": [164, 182], "a_then_b": 164, "c_then_d": 164, "set_alap": [164, 187], "abcd": 164, "abb": 164, "ccd": 164, "all_togeth": 164, "dictat": 164, "flatten": 164, "ancestor": 164, "set_asap": 164, "print": [164, 180, 184, 187], "_idx": 164, "type_hint": 167, "typehint": 167, "merge_non": 168, "leav": 168, "psi_1": 170, "psi_2": 170, "decrement": 170, "beforehand": 170, "opposit": 170, "direct": [170, 184], "playlistvalidationerror": 171, "awgschedulevalidationdata": [171, 176], "awgschedulevalidationerror": 171, "invalidinstructionerror": 171, "sampling_r": 172, "min_number_of_sampl": 172, "fail": [173, 175], "issue_str": 174, "encount": 174, "channel_descript": [176, 177], "device_constraint": [176, 177, 179], "minimum": [176, 179, 181], "issu": [180, 184], "virtualz": 180, "didn": 180, "renam": 180, "crystal": 180, "star": 180, "architectur": 180, "crystal_5": 180, "star_6": 180, "mini": 180, "mini_crystal_20": 180, "crystal_20": 180, "sw": 180, "1059": 180, "electron": [180, 182, 184], "bump": 180, "refactor": 180, "major": 180, "deprec": 180, "usag": [180, 182], "register_gate_implement": 180, "imposs": 180, "retain": [180, 184], "rapidjson": 180, "685": 180, "x90": 180, "were": 180, "though": [180, 181, 182], "codebas": 180, "lint": 180, "467": 180, "speed": 180, "reshap": 180, "faster": 180, "neither": [180, 182], "assing": 180, "signific": 180, "speedup": 180, "anywai": 180, "diffrenet": 180, "broader": 180, "numpi": [180, 187], "verifi": 180, "compatibili": 180, "ruff": 180, "migrat": 180, "guid": 180, "org": [180, 184], "doc": [180, 182], "stabl": 180, "numpy_2_0_migration_guid": 180, "builtin": 180, "easili": [180, 183, 187], "quantumcircuit": 180, "extract": 180, "crf_acstarkcrf": 180, "slepian_acstarkcrf": 180, "repo": 180, "organ": [180, 187], "1042": 180, "disabl": 180, "horizont": 180, "scroll": 180, "toggl": 180, "cover": 180, "concept": [180, 182, 183], "531": 180, "gitlab": 180, "public": 180, "page": [180, 183, 184], "776": 180, "mr": 180, "514": 180, "client": [180, 181, 182, 183], "licens": [180, 183], "apach": [180, 184], "extlink": 180, "sphinx": 180, "916": 180, "intersphinx": 180, "665": 180, "becaus": [180, 182], "proper": 180, "realiz": [180, 186], "former": 180, "semant": [180, 181], "disturb": 180, "774": 180, "leak": 180, "web": 180, "artifact": 180, "resetwait": 180, "comfort": [180, 182], "timelin": [180, 181], "broken": 180, "redisplai": 180, "upcom": 180, "releas": 180, "prefer": [180, 182, 184], "font": 180, "viewer": 180, "358": 180, "typo": 180, "api": [180, 182, 183, 187], "workflow": [180, 187], "meth": 180, "pulla": [180, 183, 187], "potenti": 180, "crash": 180, "discoveri": 180, "throw": 180, "sc": 180, "nonsens": 180, "mcm": 180, "cc_prx": [180, 185], "merge_dict": 180, "crf_crf": 180, "interfac": [180, 182, 184], "feedback_label": 180, "similarli": [180, 182], "conditional_prx": 180, "hopefulli": 180, "yml": 180, "conditionalreset": 180, "mid": 180, "constant_qnd": 180, "qndness": 180, "phase_increment_befor": 180, "transform": [180, 181, 183, 184], "sign": 180, "phase_transform": 180, "fulfil": 180, "satisfi": [180, 185], "conditionalprx": 180, "accept": [180, 184], "signifi": 180, "weigth": 180, "canon": 180, "whitelist": 180, "2112": 180, "write": [180, 182, 184], "1831": 180, "drag_crf_sx": 180, "drag_gaussian_sx": 180, "prx_u": 180, "prx_sx": 180, "_x_pi_puls": 180, "register_implement": [180, 181, 182], "547": 180, "prioritis": 180, "1929": 180, "1468": 180, "programm": 180, "1925": 180, "crude": 180, "visual": [180, 181, 185], "measure_nop": 180, "small": [180, 181], "validate_move_instruct": 180, "2056": 180, "pipelin": [180, 185], "packag": 180, "give": [181, 182, 184, 187], "overview": 181, "terminologi": 181, "deliv": 181, "send": [181, 185], "assembli": 181, "batch": 181, "summar": 181, "imag": [181, 185], "illustr": [181, 185], "visibl": 181, "microwav": [181, 183], "ambigu": 181, "machin": 181, "violat": 181, "concern": 181, "philosophi": 181, "inaccess": 181, "attempt": 181, "smart": 181, "magic": 181, "inconsist": 181, "transpar": 181, "technic": 181, "apart": 181, "few": 181, "instant": 181, "thought": [181, 185], "desir": [181, 187], "read": [181, 185, 187], "importantli": 181, "disjoint": [181, 187], "partli": 181, "figur": [181, 185], "demonstr": 181, "explain": 181, "necessarili": [181, 182, 184], "variou": [181, 182], "runtim": [181, 185, 187], "build_quantum_op": 181, "bridg": 181, "gap": 181, "repeat": [181, 187], "repetit": 181, "encod": 181, "aim": 181, "fit": [181, 184], "chunk": 181, "inspect_playlist": 181, "neat": 181, "metadata": 182, "question": [182, 187], "cnot": 182, "NOT": 182, "On": [182, 185], "hand": 182, "frozen": 182, "programmat": 182, "procedur": 182, "invok": 182, "random": 182, "benchmark": 182, "getter": 182, "qc": 182, "introduc": 182, "emphasi": 182, "def": 182, "code": [182, 184, 185], "_default": 182, "implementation_": 182, "default_prx_qb1": 182, "special_prx_qb1": 182, "my_special_prx": 182, "default_box": 182, "chain": [182, 185], "default_cz_box": 182, "pure": 182, "develop": 182, "choos": [182, 184], "thumb": 182, "rest": 182, "simplifi": [182, 185], "educ": 182, "__class__": 182, "__name__": 182, "low": 182, "subsect": 182, "relai": 182, "live": 182, "denot": 182, "asymmetr": 182, "tri": 182, "replic": 182, "mandatori": 182, "alter": 182, "physcial": 182, "averag": 182, "mu": 182, "spread": 182, "recip": 182, "offset_coord": 182, "exp": 182, "resampl": 182, "understand": [182, 185, 186], "unitless": 182, "scalar_coeffieci": 182, "quick": [182, 183, 187], "simplest": 182, "composteg": 182, "compositehadamard": 182, "hadamard": 182, "_this_": 182, "member_prx": 182, "latter": 182, "onelin": 182, "prx_mycoolwaveform": 182, "coolwaveformi": 182, "coolwaveformq": 182, "my": 182, "cool": 182, "cz_mycoolwaveform": 182, "coolcouplerwaveform": 182, "coolqubitwaveform": 182, "measure_mycoolwaveform": 182, "preload": 182, "altogeth": 182, "snippet": 182, "cnot_matrix": 182, "cnot_op": 182, "my_build": 182, "my_cnot_impl": 182, "implementation_class": 182, "mycnotclass": 182, "access": [182, 187], "date": [183, 184], "2025": 183, "03": 183, "28": 183, "high": [183, 186], "unifi": 183, "hide": 183, "But": 183, "framework": [183, 187], "machineri": 183, "standalon": 183, "librari": [183, 185], "encourag": [183, 187], "familiar": 183, "especi": [183, 187], "miscellan": 183, "pitfal": 183, "changelog": 183, "search": 183, "januari": 184, "2004": [184, 186], "www": 184, "AND": 184, "FOR": 184, "reproduct": 184, "distribut": 184, "shall": 184, "9": [184, 185, 187], "licensor": 184, "copyright": 184, "owner": 184, "entiti": 184, "author": 184, "grant": 184, "legal": 184, "power": 184, "indirect": 184, "manag": 184, "contract": 184, "ii": 184, "ownership": 184, "fifti": 184, "percent": 184, "50": 184, "outstand": 184, "iii": 184, "benefici": 184, "exercis": 184, "permiss": 184, "modif": 184, "softwar": [184, 186], "mechan": 184, "translat": 184, "media": 184, "authorship": 184, "notic": [184, 187], "appendix": 184, "editori": 184, "revis": 184, "elabor": 184, "mere": 184, "bind": 184, "thereof": 184, "contribut": 184, "intention": 184, "submit": 184, "inclus": 184, "behalf": 184, "verbal": 184, "written": 184, "commun": 184, "mail": 184, "discuss": 184, "conspicu": 184, "Not": [184, 187], "contributor": 184, "whom": 184, "incorpor": 184, "herebi": 184, "perpetu": 184, "worldwid": 184, "exclus": 184, "charg": 184, "royalti": 184, "free": [184, 186], "irrevoc": 184, "reproduc": 184, "publicli": 184, "sublicens": 184, "patent": 184, "offer": 184, "sell": 184, "claim": 184, "infring": 184, "alon": 184, "institut": 184, "litig": 184, "counterclaim": 184, "lawsuit": 184, "alleg": 184, "contributori": 184, "termin": 184, "redistribut": 184, "medium": 184, "meet": 184, "recipi": 184, "promin": 184, "trademark": 184, "pertain": 184, "along": 184, "wherev": 184, "third": 184, "parti": 184, "alongsid": 184, "addendum": 184, "constru": 184, "statement": [184, 185], "compli": 184, "submiss": 184, "notwithstand": 184, "herein": 184, "supersed": 184, "agreement": 184, "regard": 184, "6": 184, "trade": 184, "servic": 184, "customari": 184, "7": 184, "disclaim": 184, "warranti": 184, "law": 184, "agre": 184, "AS": 184, "OR": 184, "OF": 184, "kind": 184, "titl": 184, "merchant": 184, "sole": 184, "risk": 184, "liabil": 184, "event": 184, "theori": 184, "tort": 184, "neglig": 184, "deliber": 184, "grossli": 184, "liabl": 184, "damag": 184, "incident": 184, "consequenti": 184, "inabl": 184, "loss": 184, "goodwil": 184, "stoppag": 184, "failur": 184, "malfunct": 184, "commerci": 184, "fee": 184, "indemn": 184, "oblig": 184, "indemnifi": 184, "harmless": 184, "incur": 184, "assert": 184, "boilerpl": 184, "enclos": 184, "bracket": 184, "comment": 184, "recommend": 184, "easier": 184, "identif": 184, "archiv": 184, "2024": 184, "complianc": 184, "govern": 184, "show": 185, "flexibl": 185, "goal": 185, "finit": 185, "condition": 185, "qccsw": 185, "excut": 185, "last": [185, 187], "too": 185, "earli": 185, "facilit": 185, "effici": 185, "travel": 185, "conditionalinstrucion": 185, "equaival": 185, "feedaback_kei": 185, "reset_qb2": 185, "set_qb3_to_1": 185, "cc_prx_qb4": 185, "2nd": [185, 186], "prx_qb3": 185, "prx_qb4": 185, "80e": [185, 187], "clariti": 185, "bottom": 185, "master": 185, "slave": 185, "compens": 185, "trigger_delai": 185, "explan": 185, "end_delai": 185, "spcecifi": 185, "trigger_mast": 185, "emit": 185, "daisi": 185, "central": 185, "cabl": 185, "john": 186, "m": 186, "martini": 186, "michael": 186, "geller": 186, "_z": 186, "phy": 186, "rev": 186, "022307": 186, "aug": 186, "2014": 186, "arxiv": 186, "1402": 186, "5467": 186, "doi": 186, "1103": 186, "physreva": 186, "lyon": 186, "digit": 186, "prentic": 186, "hall": 186, "edit": 186, "isbn": 186, "978": 186, "0131089891": 186, "cecilia": 186, "gisel": 186, "jarn": 186, "heurist": 186, "approach": 186, "anal": 186, "afa": 186, "29": 186, "51": 186, "57": 186, "2018": 186, "1703": 186, "06812": 186, "31527": 186, "analesafa": 186, "eyob": 186, "sete": 186, "nicola": 186, "didier": 186, "angela": 186, "chen": 186, "shobhan": 186, "kulshreshtha": 186, "riccardo": 186, "manenti": 186, "stefano": 186, "poletto": 186, "entangl": 186, "appl": 186, "024050": 186, "2021": 186, "2104": 186, "03511": 186, "physrevappli": 186, "youngkyu": 186, "sung": 186, "leon": 186, "ding": 186, "jochen": 186, "braum\u00fcller": 186, "antti": 186, "veps\u00e4l\u00e4inen": 186, "bharath": 186, "kannan": 186, "morten": 186, "kjaergaard": 186, "ami": 186, "green": 186, "gabriel": 186, "o": 186, "samach": 186, "chri": 186, "mcnalli": 186, "david": 186, "kim": 186, "alexand": 186, "melvil": 186, "bethani": 186, "niedzielski": 186, "molli": 186, "schwartz": 186, "jonilyn": 186, "l": 186, "yoder": 186, "terri": 186, "orlando": 186, "simon": 186, "gustavsson": 186, "william": 186, "oliv": 186, "fidel": 186, "zz": 186, "021058": 186, "jun": 186, "2011": 186, "01261": 186, "physrevx": 186, "capabl": 187, "ask": 187, "recogn": 187, "cz_gate_impl": 187, "prx_gate_impl": 187, "measure_gate_impl": 187, "keyword": 187, "instanti": 187, "x180": 187, "y90": 187, "100e": 187, "decid": 187, "p1": 187, "p2": 187, "handi": 187, "circuit3": 187, "sub": 187, "word": 187, "slide": 187, "past": 187, "neighbour": 187, "neighbourhood": 187, "worri": 187, "advers": 187, "ruin": 187, "best": 187, "arrang": 187, "aid": 187, "discov": 187, "all_qubit": 187, "get_neighbor_locus_compon": 187, "160e": 187, "cz_schedul": 187, "forget": 187}, "objects": {"iqm": [[1, 0, 0, "-", "pulse"]], "iqm.pulse": [[2, 0, 0, "-", "builder"], [8, 0, 0, "-", "circuit_operations"], [14, 0, 0, "-", "gate_implementation"], [31, 0, 0, "-", "gates"], [103, 0, 0, "-", "playlist"], [147, 0, 0, "-", "quantum_ops"], [152, 0, 0, "-", "scheduler"], [160, 0, 0, "-", "timebox"], [165, 0, 0, "-", "utils"], [171, 0, 0, "-", "validation"]], "iqm.pulse.builder": [[3, 1, 1, "", "CircuitOperation"], [4, 1, 1, "", "ScheduleBuilder"], [5, 4, 1, "", "build_quantum_ops"], [6, 4, 1, "", "load_config"], [7, 4, 1, "", "validate_quantum_circuit"]], "iqm.pulse.builder.CircuitOperation": [[3, 2, 1, "", "args"], [3, 2, 1, "", "implementation"], [3, 2, 1, "", "locus"], [3, 2, 1, "", "name"], [3, 3, 1, "", "validate"]], "iqm.pulse.builder.ScheduleBuilder": [[4, 3, 1, "", "_block_neighborhood_tetris"], [4, 2, 1, "", "_cache"], [4, 2, 1, "", "_channel_templates"], [4, 2, 1, "", "_channel_to_component"], [4, 2, 1, "", "_channel_types"], [4, 3, 1, "", "_find_implementation_and_locus"], [4, 3, 1, "", "_finish_schedule"], [4, 3, 1, "", "_fuse_long_distance_virtual_rzs"], [4, 3, 1, "", "_get_channel_for_component"], [4, 3, 1, "", "_get_implementation"], [4, 3, 1, "", "_get_neighborhood_hard_boundary"], [4, 2, 1, "", "_require_scheduling_in_seconds"], [4, 3, 1, "", "_resolve_timebox_hard_boundary"], [4, 3, 1, "", "_resolve_timebox_tetris"], [4, 3, 1, "", "_set_gate_implementation_shortcut"], [4, 3, 1, "", "build_playlist"], [4, 3, 1, "", "circuit_to_timebox"], [4, 2, 1, "", "composite_cache"], [4, 3, 1, "", "get_calibration"], [4, 3, 1, "", "get_control_channels"], [4, 3, 1, "", "get_drive_channel"], [4, 3, 1, "", "get_flux_channel"], [4, 3, 1, "", "get_implementation"], [4, 3, 1, "", "get_implementation_class"], [4, 3, 1, "", "get_probe_channel"], [4, 3, 1, "", "get_virtual_feedback_channel_for"], [4, 3, 1, "", "get_virtual_feedback_channels"], [4, 3, 1, "", "has_calibration"], [4, 3, 1, "", "inject_calibration"], [4, 3, 1, "", "resolve_timebox"], [4, 3, 1, "", "timebox_to_schedule"], [4, 3, 1, "", "timeboxes_to_front_padded_playlist"], [4, 3, 1, "", "timeboxes_to_playlist"], [4, 3, 1, "", "validate_calibration"], [4, 3, 1, "", "validate_quantum_circuit"], [4, 3, 1, "", "wait"]], "iqm.pulse.circuit_operations": [[9, 1, 1, "", "CircuitOperationList"], [10, 4, 1, "", "get_unitary_from_circuit"], [11, 4, 1, "", "get_unitary_from_op"], [12, 4, 1, "", "reorder"], [13, 4, 1, "", "reshape_unitary"]], "iqm.pulse.circuit_operations.CircuitOperationList": [[9, 3, 1, "", "_set_specific_operation_shortcut"], [9, 3, 1, "", "add_op"], [9, 3, 1, "", "add_qubits"], [9, 3, 1, "", "barrier"], [9, 3, 1, "", "compose"], [9, 3, 1, "", "count_ops"], [9, 3, 1, "", "find_qubits"], [9, 3, 1, "", "get_unitary"], [9, 3, 1, "", "map_loci"]], "iqm.pulse.gate_implementation": [[15, 1, 1, "", "CompositeCache"], [16, 1, 1, "", "CompositeGate"], [17, 1, 1, "", "CustomIQWaveforms"], [18, 1, 1, "", "GateImplementation"], [19, 6, 1, "", "Locus"], [20, 6, 1, "", "NestedParams"], [21, 6, 1, "", "OCalibrationData"], [22, 6, 1, "", "OICalibrationData"], [23, 6, 1, "", "OILCalibrationData"], [24, 6, 1, "", "OpCalibrationDataTree"], [25, 6, 1, "", "PROBE_LINES_LOCUS_MAPPING"], [26, 6, 1, "", "SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING"], [27, 6, 1, "", "SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING"], [28, 6, 1, "", "SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING"], [29, 1, 1, "", "SinglePulseGate"], [30, 4, 1, "", "get_waveform_parameters"]], "iqm.pulse.gate_implementation.CompositeCache": [[15, 3, 1, "", "flush"], [15, 3, 1, "", "get"], [15, 3, 1, "", "set"]], "iqm.pulse.gate_implementation.CompositeGate": [[16, 3, 1, "", "build"], [16, 2, 1, "", "default_implementations"], [16, 2, 1, "", "registered_gates"]], "iqm.pulse.gate_implementation.CustomIQWaveforms": [[17, 2, 1, "", "dependent_waves"], [17, 2, 1, "", "excluded_parameters"], [17, 2, 1, "", "root_parameters"], [17, 2, 1, "", "wave_i"], [17, 2, 1, "", "wave_q"]], "iqm.pulse.gate_implementation.GateImplementation": [[18, 3, 1, "", "_call"], [18, 3, 1, "", "build"], [18, 3, 1, "", "convert_calibration_data"], [18, 3, 1, "", "duration_in_seconds"], [18, 3, 1, "", "get_custom_locus_mapping"], [18, 3, 1, "", "get_locus_mapping_name"], [18, 3, 1, "", "get_parameters"], [18, 3, 1, "", "needs_calibration"], [18, 2, 1, "", "parameters"], [18, 5, 1, "", "qualified_name"], [18, 2, 1, "", "special_implementation"], [18, 2, 1, "", "symmetric"], [18, 3, 1, "", "to_timebox"]], "iqm.pulse.gate_implementation.SinglePulseGate": [[29, 3, 1, "", "_call"], [29, 3, 1, "", "_get_pulse"], [29, 3, 1, "", "_get_pulse_channel"], [29, 3, 1, "", "duration_in_seconds"]], "iqm.pulse.gates": [[32, 0, 0, "-", "barrier"], [34, 0, 0, "-", "conditional"], [38, 0, 0, "-", "cz"], [50, 0, 0, "-", "delay"], [53, 0, 0, "-", "enums"], [58, 4, 1, "", "expose_implementation"], [59, 0, 0, "-", "flux_multiplexer"], [62, 4, 1, "", "get_implementation_class"], [63, 0, 0, "-", "measure"], [67, 0, 0, "-", "move"], [74, 0, 0, "-", "prx"], [86, 4, 1, "", "register_implementation"], [87, 0, 0, "-", "reset"], [92, 0, 0, "-", "rz"], [98, 0, 0, "-", "sx"], [100, 0, 0, "-", "u"]], "iqm.pulse.gates.barrier": [[33, 1, 1, "", "Barrier"]], "iqm.pulse.gates.barrier.Barrier": [[33, 3, 1, "", "_call"], [33, 3, 1, "", "duration_in_seconds"], [33, 2, 1, "", "symmetric"]], "iqm.pulse.gates.conditional": [[35, 1, 1, "", "CCPRX_Composite"], [36, 1, 1, "", "CCPRX_Composite_DRAGCosineRiseFall"], [37, 1, 1, "", "CCPRX_Composite_DRAGGaussian"]], "iqm.pulse.gates.conditional.CCPRX_Composite": [[35, 3, 1, "", "_call"], [35, 2, 1, "", "parameters"]], "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall": [[36, 2, 1, "", "default_implementations"]], "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian": [[37, 2, 1, "", "default_implementations"]], "iqm.pulse.gates.cz": [[39, 1, 1, "", "CZ_CRF"], [40, 1, 1, "", "CZ_CRF_ACStarkCRF"], [41, 1, 1, "", "CZ_GaussianSmoothedSquare"], [42, 1, 1, "", "CZ_Slepian"], [43, 1, 1, "", "CZ_Slepian_ACStarkCRF"], [44, 1, 1, "", "CZ_Slepian_CRF"], [45, 1, 1, "", "CZ_TruncatedGaussianSmoothedSquare"], [46, 1, 1, "", "CouplerFluxPulseQubitACStarkPulseGate"], [47, 1, 1, "", "FluxPulseGate"], [48, 1, 1, "", "FluxPulseGate_CRF_CRF"], [49, 1, 1, "", "FluxPulseGate_TGSS_CRF"]], "iqm.pulse.gates.cz.CZ_CRF": [[39, 2, 1, "", "coupler_wave"], [39, 2, 1, "", "parameters"], [39, 2, 1, "", "qubit_wave"], [39, 2, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF": [[40, 2, 1, "", "coupler_wave"], [40, 2, 1, "", "parameters"], [40, 2, 1, "", "qubit_drive_wave"], [40, 2, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare": [[41, 2, 1, "", "coupler_wave"], [41, 2, 1, "", "parameters"], [41, 2, 1, "", "qubit_wave"], [41, 2, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_Slepian": [[42, 2, 1, "", "coupler_wave"], [42, 2, 1, "", "parameters"], [42, 2, 1, "", "qubit_wave"], [42, 2, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF": [[43, 2, 1, "", "coupler_wave"], [43, 2, 1, "", "parameters"], [43, 2, 1, "", "qubit_drive_wave"], [43, 2, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_Slepian_CRF": [[44, 2, 1, "", "coupler_wave"], [44, 2, 1, "", "parameters"], [44, 2, 1, "", "qubit_wave"], [44, 2, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare": [[45, 2, 1, "", "coupler_wave"], [45, 2, 1, "", "parameters"], [45, 2, 1, "", "qubit_wave"], [45, 2, 1, "", "symmetric"]], "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate": [[46, 3, 1, "", "_ac_stark_pulse"], [46, 3, 1, "", "_call"], [46, 2, 1, "", "coupler_wave"], [46, 3, 1, "", "duration_in_seconds"], [46, 2, 1, "", "excluded_parameters"], [46, 3, 1, "", "get_locus_mapping_name"], [46, 2, 1, "", "qubit_drive_wave"]], "iqm.pulse.gates.cz.FluxPulseGate": [[47, 3, 1, "", "_call"], [47, 2, 1, "", "coupler_wave"], [47, 3, 1, "", "duration_in_seconds"], [47, 2, 1, "", "excluded_parameters"], [47, 3, 1, "", "get_locus_mapping_name"], [47, 2, 1, "", "qubit_wave"], [47, 2, 1, "", "root_parameters"]], "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF": [[48, 2, 1, "", "coupler_wave"], [48, 2, 1, "", "parameters"], [48, 2, 1, "", "qubit_wave"], [48, 2, 1, "", "symmetric"]], "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF": [[49, 2, 1, "", "coupler_wave"], [49, 2, 1, "", "parameters"], [49, 2, 1, "", "qubit_wave"], [49, 2, 1, "", "symmetric"]], "iqm.pulse.gates.delay": [[51, 6, 1, "", "DELAY_MAX_DURATION_SECONDS"], [52, 1, 1, "", "Delay"]], "iqm.pulse.gates.delay.Delay": [[52, 3, 1, "", "_call"], [52, 2, 1, "", "symmetric"]], "iqm.pulse.gates.enums": [[54, 6, 1, "", "TWO_QUBIT_UNITARIES"], [55, 1, 1, "", "TwoQubitGate"], [56, 6, 1, "", "XYGATE_UNITARIES"], [57, 1, 1, "", "XYGate"]], "iqm.pulse.gates.enums.TwoQubitGate": [[55, 2, 1, "", "CZ"], [55, 2, 1, "", "ISWAP"], [55, 2, 1, "", "SQRT_ISWAP"]], "iqm.pulse.gates.flux_multiplexer": [[60, 1, 1, "", "FluxMultiplexer_SampleLinear"], [61, 6, 1, "", "TOLERANCE"]], "iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear": [[60, 3, 1, "", "get_custom_locus_mapping"], [60, 2, 1, "", "parameters"]], "iqm.pulse.gates.measure": [[64, 1, 1, "", "Measure_Constant"], [65, 1, 1, "", "Measure_CustomWaveforms"], [66, 1, 1, "", "ProbePulse_CustomWaveforms"]], "iqm.pulse.gates.measure.Measure_Constant": [[64, 2, 1, "", "dependent_waves"], [64, 2, 1, "", "parameters"], [64, 2, 1, "", "wave_i"], [64, 2, 1, "", "wave_q"]], "iqm.pulse.gates.measure.Measure_CustomWaveforms": [[65, 3, 1, "", "_build_instructions"], [65, 3, 1, "", "_call"], [65, 2, 1, "", "_multiplexed_timeboxes"], [65, 2, 1, "", "_time_traces"], [65, 2, 1, "", "dependent_waves"], [65, 3, 1, "", "duration_in_seconds"], [65, 3, 1, "", "get_locus_mapping_name"], [65, 3, 1, "", "probe_timebox"], [65, 2, 1, "", "root_parameters"], [65, 3, 1, "", "time_trace"]], "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms": [[66, 3, 1, "", "_build_instructions"], [66, 3, 1, "", "_call"], [66, 2, 1, "", "dependent_waves"], [66, 3, 1, "", "duration_in_seconds"], [66, 3, 1, "", "get_locus_mapping_name"], [66, 2, 1, "", "root_parameters"]], "iqm.pulse.gates.move": [[68, 1, 1, "", "MOVE_CRF_CRF"], [69, 1, 1, "", "MOVE_CustomWaveforms"], [70, 1, 1, "", "MOVE_TGSS_CRF"], [71, 1, 1, "", "MoveMarker"], [72, 4, 1, "", "apply_move_gate_phase_corrections"], [73, 4, 1, "", "validate_move_instructions"]], "iqm.pulse.gates.move.MOVE_CRF_CRF": [[68, 2, 1, "", "coupler_wave"], [68, 2, 1, "", "parameters"], [68, 2, 1, "", "qubit_wave"], [68, 2, 1, "", "symmetric"]], "iqm.pulse.gates.move.MOVE_CustomWaveforms": [[69, 3, 1, "", "_call"], [69, 2, 1, "", "coupler_wave"], [69, 2, 1, "", "parameters"], [69, 2, 1, "", "qubit_wave"], [69, 2, 1, "", "root_parameters"], [69, 2, 1, "", "symmetric"]], "iqm.pulse.gates.move.MOVE_TGSS_CRF": [[70, 2, 1, "", "coupler_wave"], [70, 2, 1, "", "parameters"], [70, 2, 1, "", "qubit_wave"], [70, 2, 1, "", "symmetric"]], "iqm.pulse.gates.move.MoveMarker": [[71, 2, 1, "", "duration"]], "iqm.pulse.gates.prx": [[75, 1, 1, "", "ABC_Constant_smooth"], [76, 1, 1, "", "Constant_PRX_with_smooth_rise_fall"], [77, 1, 1, "", "PRX_CustomWaveforms"], [78, 1, 1, "", "PRX_CustomWaveformsSX"], [79, 1, 1, "", "PRX_DRAGCosineRiseFall"], [80, 1, 1, "", "PRX_DRAGCosineRiseFallSX"], [81, 1, 1, "", "PRX_DRAGGaussian"], [82, 1, 1, "", "PRX_DRAGGaussianSX"], [83, 1, 1, "", "PRX_GateImplementation"], [84, 1, 1, "", "PRX_SinglePulse_GateImplementation"], [85, 4, 1, "", "get_unitary_prx"]], "iqm.pulse.gates.prx.ABC_Constant_smooth": [[75, 3, 1, "", "_call"], [75, 3, 1, "", "_fall_pulse"], [75, 3, 1, "", "_main_pulse"], [75, 3, 1, "", "_rise_pulse"]], "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall": [[76, 2, 1, "", "fall_waveform"], [76, 2, 1, "", "main_waveform"], [76, 2, 1, "", "parameters"], [76, 2, 1, "", "rise_waveform"], [76, 2, 1, "", "symmetric"]], "iqm.pulse.gates.prx.PRX_CustomWaveforms": [[77, 3, 1, "", "_get_pulse"], [77, 2, 1, "", "dependent_waves"], [77, 2, 1, "", "root_parameters"]], "iqm.pulse.gates.prx.PRX_CustomWaveformsSX": [[78, 3, 1, "", "_call"], [78, 3, 1, "", "_get_pulse"], [78, 2, 1, "", "dependent_waves"], [78, 2, 1, "", "root_parameters"]], "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall": [[79, 3, 1, "", "_get_pulse"], [79, 2, 1, "", "dependent_waves"], [79, 2, 1, "", "excluded_parameters"], [79, 2, 1, "", "parameters"], [79, 2, 1, "", "wave_i"], [79, 2, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX": [[80, 3, 1, "", "_get_pulse"], [80, 2, 1, "", "dependent_waves"], [80, 2, 1, "", "excluded_parameters"], [80, 2, 1, "", "parameters"], [80, 2, 1, "", "wave_i"], [80, 2, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_DRAGGaussian": [[81, 2, 1, "", "dependent_waves"], [81, 2, 1, "", "parameters"], [81, 2, 1, "", "wave_i"], [81, 2, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_DRAGGaussianSX": [[82, 2, 1, "", "dependent_waves"], [82, 2, 1, "", "parameters"], [82, 2, 1, "", "wave_i"], [82, 2, 1, "", "wave_q"]], "iqm.pulse.gates.prx.PRX_GateImplementation": [[83, 3, 1, "", "_call"], [83, 3, 1, "", "clifford"], [83, 3, 1, "", "get_locus_mapping_name"], [83, 3, 1, "", "rx"], [83, 3, 1, "", "ry"]], "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation": [[84, 3, 1, "", "_call"], [84, 5, 1, "", "iq_pulse"]], "iqm.pulse.gates.reset": [[88, 6, 1, "", "RESET_FEEDBACK_KEY"], [89, 6, 1, "", "RESET_MEASUREMENT_KEY"], [90, 1, 1, "", "Reset_Conditional"], [91, 1, 1, "", "Reset_Wait"]], "iqm.pulse.gates.reset.Reset_Conditional": [[90, 3, 1, "", "_call"], [90, 3, 1, "", "get_locus_mapping_name"], [90, 2, 1, "", "registered_gates"]], "iqm.pulse.gates.reset.Reset_Wait": [[91, 3, 1, "", "_call"], [91, 3, 1, "", "duration_in_seconds"], [91, 3, 1, "", "get_custom_locus_mapping"], [91, 2, 1, "", "parameters"], [91, 3, 1, "", "wait_box"]], "iqm.pulse.gates.rz": [[93, 1, 1, "", "RZ_ACStarkShift"], [94, 1, 1, "", "RZ_ACStarkShift_CosineRiseFall"], [95, 1, 1, "", "RZ_ACStarkShift_smoothConstant"], [96, 1, 1, "", "RZ_Virtual"], [97, 4, 1, "", "get_unitary_rz"]], "iqm.pulse.gates.rz.RZ_ACStarkShift": [[93, 3, 1, "", "_ac_stark_pulse"], [93, 3, 1, "", "_call"], [93, 3, 1, "", "duration_in_seconds"]], "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall": [[94, 2, 1, "", "ac_stark_waveform"], [94, 2, 1, "", "parameters"], [94, 2, 1, "", "symmetric"]], "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant": [[95, 2, 1, "", "fall_waveform"], [95, 2, 1, "", "main_waveform"], [95, 2, 1, "", "parameters"], [95, 2, 1, "", "rise_waveform"], [95, 2, 1, "", "symmetric"]], "iqm.pulse.gates.rz.RZ_Virtual": [[96, 3, 1, "", "_call"], [96, 3, 1, "", "duration_in_seconds"], [96, 3, 1, "", "get_locus_mapping_name"], [96, 2, 1, "", "parameters"]], "iqm.pulse.gates.sx": [[99, 1, 1, "", "SXGate"]], "iqm.pulse.gates.sx.SXGate": [[99, 3, 1, "", "_call"], [99, 2, 1, "", "registered_gates"]], "iqm.pulse.gates.u": [[101, 1, 1, "", "UGate"], [102, 4, 1, "", "get_unitary_u"]], "iqm.pulse.gates.u.UGate": [[101, 3, 1, "", "_call"], [101, 2, 1, "", "registered_gates"]], "iqm.pulse.playlist": [[104, 0, 0, "-", "channel"], [114, 0, 0, "-", "instructions"], [129, 0, 0, "-", "playlist"], [130, 0, 0, "-", "schedule"], [135, 0, 0, "-", "visualisation"], [138, 0, 0, "-", "waveforms"]], "iqm.pulse.playlist.channel": [[105, 1, 1, "", "ChannelConfiguration"], [106, 1, 1, "", "ChannelDescription"], [107, 1, 1, "", "ChannelProperties"], [108, 1, 1, "", "IQChannelConfig"], [109, 1, 1, "", "ProbeChannelProperties"], [110, 1, 1, "", "RealChannelConfig"], [111, 4, 1, "", "get_channel_properties"], [112, 4, 1, "", "get_channel_properties_from_station_settings"], [113, 4, 1, "", "round_duration_to_granularity_samples"]], "iqm.pulse.playlist.channel.ChannelDescription": [[106, 3, 1, "", "add_instruction"]], "iqm.pulse.playlist.channel.ChannelProperties": [[107, 2, 1, "", "blocks_component"], [107, 2, 1, "", "compatible_instructions"], [107, 3, 1, "", "duration_to_int_samples"], [107, 3, 1, "", "duration_to_samples"], [107, 3, 1, "", "duration_to_seconds"], [107, 2, 1, "", "instruction_duration_granularity"], [107, 2, 1, "", "instruction_duration_min"], [107, 2, 1, "", "is_iq"], [107, 2, 1, "", "is_virtual"], [107, 3, 1, "", "round_duration_to_granularity"], [107, 2, 1, "", "sample_rate"]], "iqm.pulse.playlist.channel.IQChannelConfig": [[108, 2, 1, "", "frequency"]], "iqm.pulse.playlist.channel.ProbeChannelProperties": [[109, 2, 1, "", "center_frequency"], [109, 2, 1, "", "integration_start_dead_time"], [109, 2, 1, "", "integration_stop_dead_time"]], "iqm.pulse.playlist.channel.RealChannelConfig": [[110, 2, 1, "", "sample_rate"]], "iqm.pulse.playlist.instructions": [[115, 1, 1, "", "AcquisitionMethod"], [116, 1, 1, "", "Block"], [117, 1, 1, "", "ComplexIntegration"], [118, 1, 1, "", "ConditionalInstruction"], [119, 1, 1, "", "FluxPulse"], [120, 1, 1, "", "IQPulse"], [121, 1, 1, "", "Instruction"], [122, 1, 1, "", "MultiplexedIQPulse"], [123, 1, 1, "", "ReadoutTrigger"], [124, 1, 1, "", "RealPulse"], [125, 1, 1, "", "ThresholdStateDiscrimination"], [126, 1, 1, "", "TimeTrace"], [127, 1, 1, "", "VirtualRZ"], [128, 1, 1, "", "Wait"]], "iqm.pulse.playlist.instructions.AcquisitionMethod": [[115, 2, 1, "", "delay_samples"], [115, 2, 1, "", "label"]], "iqm.pulse.playlist.instructions.ComplexIntegration": [[117, 2, 1, "", "weights"]], "iqm.pulse.playlist.instructions.ConditionalInstruction": [[118, 2, 1, "", "condition"], [118, 3, 1, "", "get_child_instructions"], [118, 2, 1, "", "outcomes"], [118, 3, 1, "", "validate"]], "iqm.pulse.playlist.instructions.FluxPulse": [[119, 2, 1, "", "rzs"]], "iqm.pulse.playlist.instructions.IQPulse": [[120, 3, 1, "", "get_waveforms"], [120, 2, 1, "", "modulation_frequency"], [120, 2, 1, "", "phase"], [120, 2, 1, "", "phase_increment"], [120, 2, 1, "", "scale_i"], [120, 2, 1, "", "scale_q"], [120, 3, 1, "", "validate"], [120, 2, 1, "", "wave_i"], [120, 2, 1, "", "wave_q"]], "iqm.pulse.playlist.instructions.Instruction": [[121, 3, 1, "", "copy"], [121, 2, 1, "", "duration"], [121, 3, 1, "", "get_child_instructions"], [121, 3, 1, "", "get_waveforms"], [121, 3, 1, "", "validate"]], "iqm.pulse.playlist.instructions.MultiplexedIQPulse": [[122, 2, 1, "", "entries"]], "iqm.pulse.playlist.instructions.ReadoutTrigger": [[123, 2, 1, "", "acquisitions"], [123, 2, 1, "", "probe_pulse"]], "iqm.pulse.playlist.instructions.RealPulse": [[124, 3, 1, "", "get_waveforms"], [124, 2, 1, "", "scale"], [124, 3, 1, "", "validate"], [124, 2, 1, "", "wave"]], "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination": [[125, 2, 1, "", "feedback_signal_label"], [125, 2, 1, "", "threshold"]], "iqm.pulse.playlist.instructions.TimeTrace": [[126, 2, 1, "", "duration_samples"]], "iqm.pulse.playlist.instructions.VirtualRZ": [[127, 2, 1, "", "phase_increment"]], "iqm.pulse.playlist.schedule": [[131, 1, 1, "", "Nothing"], [132, 1, 1, "", "Schedule"], [133, 1, 1, "", "Segment"], [134, 6, 1, "", "TOLERANCE"]], "iqm.pulse.playlist.schedule.Schedule": [[132, 3, 1, "", "add_channels"], [132, 3, 1, "", "append"], [132, 3, 1, "", "channels"], [132, 3, 1, "", "cleanup"], [132, 3, 1, "", "copy"], [132, 5, 1, "", "duration"], [132, 3, 1, "", "duration_in_seconds"], [132, 3, 1, "", "extend"], [132, 3, 1, "", "front_pad"], [132, 3, 1, "", "front_pad_in_seconds"], [132, 3, 1, "", "has_content_in"], [132, 3, 1, "", "items"], [132, 3, 1, "", "pad_to_hard_box"], [132, 3, 1, "", "pad_to_hard_box_in_seconds"], [132, 3, 1, "", "pprint"], [132, 3, 1, "", "reverse"], [132, 3, 1, "", "reverse_hard_box"], [132, 3, 1, "", "validate"]], "iqm.pulse.playlist.schedule.Segment": [[133, 2, 1, "", "_duration"], [133, 2, 1, "", "_instructions"], [133, 3, 1, "", "append"], [133, 3, 1, "", "copy"], [133, 5, 1, "", "duration"], [133, 3, 1, "", "extend"], [133, 3, 1, "", "pop"], [133, 3, 1, "", "prepend"]], "iqm.pulse.playlist.visualisation": [[136, 0, 0, "-", "base"]], "iqm.pulse.playlist.visualisation.base": [[137, 4, 1, "", "inspect_playlist"]], "iqm.pulse.playlist.waveforms": [[139, 1, 1, "", "Chirp"], [140, 1, 1, "", "ChirpImag"], [141, 1, 1, "", "Cosine"], [142, 1, 1, "", "CosineFall"], [143, 1, 1, "", "CosineRise"], [144, 1, 1, "", "CosineRiseFallDerivative"], [145, 1, 1, "", "ModulatedCosineRiseFall"], [146, 1, 1, "", "Slepian"]], "iqm.pulse.playlist.waveforms.Chirp": [[139, 3, 1, "", "_sample"], [139, 3, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.waveforms.ChirpImag": [[140, 2, 1, "", "phase"]], "iqm.pulse.playlist.waveforms.Cosine": [[141, 3, 1, "", "_sample"], [141, 3, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.waveforms.CosineFall": [[142, 3, 1, "", "_sample"]], "iqm.pulse.playlist.waveforms.CosineRise": [[143, 3, 1, "", "_sample"]], "iqm.pulse.playlist.waveforms.CosineRiseFallDerivative": [[144, 3, 1, "", "_sample"]], "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall": [[145, 3, 1, "", "_sample"], [145, 3, 1, "", "non_timelike_attributes"]], "iqm.pulse.playlist.waveforms.Slepian": [[146, 3, 1, "", "_sample"], [146, 3, 1, "", "_sample_normalized_slepian"], [146, 3, 1, "", "_t_tau"], [146, 3, 1, "", "_theta_tau"], [146, 3, 1, "", "non_timelike_attributes"]], "iqm.pulse.quantum_ops": [[148, 1, 1, "", "QuantumOp"], [149, 6, 1, "", "QuantumOpTable"], [150, 4, 1, "", "validate_locus_calibration"], [151, 4, 1, "", "validate_op_calibration"]], "iqm.pulse.quantum_ops.QuantumOp": [[148, 2, 1, "", "arity"], [148, 3, 1, "", "copy"], [148, 5, 1, "", "default_implementation"], [148, 2, 1, "", "defaults_for_locus"], [148, 2, 1, "", "factorizable"], [148, 3, 1, "", "get_default_implementation_for_locus"], [148, 2, 1, "", "implementations"], [148, 2, 1, "", "name"], [148, 2, 1, "", "params"], [148, 3, 1, "", "set_default_implementation"], [148, 3, 1, "", "set_default_implementation_for_locus"], [148, 2, 1, "", "symmetric"], [148, 2, 1, "", "unitary"]], "iqm.pulse.scheduler": [[153, 6, 1, "", "BLOCKING"], [154, 6, 1, "", "NONSOLID"], [155, 1, 1, "", "SegmentPointer"], [156, 4, 1, "", "extend_hard_boundary"], [157, 4, 1, "", "extend_hard_boundary_in_seconds"], [158, 4, 1, "", "extend_schedule"], [159, 4, 1, "", "extend_schedule_new"]], "iqm.pulse.scheduler.SegmentPointer": [[155, 2, 1, "", "TOL"], [155, 3, 1, "", "cut_tail"], [155, 3, 1, "", "fastforward"], [155, 2, 1, "", "frac"], [155, 3, 1, "", "get"], [155, 2, 1, "", "idx"], [155, 3, 1, "", "next"], [155, 5, 1, "", "remainder"], [155, 3, 1, "", "rewind"], [155, 2, 1, "", "source"], [155, 3, 1, "", "tail"]], "iqm.pulse.timebox": [[161, 1, 1, "", "MultiplexedProbeTimeBox"], [162, 1, 1, "", "SchedulingAlgorithm"], [163, 1, 1, "", "SchedulingStrategy"], [164, 1, 1, "", "TimeBox"]], "iqm.pulse.timebox.MultiplexedProbeTimeBox": [[161, 3, 1, "", "from_readout_trigger"]], "iqm.pulse.timebox.SchedulingAlgorithm": [[162, 2, 1, "", "HARD_BOUNDARY"], [162, 2, 1, "", "TETRIS"]], "iqm.pulse.timebox.SchedulingStrategy": [[163, 2, 1, "", "ALAP"], [163, 2, 1, "", "ASAP"]], "iqm.pulse.timebox.TimeBox": [[164, 2, 1, "", "atom"], [164, 3, 1, "", "atomic"], [164, 2, 1, "", "children"], [164, 3, 1, "", "composite"], [164, 2, 1, "", "label"], [164, 2, 1, "", "locus_components"], [164, 2, 1, "", "neighborhood_components"], [164, 3, 1, "", "print"], [164, 2, 1, "", "scheduling"], [164, 2, 1, "", "scheduling_algorithm"], [164, 3, 1, "", "set_alap"], [164, 3, 1, "", "set_asap"], [164, 3, 1, "", "validate"]], "iqm.pulse.utils": [[166, 4, 1, "", "load_yaml"], [167, 4, 1, "", "map_waveform_param_types"], [168, 4, 1, "", "merge_dicts"], [169, 4, 1, "", "normalize_angle"], [170, 4, 1, "", "phase_transformation"]], "iqm.pulse.validation": [[172, 1, 1, "", "AWGScheduleValidationData"], [173, 7, 1, "", "AWGScheduleValidationError"], [174, 7, 1, "", "InvalidInstructionError"], [175, 7, 1, "", "PlaylistValidationError"], [176, 4, 1, "", "validate_awg_and_schedule_compatibility"], [177, 4, 1, "", "validate_channel"], [178, 4, 1, "", "validate_instruction_and_wf_length"], [179, 4, 1, "", "validate_playlist_compatibility"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:property", "6": "py:data", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"api": 0, "refer": [0, 181, 186], "puls": [1, 5, 6, 7, 10, 11, 12, 13, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 51, 54, 56, 58, 61, 62, 72, 73, 85, 86, 88, 89, 97, 102, 111, 112, 113, 134, 137, 149, 150, 151, 153, 154, 156, 157, 158, 159, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 183, 185], "builder": [2, 5, 6, 7], "circuitoper": 3, "schedulebuild": [4, 187], "iqm": [5, 6, 7, 10, 11, 12, 13, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 51, 54, 56, 58, 61, 62, 72, 73, 85, 86, 88, 89, 97, 102, 111, 112, 113, 134, 137, 149, 150, 151, 153, 154, 156, 157, 158, 159, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 183], "build_quantum_op": 5, "load_config": 6, "validate_quantum_circuit": 7, "circuit_oper": [8, 10, 11, 12, 13], "circuitoperationlist": 9, "get_unitary_from_circuit": 10, "get_unitary_from_op": 11, "reorder": 12, "reshape_unitari": 13, "gate_implement": [14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30], "compositecach": 15, "compositeg": 16, "customiqwaveform": 17, "gateimplement": [18, 181, 182], "locu": 19, "nestedparam": 20, "ocalibrationdata": 21, "oicalibrationdata": 22, "oilcalibrationdata": 23, "opcalibrationdatatre": 24, "probe_lines_locus_map": 25, "single_components_with_drive_locus_map": 26, "single_components_with_flux_awg_locus_map": 27, "single_components_with_readout_locus_map": 28, "singlepulseg": 29, "get_waveform_paramet": 30, "gate": [31, 51, 54, 56, 58, 61, 62, 72, 73, 85, 86, 88, 89, 97, 102, 182], "barrier": [32, 33], "condit": 34, "ccprx_composit": 35, "ccprx_composite_dragcosinerisefal": 36, "ccprx_composite_draggaussian": 37, "cz": 38, "cz_crf": 39, "cz_crf_acstarkcrf": 40, "cz_gaussiansmoothedsquar": 41, "cz_slepian": 42, "cz_slepian_acstarkcrf": 43, "cz_slepian_crf": 44, "cz_truncatedgaussiansmoothedsquar": 45, "couplerfluxpulsequbitacstarkpulseg": 46, "fluxpulseg": 47, "fluxpulsegate_crf_crf": 48, "fluxpulsegate_tgss_crf": 49, "delai": [50, 51, 52], "delay_max_duration_second": 51, "enum": [53, 54, 56], "two_qubit_unitari": 54, "twoqubitg": 55, "xygate_unitari": 56, "xygat": 57, "expose_implement": 58, "flux_multiplex": [59, 61], "fluxmultiplexer_samplelinear": 60, "toler": [61, 134], "get_implementation_class": 62, "measur": [63, 185], "measure_const": 64, "measure_customwaveform": 65, "probepulse_customwaveform": 66, "move": [67, 72, 73], "move_crf_crf": 68, "move_customwaveform": 69, "move_tgss_crf": 70, "movemark": 71, "apply_move_gate_phase_correct": 72, "validate_move_instruct": 73, "prx": [74, 85], "abc_constant_smooth": 75, "constant_prx_with_smooth_rise_fal": 76, "prx_customwaveform": 77, "prx_customwaveformssx": 78, "prx_dragcosinerisefal": 79, "prx_dragcosinerisefallsx": 80, "prx_draggaussian": 81, "prx_draggaussiansx": 82, "prx_gateimplement": 83, "prx_singlepulse_gateimplement": 84, "get_unitary_prx": 85, "register_implement": 86, "reset": [87, 88, 89], "reset_feedback_kei": 88, "reset_measurement_kei": 89, "reset_condit": 90, "reset_wait": 91, "rz": [92, 97], "rz_acstarkshift": 93, "rz_acstarkshift_cosinerisefal": 94, "rz_acstarkshift_smoothconst": 95, "rz_virtual": 96, "get_unitary_rz": 97, "sx": 98, "sxgate": 99, "u": [100, 102], "ugat": 101, "get_unitary_u": 102, "playlist": [103, 111, 112, 113, 129, 134, 137, 181], "channel": [104, 111, 112, 113], "channelconfigur": 105, "channeldescript": 106, "channelproperti": 107, "iqchannelconfig": 108, "probechannelproperti": 109, "realchannelconfig": 110, "get_channel_properti": 111, "get_channel_properties_from_station_set": 112, "round_duration_to_granularity_sampl": 113, "instruct": [114, 121, 181, 182], "acquisitionmethod": 115, "block": [116, 153], "complexintegr": 117, "conditionalinstruct": 118, "fluxpuls": 119, "iqpuls": 120, "multiplexediqpuls": 122, "readouttrigg": [123, 185], "realpuls": 124, "thresholdstatediscrimin": 125, "timetrac": 126, "virtualrz": 127, "wait": 128, "schedul": [130, 132, 134, 152, 153, 154, 156, 157, 158, 159, 181, 187], "noth": 131, "segment": 133, "visualis": [135, 137], "base": [136, 137, 182], "inspect_playlist": 137, "waveform": [138, 182], "chirp": 139, "chirpimag": 140, "cosin": 141, "cosinefal": 142, "cosineris": 143, "cosinerisefallderiv": 144, "modulatedcosinerisefal": 145, "slepian": 146, "quantum_op": [147, 149, 150, 151], "quantumop": [148, 181, 182], "quantumopt": 149, "validate_locus_calibr": 150, "validate_op_calibr": 151, "nonsolid": 154, "segmentpoint": 155, "extend_hard_boundari": 156, "extend_hard_boundary_in_second": 157, "extend_schedul": 158, "extend_schedule_new": 159, "timebox": [160, 164, 181, 187], "multiplexedprobetimebox": 161, "schedulingalgorithm": 162, "schedulingstrategi": 163, "util": [165, 166, 167, 168, 169, 170], "load_yaml": 166, "map_waveform_param_typ": 167, "merge_dict": 168, "normalize_angl": 169, "phase_transform": 170, "valid": [171, 173, 174, 175, 176, 177, 178, 179], "awgschedulevalidationdata": 172, "awgschedulevalidationerror": 173, "invalidinstructionerror": 174, "playlistvalidationerror": 175, "validate_awg_and_schedule_compat": 176, "validate_channel": 177, "validate_instruction_and_wf_length": 178, "validate_playlist_compat": 179, "changelog": 180, "version": 180, "8": 180, "2025": 180, "03": 180, "28": 180, "featur": [180, 187], "7": 180, "27": 180, "6": 180, "26": 180, "5": 180, "bug": 180, "fix": 180, "4": 180, "21": 180, "3": 180, "19": 180, "2": 180, "13": 180, "1": 180, "02": 180, "0": 180, "24": 180, "20": 180, "23": 180, "22": 180, "10": 180, "07": 180, "04": 180, "18": 180, "17": 180, "16": 180, "15": 180, "01": 180, "14": 180, "12": 180, "11": 180, "9": 180, "08": 180, "2024": 180, "30": 180, "09": 180, "05": 180, "29": 180, "break": 180, "chang": 180, "31": 180, "25": 180, "06": 180, "concept": 181, "class": [181, 182], "quick": 181, "custom": 182, "implement": 182, "calibr": 182, "data": 182, "more": 182, "regist": 182, "content": 183, "indic": 183, "tabl": 183, "licens": 184, "time": 185, "fast": 185, "feedback": 185, "us": 187, "creat": 187, "compos": 187, "resolv": 187, "miscellan": 187, "common": 187, "pitfal": 187}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinxcontrib.bibtex": 9, "sphinx": 60}, "alltitles": {"API Reference": [[0, "api-reference"]], "pulse": [[1, "module-iqm.pulse"]], "builder": [[2, "module-iqm.pulse.builder"]], "CircuitOperation": [[3, "circuitoperation"]], "ScheduleBuilder": [[4, "schedulebuilder"]], "iqm.pulse.builder.build_quantum_ops": [[5, "iqm-pulse-builder-build-quantum-ops"]], "iqm.pulse.builder.load_config": [[6, "iqm-pulse-builder-load-config"]], "iqm.pulse.builder.validate_quantum_circuit": [[7, "iqm-pulse-builder-validate-quantum-circuit"]], "circuit_operations": [[8, "module-iqm.pulse.circuit_operations"]], "CircuitOperationList": [[9, "circuitoperationlist"]], "iqm.pulse.circuit_operations.get_unitary_from_circuit": [[10, "iqm-pulse-circuit-operations-get-unitary-from-circuit"]], "iqm.pulse.circuit_operations.get_unitary_from_op": [[11, "iqm-pulse-circuit-operations-get-unitary-from-op"]], "iqm.pulse.circuit_operations.reorder": [[12, "iqm-pulse-circuit-operations-reorder"]], "iqm.pulse.circuit_operations.reshape_unitary": [[13, "iqm-pulse-circuit-operations-reshape-unitary"]], "gate_implementation": [[14, "module-iqm.pulse.gate_implementation"]], "CompositeCache": [[15, "compositecache"]], "CompositeGate": [[16, "compositegate"]], "CustomIQWaveforms": [[17, "customiqwaveforms"]], "GateImplementation": [[18, "gateimplementation"]], "iqm.pulse.gate_implementation.Locus": [[19, "iqm-pulse-gate-implementation-locus"]], "iqm.pulse.gate_implementation.NestedParams": [[20, "iqm-pulse-gate-implementation-nestedparams"]], "iqm.pulse.gate_implementation.OCalibrationData": [[21, "iqm-pulse-gate-implementation-ocalibrationdata"]], "iqm.pulse.gate_implementation.OICalibrationData": [[22, "iqm-pulse-gate-implementation-oicalibrationdata"]], "iqm.pulse.gate_implementation.OILCalibrationData": [[23, "iqm-pulse-gate-implementation-oilcalibrationdata"]], "iqm.pulse.gate_implementation.OpCalibrationDataTree": [[24, "iqm-pulse-gate-implementation-opcalibrationdatatree"]], "iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING": [[25, "iqm-pulse-gate-implementation-probe-lines-locus-mapping"]], "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING": [[26, "iqm-pulse-gate-implementation-single-components-with-drive-locus-mapping"]], "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING": [[27, "iqm-pulse-gate-implementation-single-components-with-flux-awg-locus-mapping"]], "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING": [[28, "iqm-pulse-gate-implementation-single-components-with-readout-locus-mapping"]], "SinglePulseGate": [[29, "singlepulsegate"]], "iqm.pulse.gate_implementation.get_waveform_parameters": [[30, "iqm-pulse-gate-implementation-get-waveform-parameters"]], "gates": [[31, "module-iqm.pulse.gates"]], "barrier": [[32, "module-iqm.pulse.gates.barrier"]], "Barrier": [[33, "barrier"]], "conditional": [[34, "module-iqm.pulse.gates.conditional"]], "CCPRX_Composite": [[35, "ccprx-composite"]], "CCPRX_Composite_DRAGCosineRiseFall": [[36, "ccprx-composite-dragcosinerisefall"]], "CCPRX_Composite_DRAGGaussian": [[37, "ccprx-composite-draggaussian"]], "cz": [[38, "module-iqm.pulse.gates.cz"]], "CZ_CRF": [[39, "cz-crf"]], "CZ_CRF_ACStarkCRF": [[40, "cz-crf-acstarkcrf"]], "CZ_GaussianSmoothedSquare": [[41, "cz-gaussiansmoothedsquare"]], "CZ_Slepian": [[42, "cz-slepian"]], "CZ_Slepian_ACStarkCRF": [[43, "cz-slepian-acstarkcrf"]], "CZ_Slepian_CRF": [[44, "cz-slepian-crf"]], "CZ_TruncatedGaussianSmoothedSquare": [[45, "cz-truncatedgaussiansmoothedsquare"]], "CouplerFluxPulseQubitACStarkPulseGate": [[46, "couplerfluxpulsequbitacstarkpulsegate"]], "FluxPulseGate": [[47, "fluxpulsegate"]], "FluxPulseGate_CRF_CRF": [[48, "fluxpulsegate-crf-crf"]], "FluxPulseGate_TGSS_CRF": [[49, "fluxpulsegate-tgss-crf"]], "delay": [[50, "module-iqm.pulse.gates.delay"]], "iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS": [[51, "iqm-pulse-gates-delay-delay-max-duration-seconds"]], "Delay": [[52, "delay"]], "enums": [[53, "module-iqm.pulse.gates.enums"]], "iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES": [[54, "iqm-pulse-gates-enums-two-qubit-unitaries"]], "TwoQubitGate": [[55, "twoqubitgate"]], "iqm.pulse.gates.enums.XYGATE_UNITARIES": [[56, "iqm-pulse-gates-enums-xygate-unitaries"]], "XYGate": [[57, "xygate"]], "iqm.pulse.gates.expose_implementation": [[58, "iqm-pulse-gates-expose-implementation"]], "flux_multiplexer": [[59, "module-iqm.pulse.gates.flux_multiplexer"]], "FluxMultiplexer_SampleLinear": [[60, "fluxmultiplexer-samplelinear"]], "iqm.pulse.gates.flux_multiplexer.TOLERANCE": [[61, "iqm-pulse-gates-flux-multiplexer-tolerance"]], "iqm.pulse.gates.get_implementation_class": [[62, "iqm-pulse-gates-get-implementation-class"]], "measure": [[63, "module-iqm.pulse.gates.measure"]], "Measure_Constant": [[64, "measure-constant"]], "Measure_CustomWaveforms": [[65, "measure-customwaveforms"]], "ProbePulse_CustomWaveforms": [[66, "probepulse-customwaveforms"]], "move": [[67, "module-iqm.pulse.gates.move"]], "MOVE_CRF_CRF": [[68, "move-crf-crf"]], "MOVE_CustomWaveforms": [[69, "move-customwaveforms"]], "MOVE_TGSS_CRF": [[70, "move-tgss-crf"]], "MoveMarker": [[71, "movemarker"]], "iqm.pulse.gates.move.apply_move_gate_phase_corrections": [[72, "iqm-pulse-gates-move-apply-move-gate-phase-corrections"]], "iqm.pulse.gates.move.validate_move_instructions": [[73, "iqm-pulse-gates-move-validate-move-instructions"]], "prx": [[74, "module-iqm.pulse.gates.prx"]], "ABC_Constant_smooth": [[75, "abc-constant-smooth"]], "Constant_PRX_with_smooth_rise_fall": [[76, "constant-prx-with-smooth-rise-fall"]], "PRX_CustomWaveforms": [[77, "prx-customwaveforms"]], "PRX_CustomWaveformsSX": [[78, "prx-customwaveformssx"]], "PRX_DRAGCosineRiseFall": [[79, "prx-dragcosinerisefall"]], "PRX_DRAGCosineRiseFallSX": [[80, "prx-dragcosinerisefallsx"]], "PRX_DRAGGaussian": [[81, "prx-draggaussian"]], "PRX_DRAGGaussianSX": [[82, "prx-draggaussiansx"]], "PRX_GateImplementation": [[83, "prx-gateimplementation"]], "PRX_SinglePulse_GateImplementation": [[84, "prx-singlepulse-gateimplementation"]], "iqm.pulse.gates.prx.get_unitary_prx": [[85, "iqm-pulse-gates-prx-get-unitary-prx"]], "iqm.pulse.gates.register_implementation": [[86, "iqm-pulse-gates-register-implementation"]], "reset": [[87, "module-iqm.pulse.gates.reset"]], "iqm.pulse.gates.reset.RESET_FEEDBACK_KEY": [[88, "iqm-pulse-gates-reset-reset-feedback-key"]], "iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY": [[89, "iqm-pulse-gates-reset-reset-measurement-key"]], "Reset_Conditional": [[90, "reset-conditional"]], "Reset_Wait": [[91, "reset-wait"]], "rz": [[92, "module-iqm.pulse.gates.rz"]], "RZ_ACStarkShift": [[93, "rz-acstarkshift"]], "RZ_ACStarkShift_CosineRiseFall": [[94, "rz-acstarkshift-cosinerisefall"]], "RZ_ACStarkShift_smoothConstant": [[95, "rz-acstarkshift-smoothconstant"]], "RZ_Virtual": [[96, "rz-virtual"]], "iqm.pulse.gates.rz.get_unitary_rz": [[97, "iqm-pulse-gates-rz-get-unitary-rz"]], "sx": [[98, "module-iqm.pulse.gates.sx"]], "SXGate": [[99, "sxgate"]], "u": [[100, "module-iqm.pulse.gates.u"]], "UGate": [[101, "ugate"]], "iqm.pulse.gates.u.get_unitary_u": [[102, "iqm-pulse-gates-u-get-unitary-u"]], "playlist": [[103, "module-iqm.pulse.playlist"], [129, "module-iqm.pulse.playlist.playlist"]], "channel": [[104, "module-iqm.pulse.playlist.channel"]], "ChannelConfiguration": [[105, "channelconfiguration"]], "ChannelDescription": [[106, "channeldescription"]], "ChannelProperties": [[107, "channelproperties"]], "IQChannelConfig": [[108, "iqchannelconfig"]], "ProbeChannelProperties": [[109, "probechannelproperties"]], "RealChannelConfig": [[110, "realchannelconfig"]], "iqm.pulse.playlist.channel.get_channel_properties": [[111, "iqm-pulse-playlist-channel-get-channel-properties"]], "iqm.pulse.playlist.channel.get_channel_properties_from_station_settings": [[112, "iqm-pulse-playlist-channel-get-channel-properties-from-station-settings"]], "iqm.pulse.playlist.channel.round_duration_to_granularity_samples": [[113, "iqm-pulse-playlist-channel-round-duration-to-granularity-samples"]], "instructions": [[114, "module-iqm.pulse.playlist.instructions"]], "AcquisitionMethod": [[115, "acquisitionmethod"]], "Block": [[116, "block"]], "ComplexIntegration": [[117, "complexintegration"]], "ConditionalInstruction": [[118, "conditionalinstruction"]], "FluxPulse": [[119, "fluxpulse"]], "IQPulse": [[120, "iqpulse"]], "Instruction": [[121, "instruction"]], "MultiplexedIQPulse": [[122, "multiplexediqpulse"]], "ReadoutTrigger": [[123, "readouttrigger"]], "RealPulse": [[124, "realpulse"]], "ThresholdStateDiscrimination": [[125, "thresholdstatediscrimination"]], "TimeTrace": [[126, "timetrace"]], "VirtualRZ": [[127, "virtualrz"]], "Wait": [[128, "wait"]], "schedule": [[130, "module-iqm.pulse.playlist.schedule"]], "Nothing": [[131, "nothing"]], "Schedule": [[132, "schedule"]], "Segment": [[133, "segment"]], "iqm.pulse.playlist.schedule.TOLERANCE": [[134, "iqm-pulse-playlist-schedule-tolerance"]], "visualisation": [[135, "module-iqm.pulse.playlist.visualisation"]], "base": [[136, "module-iqm.pulse.playlist.visualisation.base"]], "iqm.pulse.playlist.visualisation.base.inspect_playlist": [[137, "iqm-pulse-playlist-visualisation-base-inspect-playlist"]], "waveforms": [[138, "module-iqm.pulse.playlist.waveforms"]], "Chirp": [[139, "chirp"]], "ChirpImag": [[140, "chirpimag"]], "Cosine": [[141, "cosine"]], "CosineFall": [[142, "cosinefall"]], "CosineRise": [[143, "cosinerise"]], "CosineRiseFallDerivative": [[144, "cosinerisefallderivative"]], "ModulatedCosineRiseFall": [[145, "modulatedcosinerisefall"]], "Slepian": [[146, "slepian"]], "quantum_ops": [[147, "module-iqm.pulse.quantum_ops"]], "QuantumOp": [[148, "quantumop"], [182, "quantumop"]], "iqm.pulse.quantum_ops.QuantumOpTable": [[149, "iqm-pulse-quantum-ops-quantumoptable"]], "iqm.pulse.quantum_ops.validate_locus_calibration": [[150, "iqm-pulse-quantum-ops-validate-locus-calibration"]], "iqm.pulse.quantum_ops.validate_op_calibration": [[151, "iqm-pulse-quantum-ops-validate-op-calibration"]], "scheduler": [[152, "module-iqm.pulse.scheduler"]], "iqm.pulse.scheduler.BLOCKING": [[153, "iqm-pulse-scheduler-blocking"]], "iqm.pulse.scheduler.NONSOLID": [[154, "iqm-pulse-scheduler-nonsolid"]], "SegmentPointer": [[155, "segmentpointer"]], "iqm.pulse.scheduler.extend_hard_boundary": [[156, "iqm-pulse-scheduler-extend-hard-boundary"]], "iqm.pulse.scheduler.extend_hard_boundary_in_seconds": [[157, "iqm-pulse-scheduler-extend-hard-boundary-in-seconds"]], "iqm.pulse.scheduler.extend_schedule": [[158, "iqm-pulse-scheduler-extend-schedule"]], "iqm.pulse.scheduler.extend_schedule_new": [[159, "iqm-pulse-scheduler-extend-schedule-new"]], "timebox": [[160, "module-iqm.pulse.timebox"]], "MultiplexedProbeTimeBox": [[161, "multiplexedprobetimebox"]], "SchedulingAlgorithm": [[162, "schedulingalgorithm"]], "SchedulingStrategy": [[163, "schedulingstrategy"]], "TimeBox": [[164, "timebox"]], "utils": [[165, "module-iqm.pulse.utils"]], "iqm.pulse.utils.load_yaml": [[166, "iqm-pulse-utils-load-yaml"]], "iqm.pulse.utils.map_waveform_param_types": [[167, "iqm-pulse-utils-map-waveform-param-types"]], "iqm.pulse.utils.merge_dicts": [[168, "iqm-pulse-utils-merge-dicts"]], "iqm.pulse.utils.normalize_angle": [[169, "iqm-pulse-utils-normalize-angle"]], "iqm.pulse.utils.phase_transformation": [[170, "iqm-pulse-utils-phase-transformation"]], "validation": [[171, "module-iqm.pulse.validation"]], "AWGScheduleValidationData": [[172, "awgschedulevalidationdata"]], "iqm.pulse.validation.AWGScheduleValidationError": [[173, "iqm-pulse-validation-awgschedulevalidationerror"]], "iqm.pulse.validation.InvalidInstructionError": [[174, "iqm-pulse-validation-invalidinstructionerror"]], "iqm.pulse.validation.PlaylistValidationError": [[175, "iqm-pulse-validation-playlistvalidationerror"]], "iqm.pulse.validation.validate_awg_and_schedule_compatibility": [[176, "iqm-pulse-validation-validate-awg-and-schedule-compatibility"]], "iqm.pulse.validation.validate_channel": [[177, "iqm-pulse-validation-validate-channel"]], "iqm.pulse.validation.validate_instruction_and_wf_length": [[178, "iqm-pulse-validation-validate-instruction-and-wf-length"]], "iqm.pulse.validation.validate_playlist_compatibility": [[179, "iqm-pulse-validation-validate-playlist-compatibility"]], "Changelog": [[180, "changelog"]], "Version 8.8 (2025-03-28)": [[180, "version-8-8-2025-03-28"]], "Features": [[180, "features"], [180, "id1"], [180, "id2"], [180, "id7"], [180, "id9"], [180, "id11"], [180, "id12"], [180, "id15"], [180, "id16"], [180, "id19"], [180, "id21"], [180, "id24"], [180, "id25"], [180, "id28"], [180, "id29"], [180, "id32"], [180, "id35"], [180, "id38"], [180, "id41"], [180, "id44"], [180, "id47"], [180, "id49"], [180, "id52"], [180, "id55"], [180, "id58"], [180, "id60"], [180, "id61"], [180, "id66"], [180, "id71"], [180, "id76"], [180, "id78"], [180, "id79"], [180, "id81"], [180, "id84"], [180, "id87"], [180, "id89"], [180, "id92"], [180, "id93"], [180, "id94"], [180, "id95"], [180, "id98"], [180, "id99"], [180, "id101"], [180, "id104"], [180, "id105"], [180, "id106"], [180, "id107"], [180, "id108"], [180, "id109"], [180, "id110"], [180, "id111"], [180, "id114"], [180, "id116"], [180, "id119"], [180, "id121"], [180, "id122"], [180, "id125"]], "Version 8.7 (2025-03-27)": [[180, "version-8-7-2025-03-27"]], "Version 8.6 (2025-03-26)": [[180, "version-8-6-2025-03-26"]], "Version 8.5 (2025-03-26)": [[180, "version-8-5-2025-03-26"]], "Bug fix": [[180, "bug-fix"], [180, "id8"], [180, "id27"], [180, "id48"]], "Version 8.4 (2025-03-21)": [[180, "version-8-4-2025-03-21"]], "Version 8.3 (2025-03-19)": [[180, "version-8-3-2025-03-19"]], "Bug fixes": [[180, "bug-fixes"], [180, "id10"], [180, "id26"], [180, "id59"], [180, "id64"], [180, "id65"], [180, "id74"], [180, "id75"], [180, "id80"], [180, "id82"], [180, "id83"], [180, "id85"], [180, "id115"]], "Version 8.2 (2025-03-13)": [[180, "version-8-2-2025-03-13"]], "Version 8.1 (2025-02-28)": [[180, "version-8-1-2025-02-28"]], "Version 8.0 (2025-02-27)": [[180, "version-8-0-2025-02-27"]], "Version 7.24 (2025-02-20)": [[180, "version-7-24-2025-02-20"]], "Version 7.23 (2025-02-19)": [[180, "version-7-23-2025-02-19"]], "Version 7.22 (2025-02-10)": [[180, "version-7-22-2025-02-10"]], "Version 7.21 (2025-02-07)": [[180, "version-7-21-2025-02-07"]], "Version 7.20 (2025-02-04)": [[180, "version-7-20-2025-02-04"]], "Version 7.19 (2025-02-04)": [[180, "version-7-19-2025-02-04"]], "Bug Fixes": [[180, "id20"]], "Version 7.18 (2025-02-04)": [[180, "version-7-18-2025-02-04"]], "Version 7.17 (2025-02-03)": [[180, "version-7-17-2025-02-03"]], "Version 7.16 (2025-02-03)": [[180, "version-7-16-2025-02-03"]], "Version 7.15 (2025-01-28)": [[180, "version-7-15-2025-01-28"]], "Version 7.14 (2025-01-28)": [[180, "version-7-14-2025-01-28"]], "Version 7.13 (2025-01-28)": [[180, "version-7-13-2025-01-28"]], "Version 7.12 (2025-01-27)": [[180, "version-7-12-2025-01-27"]], "Version 7.11 (2025-01-24)": [[180, "version-7-11-2025-01-24"]], "Version 7.10 (2025-01-17)": [[180, "version-7-10-2025-01-17"]], "Version 7.9 (2025-01-08)": [[180, "version-7-9-2025-01-08"]], "Version 7.8 (2025-01-02)": [[180, "version-7-8-2025-01-02"]], "Version 7.7 (2024-12-30)": [[180, "version-7-7-2024-12-30"]], "Version 7.6 (2024-12-30)": [[180, "version-7-6-2024-12-30"]], "Version 7.5 (2024-12-12)": [[180, "version-7-5-2024-12-12"]], "Version 7.4 (2024-12-10)": [[180, "version-7-4-2024-12-10"]], "Version 7.3 (2024-12-09)": [[180, "version-7-3-2024-12-09"]], "Version 7.2 (2024-12-05)": [[180, "version-7-2-2024-12-05"]], "Version 7.1 (2024-12-04)": [[180, "version-7-1-2024-12-04"]], "Version 7.0 (2024-11-29)": [[180, "version-7-0-2024-11-29"]], "Breaking changes": [[180, "breaking-changes"], [180, "id77"], [180, "id86"], [180, "id88"], [180, "id100"], [180, "id120"]], "Version 6.14 (2024-11-27)": [[180, "version-6-14-2024-11-27"]], "Version 6.13 (2024-11-20)": [[180, "version-6-13-2024-11-20"]], "Version 6.12 (2024-11-19)": [[180, "version-6-12-2024-11-19"]], "Version 6.11 (2024-11-18)": [[180, "version-6-11-2024-11-18"]], "Version 6.10 (2024-11-15)": [[180, "version-6-10-2024-11-15"]], "Version 6.9 (2024-11-13)": [[180, "version-6-9-2024-11-13"]], "Version 6.8 (2024-11-12)": [[180, "version-6-8-2024-11-12"]], "Version 6.7 (2024-11-12)": [[180, "version-6-7-2024-11-12"]], "Version 6.6 (2024-11-08)": [[180, "version-6-6-2024-11-08"]], "Version 6.5 (2024-10-31)": [[180, "version-6-5-2024-10-31"]], "Version 6.4 (2024-10-30)": [[180, "version-6-4-2024-10-30"]], "Version 6.3 (2024-10-30)": [[180, "version-6-3-2024-10-30"]], "Version 6.2 (2024-10-28)": [[180, "version-6-2-2024-10-28"]], "Version 6.1 (2024-10-28)": [[180, "version-6-1-2024-10-28"]], "Version 6.0 (2024-10-25)": [[180, "version-6-0-2024-10-25"]], "Version 5.9 (2024-10-24)": [[180, "version-5-9-2024-10-24"]], "Version 5.8 (2024-10-21)": [[180, "version-5-8-2024-10-21"]], "Version 5.7 (2024-10-16)": [[180, "version-5-7-2024-10-16"]], "Version 5.6 (2024-10-16)": [[180, "version-5-6-2024-10-16"]], "Version 5.5 (2024-10-15)": [[180, "version-5-5-2024-10-15"]], "Version 5.4 (2024-10-15)": [[180, "version-5-4-2024-10-15"]], "Version 5.3 (2024-10-11)": [[180, "version-5-3-2024-10-11"]], "Version 5.2 (2024-10-11)": [[180, "version-5-2-2024-10-11"]], "Version 5.1 (2024-10-11)": [[180, "version-5-1-2024-10-11"]], "Version 5.0 (2024-10-08)": [[180, "version-5-0-2024-10-08"]], "Version 4.0 (2024-10-02)": [[180, "version-4-0-2024-10-02"]], "Version 3.5 (2024-09-25)": [[180, "version-3-5-2024-09-25"]], "Version 3.4 (2024-09-23)": [[180, "version-3-4-2024-09-23"]], "Version 3.3 (2024-09-19)": [[180, "version-3-3-2024-09-19"]], "Version 3.2 (2024-09-11)": [[180, "version-3-2-2024-09-11"]], "Version 3.1 (2024-09-11)": [[180, "version-3-1-2024-09-11"]], "Version 3.0 (2024-09-06)": [[180, "version-3-0-2024-09-06"]], "Version 2.13 (2024-09-04)": [[180, "version-2-13-2024-09-04"]], "Version 2.12 (2024-08-27)": [[180, "version-2-12-2024-08-27"]], "Version 2.11 (2024-08-26)": [[180, "version-2-11-2024-08-26"]], "Version 2.10 (2024-08-26)": [[180, "version-2-10-2024-08-26"]], "Version 2.9 (2024-08-23)": [[180, "version-2-9-2024-08-23"]], "Version 2.8 (2024-08-22)": [[180, "version-2-8-2024-08-22"]], "Version 2.7 (2024-08-16)": [[180, "version-2-7-2024-08-16"]], "Version 2.6 (2024-08-16)": [[180, "version-2-6-2024-08-16"]], "Version 2.5 (2024-08-15)": [[180, "version-2-5-2024-08-15"]], "Version 2.4 (2024-08-09)": [[180, "version-2-4-2024-08-09"]], "Version 2.3 (2024-08-05)": [[180, "version-2-3-2024-08-05"]], "Version 2.2 (2024-07-29)": [[180, "version-2-2-2024-07-29"]], "Version 2.1 (2024-07-23)": [[180, "version-2-1-2024-07-23"]], "Version 2.0 (2024-07-15)": [[180, "version-2-0-2024-07-15"]], "Version 1.6 (2024-07-12)": [[180, "version-1-6-2024-07-12"]], "Version 1.5 (2024-07-05)": [[180, "version-1-5-2024-07-05"]], "Version 1.4 (2024-07-04)": [[180, "version-1-4-2024-07-04"]], "Version 1.3 (2024-07-04)": [[180, "version-1-3-2024-07-04"]], "Version 1.2 (2024-07-03)": [[180, "version-1-2-2024-07-03"]], "Version 1.1 (2024-07-02)": [[180, "version-1-1-2024-07-02"]], "Version 1.0 (2024-07-01)": [[180, "version-1-0-2024-07-01"]], "Concepts and Classes": [[181, "concepts-and-classes"]], "Quick reference": [[181, "quick-reference"]], "Instructions": [[181, "instructions"]], "Schedules": [[181, "schedules"]], "TimeBoxes": [[181, "timeboxes"]], "QuantumOps": [[181, "quantumops"]], "GateImplementations": [[181, "gateimplementations"]], "Playlists": [[181, "playlists"]], "Custom gate implementations": [[182, "custom-gate-implementations"], [182, "id1"]], "GateImplementation class": [[182, "gateimplementation-class"]], "Instructions, Waveforms and calibration data": [[182, "instructions-waveforms-and-calibration-data"]], "More base classes": [[182, "more-base-classes"]], "Registering gates and implementations": [[182, "registering-gates-and-implementations"]], "IQM Pulse": [[183, "iqm-pulse"]], "Contents": [[183, "contents"]], "Indices and tables": [[183, "indices-and-tables"]], "License": [[184, "license"]], "Pulse timing": [[185, "pulse-timing"]], "Measure and ReadoutTrigger": [[185, "measure-and-readouttrigger"]], "Fast feedback timing": [[185, "fast-feedback-timing"]], "References": [[186, "references"]], "Using ScheduleBuilder": [[187, "using-schedulebuilder"]], "Creating TimeBoxes": [[187, "creating-timeboxes"]], "Composing TimeBoxes": [[187, "composing-timeboxes"]], "Resolving TimeBoxes into a Schedule": [[187, "resolving-timeboxes-into-a-schedule"]], "Miscellaneous features": [[187, "miscellaneous-features"]], "Common pitfalls": [[187, "common-pitfalls"]]}, "indexentries": {"iqm.pulse": [[1, "module-iqm.pulse"]], "module": [[1, "module-iqm.pulse"], [2, "module-iqm.pulse.builder"], [8, "module-iqm.pulse.circuit_operations"], [14, "module-iqm.pulse.gate_implementation"], [31, "module-iqm.pulse.gates"], [32, "module-iqm.pulse.gates.barrier"], [34, "module-iqm.pulse.gates.conditional"], [38, "module-iqm.pulse.gates.cz"], [50, "module-iqm.pulse.gates.delay"], [53, "module-iqm.pulse.gates.enums"], [59, "module-iqm.pulse.gates.flux_multiplexer"], [63, "module-iqm.pulse.gates.measure"], [67, "module-iqm.pulse.gates.move"], [74, "module-iqm.pulse.gates.prx"], [87, "module-iqm.pulse.gates.reset"], [92, "module-iqm.pulse.gates.rz"], [98, "module-iqm.pulse.gates.sx"], [100, "module-iqm.pulse.gates.u"], [103, "module-iqm.pulse.playlist"], [104, "module-iqm.pulse.playlist.channel"], [114, "module-iqm.pulse.playlist.instructions"], [129, "module-iqm.pulse.playlist.playlist"], [130, "module-iqm.pulse.playlist.schedule"], [135, "module-iqm.pulse.playlist.visualisation"], [136, "module-iqm.pulse.playlist.visualisation.base"], [138, "module-iqm.pulse.playlist.waveforms"], [147, "module-iqm.pulse.quantum_ops"], [152, "module-iqm.pulse.scheduler"], [160, "module-iqm.pulse.timebox"], [165, "module-iqm.pulse.utils"], [171, "module-iqm.pulse.validation"]], "iqm.pulse.builder": [[2, "module-iqm.pulse.builder"]], "circuitoperation (class in iqm.pulse.builder)": [[3, "iqm.pulse.builder.CircuitOperation"]], "args (iqm.pulse.builder.circuitoperation attribute)": [[3, "iqm.pulse.builder.CircuitOperation.args"]], "implementation (iqm.pulse.builder.circuitoperation attribute)": [[3, "iqm.pulse.builder.CircuitOperation.implementation"]], "locus (iqm.pulse.builder.circuitoperation attribute)": [[3, "iqm.pulse.builder.CircuitOperation.locus"]], "name (iqm.pulse.builder.circuitoperation attribute)": [[3, "iqm.pulse.builder.CircuitOperation.name"]], "validate() (iqm.pulse.builder.circuitoperation method)": [[3, "iqm.pulse.builder.CircuitOperation.validate"]], "schedulebuilder (class in iqm.pulse.builder)": [[4, "iqm.pulse.builder.ScheduleBuilder"]], "_block_neighborhood_tetris() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder._block_neighborhood_tetris"]], "_cache (iqm.pulse.builder.schedulebuilder attribute)": [[4, "iqm.pulse.builder.ScheduleBuilder._cache"]], "_channel_templates (iqm.pulse.builder.schedulebuilder attribute)": [[4, "iqm.pulse.builder.ScheduleBuilder._channel_templates"]], "_channel_to_component (iqm.pulse.builder.schedulebuilder attribute)": [[4, "iqm.pulse.builder.ScheduleBuilder._channel_to_component"]], "_channel_types (iqm.pulse.builder.schedulebuilder attribute)": [[4, "iqm.pulse.builder.ScheduleBuilder._channel_types"]], "_find_implementation_and_locus() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder._find_implementation_and_locus"]], "_finish_schedule() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder._finish_schedule"]], "_fuse_long_distance_virtual_rzs() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder._fuse_long_distance_virtual_rzs"]], "_get_channel_for_component() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder._get_channel_for_component"]], "_get_implementation() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder._get_implementation"]], "_get_neighborhood_hard_boundary() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder._get_neighborhood_hard_boundary"]], "_require_scheduling_in_seconds (iqm.pulse.builder.schedulebuilder attribute)": [[4, "iqm.pulse.builder.ScheduleBuilder._require_scheduling_in_seconds"]], "_resolve_timebox_hard_boundary() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder._resolve_timebox_hard_boundary"]], "_resolve_timebox_tetris() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder._resolve_timebox_tetris"]], "_set_gate_implementation_shortcut() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder._set_gate_implementation_shortcut"]], "build_playlist() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.build_playlist"]], "circuit_to_timebox() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.circuit_to_timebox"]], "composite_cache (iqm.pulse.builder.schedulebuilder attribute)": [[4, "iqm.pulse.builder.ScheduleBuilder.composite_cache"]], "get_calibration() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.get_calibration"]], "get_control_channels() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.get_control_channels"]], "get_drive_channel() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.get_drive_channel"]], "get_flux_channel() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.get_flux_channel"]], "get_implementation() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.get_implementation"]], "get_implementation_class() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.get_implementation_class"]], "get_probe_channel() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.get_probe_channel"]], "get_virtual_feedback_channel_for() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.get_virtual_feedback_channel_for"]], "get_virtual_feedback_channels() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.get_virtual_feedback_channels"]], "has_calibration() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.has_calibration"]], "inject_calibration() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.inject_calibration"]], "resolve_timebox() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.resolve_timebox"]], "timebox_to_schedule() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.timebox_to_schedule"]], "timeboxes_to_front_padded_playlist() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.timeboxes_to_front_padded_playlist"]], "timeboxes_to_playlist() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.timeboxes_to_playlist"]], "validate_calibration() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.validate_calibration"]], "validate_quantum_circuit() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.validate_quantum_circuit"]], "wait() (iqm.pulse.builder.schedulebuilder method)": [[4, "iqm.pulse.builder.ScheduleBuilder.wait"]], "build_quantum_ops() (in module iqm.pulse.builder)": [[5, "iqm.pulse.builder.build_quantum_ops"]], "load_config() (in module iqm.pulse.builder)": [[6, "iqm.pulse.builder.load_config"]], "validate_quantum_circuit() (in module iqm.pulse.builder)": [[7, "iqm.pulse.builder.validate_quantum_circuit"]], "iqm.pulse.circuit_operations": [[8, "module-iqm.pulse.circuit_operations"]], "circuitoperationlist (class in iqm.pulse.circuit_operations)": [[9, "iqm.pulse.circuit_operations.CircuitOperationList"]], "_set_specific_operation_shortcut() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[9, "iqm.pulse.circuit_operations.CircuitOperationList._set_specific_operation_shortcut"]], "add_op() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[9, "iqm.pulse.circuit_operations.CircuitOperationList.add_op"]], "add_qubits() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[9, "iqm.pulse.circuit_operations.CircuitOperationList.add_qubits"]], "barrier() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[9, "iqm.pulse.circuit_operations.CircuitOperationList.barrier"]], "compose() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[9, "iqm.pulse.circuit_operations.CircuitOperationList.compose"]], "count_ops() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[9, "iqm.pulse.circuit_operations.CircuitOperationList.count_ops"]], "find_qubits() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[9, "iqm.pulse.circuit_operations.CircuitOperationList.find_qubits"]], "get_unitary() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[9, "iqm.pulse.circuit_operations.CircuitOperationList.get_unitary"]], "map_loci() (iqm.pulse.circuit_operations.circuitoperationlist method)": [[9, "iqm.pulse.circuit_operations.CircuitOperationList.map_loci"]], "get_unitary_from_circuit() (in module iqm.pulse.circuit_operations)": [[10, "iqm.pulse.circuit_operations.get_unitary_from_circuit"]], "get_unitary_from_op() (in module iqm.pulse.circuit_operations)": [[11, "iqm.pulse.circuit_operations.get_unitary_from_op"]], "reorder() (in module iqm.pulse.circuit_operations)": [[12, "iqm.pulse.circuit_operations.reorder"]], "reshape_unitary() (in module iqm.pulse.circuit_operations)": [[13, "iqm.pulse.circuit_operations.reshape_unitary"]], "iqm.pulse.gate_implementation": [[14, "module-iqm.pulse.gate_implementation"]], "compositecache (class in iqm.pulse.gate_implementation)": [[15, "iqm.pulse.gate_implementation.CompositeCache"]], "flush() (iqm.pulse.gate_implementation.compositecache method)": [[15, "iqm.pulse.gate_implementation.CompositeCache.flush"]], "get() (iqm.pulse.gate_implementation.compositecache method)": [[15, "iqm.pulse.gate_implementation.CompositeCache.get"]], "set() (iqm.pulse.gate_implementation.compositecache method)": [[15, "iqm.pulse.gate_implementation.CompositeCache.set"]], "compositegate (class in iqm.pulse.gate_implementation)": [[16, "iqm.pulse.gate_implementation.CompositeGate"]], "build() (iqm.pulse.gate_implementation.compositegate method)": [[16, "iqm.pulse.gate_implementation.CompositeGate.build"]], "default_implementations (iqm.pulse.gate_implementation.compositegate attribute)": [[16, "iqm.pulse.gate_implementation.CompositeGate.default_implementations"]], "registered_gates (iqm.pulse.gate_implementation.compositegate attribute)": [[16, "iqm.pulse.gate_implementation.CompositeGate.registered_gates"]], "customiqwaveforms (class in iqm.pulse.gate_implementation)": [[17, "iqm.pulse.gate_implementation.CustomIQWaveforms"]], "dependent_waves (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[17, "iqm.pulse.gate_implementation.CustomIQWaveforms.dependent_waves"]], "excluded_parameters (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[17, "iqm.pulse.gate_implementation.CustomIQWaveforms.excluded_parameters"]], "root_parameters (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[17, "iqm.pulse.gate_implementation.CustomIQWaveforms.root_parameters"]], "wave_i (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[17, "iqm.pulse.gate_implementation.CustomIQWaveforms.wave_i"]], "wave_q (iqm.pulse.gate_implementation.customiqwaveforms attribute)": [[17, "iqm.pulse.gate_implementation.CustomIQWaveforms.wave_q"]], "gateimplementation (class in iqm.pulse.gate_implementation)": [[18, "iqm.pulse.gate_implementation.GateImplementation"]], "_call() (iqm.pulse.gate_implementation.gateimplementation method)": [[18, "iqm.pulse.gate_implementation.GateImplementation._call"]], "build() (iqm.pulse.gate_implementation.gateimplementation method)": [[18, "iqm.pulse.gate_implementation.GateImplementation.build"]], "convert_calibration_data() (iqm.pulse.gate_implementation.gateimplementation class method)": [[18, "iqm.pulse.gate_implementation.GateImplementation.convert_calibration_data"]], "duration_in_seconds() (iqm.pulse.gate_implementation.gateimplementation method)": [[18, "iqm.pulse.gate_implementation.GateImplementation.duration_in_seconds"]], "get_custom_locus_mapping() (iqm.pulse.gate_implementation.gateimplementation class method)": [[18, "iqm.pulse.gate_implementation.GateImplementation.get_custom_locus_mapping"]], "get_locus_mapping_name() (iqm.pulse.gate_implementation.gateimplementation class method)": [[18, "iqm.pulse.gate_implementation.GateImplementation.get_locus_mapping_name"]], "get_parameters() (iqm.pulse.gate_implementation.gateimplementation class method)": [[18, "iqm.pulse.gate_implementation.GateImplementation.get_parameters"]], "needs_calibration() (iqm.pulse.gate_implementation.gateimplementation class method)": [[18, "iqm.pulse.gate_implementation.GateImplementation.needs_calibration"]], "parameters (iqm.pulse.gate_implementation.gateimplementation attribute)": [[18, "iqm.pulse.gate_implementation.GateImplementation.parameters"]], "qualified_name (iqm.pulse.gate_implementation.gateimplementation property)": [[18, "iqm.pulse.gate_implementation.GateImplementation.qualified_name"]], "special_implementation (iqm.pulse.gate_implementation.gateimplementation attribute)": [[18, "iqm.pulse.gate_implementation.GateImplementation.special_implementation"]], "symmetric (iqm.pulse.gate_implementation.gateimplementation attribute)": [[18, "iqm.pulse.gate_implementation.GateImplementation.symmetric"]], "to_timebox() (iqm.pulse.gate_implementation.gateimplementation method)": [[18, "iqm.pulse.gate_implementation.GateImplementation.to_timebox"]], "locus (in module iqm.pulse.gate_implementation)": [[19, "iqm.pulse.gate_implementation.Locus"]], "nestedparams (in module iqm.pulse.gate_implementation)": [[20, "iqm.pulse.gate_implementation.NestedParams"]], "ocalibrationdata (in module iqm.pulse.gate_implementation)": [[21, "iqm.pulse.gate_implementation.OCalibrationData"]], "oicalibrationdata (in module iqm.pulse.gate_implementation)": [[22, "iqm.pulse.gate_implementation.OICalibrationData"]], "oilcalibrationdata (in module iqm.pulse.gate_implementation)": [[23, "iqm.pulse.gate_implementation.OILCalibrationData"]], "opcalibrationdatatree (in module iqm.pulse.gate_implementation)": [[24, "iqm.pulse.gate_implementation.OpCalibrationDataTree"]], "probe_lines_locus_mapping (in module iqm.pulse.gate_implementation)": [[25, "iqm.pulse.gate_implementation.PROBE_LINES_LOCUS_MAPPING"]], "single_components_with_drive_locus_mapping (in module iqm.pulse.gate_implementation)": [[26, "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_DRIVE_LOCUS_MAPPING"]], "single_components_with_flux_awg_locus_mapping (in module iqm.pulse.gate_implementation)": [[27, "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_FLUX_AWG_LOCUS_MAPPING"]], "single_components_with_readout_locus_mapping (in module iqm.pulse.gate_implementation)": [[28, "iqm.pulse.gate_implementation.SINGLE_COMPONENTS_WITH_READOUT_LOCUS_MAPPING"]], "singlepulsegate (class in iqm.pulse.gate_implementation)": [[29, "iqm.pulse.gate_implementation.SinglePulseGate"]], "_call() (iqm.pulse.gate_implementation.singlepulsegate method)": [[29, "iqm.pulse.gate_implementation.SinglePulseGate._call"]], "_get_pulse() (iqm.pulse.gate_implementation.singlepulsegate method)": [[29, "iqm.pulse.gate_implementation.SinglePulseGate._get_pulse"]], "_get_pulse_channel() (iqm.pulse.gate_implementation.singlepulsegate method)": [[29, "iqm.pulse.gate_implementation.SinglePulseGate._get_pulse_channel"]], "duration_in_seconds() (iqm.pulse.gate_implementation.singlepulsegate method)": [[29, "iqm.pulse.gate_implementation.SinglePulseGate.duration_in_seconds"]], "get_waveform_parameters() (in module iqm.pulse.gate_implementation)": [[30, "iqm.pulse.gate_implementation.get_waveform_parameters"]], "iqm.pulse.gates": [[31, "module-iqm.pulse.gates"]], "iqm.pulse.gates.barrier": [[32, "module-iqm.pulse.gates.barrier"]], "barrier (class in iqm.pulse.gates.barrier)": [[33, "iqm.pulse.gates.barrier.Barrier"]], "_call() (iqm.pulse.gates.barrier.barrier method)": [[33, "iqm.pulse.gates.barrier.Barrier._call"]], "duration_in_seconds() (iqm.pulse.gates.barrier.barrier method)": [[33, "iqm.pulse.gates.barrier.Barrier.duration_in_seconds"]], "symmetric (iqm.pulse.gates.barrier.barrier attribute)": [[33, "iqm.pulse.gates.barrier.Barrier.symmetric"]], "iqm.pulse.gates.conditional": [[34, "module-iqm.pulse.gates.conditional"]], "ccprx_composite (class in iqm.pulse.gates.conditional)": [[35, "iqm.pulse.gates.conditional.CCPRX_Composite"]], "_call() (iqm.pulse.gates.conditional.ccprx_composite method)": [[35, "iqm.pulse.gates.conditional.CCPRX_Composite._call"]], "parameters (iqm.pulse.gates.conditional.ccprx_composite attribute)": [[35, "iqm.pulse.gates.conditional.CCPRX_Composite.parameters"]], "ccprx_composite_dragcosinerisefall (class in iqm.pulse.gates.conditional)": [[36, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall"]], "default_implementations (iqm.pulse.gates.conditional.ccprx_composite_dragcosinerisefall attribute)": [[36, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGCosineRiseFall.default_implementations"]], "ccprx_composite_draggaussian (class in iqm.pulse.gates.conditional)": [[37, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian"]], "default_implementations (iqm.pulse.gates.conditional.ccprx_composite_draggaussian attribute)": [[37, "iqm.pulse.gates.conditional.CCPRX_Composite_DRAGGaussian.default_implementations"]], "iqm.pulse.gates.cz": [[38, "module-iqm.pulse.gates.cz"]], "cz_crf (class in iqm.pulse.gates.cz)": [[39, "iqm.pulse.gates.cz.CZ_CRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_crf attribute)": [[39, "iqm.pulse.gates.cz.CZ_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_crf attribute)": [[39, "iqm.pulse.gates.cz.CZ_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_crf attribute)": [[39, "iqm.pulse.gates.cz.CZ_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_crf attribute)": [[39, "iqm.pulse.gates.cz.CZ_CRF.symmetric"]], "cz_crf_acstarkcrf (class in iqm.pulse.gates.cz)": [[40, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[40, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[40, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.parameters"]], "qubit_drive_wave (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[40, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.qubit_drive_wave"]], "symmetric (iqm.pulse.gates.cz.cz_crf_acstarkcrf attribute)": [[40, "iqm.pulse.gates.cz.CZ_CRF_ACStarkCRF.symmetric"]], "cz_gaussiansmoothedsquare (class in iqm.pulse.gates.cz)": [[41, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare"]], "coupler_wave (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[41, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[41, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[41, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_gaussiansmoothedsquare attribute)": [[41, "iqm.pulse.gates.cz.CZ_GaussianSmoothedSquare.symmetric"]], "cz_slepian (class in iqm.pulse.gates.cz)": [[42, "iqm.pulse.gates.cz.CZ_Slepian"]], "coupler_wave (iqm.pulse.gates.cz.cz_slepian attribute)": [[42, "iqm.pulse.gates.cz.CZ_Slepian.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_slepian attribute)": [[42, "iqm.pulse.gates.cz.CZ_Slepian.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_slepian attribute)": [[42, "iqm.pulse.gates.cz.CZ_Slepian.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_slepian attribute)": [[42, "iqm.pulse.gates.cz.CZ_Slepian.symmetric"]], "cz_slepian_acstarkcrf (class in iqm.pulse.gates.cz)": [[43, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[43, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[43, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.parameters"]], "qubit_drive_wave (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[43, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.qubit_drive_wave"]], "symmetric (iqm.pulse.gates.cz.cz_slepian_acstarkcrf attribute)": [[43, "iqm.pulse.gates.cz.CZ_Slepian_ACStarkCRF.symmetric"]], "cz_slepian_crf (class in iqm.pulse.gates.cz)": [[44, "iqm.pulse.gates.cz.CZ_Slepian_CRF"]], "coupler_wave (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[44, "iqm.pulse.gates.cz.CZ_Slepian_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[44, "iqm.pulse.gates.cz.CZ_Slepian_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[44, "iqm.pulse.gates.cz.CZ_Slepian_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_slepian_crf attribute)": [[44, "iqm.pulse.gates.cz.CZ_Slepian_CRF.symmetric"]], "cz_truncatedgaussiansmoothedsquare (class in iqm.pulse.gates.cz)": [[45, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare"]], "coupler_wave (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[45, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.coupler_wave"]], "parameters (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[45, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.parameters"]], "qubit_wave (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[45, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.cz_truncatedgaussiansmoothedsquare attribute)": [[45, "iqm.pulse.gates.cz.CZ_TruncatedGaussianSmoothedSquare.symmetric"]], "couplerfluxpulsequbitacstarkpulsegate (class in iqm.pulse.gates.cz)": [[46, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate"]], "_ac_stark_pulse() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate class method)": [[46, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate._ac_stark_pulse"]], "_call() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate method)": [[46, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate._call"]], "coupler_wave (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate attribute)": [[46, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.coupler_wave"]], "duration_in_seconds() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate method)": [[46, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.duration_in_seconds"]], "excluded_parameters (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate attribute)": [[46, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.excluded_parameters"]], "get_locus_mapping_name() (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate class method)": [[46, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.get_locus_mapping_name"]], "qubit_drive_wave (iqm.pulse.gates.cz.couplerfluxpulsequbitacstarkpulsegate attribute)": [[46, "iqm.pulse.gates.cz.CouplerFluxPulseQubitACStarkPulseGate.qubit_drive_wave"]], "fluxpulsegate (class in iqm.pulse.gates.cz)": [[47, "iqm.pulse.gates.cz.FluxPulseGate"]], "_call() (iqm.pulse.gates.cz.fluxpulsegate method)": [[47, "iqm.pulse.gates.cz.FluxPulseGate._call"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[47, "iqm.pulse.gates.cz.FluxPulseGate.coupler_wave"]], "duration_in_seconds() (iqm.pulse.gates.cz.fluxpulsegate method)": [[47, "iqm.pulse.gates.cz.FluxPulseGate.duration_in_seconds"]], "excluded_parameters (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[47, "iqm.pulse.gates.cz.FluxPulseGate.excluded_parameters"]], "get_locus_mapping_name() (iqm.pulse.gates.cz.fluxpulsegate class method)": [[47, "iqm.pulse.gates.cz.FluxPulseGate.get_locus_mapping_name"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[47, "iqm.pulse.gates.cz.FluxPulseGate.qubit_wave"]], "root_parameters (iqm.pulse.gates.cz.fluxpulsegate attribute)": [[47, "iqm.pulse.gates.cz.FluxPulseGate.root_parameters"]], "fluxpulsegate_crf_crf (class in iqm.pulse.gates.cz)": [[48, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[48, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[48, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[48, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.fluxpulsegate_crf_crf attribute)": [[48, "iqm.pulse.gates.cz.FluxPulseGate_CRF_CRF.symmetric"]], "fluxpulsegate_tgss_crf (class in iqm.pulse.gates.cz)": [[49, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF"]], "coupler_wave (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[49, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[49, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[49, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.cz.fluxpulsegate_tgss_crf attribute)": [[49, "iqm.pulse.gates.cz.FluxPulseGate_TGSS_CRF.symmetric"]], "iqm.pulse.gates.delay": [[50, "module-iqm.pulse.gates.delay"]], "delay_max_duration_seconds (in module iqm.pulse.gates.delay)": [[51, "iqm.pulse.gates.delay.DELAY_MAX_DURATION_SECONDS"]], "delay (class in iqm.pulse.gates.delay)": [[52, "iqm.pulse.gates.delay.Delay"]], "_call() (iqm.pulse.gates.delay.delay method)": [[52, "iqm.pulse.gates.delay.Delay._call"]], "symmetric (iqm.pulse.gates.delay.delay attribute)": [[52, "iqm.pulse.gates.delay.Delay.symmetric"]], "iqm.pulse.gates.enums": [[53, "module-iqm.pulse.gates.enums"]], "two_qubit_unitaries (in module iqm.pulse.gates.enums)": [[54, "iqm.pulse.gates.enums.TWO_QUBIT_UNITARIES"]], "cz (iqm.pulse.gates.enums.twoqubitgate attribute)": [[55, "iqm.pulse.gates.enums.TwoQubitGate.CZ"]], "iswap (iqm.pulse.gates.enums.twoqubitgate attribute)": [[55, "iqm.pulse.gates.enums.TwoQubitGate.ISWAP"]], "sqrt_iswap (iqm.pulse.gates.enums.twoqubitgate attribute)": [[55, "iqm.pulse.gates.enums.TwoQubitGate.SQRT_ISWAP"]], "twoqubitgate (class in iqm.pulse.gates.enums)": [[55, "iqm.pulse.gates.enums.TwoQubitGate"]], "xygate_unitaries (in module iqm.pulse.gates.enums)": [[56, "iqm.pulse.gates.enums.XYGATE_UNITARIES"]], "xygate (class in iqm.pulse.gates.enums)": [[57, "iqm.pulse.gates.enums.XYGate"]], "expose_implementation() (in module iqm.pulse.gates)": [[58, "iqm.pulse.gates.expose_implementation"]], "iqm.pulse.gates.flux_multiplexer": [[59, "module-iqm.pulse.gates.flux_multiplexer"]], "fluxmultiplexer_samplelinear (class in iqm.pulse.gates.flux_multiplexer)": [[60, "iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear"]], "get_custom_locus_mapping() (iqm.pulse.gates.flux_multiplexer.fluxmultiplexer_samplelinear class method)": [[60, "iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear.get_custom_locus_mapping"]], "parameters (iqm.pulse.gates.flux_multiplexer.fluxmultiplexer_samplelinear attribute)": [[60, "iqm.pulse.gates.flux_multiplexer.FluxMultiplexer_SampleLinear.parameters"]], "tolerance (in module iqm.pulse.gates.flux_multiplexer)": [[61, "iqm.pulse.gates.flux_multiplexer.TOLERANCE"]], "get_implementation_class() (in module iqm.pulse.gates)": [[62, "iqm.pulse.gates.get_implementation_class"]], "iqm.pulse.gates.measure": [[63, "module-iqm.pulse.gates.measure"]], "measure_constant (class in iqm.pulse.gates.measure)": [[64, "iqm.pulse.gates.measure.Measure_Constant"]], "dependent_waves (iqm.pulse.gates.measure.measure_constant attribute)": [[64, "iqm.pulse.gates.measure.Measure_Constant.dependent_waves"]], "parameters (iqm.pulse.gates.measure.measure_constant attribute)": [[64, "iqm.pulse.gates.measure.Measure_Constant.parameters"]], "wave_i (iqm.pulse.gates.measure.measure_constant attribute)": [[64, "iqm.pulse.gates.measure.Measure_Constant.wave_i"]], "wave_q (iqm.pulse.gates.measure.measure_constant attribute)": [[64, "iqm.pulse.gates.measure.Measure_Constant.wave_q"]], "measure_customwaveforms (class in iqm.pulse.gates.measure)": [[65, "iqm.pulse.gates.measure.Measure_CustomWaveforms"]], "_build_instructions() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[65, "iqm.pulse.gates.measure.Measure_CustomWaveforms._build_instructions"]], "_call() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[65, "iqm.pulse.gates.measure.Measure_CustomWaveforms._call"]], "_multiplexed_timeboxes (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[65, "iqm.pulse.gates.measure.Measure_CustomWaveforms._multiplexed_timeboxes"]], "_time_traces (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[65, "iqm.pulse.gates.measure.Measure_CustomWaveforms._time_traces"]], "dependent_waves (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[65, "iqm.pulse.gates.measure.Measure_CustomWaveforms.dependent_waves"]], "duration_in_seconds() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[65, "iqm.pulse.gates.measure.Measure_CustomWaveforms.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.measure.measure_customwaveforms class method)": [[65, "iqm.pulse.gates.measure.Measure_CustomWaveforms.get_locus_mapping_name"]], "probe_timebox() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[65, "iqm.pulse.gates.measure.Measure_CustomWaveforms.probe_timebox"]], "root_parameters (iqm.pulse.gates.measure.measure_customwaveforms attribute)": [[65, "iqm.pulse.gates.measure.Measure_CustomWaveforms.root_parameters"]], "time_trace() (iqm.pulse.gates.measure.measure_customwaveforms method)": [[65, "iqm.pulse.gates.measure.Measure_CustomWaveforms.time_trace"]], "probepulse_customwaveforms (class in iqm.pulse.gates.measure)": [[66, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms"]], "_build_instructions() (iqm.pulse.gates.measure.probepulse_customwaveforms method)": [[66, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms._build_instructions"]], "_call() (iqm.pulse.gates.measure.probepulse_customwaveforms method)": [[66, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms._call"]], "dependent_waves (iqm.pulse.gates.measure.probepulse_customwaveforms attribute)": [[66, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.dependent_waves"]], "duration_in_seconds() (iqm.pulse.gates.measure.probepulse_customwaveforms method)": [[66, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.measure.probepulse_customwaveforms class method)": [[66, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.get_locus_mapping_name"]], "root_parameters (iqm.pulse.gates.measure.probepulse_customwaveforms attribute)": [[66, "iqm.pulse.gates.measure.ProbePulse_CustomWaveforms.root_parameters"]], "iqm.pulse.gates.move": [[67, "module-iqm.pulse.gates.move"]], "move_crf_crf (class in iqm.pulse.gates.move)": [[68, "iqm.pulse.gates.move.MOVE_CRF_CRF"]], "coupler_wave (iqm.pulse.gates.move.move_crf_crf attribute)": [[68, "iqm.pulse.gates.move.MOVE_CRF_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.move.move_crf_crf attribute)": [[68, "iqm.pulse.gates.move.MOVE_CRF_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.move.move_crf_crf attribute)": [[68, "iqm.pulse.gates.move.MOVE_CRF_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.move.move_crf_crf attribute)": [[68, "iqm.pulse.gates.move.MOVE_CRF_CRF.symmetric"]], "move_customwaveforms (class in iqm.pulse.gates.move)": [[69, "iqm.pulse.gates.move.MOVE_CustomWaveforms"]], "_call() (iqm.pulse.gates.move.move_customwaveforms method)": [[69, "iqm.pulse.gates.move.MOVE_CustomWaveforms._call"]], "coupler_wave (iqm.pulse.gates.move.move_customwaveforms attribute)": [[69, "iqm.pulse.gates.move.MOVE_CustomWaveforms.coupler_wave"]], "parameters (iqm.pulse.gates.move.move_customwaveforms attribute)": [[69, "iqm.pulse.gates.move.MOVE_CustomWaveforms.parameters"]], "qubit_wave (iqm.pulse.gates.move.move_customwaveforms attribute)": [[69, "iqm.pulse.gates.move.MOVE_CustomWaveforms.qubit_wave"]], "root_parameters (iqm.pulse.gates.move.move_customwaveforms attribute)": [[69, "iqm.pulse.gates.move.MOVE_CustomWaveforms.root_parameters"]], "symmetric (iqm.pulse.gates.move.move_customwaveforms attribute)": [[69, "iqm.pulse.gates.move.MOVE_CustomWaveforms.symmetric"]], "move_tgss_crf (class in iqm.pulse.gates.move)": [[70, "iqm.pulse.gates.move.MOVE_TGSS_CRF"]], "coupler_wave (iqm.pulse.gates.move.move_tgss_crf attribute)": [[70, "iqm.pulse.gates.move.MOVE_TGSS_CRF.coupler_wave"]], "parameters (iqm.pulse.gates.move.move_tgss_crf attribute)": [[70, "iqm.pulse.gates.move.MOVE_TGSS_CRF.parameters"]], "qubit_wave (iqm.pulse.gates.move.move_tgss_crf attribute)": [[70, "iqm.pulse.gates.move.MOVE_TGSS_CRF.qubit_wave"]], "symmetric (iqm.pulse.gates.move.move_tgss_crf attribute)": [[70, "iqm.pulse.gates.move.MOVE_TGSS_CRF.symmetric"]], "movemarker (class in iqm.pulse.gates.move)": [[71, "iqm.pulse.gates.move.MoveMarker"]], "duration (iqm.pulse.gates.move.movemarker attribute)": [[71, "iqm.pulse.gates.move.MoveMarker.duration"]], "apply_move_gate_phase_corrections() (in module iqm.pulse.gates.move)": [[72, "iqm.pulse.gates.move.apply_move_gate_phase_corrections"]], "validate_move_instructions() (in module iqm.pulse.gates.move)": [[73, "iqm.pulse.gates.move.validate_move_instructions"]], "iqm.pulse.gates.prx": [[74, "module-iqm.pulse.gates.prx"]], "abc_constant_smooth (class in iqm.pulse.gates.prx)": [[75, "iqm.pulse.gates.prx.ABC_Constant_smooth"]], "_call() (iqm.pulse.gates.prx.abc_constant_smooth method)": [[75, "iqm.pulse.gates.prx.ABC_Constant_smooth._call"]], "_fall_pulse() (iqm.pulse.gates.prx.abc_constant_smooth class method)": [[75, "iqm.pulse.gates.prx.ABC_Constant_smooth._fall_pulse"]], "_main_pulse() (iqm.pulse.gates.prx.abc_constant_smooth class method)": [[75, "iqm.pulse.gates.prx.ABC_Constant_smooth._main_pulse"]], "_rise_pulse() (iqm.pulse.gates.prx.abc_constant_smooth class method)": [[75, "iqm.pulse.gates.prx.ABC_Constant_smooth._rise_pulse"]], "constant_prx_with_smooth_rise_fall (class in iqm.pulse.gates.prx)": [[76, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall"]], "fall_waveform (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[76, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.fall_waveform"]], "main_waveform (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[76, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.main_waveform"]], "parameters (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[76, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.parameters"]], "rise_waveform (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[76, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.rise_waveform"]], "symmetric (iqm.pulse.gates.prx.constant_prx_with_smooth_rise_fall attribute)": [[76, "iqm.pulse.gates.prx.Constant_PRX_with_smooth_rise_fall.symmetric"]], "prx_customwaveforms (class in iqm.pulse.gates.prx)": [[77, "iqm.pulse.gates.prx.PRX_CustomWaveforms"]], "_get_pulse() (iqm.pulse.gates.prx.prx_customwaveforms class method)": [[77, "iqm.pulse.gates.prx.PRX_CustomWaveforms._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_customwaveforms attribute)": [[77, "iqm.pulse.gates.prx.PRX_CustomWaveforms.dependent_waves"]], "root_parameters (iqm.pulse.gates.prx.prx_customwaveforms attribute)": [[77, "iqm.pulse.gates.prx.PRX_CustomWaveforms.root_parameters"]], "prx_customwaveformssx (class in iqm.pulse.gates.prx)": [[78, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX"]], "_call() (iqm.pulse.gates.prx.prx_customwaveformssx method)": [[78, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX._call"]], "_get_pulse() (iqm.pulse.gates.prx.prx_customwaveformssx class method)": [[78, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_customwaveformssx attribute)": [[78, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX.dependent_waves"]], "root_parameters (iqm.pulse.gates.prx.prx_customwaveformssx attribute)": [[78, "iqm.pulse.gates.prx.PRX_CustomWaveformsSX.root_parameters"]], "prx_dragcosinerisefall (class in iqm.pulse.gates.prx)": [[79, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall"]], "_get_pulse() (iqm.pulse.gates.prx.prx_dragcosinerisefall class method)": [[79, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[79, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.dependent_waves"]], "excluded_parameters (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[79, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.excluded_parameters"]], "parameters (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[79, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[79, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_dragcosinerisefall attribute)": [[79, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFall.wave_q"]], "prx_dragcosinerisefallsx (class in iqm.pulse.gates.prx)": [[80, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX"]], "_get_pulse() (iqm.pulse.gates.prx.prx_dragcosinerisefallsx class method)": [[80, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX._get_pulse"]], "dependent_waves (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[80, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.dependent_waves"]], "excluded_parameters (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[80, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.excluded_parameters"]], "parameters (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[80, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[80, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_dragcosinerisefallsx attribute)": [[80, "iqm.pulse.gates.prx.PRX_DRAGCosineRiseFallSX.wave_q"]], "prx_draggaussian (class in iqm.pulse.gates.prx)": [[81, "iqm.pulse.gates.prx.PRX_DRAGGaussian"]], "dependent_waves (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[81, "iqm.pulse.gates.prx.PRX_DRAGGaussian.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[81, "iqm.pulse.gates.prx.PRX_DRAGGaussian.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[81, "iqm.pulse.gates.prx.PRX_DRAGGaussian.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_draggaussian attribute)": [[81, "iqm.pulse.gates.prx.PRX_DRAGGaussian.wave_q"]], "prx_draggaussiansx (class in iqm.pulse.gates.prx)": [[82, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX"]], "dependent_waves (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[82, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.dependent_waves"]], "parameters (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[82, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.parameters"]], "wave_i (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[82, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.wave_i"]], "wave_q (iqm.pulse.gates.prx.prx_draggaussiansx attribute)": [[82, "iqm.pulse.gates.prx.PRX_DRAGGaussianSX.wave_q"]], "prx_gateimplementation (class in iqm.pulse.gates.prx)": [[83, "iqm.pulse.gates.prx.PRX_GateImplementation"]], "_call() (iqm.pulse.gates.prx.prx_gateimplementation method)": [[83, "iqm.pulse.gates.prx.PRX_GateImplementation._call"]], "clifford() (iqm.pulse.gates.prx.prx_gateimplementation method)": [[83, "iqm.pulse.gates.prx.PRX_GateImplementation.clifford"]], "get_locus_mapping_name() (iqm.pulse.gates.prx.prx_gateimplementation class method)": [[83, "iqm.pulse.gates.prx.PRX_GateImplementation.get_locus_mapping_name"]], "rx() (iqm.pulse.gates.prx.prx_gateimplementation method)": [[83, "iqm.pulse.gates.prx.PRX_GateImplementation.rx"]], "ry() (iqm.pulse.gates.prx.prx_gateimplementation method)": [[83, "iqm.pulse.gates.prx.PRX_GateImplementation.ry"]], "prx_singlepulse_gateimplementation (class in iqm.pulse.gates.prx)": [[84, "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation"]], "_call() (iqm.pulse.gates.prx.prx_singlepulse_gateimplementation method)": [[84, "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation._call"]], "iq_pulse (iqm.pulse.gates.prx.prx_singlepulse_gateimplementation property)": [[84, "iqm.pulse.gates.prx.PRX_SinglePulse_GateImplementation.iq_pulse"]], "get_unitary_prx() (in module iqm.pulse.gates.prx)": [[85, "iqm.pulse.gates.prx.get_unitary_prx"]], "register_implementation() (in module iqm.pulse.gates)": [[86, "iqm.pulse.gates.register_implementation"]], "iqm.pulse.gates.reset": [[87, "module-iqm.pulse.gates.reset"]], "reset_feedback_key (in module iqm.pulse.gates.reset)": [[88, "iqm.pulse.gates.reset.RESET_FEEDBACK_KEY"]], "reset_measurement_key (in module iqm.pulse.gates.reset)": [[89, "iqm.pulse.gates.reset.RESET_MEASUREMENT_KEY"]], "reset_conditional (class in iqm.pulse.gates.reset)": [[90, "iqm.pulse.gates.reset.Reset_Conditional"]], "_call() (iqm.pulse.gates.reset.reset_conditional method)": [[90, "iqm.pulse.gates.reset.Reset_Conditional._call"]], "get_locus_mapping_name() (iqm.pulse.gates.reset.reset_conditional class method)": [[90, "iqm.pulse.gates.reset.Reset_Conditional.get_locus_mapping_name"]], "registered_gates (iqm.pulse.gates.reset.reset_conditional attribute)": [[90, "iqm.pulse.gates.reset.Reset_Conditional.registered_gates"]], "reset_wait (class in iqm.pulse.gates.reset)": [[91, "iqm.pulse.gates.reset.Reset_Wait"]], "_call() (iqm.pulse.gates.reset.reset_wait method)": [[91, "iqm.pulse.gates.reset.Reset_Wait._call"]], "duration_in_seconds() (iqm.pulse.gates.reset.reset_wait method)": [[91, "iqm.pulse.gates.reset.Reset_Wait.duration_in_seconds"]], "get_custom_locus_mapping() (iqm.pulse.gates.reset.reset_wait class method)": [[91, "iqm.pulse.gates.reset.Reset_Wait.get_custom_locus_mapping"]], "parameters (iqm.pulse.gates.reset.reset_wait attribute)": [[91, "iqm.pulse.gates.reset.Reset_Wait.parameters"]], "wait_box() (iqm.pulse.gates.reset.reset_wait method)": [[91, "iqm.pulse.gates.reset.Reset_Wait.wait_box"]], "iqm.pulse.gates.rz": [[92, "module-iqm.pulse.gates.rz"]], "rz_acstarkshift (class in iqm.pulse.gates.rz)": [[93, "iqm.pulse.gates.rz.RZ_ACStarkShift"]], "_ac_stark_pulse() (iqm.pulse.gates.rz.rz_acstarkshift class method)": [[93, "iqm.pulse.gates.rz.RZ_ACStarkShift._ac_stark_pulse"]], "_call() (iqm.pulse.gates.rz.rz_acstarkshift method)": [[93, "iqm.pulse.gates.rz.RZ_ACStarkShift._call"]], "duration_in_seconds() (iqm.pulse.gates.rz.rz_acstarkshift method)": [[93, "iqm.pulse.gates.rz.RZ_ACStarkShift.duration_in_seconds"]], "rz_acstarkshift_cosinerisefall (class in iqm.pulse.gates.rz)": [[94, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall"]], "ac_stark_waveform (iqm.pulse.gates.rz.rz_acstarkshift_cosinerisefall attribute)": [[94, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.ac_stark_waveform"]], "parameters (iqm.pulse.gates.rz.rz_acstarkshift_cosinerisefall attribute)": [[94, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.parameters"]], "symmetric (iqm.pulse.gates.rz.rz_acstarkshift_cosinerisefall attribute)": [[94, "iqm.pulse.gates.rz.RZ_ACStarkShift_CosineRiseFall.symmetric"]], "rz_acstarkshift_smoothconstant (class in iqm.pulse.gates.rz)": [[95, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant"]], "fall_waveform (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[95, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.fall_waveform"]], "main_waveform (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[95, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.main_waveform"]], "parameters (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[95, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.parameters"]], "rise_waveform (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[95, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.rise_waveform"]], "symmetric (iqm.pulse.gates.rz.rz_acstarkshift_smoothconstant attribute)": [[95, "iqm.pulse.gates.rz.RZ_ACStarkShift_smoothConstant.symmetric"]], "rz_virtual (class in iqm.pulse.gates.rz)": [[96, "iqm.pulse.gates.rz.RZ_Virtual"]], "_call() (iqm.pulse.gates.rz.rz_virtual method)": [[96, "iqm.pulse.gates.rz.RZ_Virtual._call"]], "duration_in_seconds() (iqm.pulse.gates.rz.rz_virtual method)": [[96, "iqm.pulse.gates.rz.RZ_Virtual.duration_in_seconds"]], "get_locus_mapping_name() (iqm.pulse.gates.rz.rz_virtual class method)": [[96, "iqm.pulse.gates.rz.RZ_Virtual.get_locus_mapping_name"]], "parameters (iqm.pulse.gates.rz.rz_virtual attribute)": [[96, "iqm.pulse.gates.rz.RZ_Virtual.parameters"]], "get_unitary_rz() (in module iqm.pulse.gates.rz)": [[97, "iqm.pulse.gates.rz.get_unitary_rz"]], "iqm.pulse.gates.sx": [[98, "module-iqm.pulse.gates.sx"]], "sxgate (class in iqm.pulse.gates.sx)": [[99, "iqm.pulse.gates.sx.SXGate"]], "_call() (iqm.pulse.gates.sx.sxgate method)": [[99, "iqm.pulse.gates.sx.SXGate._call"]], "registered_gates (iqm.pulse.gates.sx.sxgate attribute)": [[99, "iqm.pulse.gates.sx.SXGate.registered_gates"]], "iqm.pulse.gates.u": [[100, "module-iqm.pulse.gates.u"]], "ugate (class in iqm.pulse.gates.u)": [[101, "iqm.pulse.gates.u.UGate"]], "_call() (iqm.pulse.gates.u.ugate method)": [[101, "iqm.pulse.gates.u.UGate._call"]], "registered_gates (iqm.pulse.gates.u.ugate attribute)": [[101, "iqm.pulse.gates.u.UGate.registered_gates"]], "get_unitary_u() (in module iqm.pulse.gates.u)": [[102, "iqm.pulse.gates.u.get_unitary_u"]], "iqm.pulse.playlist": [[103, "module-iqm.pulse.playlist"]], "iqm.pulse.playlist.channel": [[104, "module-iqm.pulse.playlist.channel"]], "channelconfiguration (class in iqm.pulse.playlist.channel)": [[105, "iqm.pulse.playlist.channel.ChannelConfiguration"]], "channeldescription (class in iqm.pulse.playlist.channel)": [[106, "iqm.pulse.playlist.channel.ChannelDescription"]], "add_instruction() (iqm.pulse.playlist.channel.channeldescription method)": [[106, "iqm.pulse.playlist.channel.ChannelDescription.add_instruction"]], "channelproperties (class in iqm.pulse.playlist.channel)": [[107, "iqm.pulse.playlist.channel.ChannelProperties"]], "blocks_component (iqm.pulse.playlist.channel.channelproperties attribute)": [[107, "iqm.pulse.playlist.channel.ChannelProperties.blocks_component"]], "compatible_instructions (iqm.pulse.playlist.channel.channelproperties attribute)": [[107, "iqm.pulse.playlist.channel.ChannelProperties.compatible_instructions"]], "duration_to_int_samples() (iqm.pulse.playlist.channel.channelproperties method)": [[107, "iqm.pulse.playlist.channel.ChannelProperties.duration_to_int_samples"]], "duration_to_samples() (iqm.pulse.playlist.channel.channelproperties method)": [[107, "iqm.pulse.playlist.channel.ChannelProperties.duration_to_samples"]], "duration_to_seconds() (iqm.pulse.playlist.channel.channelproperties method)": [[107, "iqm.pulse.playlist.channel.ChannelProperties.duration_to_seconds"]], "instruction_duration_granularity (iqm.pulse.playlist.channel.channelproperties attribute)": [[107, "iqm.pulse.playlist.channel.ChannelProperties.instruction_duration_granularity"]], "instruction_duration_min (iqm.pulse.playlist.channel.channelproperties attribute)": [[107, "iqm.pulse.playlist.channel.ChannelProperties.instruction_duration_min"]], "is_iq (iqm.pulse.playlist.channel.channelproperties attribute)": [[107, "iqm.pulse.playlist.channel.ChannelProperties.is_iq"]], "is_virtual (iqm.pulse.playlist.channel.channelproperties attribute)": [[107, "iqm.pulse.playlist.channel.ChannelProperties.is_virtual"]], "round_duration_to_granularity() (iqm.pulse.playlist.channel.channelproperties method)": [[107, "iqm.pulse.playlist.channel.ChannelProperties.round_duration_to_granularity"]], "sample_rate (iqm.pulse.playlist.channel.channelproperties attribute)": [[107, "iqm.pulse.playlist.channel.ChannelProperties.sample_rate"]], "iqchannelconfig (class in iqm.pulse.playlist.channel)": [[108, "iqm.pulse.playlist.channel.IQChannelConfig"]], "frequency (iqm.pulse.playlist.channel.iqchannelconfig attribute)": [[108, "iqm.pulse.playlist.channel.IQChannelConfig.frequency"]], "probechannelproperties (class in iqm.pulse.playlist.channel)": [[109, "iqm.pulse.playlist.channel.ProbeChannelProperties"]], "center_frequency (iqm.pulse.playlist.channel.probechannelproperties attribute)": [[109, "iqm.pulse.playlist.channel.ProbeChannelProperties.center_frequency"]], "integration_start_dead_time (iqm.pulse.playlist.channel.probechannelproperties attribute)": [[109, "iqm.pulse.playlist.channel.ProbeChannelProperties.integration_start_dead_time"]], "integration_stop_dead_time (iqm.pulse.playlist.channel.probechannelproperties attribute)": [[109, "iqm.pulse.playlist.channel.ProbeChannelProperties.integration_stop_dead_time"]], "realchannelconfig (class in iqm.pulse.playlist.channel)": [[110, "iqm.pulse.playlist.channel.RealChannelConfig"]], "sample_rate (iqm.pulse.playlist.channel.realchannelconfig attribute)": [[110, "iqm.pulse.playlist.channel.RealChannelConfig.sample_rate"]], "get_channel_properties() (in module iqm.pulse.playlist.channel)": [[111, "iqm.pulse.playlist.channel.get_channel_properties"]], "get_channel_properties_from_station_settings() (in module iqm.pulse.playlist.channel)": [[112, "iqm.pulse.playlist.channel.get_channel_properties_from_station_settings"]], "round_duration_to_granularity_samples() (in module iqm.pulse.playlist.channel)": [[113, "iqm.pulse.playlist.channel.round_duration_to_granularity_samples"]], "iqm.pulse.playlist.instructions": [[114, "module-iqm.pulse.playlist.instructions"]], "acquisitionmethod (class in iqm.pulse.playlist.instructions)": [[115, "iqm.pulse.playlist.instructions.AcquisitionMethod"]], "delay_samples (iqm.pulse.playlist.instructions.acquisitionmethod attribute)": [[115, "iqm.pulse.playlist.instructions.AcquisitionMethod.delay_samples"]], "label (iqm.pulse.playlist.instructions.acquisitionmethod attribute)": [[115, "iqm.pulse.playlist.instructions.AcquisitionMethod.label"]], "block (class in iqm.pulse.playlist.instructions)": [[116, "iqm.pulse.playlist.instructions.Block"]], "complexintegration (class in iqm.pulse.playlist.instructions)": [[117, "iqm.pulse.playlist.instructions.ComplexIntegration"]], "weights (iqm.pulse.playlist.instructions.complexintegration attribute)": [[117, "iqm.pulse.playlist.instructions.ComplexIntegration.weights"]], "conditionalinstruction (class in iqm.pulse.playlist.instructions)": [[118, "iqm.pulse.playlist.instructions.ConditionalInstruction"]], "condition (iqm.pulse.playlist.instructions.conditionalinstruction attribute)": [[118, "iqm.pulse.playlist.instructions.ConditionalInstruction.condition"]], "get_child_instructions() (iqm.pulse.playlist.instructions.conditionalinstruction method)": [[118, "iqm.pulse.playlist.instructions.ConditionalInstruction.get_child_instructions"]], "outcomes (iqm.pulse.playlist.instructions.conditionalinstruction attribute)": [[118, "iqm.pulse.playlist.instructions.ConditionalInstruction.outcomes"]], "validate() (iqm.pulse.playlist.instructions.conditionalinstruction method)": [[118, "iqm.pulse.playlist.instructions.ConditionalInstruction.validate"]], "fluxpulse (class in iqm.pulse.playlist.instructions)": [[119, "iqm.pulse.playlist.instructions.FluxPulse"]], "rzs (iqm.pulse.playlist.instructions.fluxpulse attribute)": [[119, "iqm.pulse.playlist.instructions.FluxPulse.rzs"]], "iqpulse (class in iqm.pulse.playlist.instructions)": [[120, "iqm.pulse.playlist.instructions.IQPulse"]], "get_waveforms() (iqm.pulse.playlist.instructions.iqpulse method)": [[120, "iqm.pulse.playlist.instructions.IQPulse.get_waveforms"]], "modulation_frequency (iqm.pulse.playlist.instructions.iqpulse attribute)": [[120, "iqm.pulse.playlist.instructions.IQPulse.modulation_frequency"]], "phase (iqm.pulse.playlist.instructions.iqpulse attribute)": [[120, "iqm.pulse.playlist.instructions.IQPulse.phase"]], "phase_increment (iqm.pulse.playlist.instructions.iqpulse attribute)": [[120, "iqm.pulse.playlist.instructions.IQPulse.phase_increment"]], "scale_i (iqm.pulse.playlist.instructions.iqpulse attribute)": [[120, "iqm.pulse.playlist.instructions.IQPulse.scale_i"]], "scale_q (iqm.pulse.playlist.instructions.iqpulse attribute)": [[120, "iqm.pulse.playlist.instructions.IQPulse.scale_q"]], "validate() (iqm.pulse.playlist.instructions.iqpulse method)": [[120, "iqm.pulse.playlist.instructions.IQPulse.validate"]], "wave_i (iqm.pulse.playlist.instructions.iqpulse attribute)": [[120, "iqm.pulse.playlist.instructions.IQPulse.wave_i"]], "wave_q (iqm.pulse.playlist.instructions.iqpulse attribute)": [[120, "iqm.pulse.playlist.instructions.IQPulse.wave_q"]], "instruction (class in iqm.pulse.playlist.instructions)": [[121, "iqm.pulse.playlist.instructions.Instruction"]], "copy() (iqm.pulse.playlist.instructions.instruction method)": [[121, "iqm.pulse.playlist.instructions.Instruction.copy"]], "duration (iqm.pulse.playlist.instructions.instruction attribute)": [[121, "iqm.pulse.playlist.instructions.Instruction.duration"]], "get_child_instructions() (iqm.pulse.playlist.instructions.instruction method)": [[121, "iqm.pulse.playlist.instructions.Instruction.get_child_instructions"]], "get_waveforms() (iqm.pulse.playlist.instructions.instruction method)": [[121, "iqm.pulse.playlist.instructions.Instruction.get_waveforms"]], "validate() (iqm.pulse.playlist.instructions.instruction method)": [[121, "iqm.pulse.playlist.instructions.Instruction.validate"]], "multiplexediqpulse (class in iqm.pulse.playlist.instructions)": [[122, "iqm.pulse.playlist.instructions.MultiplexedIQPulse"]], "entries (iqm.pulse.playlist.instructions.multiplexediqpulse attribute)": [[122, "iqm.pulse.playlist.instructions.MultiplexedIQPulse.entries"]], "readouttrigger (class in iqm.pulse.playlist.instructions)": [[123, "iqm.pulse.playlist.instructions.ReadoutTrigger"]], "acquisitions (iqm.pulse.playlist.instructions.readouttrigger attribute)": [[123, "iqm.pulse.playlist.instructions.ReadoutTrigger.acquisitions"]], "probe_pulse (iqm.pulse.playlist.instructions.readouttrigger attribute)": [[123, "iqm.pulse.playlist.instructions.ReadoutTrigger.probe_pulse"]], "realpulse (class in iqm.pulse.playlist.instructions)": [[124, "iqm.pulse.playlist.instructions.RealPulse"]], "get_waveforms() (iqm.pulse.playlist.instructions.realpulse method)": [[124, "iqm.pulse.playlist.instructions.RealPulse.get_waveforms"]], "scale (iqm.pulse.playlist.instructions.realpulse attribute)": [[124, "iqm.pulse.playlist.instructions.RealPulse.scale"]], "validate() (iqm.pulse.playlist.instructions.realpulse method)": [[124, "iqm.pulse.playlist.instructions.RealPulse.validate"]], "wave (iqm.pulse.playlist.instructions.realpulse attribute)": [[124, "iqm.pulse.playlist.instructions.RealPulse.wave"]], "thresholdstatediscrimination (class in iqm.pulse.playlist.instructions)": [[125, "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination"]], "feedback_signal_label (iqm.pulse.playlist.instructions.thresholdstatediscrimination attribute)": [[125, "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination.feedback_signal_label"]], "threshold (iqm.pulse.playlist.instructions.thresholdstatediscrimination attribute)": [[125, "iqm.pulse.playlist.instructions.ThresholdStateDiscrimination.threshold"]], "timetrace (class in iqm.pulse.playlist.instructions)": [[126, "iqm.pulse.playlist.instructions.TimeTrace"]], "duration_samples (iqm.pulse.playlist.instructions.timetrace attribute)": [[126, "iqm.pulse.playlist.instructions.TimeTrace.duration_samples"]], "virtualrz (class in iqm.pulse.playlist.instructions)": [[127, "iqm.pulse.playlist.instructions.VirtualRZ"]], "phase_increment (iqm.pulse.playlist.instructions.virtualrz attribute)": [[127, "iqm.pulse.playlist.instructions.VirtualRZ.phase_increment"]], "wait (class in iqm.pulse.playlist.instructions)": [[128, "iqm.pulse.playlist.instructions.Wait"]], "iqm.pulse.playlist.playlist": [[129, "module-iqm.pulse.playlist.playlist"]], "iqm.pulse.playlist.schedule": [[130, "module-iqm.pulse.playlist.schedule"]], "nothing (class in iqm.pulse.playlist.schedule)": [[131, "iqm.pulse.playlist.schedule.Nothing"]], "schedule (class in iqm.pulse.playlist.schedule)": [[132, "iqm.pulse.playlist.schedule.Schedule"]], "add_channels() (iqm.pulse.playlist.schedule.schedule method)": [[132, "iqm.pulse.playlist.schedule.Schedule.add_channels"]], "append() (iqm.pulse.playlist.schedule.schedule method)": [[132, "iqm.pulse.playlist.schedule.Schedule.append"]], "channels() (iqm.pulse.playlist.schedule.schedule method)": [[132, "iqm.pulse.playlist.schedule.Schedule.channels"]], "cleanup() (iqm.pulse.playlist.schedule.schedule method)": [[132, "iqm.pulse.playlist.schedule.Schedule.cleanup"]], "copy() (iqm.pulse.playlist.schedule.schedule method)": [[132, "iqm.pulse.playlist.schedule.Schedule.copy"]], "duration (iqm.pulse.playlist.schedule.schedule property)": [[132, "iqm.pulse.playlist.schedule.Schedule.duration"]], "duration_in_seconds() (iqm.pulse.playlist.schedule.schedule method)": [[132, "iqm.pulse.playlist.schedule.Schedule.duration_in_seconds"]], "extend() (iqm.pulse.playlist.schedule.schedule method)": [[132, "iqm.pulse.playlist.schedule.Schedule.extend"]], "front_pad() (iqm.pulse.playlist.schedule.schedule method)": [[132, "iqm.pulse.playlist.schedule.Schedule.front_pad"]], "front_pad_in_seconds() (iqm.pulse.playlist.schedule.schedule method)": [[132, "iqm.pulse.playlist.schedule.Schedule.front_pad_in_seconds"]], "has_content_in() (iqm.pulse.playlist.schedule.schedule method)": [[132, "iqm.pulse.playlist.schedule.Schedule.has_content_in"]], "items() (iqm.pulse.playlist.schedule.schedule method)": [[132, "iqm.pulse.playlist.schedule.Schedule.items"]], "pad_to_hard_box() (iqm.pulse.playlist.schedule.schedule method)": [[132, "iqm.pulse.playlist.schedule.Schedule.pad_to_hard_box"]], "pad_to_hard_box_in_seconds() (iqm.pulse.playlist.schedule.schedule method)": [[132, "iqm.pulse.playlist.schedule.Schedule.pad_to_hard_box_in_seconds"]], "pprint() (iqm.pulse.playlist.schedule.schedule method)": [[132, "iqm.pulse.playlist.schedule.Schedule.pprint"]], "reverse() (iqm.pulse.playlist.schedule.schedule method)": [[132, "iqm.pulse.playlist.schedule.Schedule.reverse"]], "reverse_hard_box() (iqm.pulse.playlist.schedule.schedule method)": [[132, "iqm.pulse.playlist.schedule.Schedule.reverse_hard_box"]], "validate() (iqm.pulse.playlist.schedule.schedule method)": [[132, "iqm.pulse.playlist.schedule.Schedule.validate"]], "segment (class in iqm.pulse.playlist.schedule)": [[133, "iqm.pulse.playlist.schedule.Segment"]], "_duration (iqm.pulse.playlist.schedule.segment attribute)": [[133, "iqm.pulse.playlist.schedule.Segment._duration"]], "_instructions (iqm.pulse.playlist.schedule.segment attribute)": [[133, "iqm.pulse.playlist.schedule.Segment._instructions"]], "append() (iqm.pulse.playlist.schedule.segment method)": [[133, "iqm.pulse.playlist.schedule.Segment.append"]], "copy() (iqm.pulse.playlist.schedule.segment method)": [[133, "iqm.pulse.playlist.schedule.Segment.copy"]], "duration (iqm.pulse.playlist.schedule.segment property)": [[133, "iqm.pulse.playlist.schedule.Segment.duration"]], "extend() (iqm.pulse.playlist.schedule.segment method)": [[133, "iqm.pulse.playlist.schedule.Segment.extend"]], "pop() (iqm.pulse.playlist.schedule.segment method)": [[133, "iqm.pulse.playlist.schedule.Segment.pop"]], "prepend() (iqm.pulse.playlist.schedule.segment method)": [[133, "iqm.pulse.playlist.schedule.Segment.prepend"]], "tolerance (in module iqm.pulse.playlist.schedule)": [[134, "iqm.pulse.playlist.schedule.TOLERANCE"]], "iqm.pulse.playlist.visualisation": [[135, "module-iqm.pulse.playlist.visualisation"]], "iqm.pulse.playlist.visualisation.base": [[136, "module-iqm.pulse.playlist.visualisation.base"]], "inspect_playlist() (in module iqm.pulse.playlist.visualisation.base)": [[137, "iqm.pulse.playlist.visualisation.base.inspect_playlist"]], "iqm.pulse.playlist.waveforms": [[138, "module-iqm.pulse.playlist.waveforms"]], "chirp (class in iqm.pulse.playlist.waveforms)": [[139, "iqm.pulse.playlist.waveforms.Chirp"]], "_sample() (iqm.pulse.playlist.waveforms.chirp method)": [[139, "iqm.pulse.playlist.waveforms.Chirp._sample"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.chirp static method)": [[139, "iqm.pulse.playlist.waveforms.Chirp.non_timelike_attributes"]], "chirpimag (class in iqm.pulse.playlist.waveforms)": [[140, "iqm.pulse.playlist.waveforms.ChirpImag"]], "phase (iqm.pulse.playlist.waveforms.chirpimag attribute)": [[140, "iqm.pulse.playlist.waveforms.ChirpImag.phase"]], "cosine (class in iqm.pulse.playlist.waveforms)": [[141, "iqm.pulse.playlist.waveforms.Cosine"]], "_sample() (iqm.pulse.playlist.waveforms.cosine method)": [[141, "iqm.pulse.playlist.waveforms.Cosine._sample"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.cosine static method)": [[141, "iqm.pulse.playlist.waveforms.Cosine.non_timelike_attributes"]], "cosinefall (class in iqm.pulse.playlist.waveforms)": [[142, "iqm.pulse.playlist.waveforms.CosineFall"]], "_sample() (iqm.pulse.playlist.waveforms.cosinefall method)": [[142, "iqm.pulse.playlist.waveforms.CosineFall._sample"]], "cosinerise (class in iqm.pulse.playlist.waveforms)": [[143, "iqm.pulse.playlist.waveforms.CosineRise"]], "_sample() (iqm.pulse.playlist.waveforms.cosinerise method)": [[143, "iqm.pulse.playlist.waveforms.CosineRise._sample"]], "cosinerisefallderivative (class in iqm.pulse.playlist.waveforms)": [[144, "iqm.pulse.playlist.waveforms.CosineRiseFallDerivative"]], "_sample() (iqm.pulse.playlist.waveforms.cosinerisefallderivative method)": [[144, "iqm.pulse.playlist.waveforms.CosineRiseFallDerivative._sample"]], "modulatedcosinerisefall (class in iqm.pulse.playlist.waveforms)": [[145, "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall"]], "_sample() (iqm.pulse.playlist.waveforms.modulatedcosinerisefall method)": [[145, "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall._sample"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.modulatedcosinerisefall static method)": [[145, "iqm.pulse.playlist.waveforms.ModulatedCosineRiseFall.non_timelike_attributes"]], "slepian (class in iqm.pulse.playlist.waveforms)": [[146, "iqm.pulse.playlist.waveforms.Slepian"]], "_sample() (iqm.pulse.playlist.waveforms.slepian method)": [[146, "iqm.pulse.playlist.waveforms.Slepian._sample"]], "_sample_normalized_slepian() (iqm.pulse.playlist.waveforms.slepian method)": [[146, "iqm.pulse.playlist.waveforms.Slepian._sample_normalized_slepian"]], "_t_tau() (iqm.pulse.playlist.waveforms.slepian method)": [[146, "iqm.pulse.playlist.waveforms.Slepian._t_tau"]], "_theta_tau() (iqm.pulse.playlist.waveforms.slepian method)": [[146, "iqm.pulse.playlist.waveforms.Slepian._theta_tau"]], "non_timelike_attributes() (iqm.pulse.playlist.waveforms.slepian static method)": [[146, "iqm.pulse.playlist.waveforms.Slepian.non_timelike_attributes"]], "iqm.pulse.quantum_ops": [[147, "module-iqm.pulse.quantum_ops"]], "quantumop (class in iqm.pulse.quantum_ops)": [[148, "iqm.pulse.quantum_ops.QuantumOp"]], "arity (iqm.pulse.quantum_ops.quantumop attribute)": [[148, "iqm.pulse.quantum_ops.QuantumOp.arity"]], "copy() (iqm.pulse.quantum_ops.quantumop method)": [[148, "iqm.pulse.quantum_ops.QuantumOp.copy"]], "default_implementation (iqm.pulse.quantum_ops.quantumop property)": [[148, "iqm.pulse.quantum_ops.QuantumOp.default_implementation"]], "defaults_for_locus (iqm.pulse.quantum_ops.quantumop attribute)": [[148, "iqm.pulse.quantum_ops.QuantumOp.defaults_for_locus"]], "factorizable (iqm.pulse.quantum_ops.quantumop attribute)": [[148, "iqm.pulse.quantum_ops.QuantumOp.factorizable"]], "get_default_implementation_for_locus() (iqm.pulse.quantum_ops.quantumop method)": [[148, "iqm.pulse.quantum_ops.QuantumOp.get_default_implementation_for_locus"]], "implementations (iqm.pulse.quantum_ops.quantumop attribute)": [[148, "iqm.pulse.quantum_ops.QuantumOp.implementations"]], "name (iqm.pulse.quantum_ops.quantumop attribute)": [[148, "iqm.pulse.quantum_ops.QuantumOp.name"]], "params (iqm.pulse.quantum_ops.quantumop attribute)": [[148, "iqm.pulse.quantum_ops.QuantumOp.params"]], "set_default_implementation() (iqm.pulse.quantum_ops.quantumop method)": [[148, "iqm.pulse.quantum_ops.QuantumOp.set_default_implementation"]], "set_default_implementation_for_locus() (iqm.pulse.quantum_ops.quantumop method)": [[148, "iqm.pulse.quantum_ops.QuantumOp.set_default_implementation_for_locus"]], "symmetric (iqm.pulse.quantum_ops.quantumop attribute)": [[148, "iqm.pulse.quantum_ops.QuantumOp.symmetric"]], "unitary (iqm.pulse.quantum_ops.quantumop attribute)": [[148, "iqm.pulse.quantum_ops.QuantumOp.unitary"]], "quantumoptable (in module iqm.pulse.quantum_ops)": [[149, "iqm.pulse.quantum_ops.QuantumOpTable"]], "validate_locus_calibration() (in module iqm.pulse.quantum_ops)": [[150, "iqm.pulse.quantum_ops.validate_locus_calibration"]], "validate_op_calibration() (in module iqm.pulse.quantum_ops)": [[151, "iqm.pulse.quantum_ops.validate_op_calibration"]], "iqm.pulse.scheduler": [[152, "module-iqm.pulse.scheduler"]], "blocking (in module iqm.pulse.scheduler)": [[153, "iqm.pulse.scheduler.BLOCKING"]], "nonsolid (in module iqm.pulse.scheduler)": [[154, "iqm.pulse.scheduler.NONSOLID"]], "segmentpointer (class in iqm.pulse.scheduler)": [[155, "iqm.pulse.scheduler.SegmentPointer"]], "tol (iqm.pulse.scheduler.segmentpointer attribute)": [[155, "iqm.pulse.scheduler.SegmentPointer.TOL"]], "cut_tail() (iqm.pulse.scheduler.segmentpointer method)": [[155, "iqm.pulse.scheduler.SegmentPointer.cut_tail"]], "fastforward() (iqm.pulse.scheduler.segmentpointer method)": [[155, "iqm.pulse.scheduler.SegmentPointer.fastforward"]], "frac (iqm.pulse.scheduler.segmentpointer attribute)": [[155, "iqm.pulse.scheduler.SegmentPointer.frac"]], "get() (iqm.pulse.scheduler.segmentpointer method)": [[155, "iqm.pulse.scheduler.SegmentPointer.get"]], "idx (iqm.pulse.scheduler.segmentpointer attribute)": [[155, "iqm.pulse.scheduler.SegmentPointer.idx"]], "next() (iqm.pulse.scheduler.segmentpointer method)": [[155, "iqm.pulse.scheduler.SegmentPointer.next"]], "remainder (iqm.pulse.scheduler.segmentpointer property)": [[155, "iqm.pulse.scheduler.SegmentPointer.remainder"]], "rewind() (iqm.pulse.scheduler.segmentpointer method)": [[155, "iqm.pulse.scheduler.SegmentPointer.rewind"]], "source (iqm.pulse.scheduler.segmentpointer attribute)": [[155, "iqm.pulse.scheduler.SegmentPointer.source"]], "tail() (iqm.pulse.scheduler.segmentpointer method)": [[155, "iqm.pulse.scheduler.SegmentPointer.tail"]], "extend_hard_boundary() (in module iqm.pulse.scheduler)": [[156, "iqm.pulse.scheduler.extend_hard_boundary"]], "extend_hard_boundary_in_seconds() (in module iqm.pulse.scheduler)": [[157, "iqm.pulse.scheduler.extend_hard_boundary_in_seconds"]], "extend_schedule() (in module iqm.pulse.scheduler)": [[158, "iqm.pulse.scheduler.extend_schedule"]], "extend_schedule_new() (in module iqm.pulse.scheduler)": [[159, "iqm.pulse.scheduler.extend_schedule_new"]], "iqm.pulse.timebox": [[160, "module-iqm.pulse.timebox"]], "multiplexedprobetimebox (class in iqm.pulse.timebox)": [[161, "iqm.pulse.timebox.MultiplexedProbeTimeBox"]], "from_readout_trigger() (iqm.pulse.timebox.multiplexedprobetimebox static method)": [[161, "iqm.pulse.timebox.MultiplexedProbeTimeBox.from_readout_trigger"]], "hard_boundary (iqm.pulse.timebox.schedulingalgorithm attribute)": [[162, "iqm.pulse.timebox.SchedulingAlgorithm.HARD_BOUNDARY"]], "schedulingalgorithm (class in iqm.pulse.timebox)": [[162, "iqm.pulse.timebox.SchedulingAlgorithm"]], "tetris (iqm.pulse.timebox.schedulingalgorithm attribute)": [[162, "iqm.pulse.timebox.SchedulingAlgorithm.TETRIS"]], "alap (iqm.pulse.timebox.schedulingstrategy attribute)": [[163, "iqm.pulse.timebox.SchedulingStrategy.ALAP"]], "asap (iqm.pulse.timebox.schedulingstrategy attribute)": [[163, "iqm.pulse.timebox.SchedulingStrategy.ASAP"]], "schedulingstrategy (class in iqm.pulse.timebox)": [[163, "iqm.pulse.timebox.SchedulingStrategy"]], "timebox (class in iqm.pulse.timebox)": [[164, "iqm.pulse.timebox.TimeBox"]], "atom (iqm.pulse.timebox.timebox attribute)": [[164, "iqm.pulse.timebox.TimeBox.atom"]], "atomic() (iqm.pulse.timebox.timebox static method)": [[164, "iqm.pulse.timebox.TimeBox.atomic"]], "children (iqm.pulse.timebox.timebox attribute)": [[164, "iqm.pulse.timebox.TimeBox.children"]], "composite() (iqm.pulse.timebox.timebox static method)": [[164, "iqm.pulse.timebox.TimeBox.composite"]], "label (iqm.pulse.timebox.timebox attribute)": [[164, "iqm.pulse.timebox.TimeBox.label"]], "locus_components (iqm.pulse.timebox.timebox attribute)": [[164, "iqm.pulse.timebox.TimeBox.locus_components"]], "neighborhood_components (iqm.pulse.timebox.timebox attribute)": [[164, "iqm.pulse.timebox.TimeBox.neighborhood_components"]], "print() (iqm.pulse.timebox.timebox method)": [[164, "iqm.pulse.timebox.TimeBox.print"]], "scheduling (iqm.pulse.timebox.timebox attribute)": [[164, "iqm.pulse.timebox.TimeBox.scheduling"]], "scheduling_algorithm (iqm.pulse.timebox.timebox attribute)": [[164, "iqm.pulse.timebox.TimeBox.scheduling_algorithm"]], "set_alap() (iqm.pulse.timebox.timebox method)": [[164, "iqm.pulse.timebox.TimeBox.set_alap"]], "set_asap() (iqm.pulse.timebox.timebox method)": [[164, "iqm.pulse.timebox.TimeBox.set_asap"]], "validate() (iqm.pulse.timebox.timebox method)": [[164, "iqm.pulse.timebox.TimeBox.validate"]], "iqm.pulse.utils": [[165, "module-iqm.pulse.utils"]], "load_yaml() (in module iqm.pulse.utils)": [[166, "iqm.pulse.utils.load_yaml"]], "map_waveform_param_types() (in module iqm.pulse.utils)": [[167, "iqm.pulse.utils.map_waveform_param_types"]], "merge_dicts() (in module iqm.pulse.utils)": [[168, "iqm.pulse.utils.merge_dicts"]], "normalize_angle() (in module iqm.pulse.utils)": [[169, "iqm.pulse.utils.normalize_angle"]], "phase_transformation() (in module iqm.pulse.utils)": [[170, "iqm.pulse.utils.phase_transformation"]], "iqm.pulse.validation": [[171, "module-iqm.pulse.validation"]], "awgschedulevalidationdata (class in iqm.pulse.validation)": [[172, "iqm.pulse.validation.AWGScheduleValidationData"]], "awgschedulevalidationerror": [[173, "iqm.pulse.validation.AWGScheduleValidationError"]], "invalidinstructionerror": [[174, "iqm.pulse.validation.InvalidInstructionError"]], "playlistvalidationerror": [[175, "iqm.pulse.validation.PlaylistValidationError"]], "validate_awg_and_schedule_compatibility() (in module iqm.pulse.validation)": [[176, "iqm.pulse.validation.validate_awg_and_schedule_compatibility"]], "validate_channel() (in module iqm.pulse.validation)": [[177, "iqm.pulse.validation.validate_channel"]], "validate_instruction_and_wf_length() (in module iqm.pulse.validation)": [[178, "iqm.pulse.validation.validate_instruction_and_wf_length"]], "validate_playlist_compatibility() (in module iqm.pulse.validation)": [[179, "iqm.pulse.validation.validate_playlist_compatibility"]]}})